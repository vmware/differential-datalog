default:
    image: ddlog/gitlab-ci:latest

# controls differential dataflow's eager compaction behavior
variables:
    DIFFERENTIAL_EAGER_MERGE: 100000

# Template for tests that expect ddlog to be in the $PATH.
.install-ddlog:
    before_script:
        - stack install
        - mkdir -p /root/.local/ddlog
        - ln -s $(pwd)/lib /root/.local/ddlog/lib

# Test Rust template only.
test-rust:
    script:
    - (cd rust/template/ && cargo fmt --all -- --check)
    - (cd lib && rustfmt *.rs --check)
    - (cd rust/template/ && cargo clippy --all -- -D warnings)
    - (cd rust/template/ && cargo test --all)
    - (cd rust/template/distributed_datalog && (
        i=0;
        true;
        while [ $? -eq 0 -a $i -lt 100 ]; do
          i=$((i+1));
          cargo test -- tcp_channel::;
        done
      ))

# Run individual stack-based tests, when possible combining them with Java tests
# that depend on the same DDlog program.
test-tutorial:
    script: stack --no-terminal test --ta "-p tutorial"

test-server_api:
    script:
    - stack --no-terminal test --ta '-p "$(NF) == \"generate server_api\" || ($(NF-1) == \"compiler tests\" && $(NF) == \"server_api\")"';
    - cd test/datalog_tests/server_api/;
      i=0;
      true;
      while [ $? -eq 0 -a $i -lt 100 ]; do
        i=$((i+1));
        cargo test;
      done

test-simple:
    script:
    - stack --no-terminal test --ta "-p simple"
    - cd test/datalog_tests/simple_ddlog/ && LIBRARY_PATH=/usr/lib/x86_64-linux-gnu/ cargo build --features='profile'

test-modules:
    script: stack --no-terminal test --ta "-p modules"

test-ovn-ftl:
    script: stack --no-terminal test --ta "-p ovn_ftl"

test-ovn:
    script: stack test --ta '-p "$(NF) == \"generate ovn\" || ($(NF-1) == \"compiler tests\" && $(NF) == \"ovn\")"'

test-path:
    script:
        - stack --no-terminal test --ta "-p fail"
        - stack --no-terminal test --ta "-p path"

test-souffle0:
    script:
        - stack --no-terminal test --ta "-p souffle0"

test-redist:
    extends: .install-ddlog
    tags:
        - ddlog-ci-1
    script:
        - STACK_CARGO_FLAGS='--release' stack --no-terminal test --ta "-p redist"
        - (cd java/test1 && ./run.sh)
        - (cd java/test_flatbuf && ./run.sh)

test-span_string:
    extends: .install-ddlog
    script:
        - stack --no-terminal test --ta "-p span_string"
        - (cd java/test3 && ./run.sh)

test-output-internal:
    script: ./test/datalog_tests/run-tests.sh three

# All other Java tests.
test-span_uuid:
    extends: .install-ddlog
    script:
        - stack --no-terminal test --ta "-p span_uuid"
        - (cd java/test && ./run.sh)

test-java1:
    extends: .install-ddlog
    script:
        - (cd java/test2 && ./run.sh)
        - (cd java/test4 && ./run.sh)

# these tests are currently failing (#372)
#test-java2:
#    extends: .install-ddlog
#    script:
#        - (cd java/test5 && ./run.sh)
#        - (cd java/test6 && ./run.sh)

test-flatbuf:
    extends: .install-ddlog
    script:
        - (cd java/test_flatbuf1 && ./run.sh)

# Template for souffle tests
.test-imported-souffle:
    extends: .install-ddlog
    tags:
        - ddlog-ci-1

# Tests from the souffle github repo.
test-imported-souffle-tests1:
    extends: .test-imported-souffle
    script:
        - (cd test && ./run-souffle-tests-in-batches.py 0 24)

test-imported-souffle-tests2:
    extends: .test-imported-souffle
    script:
        - (cd test && ./run-souffle-tests-in-batches.py 25 49)

test-imported-souffle-tests3:
    extends: .test-imported-souffle
    script:
        - (cd test && ./run-souffle-tests-in-batches.py 50 74)

test-imported-souffle-tests4:
    extends: .test-imported-souffle
    script:
        - (cd test && ./run-souffle-tests-in-batches.py 75 99)

test-imported-souffle-tests5:
    extends: .test-imported-souffle
    script:
        - (cd test && ./run-souffle-tests-in-batches.py 100 124)

test-imported-souffle-tests6:
    extends: .test-imported-souffle
    script:
        - (cd test && ./run-souffle-tests-in-batches.py 125 149)

test-imported-souffle-tests7:
    extends: .test-imported-souffle
    script:
        - (cd test && ./run-souffle-tests-in-batches.py 150 175)

# Test ovn-northd-ddlog
test-ovn-northd:
    extends: .install-ddlog
    # Don't use eager merging, as northd tends to perform many small
    # transactions, making things slow.
    variables: {}
    tags:
        - ddlog-ci-2
    script:
        # TODO: OVS master once these changes are there.
        - (cd /root &&
          git clone https://github.com/openvswitch/ovs.git &&
          cd ovs && git checkout ovn-ddlog-patches &&
          ./boot.sh &&
          ./configure  &&
          make -j6)
        # TODO: maintain and eventually remove the list of tests.
        # TODO: use -j6 once build script is fixed
        # TODO: use primary OVN repo
        - (cd /root &&
          git clone https://github.com/ryzhyk/ovn.git &&
          cd ovn && git checkout ddlog-dev-v2 &&
          ./boot.sh &&
          ./configure --with-ddlog=/root/.local/ddlog/lib --with-ovs-source=/root/ovs --enable-ddlog-northd-cli &&
          make check -j1 TESTSUITEFLAGS="117-135 138-141 143-145 147-149 151-152 154-161 167-169 172 174-181 183-185 187-189 191 193-196 198-199 201-202")
        - (git clone https://github.com/ddlog-dev/ovn-test-data.git &&
          /usr/bin/time /root/ovn/northd/ovn_northd_ddlog/target/release/ovn_northd_cli -w 2 --no-store --no-print --no-delta < ovn-test-data/ovn_scale_test_short.dat)
