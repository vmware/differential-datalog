# This is the simple Travis configuration, which is intended for use
# on applications which do not require cross-platform and
# multiple-GHC-version support. For more information and other
# options, see:
#
# https://docs.haskellstack.org/en/stable/travis_ci/
#
# Copy these contents into the root directory of your Github project in a file
# named .travis.yml

# Use new container infrastructure to enable caching
sudo: required
dist: bionic
jdk: oraclejdk8
osx_image: xcode11
python: 3.6

# 'gitlab-ci' is meant for testing GitLab CI integration and not build
# by Travis.
# Branches starting with 'pull-request' are used by our pull-request
# "mirroring" infrastructure and can safely be ignored by Travis as
# well.
branches:
  except:
  - gitlab-ci
  - /^pull-request\/.*/

# Do not choose a language; we provide our own build tools.
language: rust
rust:
  # Test with latest Rust version to get some mileage on it. Our GitLab
  # pipeline tests with the minimum version we require.
  - stable

# Caching so the next build will be fast too.
cache:
    directories:
        - $HOME/.ghc
        - $HOME/.cabal
        - $HOME/.stack
        - $HOME/.cargo
        - ./flatbuffers
        - .stack-work

env:
   - TOOL=stack TEST_SUITE='-p tutorial' BUILD_BINARY=1
   # - TOOL=run_souffle_tests
   # - TOOL=stack TEST_SUITE='-p redist' JAVA=1
   # - TOOL=stack TEST_SUITE='-p span_uuid'
   # - TOOL=stack TEST_SUITE='-p souffle0'
   - TOOL=stack TEST_SUITE='-p "$(NF) == \"generate simple\" || $(NF) == \"simple\""'
   # - TOOL=stack TEST_SUITE='-p path'
   # - TOOL=stack TEST_SUITE='-p ovn'
   # - TOOL=stack TEST_SUITE='-p modules'

#addons: {apt: {packages: [ghc-8.2.2], sources: [hvr-ghc]}}

os:
  - osx
  - linux

matrix:
  fast_finish: true

# Ensure necessary system libraries are present
addons:
  apt:
    packages:
      - libgmp-dev
      - subversion
      - python3-pip

before_install:
- python3 -m pip install --user parglare==0.12.0
# Download and unpack the stack executable
- mkdir -p ~/.local/bin
- export PATH=$HOME/.local/bin:$PATH
- ./tools/install-stack.sh
- ./tools/install-flatbuf.sh
- export CLASSPATH=$CLASSPATH:`pwd`/flatbuffers/java
# Travis does not set JAVA_HOME on MacOS
- if [ `uname -s` = Darwin ]; then export JAVA_HOME=`/usr/libexec/java_home`; fi
- if [ `uname -s` = Darwin -a x${TOOL} = xrun_souffle_tests ]; then brew install subversion; fi

install:
# Build dependencies
- stack --no-terminal --install-ghc test --only-dependencies

script:
# Build the package, its tests, and its docs and run the tests
#- DDLOG_TEST_PROGRESS=1 stack --no-terminal test --haddock --no-haddock-deps
#- DDLOG_TEST_PROGRESS=1 stack --no-terminal test --ta "$TEST_SUITE"  --haddock --no-haddock-deps
- if [ x${TOOL} = xstack ]; then DDLOG_TEST_PROGRESS=1 stack --no-terminal test --ta "$TEST_SUITE"; fi
- if [ x${TOOL} = xrun_souffle_tests ]; then cd test && travis_wait 30 ./run-souffle-tests.py  ackermann andersen bigrams cba_expr_value centroids clique cliquer comp-parametrized-inherit comp-parametrized-multilvl degree dfa dfa_min disconnected dominance double_tree earley equal factoring family fib; fi
- if [ x${JAVA} = x1 ]; then stack install && cd java/test_flatbuf && ./run.sh; fi

before_deploy:
    - export DIST_NAME=ddlog-$TRAVIS_TAG-$(date +'%Y%m%d%H%M%S')-$TRAVIS_OS_NAME
    - ./build_distro.sh

deploy:
  provider: releases
  api_key: $GITHUB_TOKEN
  file: "$DIST_NAME.tar.gz"
  skip_cleanup: true
  draft: true
  on:
    tags: true
    condition: $BUILD_BINARY = 1
