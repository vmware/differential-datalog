/* Universally Unique Identified (UUID) library.
 *
 * Functions in this library are bindings for functions in
 * the Rust uuid crate: https://crates.io/crates/uuid
 */

extern type Uuid

typedef Error = string

/* The nil UUID is special form of UUID that is specified to have all 128 bits 
 * set to zero, as defined in IETF RFC 4122 Section 4.1.7. */
extern function nil(): Uuid

/* Creates a UUID from a 128bit value in big-endian order.
 */
extern function from_u128(v: bit<128>): Uuid

/* Creates a UUID from a 128bit value in little-endian order.
 */
extern function from_u128_le(v: bit<128>): Uuid

/* Creates a UUID using the supplied big-endian bytes.
 * This function will return an error if b has any length other than 16.
 */
extern function from_bytes(b: Vec<bit<8>>): Result<Uuid, Error>

/* Parses a Uuid from a string of hexadecimal digits with optional hyphens.
 * Any of the formats generated by this module (simple, hyphenated, urn) are
 * supported by this parsing function.
 */
extern function parse_str(str: string): Result<Uuid, Error>

/* Convert to lower-case hyphenated format:
 * "936da01f-9abd-4d9d-80c7-02af85c822a8".
 */
extern function to_hyphenated_lower(uuid: Uuid): string

/* Convert to upper-case hyphenated format:
 * "936DA01F-9ABD-4D9D-80C7-02AF85C822A8"
 */
extern function to_hyphenated_upper(uuid: Uuid): string

/* Convert to lower-case simple format:
 * "936da01f9abd4d9d80c702af85c822a8".
 */
extern function to_simple_lower(uuid: Uuid): string

/* Convert to upper-case simple format:
 * "936DA01F9ABD4D9D80C702AF85C822A8".
 */
extern function to_simple_upper(uuid: Uuid): string

/* Convert to lower-case urn format:
 * "urn:uuid:936da01f-9abd-4d9d-80c7-02af85c822a8".
 */
extern function to_urn_lower(uuid: Uuid): string

/* Convert to upper-case urn format:
 * "urn:uuid:936DA01F-9ABD-4D9D-80C7-02AF85C822A8".
 */
extern function to_urn_upper(uuid: Uuid): string

/* Returns a 128bit value containing the UUID data.
 */
extern function as_u128(uuid: Uuid): bit<128>

/* Returns a 128bit little-endian value containing the UUID data.
 *
 * The bytes in the UUID will be reversed and packed into a u128. Note that this
 * will produce a different result than to_fields_le, because the entire UUID is
 * reversed, rather than reversing the individual fields in-place.
 */
extern function to_u128_le(uuid: Uuid): bit<128>

/* Tests if the UUID is nil.
 */
extern function is_nil(uuid: Uuid): bool
