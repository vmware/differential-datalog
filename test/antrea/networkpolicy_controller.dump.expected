Adding namespace and pods
Ok8spolicy.Namespace:
k8spolicy_Namespace{.name = "ns1", .uid = k8spolicy_UID{.uid = "e340296d-84e2-48b2-9b7a-91641db60db5"}, .labels = []}: +1
k8spolicy_Namespace{.name = "ns2", .uid = k8spolicy_UID{.uid = "37e6f556-02f3-4775-93a7-ec924ee78810"}, .labels = []}: +1
Ok8spolicy.Pod:
k8spolicy_Pod{.name = "<top>.pod1", .namespace = "", .uid = k8spolicy_UID{.uid = "a5f3a901-040d-407c-a842-918e250f79de"}, .labels = [], .spec = k8spolicy_PodSpec{.nodeName = "node1"}, .status = k8spolicy_PodStatus{.podIP = "192.168.1.1"}}: +1
k8spolicy_Pod{.name = "<top>.pod2", .namespace = "", .uid = k8spolicy_UID{.uid = "23d84e05-e0b6-446d-a919-440d1b74ebfc"}, .labels = [], .spec = k8spolicy_PodSpec{.nodeName = "node2"}, .status = k8spolicy_PodStatus{.podIP = "192.168.1.2"}}: +1
k8spolicy_Pod{.name = "ns1.pod1", .namespace = "ns1", .uid = k8spolicy_UID{.uid = "adb006eb-07fd-4a4b-9b09-d899267aeadc"}, .labels = [], .spec = k8spolicy_PodSpec{.nodeName = "node1"}, .status = k8spolicy_PodStatus{.podIP = "192.168.1.1"}}: +1
k8spolicy_Pod{.name = "ns1.pod2", .namespace = "ns1", .uid = k8spolicy_UID{.uid = "17024561-7949-4f63-a248-bc29075f04b2"}, .labels = [], .spec = k8spolicy_PodSpec{.nodeName = "node2"}, .status = k8spolicy_PodStatus{.podIP = "192.168.1.2"}}: +1
k8spolicy_Pod{.name = "ns2.pod1", .namespace = "ns2", .uid = k8spolicy_UID{.uid = "2fc100dd-a981-47e2-8a62-e9b2dff3a5d3"}, .labels = [], .spec = k8spolicy_PodSpec{.nodeName = "node1"}, .status = k8spolicy_PodStatus{.podIP = "192.168.1.1"}}: +1
k8spolicy_Pod{.name = "ns2.pod2", .namespace = "ns2", .uid = k8spolicy_UID{.uid = "ad847460-cb25-43e7-a44c-d2ff7bdb65ac"}, .labels = [], .spec = k8spolicy_PodSpec{.nodeName = "node2"}, .status = k8spolicy_PodStatus{.podIP = "192.168.1.2"}}: +1
Adding policies
LOG (0): createAppliedToGroup ns1.policy1
LOG (0): createAppliedToGroup ns1.policy1
AppliedToGroup:
AppliedToGroup{.uid = k8spolicy_UID{.uid = "dbd5cd23-1488-56b6-925e-7354a2189c7d"}, .name = "dbd5cd23-1488-56b6-925e-7354a2189c7d", .selector = types_GroupSelector{.normalizedName = "namespace=ns1 And podSelector=l1 In [l1v1]", .nsSelector = types_NSSelectorNS{.ns = "ns1"}, .podSelector = std_Some{.x = k8spolicy_LabelSelector{.matchLabels = [("l1", "l1v1")], .matchExpressions = []}}}}: +1
NetworkPolicy:
NetworkPolicy{.uid = k8spolicy_UID{.uid = "156bc79a-ee16-47d9-82b6-8bc48849af74"}, .name = "ns1.policy1", .namespace = "ns1", .rules = [], .appliedToGroups = ["dbd5cd23-1488-56b6-925e-7354a2189c7d"]}: +1
NetworkPolicyExt:
NetworkPolicyExt{.policy = NetworkPolicy{.uid = k8spolicy_UID{.uid = "156bc79a-ee16-47d9-82b6-8bc48849af74"}, .name = "ns1.policy1", .namespace = "ns1", .rules = [], .appliedToGroups = ["dbd5cd23-1488-56b6-925e-7354a2189c7d"]}, .addressGroups = []}: +1
Ok8spolicy.NetworkPolicy:
k8spolicy_NetworkPolicy{.name = "ns1.policy1", .namespace = "ns1", .uid = k8spolicy_UID{.uid = "156bc79a-ee16-47d9-82b6-8bc48849af74"}, .spec = k8spolicy_NetworkPolicySpec{.podSelector = k8spolicy_LabelSelector{.matchLabels = [("l1", "l1v1")], .matchExpressions = []}, .ingress = [], .egress = [], .policyTypes = []}}: +1
Making changes
LOG (0): createAppliedToGroup ns1.policy1
LOG (0): createAppliedToGroup ns1.policy1
LOG (0): createAppliedToGroup ns1.policy1
LOG (0): createAppliedToGroup ns1.policy1
AddressGroup:
AddressGroup{.uid = k8spolicy_UID{.uid = "df49fa6b-0346-5dc9-9bb2-3da4fdbe8dd8"}, .name = "df49fa6b-0346-5dc9-9bb2-3da4fdbe8dd8", .selector = types_GroupSelector{.normalizedName = "namespaceSelector= And podSelector=l1 In [l1v1]", .nsSelector = types_NSSelectorLS{.selector = k8spolicy_LabelSelector{.matchLabels = [], .matchExpressions = []}}, .podSelector = std_Some{.x = k8spolicy_LabelSelector{.matchLabels = [("l1", "l1v1")], .matchExpressions = []}}}}: +1
NetworkPolicy:
NetworkPolicy{.uid = k8spolicy_UID{.uid = "156bc79a-ee16-47d9-82b6-8bc48849af74"}, .name = "ns1.policy1", .namespace = "ns1", .rules = [], .appliedToGroups = ["dbd5cd23-1488-56b6-925e-7354a2189c7d"]}: -1
NetworkPolicy{.uid = k8spolicy_UID{.uid = "156bc79a-ee16-47d9-82b6-8bc48849af74"}, .name = "ns1.policy1", .namespace = "ns1", .rules = [types_NetworkPolicyRule{.direction = types_DirectionIn{}, .from = types_NetworkPolicyPeer{.addressGroups = ["df49fa6b-0346-5dc9-9bb2-3da4fdbe8dd8"], .ipBlocks = []}, .to = types_NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types_Service{.protocol = "TCP", .port = std_None{}}]}], .appliedToGroups = ["dbd5cd23-1488-56b6-925e-7354a2189c7d"]}: +1
NetworkPolicyAddressGroup:
NetworkPolicyAddressGroup{.np = k8spolicy_UID{.uid = "156bc79a-ee16-47d9-82b6-8bc48849af74"}, .addressGroup = "df49fa6b-0346-5dc9-9bb2-3da4fdbe8dd8"}: +1
NetworkPolicyExt:
NetworkPolicyExt{.policy = NetworkPolicy{.uid = k8spolicy_UID{.uid = "156bc79a-ee16-47d9-82b6-8bc48849af74"}, .name = "ns1.policy1", .namespace = "ns1", .rules = [], .appliedToGroups = ["dbd5cd23-1488-56b6-925e-7354a2189c7d"]}, .addressGroups = []}: -1
NetworkPolicyExt{.policy = NetworkPolicy{.uid = k8spolicy_UID{.uid = "156bc79a-ee16-47d9-82b6-8bc48849af74"}, .name = "ns1.policy1", .namespace = "ns1", .rules = [types_NetworkPolicyRule{.direction = types_DirectionIn{}, .from = types_NetworkPolicyPeer{.addressGroups = ["df49fa6b-0346-5dc9-9bb2-3da4fdbe8dd8"], .ipBlocks = []}, .to = types_NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types_Service{.protocol = "TCP", .port = std_None{}}]}], .appliedToGroups = ["dbd5cd23-1488-56b6-925e-7354a2189c7d"]}, .addressGroups = [AddressGroup{.uid = k8spolicy_UID{.uid = "df49fa6b-0346-5dc9-9bb2-3da4fdbe8dd8"}, .name = "df49fa6b-0346-5dc9-9bb2-3da4fdbe8dd8", .selector = types_GroupSelector{.normalizedName = "namespaceSelector= And podSelector=l1 In [l1v1]", .nsSelector = types_NSSelectorLS{.selector = k8spolicy_LabelSelector{.matchLabels = [], .matchExpressions = []}}, .podSelector = std_Some{.x = k8spolicy_LabelSelector{.matchLabels = [("l1", "l1v1")], .matchExpressions = []}}}}]}: +1
Ok8spolicy.Namespace:
k8spolicy_Namespace{.name = "ns1", .uid = k8spolicy_UID{.uid = "e340296d-84e2-48b2-9b7a-91641db60db5"}, .labels = []}: -1
k8spolicy_Namespace{.name = "ns1", .uid = k8spolicy_UID{.uid = "e340296d-84e2-48b2-9b7a-91641db60db5"}, .labels = [("l1", "l1v1")]}: +1
Ok8spolicy.NetworkPolicy:
k8spolicy_NetworkPolicy{.name = "ns1.policy1", .namespace = "ns1", .uid = k8spolicy_UID{.uid = "156bc79a-ee16-47d9-82b6-8bc48849af74"}, .spec = k8spolicy_NetworkPolicySpec{.podSelector = k8spolicy_LabelSelector{.matchLabels = [("l1", "l1v1")], .matchExpressions = []}, .ingress = [], .egress = [], .policyTypes = []}}: -1
k8spolicy_NetworkPolicy{.name = "ns1.policy1", .namespace = "ns1", .uid = k8spolicy_UID{.uid = "156bc79a-ee16-47d9-82b6-8bc48849af74"}, .spec = k8spolicy_NetworkPolicySpec{.podSelector = k8spolicy_LabelSelector{.matchLabels = [("l1", "l1v1")], .matchExpressions = []}, .ingress = [k8spolicy_NetworkPolicyIngressRule{.ports = [k8spolicy_NetworkPolicyPort{.protocol = std_Some{.x = "TCP"}, .port = std_None{}}], .from = [k8spolicy_NetworkPolicyPeer{.podSelector = std_Some{.x = k8spolicy_LabelSelector{.matchLabels = [("l1", "l1v1")], .matchExpressions = []}}, .namespaceSelector = std_Some{.x = k8spolicy_LabelSelector{.matchLabels = [], .matchExpressions = []}}, .ipBlock = std_None{}}]}], .egress = [], .policyTypes = []}}: +1
