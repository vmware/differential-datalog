AddressGroupAddress:
AddressGroupAddress{.addressGroup = 43278990765031206632240717596255177909, .address = "10.10.1.2"}: +1
AddressGroupAddress{.addressGroup = 44236272532789317872630466770353848062, .address = "10.10.0.1"}: +1
AddressGroupAddress{.addressGroup = 44646213493351026454398859485430306486, .address = "10.10.0.3"}: +1
AddressGroupAddress{.addressGroup = 58898532225706772889499413309621990351, .address = "10.10.1.7"}: +1
AddressGroupAddress{.addressGroup = 60489002938646283986256677442998248084, .address = "10.10.1.4"}: +1
AddressGroupAddress{.addressGroup = 62869394528352203618597082069827805088, .address = "10.10.0.5"}: +1
AddressGroupAddress{.addressGroup = 96312429607402271193560398090116188135, .address = "10.10.0.4"}: +1
AddressGroupAddress{.addressGroup = 102112251378227976822086423406947489779, .address = "10.10.0.2"}: +1
AddressGroupAddress{.addressGroup = 111338937536370593086794712033923432470, .address = "10.10.1.8"}: +1
AddressGroupAddress{.addressGroup = 139270746501443324926378433473799701055, .address = "10.10.2.2"}: +1
AddressGroupAddress{.addressGroup = 145735034206050545411436192232897198781, .address = "10.10.0.7"}: +1
AddressGroupAddress{.addressGroup = 176586764159975203579390276585431732896, .address = "10.10.2.3"}: +1
AddressGroupAddress{.addressGroup = 179663795872649533067815864425726121901, .address = "10.10.0.8"}: +1
AddressGroupAddress{.addressGroup = 182432205246793529923938059297094241823, .address = "10.10.1.5"}: +1
AddressGroupAddress{.addressGroup = 196259851041020535303029855840226103764, .address = "10.10.0.9"}: +1
AddressGroupAddress{.addressGroup = 223870443946998379370070698573247327959, .address = "10.10.2.1"}: +1
AddressGroupAddress{.addressGroup = 227822485347605345445118471376208942239, .address = "10.10.1.0"}: +1
AddressGroupAddress{.addressGroup = 236252942169316635240533229674166816472, .address = "10.10.1.1"}: +1
AddressGroupAddress{.addressGroup = 259216780153277234422871262066248771894, .address = "10.10.1.6"}: +1
AddressGroupAddress{.addressGroup = 266946165867844046215863832544505948365, .address = "10.10.1.3"}: +1
AddressGroupAddress{.addressGroup = 302482925621519402575123441505680653298, .address = "10.10.1.9"}: +1
AddressGroupAddress{.addressGroup = 311400409529788751919244335325452112245, .address = "10.10.2.0"}: +1
AddressGroupAddress{.addressGroup = 323493623055586544226789124986632517686, .address = "10.10.0.6"}: +1
AddressGroupDescr:
AddressGroupDescr{.name = "208f3afd-4faf-5761-b65a-bf568a99ccb5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-12]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-12")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "2147989f-e6af-5749-ba0e-83f61f60fefe", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-1]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-1")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "21968c46-41c3-5a04-a5cf-a647f6f656b6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-3]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-3")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "2c4f71d7-2a06-5e6d-b36c-6eb4e2e2f3cf", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-17]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-17")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "2d81c219-d357-5304-a6cb-b8f2ebcc2294", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-14]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-14")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "2f4c3477-a740-579b-8eb2-1a48a21f5fa0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-5]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-5")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "48751966-7751-5e92-82c2-ca4e0df2c7e7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-4]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-4")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "4cd21ab0-e6f3-5cbf-9d3f-baeec77a57f3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-2]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-2")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "53c31970-d212-502d-a92f-f295fef40016", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-18]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-18")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "68c691f2-7eb5-5354-b3f7-88c4aa2ac23f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-22]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-22")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "6da38bf0-1965-54d4-b4da-3981a9cb3abd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-7]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-7")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "84d95faa-012d-5288-ae40-788efddb92a0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-23]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-23")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "8729fd0a-5c54-5db9-af45-51cadb9497ad", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-8]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-8")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "893f2a29-28c2-5766-9b9a-b90764ba0e1f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-15]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-15")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "93a645bc-031d-5524-82a0-ca445ae1d1d4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-9]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-9")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "a86be111-0734-5db8-a656-ee4e8bf0aed7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-21]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-21")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "ab6503c0-5611-5c9a-a9d4-e544fa70549f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-10]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-10")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "b1bca95d-220e-5b74-b38d-0de3c9090ed8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-11]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-11")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "c30355fd-716b-5eaa-a629-601ff71fe936", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-16]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-16")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "c8d3f620-d41d-5ddf-bb54-94d2b26ee8cd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-13]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-13")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "e39017a8-50a8-542e-a4ef-0a3f387e7bf2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-19]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-19")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "ea45898f-2a72-5623-85ed-14b453031175", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-20]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-20")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "f35e9b05-11d6-5059-9067-bd9d8be5b836", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-6]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-6")], .matchExpressions = []}}}}: +1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 43278990765031206632240717596255177909, .node = "testNode-1"}: +1
AddressGroupSpan{.addressGroup = 44236272532789317872630466770353848062, .node = "testNode-0"}: +1
AddressGroupSpan{.addressGroup = 44646213493351026454398859485430306486, .node = "testNode-0"}: +1
AddressGroupSpan{.addressGroup = 58898532225706772889499413309621990351, .node = "testNode-1"}: +1
AddressGroupSpan{.addressGroup = 60489002938646283986256677442998248084, .node = "testNode-1"}: +1
AddressGroupSpan{.addressGroup = 62869394528352203618597082069827805088, .node = "testNode-0"}: +1
AddressGroupSpan{.addressGroup = 96312429607402271193560398090116188135, .node = "testNode-0"}: +1
AddressGroupSpan{.addressGroup = 102112251378227976822086423406947489779, .node = "testNode-0"}: +1
AddressGroupSpan{.addressGroup = 111338937536370593086794712033923432470, .node = "testNode-1"}: +1
AddressGroupSpan{.addressGroup = 139270746501443324926378433473799701055, .node = "testNode-2"}: +1
AddressGroupSpan{.addressGroup = 145735034206050545411436192232897198781, .node = "testNode-0"}: +1
AddressGroupSpan{.addressGroup = 176586764159975203579390276585431732896, .node = "testNode-2"}: +1
AddressGroupSpan{.addressGroup = 179663795872649533067815864425726121901, .node = "testNode-0"}: +1
AddressGroupSpan{.addressGroup = 182432205246793529923938059297094241823, .node = "testNode-1"}: +1
AddressGroupSpan{.addressGroup = 196259851041020535303029855840226103764, .node = "testNode-0"}: +1
AddressGroupSpan{.addressGroup = 223870443946998379370070698573247327959, .node = "testNode-2"}: +1
AddressGroupSpan{.addressGroup = 227822485347605345445118471376208942239, .node = "testNode-0"}: +1
AddressGroupSpan{.addressGroup = 236252942169316635240533229674166816472, .node = "testNode-1"}: +1
AddressGroupSpan{.addressGroup = 259216780153277234422871262066248771894, .node = "testNode-1"}: +1
AddressGroupSpan{.addressGroup = 266946165867844046215863832544505948365, .node = "testNode-1"}: +1
AddressGroupSpan{.addressGroup = 302482925621519402575123441505680653298, .node = "testNode-1"}: +1
AddressGroupSpan{.addressGroup = 311400409529788751919244335325452112245, .node = "testNode-1"}: +1
AddressGroupSpan{.addressGroup = 323493623055586544226789124986632517686, .node = "testNode-0"}: +1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "208f3afd-4faf-5761-b65a-bf568a99ccb5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-12]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-12")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "2147989f-e6af-5749-ba0e-83f61f60fefe", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-1]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-1")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "21968c46-41c3-5a04-a5cf-a647f6f656b6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-3]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-3")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "2c4f71d7-2a06-5e6d-b36c-6eb4e2e2f3cf", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-17]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-17")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "2d81c219-d357-5304-a6cb-b8f2ebcc2294", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-14]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-14")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "2f4c3477-a740-579b-8eb2-1a48a21f5fa0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-5]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-5")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "48751966-7751-5e92-82c2-ca4e0df2c7e7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-4]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-4")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "4cd21ab0-e6f3-5cbf-9d3f-baeec77a57f3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-2]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-2")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "4fd8dd76-8a86-5dfc-8d03-690d43e9169c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-0]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-0")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "53c31970-d212-502d-a92f-f295fef40016", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-18]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-18")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "68c691f2-7eb5-5354-b3f7-88c4aa2ac23f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-22]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-22")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "6da38bf0-1965-54d4-b4da-3981a9cb3abd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-7]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-7")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "8729fd0a-5c54-5db9-af45-51cadb9497ad", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-8]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-8")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "893f2a29-28c2-5766-9b9a-b90764ba0e1f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-15]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-15")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "93a645bc-031d-5524-82a0-ca445ae1d1d4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-9]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-9")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "a86be111-0734-5db8-a656-ee4e8bf0aed7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-21]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-21")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "ab6503c0-5611-5c9a-a9d4-e544fa70549f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-10]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-10")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "b1bca95d-220e-5b74-b38d-0de3c9090ed8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-11]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-11")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "c30355fd-716b-5eaa-a629-601ff71fe936", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-16]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-16")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "c8d3f620-d41d-5ddf-bb54-94d2b26ee8cd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-13]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-13")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "e39017a8-50a8-542e-a4ef-0a3f387e7bf2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-19]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-19")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "ea45898f-2a72-5623-85ed-14b453031175", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-20]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-20")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "f35e9b05-11d6-5059-9067-bd9d8be5b836", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-6]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-6")], .matchExpressions = []}}}}: +1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 43278990765031206632240717596255177909, .node = "testNode-1", .pods = [k8spolicy.PodReference{.name = "testPod-12", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 44236272532789317872630466770353848062, .node = "testNode-0", .pods = [k8spolicy.PodReference{.name = "testPod-1", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 44646213493351026454398859485430306486, .node = "testNode-0", .pods = [k8spolicy.PodReference{.name = "testPod-3", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 58898532225706772889499413309621990351, .node = "testNode-1", .pods = [k8spolicy.PodReference{.name = "testPod-17", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 60489002938646283986256677442998248084, .node = "testNode-1", .pods = [k8spolicy.PodReference{.name = "testPod-14", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 62869394528352203618597082069827805088, .node = "testNode-0", .pods = [k8spolicy.PodReference{.name = "testPod-5", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 96312429607402271193560398090116188135, .node = "testNode-0", .pods = [k8spolicy.PodReference{.name = "testPod-4", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 102112251378227976822086423406947489779, .node = "testNode-0", .pods = [k8spolicy.PodReference{.name = "testPod-2", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 106135039592768831683516347285194217116, .node = "testNode-0", .pods = [k8spolicy.PodReference{.name = "testPod-0", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 111338937536370593086794712033923432470, .node = "testNode-1", .pods = [k8spolicy.PodReference{.name = "testPod-18", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 139270746501443324926378433473799701055, .node = "testNode-2", .pods = [k8spolicy.PodReference{.name = "testPod-22", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 145735034206050545411436192232897198781, .node = "testNode-0", .pods = [k8spolicy.PodReference{.name = "testPod-7", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 179663795872649533067815864425726121901, .node = "testNode-0", .pods = [k8spolicy.PodReference{.name = "testPod-8", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 182432205246793529923938059297094241823, .node = "testNode-1", .pods = [k8spolicy.PodReference{.name = "testPod-15", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 196259851041020535303029855840226103764, .node = "testNode-0", .pods = [k8spolicy.PodReference{.name = "testPod-9", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 223870443946998379370070698573247327959, .node = "testNode-2", .pods = [k8spolicy.PodReference{.name = "testPod-21", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 227822485347605345445118471376208942239, .node = "testNode-1", .pods = [k8spolicy.PodReference{.name = "testPod-10", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 236252942169316635240533229674166816472, .node = "testNode-1", .pods = [k8spolicy.PodReference{.name = "testPod-11", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 259216780153277234422871262066248771894, .node = "testNode-1", .pods = [k8spolicy.PodReference{.name = "testPod-16", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 266946165867844046215863832544505948365, .node = "testNode-1", .pods = [k8spolicy.PodReference{.name = "testPod-13", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 302482925621519402575123441505680653298, .node = "testNode-1", .pods = [k8spolicy.PodReference{.name = "testPod-19", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 311400409529788751919244335325452112245, .node = "testNode-2", .pods = [k8spolicy.PodReference{.name = "testPod-20", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 323493623055586544226789124986632517686, .node = "testNode-0", .pods = [k8spolicy.PodReference{.name = "testPod-6", .namespace = "testNamespace"}]}: +1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 43278990765031206632240717596255177909, .span = "testNode-1"}: +1
AppliedToGroupSpan{.appliedToGroup = 44236272532789317872630466770353848062, .span = "testNode-0"}: +1
AppliedToGroupSpan{.appliedToGroup = 44646213493351026454398859485430306486, .span = "testNode-0"}: +1
AppliedToGroupSpan{.appliedToGroup = 58898532225706772889499413309621990351, .span = "testNode-1"}: +1
AppliedToGroupSpan{.appliedToGroup = 60489002938646283986256677442998248084, .span = "testNode-1"}: +1
AppliedToGroupSpan{.appliedToGroup = 62869394528352203618597082069827805088, .span = "testNode-0"}: +1
AppliedToGroupSpan{.appliedToGroup = 96312429607402271193560398090116188135, .span = "testNode-0"}: +1
AppliedToGroupSpan{.appliedToGroup = 102112251378227976822086423406947489779, .span = "testNode-0"}: +1
AppliedToGroupSpan{.appliedToGroup = 106135039592768831683516347285194217116, .span = "testNode-0"}: +1
AppliedToGroupSpan{.appliedToGroup = 111338937536370593086794712033923432470, .span = "testNode-1"}: +1
AppliedToGroupSpan{.appliedToGroup = 139270746501443324926378433473799701055, .span = "testNode-2"}: +1
AppliedToGroupSpan{.appliedToGroup = 145735034206050545411436192232897198781, .span = "testNode-0"}: +1
AppliedToGroupSpan{.appliedToGroup = 179663795872649533067815864425726121901, .span = "testNode-0"}: +1
AppliedToGroupSpan{.appliedToGroup = 182432205246793529923938059297094241823, .span = "testNode-1"}: +1
AppliedToGroupSpan{.appliedToGroup = 196259851041020535303029855840226103764, .span = "testNode-0"}: +1
AppliedToGroupSpan{.appliedToGroup = 223870443946998379370070698573247327959, .span = "testNode-2"}: +1
AppliedToGroupSpan{.appliedToGroup = 227822485347605345445118471376208942239, .span = "testNode-1"}: +1
AppliedToGroupSpan{.appliedToGroup = 236252942169316635240533229674166816472, .span = "testNode-1"}: +1
AppliedToGroupSpan{.appliedToGroup = 259216780153277234422871262066248771894, .span = "testNode-1"}: +1
AppliedToGroupSpan{.appliedToGroup = 266946165867844046215863832544505948365, .span = "testNode-1"}: +1
AppliedToGroupSpan{.appliedToGroup = 302482925621519402575123441505680653298, .span = "testNode-1"}: +1
AppliedToGroupSpan{.appliedToGroup = 311400409529788751919244335325452112245, .span = "testNode-2"}: +1
AppliedToGroupSpan{.appliedToGroup = 323493623055586544226789124986632517686, .span = "testNode-0"}: +1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-0"}, .name = "testNP-0", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [44236272532789317872630466770353848062], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [106135039592768831683516347285194217116]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-1"}, .name = "testNP-1", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [102112251378227976822086423406947489779], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [44236272532789317872630466770353848062]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-10"}, .name = "testNP-10", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [236252942169316635240533229674166816472], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [227822485347605345445118471376208942239]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-11"}, .name = "testNP-11", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [43278990765031206632240717596255177909], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [236252942169316635240533229674166816472]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-12"}, .name = "testNP-12", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [266946165867844046215863832544505948365], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [43278990765031206632240717596255177909]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-13"}, .name = "testNP-13", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [60489002938646283986256677442998248084], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [266946165867844046215863832544505948365]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-14"}, .name = "testNP-14", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [182432205246793529923938059297094241823], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [60489002938646283986256677442998248084]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-15"}, .name = "testNP-15", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [259216780153277234422871262066248771894], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [182432205246793529923938059297094241823]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-16"}, .name = "testNP-16", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [58898532225706772889499413309621990351], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [259216780153277234422871262066248771894]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-17"}, .name = "testNP-17", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [111338937536370593086794712033923432470], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [58898532225706772889499413309621990351]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-18"}, .name = "testNP-18", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [302482925621519402575123441505680653298], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [111338937536370593086794712033923432470]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-19"}, .name = "testNP-19", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [311400409529788751919244335325452112245], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [302482925621519402575123441505680653298]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-2"}, .name = "testNP-2", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [44646213493351026454398859485430306486], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [102112251378227976822086423406947489779]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-20"}, .name = "testNP-20", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [223870443946998379370070698573247327959], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [311400409529788751919244335325452112245]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-21"}, .name = "testNP-21", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [139270746501443324926378433473799701055], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [223870443946998379370070698573247327959]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-22"}, .name = "testNP-22", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [176586764159975203579390276585431732896], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [139270746501443324926378433473799701055]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-3"}, .name = "testNP-3", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [96312429607402271193560398090116188135], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [44646213493351026454398859485430306486]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-4"}, .name = "testNP-4", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [62869394528352203618597082069827805088], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [96312429607402271193560398090116188135]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-5"}, .name = "testNP-5", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [323493623055586544226789124986632517686], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [62869394528352203618597082069827805088]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-6"}, .name = "testNP-6", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [145735034206050545411436192232897198781], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [323493623055586544226789124986632517686]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-7"}, .name = "testNP-7", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [179663795872649533067815864425726121901], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [145735034206050545411436192232897198781]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-8"}, .name = "testNP-8", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [196259851041020535303029855840226103764], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [179663795872649533067815864425726121901]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-9"}, .name = "testNP-9", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [227822485347605345445118471376208942239], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [196259851041020535303029855840226103764]}: +1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-0", .policy = k8spolicy.UID{.uid = "testNP-0"}, .node = "testNode-0"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-1", .policy = k8spolicy.UID{.uid = "testNP-1"}, .node = "testNode-0"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-10", .policy = k8spolicy.UID{.uid = "testNP-10"}, .node = "testNode-1"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-11", .policy = k8spolicy.UID{.uid = "testNP-11"}, .node = "testNode-1"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-12", .policy = k8spolicy.UID{.uid = "testNP-12"}, .node = "testNode-1"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-13", .policy = k8spolicy.UID{.uid = "testNP-13"}, .node = "testNode-1"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-14", .policy = k8spolicy.UID{.uid = "testNP-14"}, .node = "testNode-1"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-15", .policy = k8spolicy.UID{.uid = "testNP-15"}, .node = "testNode-1"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-16", .policy = k8spolicy.UID{.uid = "testNP-16"}, .node = "testNode-1"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-17", .policy = k8spolicy.UID{.uid = "testNP-17"}, .node = "testNode-1"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-18", .policy = k8spolicy.UID{.uid = "testNP-18"}, .node = "testNode-1"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-19", .policy = k8spolicy.UID{.uid = "testNP-19"}, .node = "testNode-1"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-2", .policy = k8spolicy.UID{.uid = "testNP-2"}, .node = "testNode-0"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-20", .policy = k8spolicy.UID{.uid = "testNP-20"}, .node = "testNode-2"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-21", .policy = k8spolicy.UID{.uid = "testNP-21"}, .node = "testNode-2"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-22", .policy = k8spolicy.UID{.uid = "testNP-22"}, .node = "testNode-2"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-3", .policy = k8spolicy.UID{.uid = "testNP-3"}, .node = "testNode-0"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-4", .policy = k8spolicy.UID{.uid = "testNP-4"}, .node = "testNode-0"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-5", .policy = k8spolicy.UID{.uid = "testNP-5"}, .node = "testNode-0"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-6", .policy = k8spolicy.UID{.uid = "testNP-6"}, .node = "testNode-0"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-7", .policy = k8spolicy.UID{.uid = "testNP-7"}, .node = "testNode-0"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-8", .policy = k8spolicy.UID{.uid = "testNP-8"}, .node = "testNode-0"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-9", .policy = k8spolicy.UID{.uid = "testNP-9"}, .node = "testNode-0"}: +1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 20767815547279998493907012236425171798, .address = "10.10.5.0"}: +1
AddressGroupAddress{.addressGroup = 43876221218409769006807412802117827291, .address = "10.10.4.0"}: +1
AddressGroupAddress{.addressGroup = 47221714050325705453725051369721297713, .address = "10.10.3.7"}: +1
AddressGroupAddress{.addressGroup = 60460917171393760924650753449093679022, .address = "10.10.5.1"}: +1
AddressGroupAddress{.addressGroup = 68832077769101909448369837893361628614, .address = "10.10.2.9"}: +1
AddressGroupAddress{.addressGroup = 70144797405409128114114553010962757218, .address = "10.10.3.3"}: +1
AddressGroupAddress{.addressGroup = 81121462914270942832249950298843128703, .address = "10.10.3.1"}: +1
AddressGroupAddress{.addressGroup = 94855553666864199803161217169240171680, .address = "10.10.4.2"}: +1
AddressGroupAddress{.addressGroup = 96618035969411579988466106943835469232, .address = "10.10.3.0"}: +1
AddressGroupAddress{.addressGroup = 97546812034476547964388477049256406319, .address = "10.10.2.4"}: +1
AddressGroupAddress{.addressGroup = 113831036545704994957248832178974481894, .address = "10.10.5.5"}: +1
AddressGroupAddress{.addressGroup = 119635299887588143896536870584846982759, .address = "10.10.5.4"}: +1
AddressGroupAddress{.addressGroup = 127836115956806847874573849543759564251, .address = "10.10.4.1"}: +1
AddressGroupAddress{.addressGroup = 133048564262879295471989340890274681624, .address = "10.10.3.8"}: +1
AddressGroupAddress{.addressGroup = 135997051926608991473280201116356280270, .address = "10.10.3.5"}: +1
AddressGroupAddress{.addressGroup = 144753196858021665707569721083110589917, .address = "10.10.3.2"}: +1
AddressGroupAddress{.addressGroup = 150245552670006731495342494597403576795, .address = "10.10.4.8"}: +1
AddressGroupAddress{.addressGroup = 151161408702144383027448843335256361428, .address = "10.10.4.6"}: +1
AddressGroupAddress{.addressGroup = 159928134457379710572178241731236640678, .address = "10.10.5.3"}: +1
AddressGroupAddress{.addressGroup = 197420669892879724015737365903881295925, .address = "10.10.3.4"}: +1
AddressGroupAddress{.addressGroup = 197823068481389578285940514810756381878, .address = "10.10.4.9"}: +1
AddressGroupAddress{.addressGroup = 223535744135199722597700842790109819993, .address = "10.10.5.2"}: +1
AddressGroupAddress{.addressGroup = 225923597630883948509019350627296324885, .address = "10.10.4.5"}: +1
AddressGroupAddress{.addressGroup = 250653476791479791971840075253253654180, .address = "10.10.4.4"}: +1
AddressGroupAddress{.addressGroup = 274176388433300462609557742028238679621, .address = "10.10.2.8"}: +1
AddressGroupAddress{.addressGroup = 286051166561850116633041377227436361012, .address = "10.10.2.7"}: +1
AddressGroupAddress{.addressGroup = 291181118710020130136035873167052365866, .address = "10.10.3.9"}: +1
AddressGroupAddress{.addressGroup = 315439202690119074714610327856710530138, .address = "10.10.4.7"}: +1
AddressGroupAddress{.addressGroup = 325047147065144565960557867088934395082, .address = "10.10.2.6"}: +1
AddressGroupAddress{.addressGroup = 331887779747380270873541504967861739528, .address = "10.10.2.5"}: +1
AddressGroupAddress{.addressGroup = 333792767507096372435127251053319945002, .address = "10.10.3.6"}: +1
AddressGroupAddress{.addressGroup = 338724712949557350203684887888038271713, .address = "10.10.4.3"}: +1
AddressGroupDescr:
AddressGroupDescr{.name = "0f9fbc5c-5a7b-5c5f-9aee-9a43fd621356", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-50]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-50")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "210240b9-6894-57ce-9c87-05e71d4dfadb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-40]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-40")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "23869241-7820-549f-a94b-50ad97b9fb31", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-37]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-37")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "2d7c595d-9ae7-5c49-a196-9bf7e286c7ae", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-51]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-51")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "33c89372-d5b7-5b27-9b11-7081dc6c75c6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-29]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-29")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "34c56586-0b5e-5952-a438-e695a1eaf662", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-33]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-33")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "3d076cea-adb0-5b25-a9c3-eb0fc9cc237f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-31]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-31")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "475c83de-e4e5-51b7-8e62-923c954d24a0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-42]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-42")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "48aff4f5-0c50-54f0-af33-70e2ab77f5b0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-30]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-30")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "4962d527-1649-5cd9-9aa6-95739cc1ed2f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-24]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-24")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "55a30f68-81ce-5650-b9a1-7f0b3689dde6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-55]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-55")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "5a00ebaf-738c-52e4-aa5b-86f171891e67", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-54]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-54")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "602c5722-753f-5d2c-ab9c-9991b7170ddb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-41]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-41")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "641838ad-7bfd-5cd6-a02d-fb5f08f35318", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-38]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-38")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "66501457-d7ea-568b-9e57-2211ab397fce", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-35]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-35")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "6ce6739e-834b-5cc8-b9f6-0bd7d7a785dd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-32]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-32")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "71083daa-f480-59d1-a72a-046de2f709db", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-48]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-48")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "71b8a0db-408a-5bdd-954c-0a5c1eadc9d4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-46]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-46")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "785109ce-b196-523d-a25e-126f78b2b7a6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-53]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-53")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "9485d685-c6cd-518f-8452-c787dcb05835", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-34]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-34")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "94d3564e-0363-5fa2-9f6d-be334db4bcb6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-49]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-49")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "a82b6b17-7be3-5ebf-8d0d-3c47a657b459", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-52]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-52")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "a9f74d5b-ce62-5626-8198-ce25bf81ad15", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-45]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-45")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "bc921a89-938a-5c34-94cc-104ece73c6a4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-44]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-44")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "ce44739f-83fa-5414-b860-366a7b1cee45", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-28]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-28")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "d7337363-189b-53ad-89fa-0f7cbfe68534", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-27]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-27")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "db0f718e-38be-519e-8247-4318117fe02a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-39]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-39")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "ed4f616f-9f03-59f5-8080-968295e9b45a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-47]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-47")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "f489cdaa-c5e8-5a99-8070-b15ba9f0dcca", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-26]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-26")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "f9af42e5-d01e-5852-906f-94d78a462008", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-25]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-25")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "fb1e260b-b5c2-546d-970a-3e472dd9fb2a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-36]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-36")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "fed401ba-d98f-5082-b730-1c9d3d891ae1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-43]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-43")], .matchExpressions = []}}}}: +1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 20767815547279998493907012236425171798, .node = "testNode-4"}: +1
AddressGroupSpan{.addressGroup = 43876221218409769006807412802117827291, .node = "testNode-3"}: +1
AddressGroupSpan{.addressGroup = 47221714050325705453725051369721297713, .node = "testNode-3"}: +1
AddressGroupSpan{.addressGroup = 60460917171393760924650753449093679022, .node = "testNode-5"}: +1
AddressGroupSpan{.addressGroup = 68832077769101909448369837893361628614, .node = "testNode-2"}: +1
AddressGroupSpan{.addressGroup = 70144797405409128114114553010962757218, .node = "testNode-3"}: +1
AddressGroupSpan{.addressGroup = 81121462914270942832249950298843128703, .node = "testNode-3"}: +1
AddressGroupSpan{.addressGroup = 94855553666864199803161217169240171680, .node = "testNode-4"}: +1
AddressGroupSpan{.addressGroup = 96618035969411579988466106943835469232, .node = "testNode-2"}: +1
AddressGroupSpan{.addressGroup = 97546812034476547964388477049256406319, .node = "testNode-2"}: +1
AddressGroupSpan{.addressGroup = 113831036545704994957248832178974481894, .node = "testNode-5"}: +1
AddressGroupSpan{.addressGroup = 119635299887588143896536870584846982759, .node = "testNode-5"}: +1
AddressGroupSpan{.addressGroup = 127836115956806847874573849543759564251, .node = "testNode-4"}: +1
AddressGroupSpan{.addressGroup = 133048564262879295471989340890274681624, .node = "testNode-3"}: +1
AddressGroupSpan{.addressGroup = 135997051926608991473280201116356280270, .node = "testNode-3"}: +1
AddressGroupSpan{.addressGroup = 144753196858021665707569721083110589917, .node = "testNode-3"}: +1
AddressGroupSpan{.addressGroup = 150245552670006731495342494597403576795, .node = "testNode-4"}: +1
AddressGroupSpan{.addressGroup = 151161408702144383027448843335256361428, .node = "testNode-4"}: +1
AddressGroupSpan{.addressGroup = 159928134457379710572178241731236640678, .node = "testNode-5"}: +1
AddressGroupSpan{.addressGroup = 197420669892879724015737365903881295925, .node = "testNode-3"}: +1
AddressGroupSpan{.addressGroup = 197823068481389578285940514810756381878, .node = "testNode-4"}: +1
AddressGroupSpan{.addressGroup = 223535744135199722597700842790109819993, .node = "testNode-5"}: +1
AddressGroupSpan{.addressGroup = 225923597630883948509019350627296324885, .node = "testNode-4"}: +1
AddressGroupSpan{.addressGroup = 250653476791479791971840075253253654180, .node = "testNode-4"}: +1
AddressGroupSpan{.addressGroup = 274176388433300462609557742028238679621, .node = "testNode-2"}: +1
AddressGroupSpan{.addressGroup = 286051166561850116633041377227436361012, .node = "testNode-2"}: +1
AddressGroupSpan{.addressGroup = 291181118710020130136035873167052365866, .node = "testNode-3"}: +1
AddressGroupSpan{.addressGroup = 315439202690119074714610327856710530138, .node = "testNode-4"}: +1
AddressGroupSpan{.addressGroup = 325047147065144565960557867088934395082, .node = "testNode-2"}: +1
AddressGroupSpan{.addressGroup = 331887779747380270873541504967861739528, .node = "testNode-2"}: +1
AddressGroupSpan{.addressGroup = 333792767507096372435127251053319945002, .node = "testNode-3"}: +1
AddressGroupSpan{.addressGroup = 338724712949557350203684887888038271713, .node = "testNode-4"}: +1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "0f9fbc5c-5a7b-5c5f-9aee-9a43fd621356", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-50]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-50")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "210240b9-6894-57ce-9c87-05e71d4dfadb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-40]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-40")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "23869241-7820-549f-a94b-50ad97b9fb31", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-37]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-37")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "2d7c595d-9ae7-5c49-a196-9bf7e286c7ae", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-51]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-51")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "33c89372-d5b7-5b27-9b11-7081dc6c75c6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-29]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-29")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "34c56586-0b5e-5952-a438-e695a1eaf662", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-33]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-33")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "3d076cea-adb0-5b25-a9c3-eb0fc9cc237f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-31]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-31")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "475c83de-e4e5-51b7-8e62-923c954d24a0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-42]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-42")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "48aff4f5-0c50-54f0-af33-70e2ab77f5b0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-30]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-30")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "4962d527-1649-5cd9-9aa6-95739cc1ed2f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-24]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-24")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "5a00ebaf-738c-52e4-aa5b-86f171891e67", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-54]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-54")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "602c5722-753f-5d2c-ab9c-9991b7170ddb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-41]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-41")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "641838ad-7bfd-5cd6-a02d-fb5f08f35318", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-38]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-38")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "66501457-d7ea-568b-9e57-2211ab397fce", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-35]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-35")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "6ce6739e-834b-5cc8-b9f6-0bd7d7a785dd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-32]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-32")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "71083daa-f480-59d1-a72a-046de2f709db", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-48]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-48")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "71b8a0db-408a-5bdd-954c-0a5c1eadc9d4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-46]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-46")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "785109ce-b196-523d-a25e-126f78b2b7a6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-53]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-53")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "84d95faa-012d-5288-ae40-788efddb92a0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-23]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-23")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "9485d685-c6cd-518f-8452-c787dcb05835", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-34]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-34")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "94d3564e-0363-5fa2-9f6d-be334db4bcb6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-49]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-49")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "a82b6b17-7be3-5ebf-8d0d-3c47a657b459", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-52]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-52")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "a9f74d5b-ce62-5626-8198-ce25bf81ad15", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-45]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-45")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "bc921a89-938a-5c34-94cc-104ece73c6a4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-44]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-44")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "ce44739f-83fa-5414-b860-366a7b1cee45", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-28]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-28")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "d7337363-189b-53ad-89fa-0f7cbfe68534", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-27]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-27")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "db0f718e-38be-519e-8247-4318117fe02a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-39]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-39")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "ed4f616f-9f03-59f5-8080-968295e9b45a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-47]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-47")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "f489cdaa-c5e8-5a99-8070-b15ba9f0dcca", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-26]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-26")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "f9af42e5-d01e-5852-906f-94d78a462008", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-25]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-25")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "fb1e260b-b5c2-546d-970a-3e472dd9fb2a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-36]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-36")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "fed401ba-d98f-5082-b730-1c9d3d891ae1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-43]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-43")], .matchExpressions = []}}}}: +1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 20767815547279998493907012236425171798, .node = "testNode-5", .pods = [k8spolicy.PodReference{.name = "testPod-50", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 43876221218409769006807412802117827291, .node = "testNode-4", .pods = [k8spolicy.PodReference{.name = "testPod-40", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 47221714050325705453725051369721297713, .node = "testNode-3", .pods = [k8spolicy.PodReference{.name = "testPod-37", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 60460917171393760924650753449093679022, .node = "testNode-5", .pods = [k8spolicy.PodReference{.name = "testPod-51", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 68832077769101909448369837893361628614, .node = "testNode-2", .pods = [k8spolicy.PodReference{.name = "testPod-29", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 70144797405409128114114553010962757218, .node = "testNode-3", .pods = [k8spolicy.PodReference{.name = "testPod-33", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 81121462914270942832249950298843128703, .node = "testNode-3", .pods = [k8spolicy.PodReference{.name = "testPod-31", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 94855553666864199803161217169240171680, .node = "testNode-4", .pods = [k8spolicy.PodReference{.name = "testPod-42", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 96618035969411579988466106943835469232, .node = "testNode-3", .pods = [k8spolicy.PodReference{.name = "testPod-30", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 97546812034476547964388477049256406319, .node = "testNode-2", .pods = [k8spolicy.PodReference{.name = "testPod-24", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 119635299887588143896536870584846982759, .node = "testNode-5", .pods = [k8spolicy.PodReference{.name = "testPod-54", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 127836115956806847874573849543759564251, .node = "testNode-4", .pods = [k8spolicy.PodReference{.name = "testPod-41", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 133048564262879295471989340890274681624, .node = "testNode-3", .pods = [k8spolicy.PodReference{.name = "testPod-38", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 135997051926608991473280201116356280270, .node = "testNode-3", .pods = [k8spolicy.PodReference{.name = "testPod-35", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 144753196858021665707569721083110589917, .node = "testNode-3", .pods = [k8spolicy.PodReference{.name = "testPod-32", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 150245552670006731495342494597403576795, .node = "testNode-4", .pods = [k8spolicy.PodReference{.name = "testPod-48", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 151161408702144383027448843335256361428, .node = "testNode-4", .pods = [k8spolicy.PodReference{.name = "testPod-46", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 159928134457379710572178241731236640678, .node = "testNode-5", .pods = [k8spolicy.PodReference{.name = "testPod-53", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 176586764159975203579390276585431732896, .node = "testNode-2", .pods = [k8spolicy.PodReference{.name = "testPod-23", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 197420669892879724015737365903881295925, .node = "testNode-3", .pods = [k8spolicy.PodReference{.name = "testPod-34", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 197823068481389578285940514810756381878, .node = "testNode-4", .pods = [k8spolicy.PodReference{.name = "testPod-49", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 223535744135199722597700842790109819993, .node = "testNode-5", .pods = [k8spolicy.PodReference{.name = "testPod-52", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 225923597630883948509019350627296324885, .node = "testNode-4", .pods = [k8spolicy.PodReference{.name = "testPod-45", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 250653476791479791971840075253253654180, .node = "testNode-4", .pods = [k8spolicy.PodReference{.name = "testPod-44", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 274176388433300462609557742028238679621, .node = "testNode-2", .pods = [k8spolicy.PodReference{.name = "testPod-28", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 286051166561850116633041377227436361012, .node = "testNode-2", .pods = [k8spolicy.PodReference{.name = "testPod-27", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 291181118710020130136035873167052365866, .node = "testNode-3", .pods = [k8spolicy.PodReference{.name = "testPod-39", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 315439202690119074714610327856710530138, .node = "testNode-4", .pods = [k8spolicy.PodReference{.name = "testPod-47", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 325047147065144565960557867088934395082, .node = "testNode-2", .pods = [k8spolicy.PodReference{.name = "testPod-26", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 331887779747380270873541504967861739528, .node = "testNode-2", .pods = [k8spolicy.PodReference{.name = "testPod-25", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 333792767507096372435127251053319945002, .node = "testNode-3", .pods = [k8spolicy.PodReference{.name = "testPod-36", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 338724712949557350203684887888038271713, .node = "testNode-4", .pods = [k8spolicy.PodReference{.name = "testPod-43", .namespace = "testNamespace"}]}: +1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 20767815547279998493907012236425171798, .span = "testNode-5"}: +1
AppliedToGroupSpan{.appliedToGroup = 43876221218409769006807412802117827291, .span = "testNode-4"}: +1
AppliedToGroupSpan{.appliedToGroup = 47221714050325705453725051369721297713, .span = "testNode-3"}: +1
AppliedToGroupSpan{.appliedToGroup = 60460917171393760924650753449093679022, .span = "testNode-5"}: +1
AppliedToGroupSpan{.appliedToGroup = 68832077769101909448369837893361628614, .span = "testNode-2"}: +1
AppliedToGroupSpan{.appliedToGroup = 70144797405409128114114553010962757218, .span = "testNode-3"}: +1
AppliedToGroupSpan{.appliedToGroup = 81121462914270942832249950298843128703, .span = "testNode-3"}: +1
AppliedToGroupSpan{.appliedToGroup = 94855553666864199803161217169240171680, .span = "testNode-4"}: +1
AppliedToGroupSpan{.appliedToGroup = 96618035969411579988466106943835469232, .span = "testNode-3"}: +1
AppliedToGroupSpan{.appliedToGroup = 97546812034476547964388477049256406319, .span = "testNode-2"}: +1
AppliedToGroupSpan{.appliedToGroup = 119635299887588143896536870584846982759, .span = "testNode-5"}: +1
AppliedToGroupSpan{.appliedToGroup = 127836115956806847874573849543759564251, .span = "testNode-4"}: +1
AppliedToGroupSpan{.appliedToGroup = 133048564262879295471989340890274681624, .span = "testNode-3"}: +1
AppliedToGroupSpan{.appliedToGroup = 135997051926608991473280201116356280270, .span = "testNode-3"}: +1
AppliedToGroupSpan{.appliedToGroup = 144753196858021665707569721083110589917, .span = "testNode-3"}: +1
AppliedToGroupSpan{.appliedToGroup = 150245552670006731495342494597403576795, .span = "testNode-4"}: +1
AppliedToGroupSpan{.appliedToGroup = 151161408702144383027448843335256361428, .span = "testNode-4"}: +1
AppliedToGroupSpan{.appliedToGroup = 159928134457379710572178241731236640678, .span = "testNode-5"}: +1
AppliedToGroupSpan{.appliedToGroup = 176586764159975203579390276585431732896, .span = "testNode-2"}: +1
AppliedToGroupSpan{.appliedToGroup = 197420669892879724015737365903881295925, .span = "testNode-3"}: +1
AppliedToGroupSpan{.appliedToGroup = 197823068481389578285940514810756381878, .span = "testNode-4"}: +1
AppliedToGroupSpan{.appliedToGroup = 223535744135199722597700842790109819993, .span = "testNode-5"}: +1
AppliedToGroupSpan{.appliedToGroup = 225923597630883948509019350627296324885, .span = "testNode-4"}: +1
AppliedToGroupSpan{.appliedToGroup = 250653476791479791971840075253253654180, .span = "testNode-4"}: +1
AppliedToGroupSpan{.appliedToGroup = 274176388433300462609557742028238679621, .span = "testNode-2"}: +1
AppliedToGroupSpan{.appliedToGroup = 286051166561850116633041377227436361012, .span = "testNode-2"}: +1
AppliedToGroupSpan{.appliedToGroup = 291181118710020130136035873167052365866, .span = "testNode-3"}: +1
AppliedToGroupSpan{.appliedToGroup = 315439202690119074714610327856710530138, .span = "testNode-4"}: +1
AppliedToGroupSpan{.appliedToGroup = 325047147065144565960557867088934395082, .span = "testNode-2"}: +1
AppliedToGroupSpan{.appliedToGroup = 331887779747380270873541504967861739528, .span = "testNode-2"}: +1
AppliedToGroupSpan{.appliedToGroup = 333792767507096372435127251053319945002, .span = "testNode-3"}: +1
AppliedToGroupSpan{.appliedToGroup = 338724712949557350203684887888038271713, .span = "testNode-4"}: +1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-23"}, .name = "testNP-23", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [97546812034476547964388477049256406319], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [176586764159975203579390276585431732896]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-24"}, .name = "testNP-24", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [331887779747380270873541504967861739528], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [97546812034476547964388477049256406319]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-25"}, .name = "testNP-25", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [325047147065144565960557867088934395082], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [331887779747380270873541504967861739528]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-26"}, .name = "testNP-26", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [286051166561850116633041377227436361012], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [325047147065144565960557867088934395082]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-27"}, .name = "testNP-27", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [274176388433300462609557742028238679621], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [286051166561850116633041377227436361012]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-28"}, .name = "testNP-28", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [68832077769101909448369837893361628614], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [274176388433300462609557742028238679621]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-29"}, .name = "testNP-29", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [96618035969411579988466106943835469232], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [68832077769101909448369837893361628614]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-30"}, .name = "testNP-30", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [81121462914270942832249950298843128703], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [96618035969411579988466106943835469232]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-31"}, .name = "testNP-31", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [144753196858021665707569721083110589917], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [81121462914270942832249950298843128703]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-32"}, .name = "testNP-32", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [70144797405409128114114553010962757218], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [144753196858021665707569721083110589917]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-33"}, .name = "testNP-33", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [197420669892879724015737365903881295925], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [70144797405409128114114553010962757218]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-34"}, .name = "testNP-34", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [135997051926608991473280201116356280270], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [197420669892879724015737365903881295925]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-35"}, .name = "testNP-35", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [333792767507096372435127251053319945002], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [135997051926608991473280201116356280270]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-36"}, .name = "testNP-36", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [47221714050325705453725051369721297713], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [333792767507096372435127251053319945002]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-37"}, .name = "testNP-37", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [133048564262879295471989340890274681624], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [47221714050325705453725051369721297713]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-38"}, .name = "testNP-38", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [291181118710020130136035873167052365866], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [133048564262879295471989340890274681624]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-39"}, .name = "testNP-39", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [43876221218409769006807412802117827291], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [291181118710020130136035873167052365866]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-40"}, .name = "testNP-40", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [127836115956806847874573849543759564251], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [43876221218409769006807412802117827291]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-41"}, .name = "testNP-41", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [94855553666864199803161217169240171680], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [127836115956806847874573849543759564251]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-42"}, .name = "testNP-42", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [338724712949557350203684887888038271713], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [94855553666864199803161217169240171680]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-43"}, .name = "testNP-43", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [250653476791479791971840075253253654180], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [338724712949557350203684887888038271713]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-44"}, .name = "testNP-44", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [225923597630883948509019350627296324885], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [250653476791479791971840075253253654180]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-45"}, .name = "testNP-45", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [151161408702144383027448843335256361428], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [225923597630883948509019350627296324885]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-46"}, .name = "testNP-46", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [315439202690119074714610327856710530138], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [151161408702144383027448843335256361428]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-47"}, .name = "testNP-47", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [150245552670006731495342494597403576795], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [315439202690119074714610327856710530138]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-48"}, .name = "testNP-48", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [197823068481389578285940514810756381878], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [150245552670006731495342494597403576795]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-49"}, .name = "testNP-49", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [20767815547279998493907012236425171798], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [197823068481389578285940514810756381878]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-50"}, .name = "testNP-50", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [60460917171393760924650753449093679022], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [20767815547279998493907012236425171798]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-51"}, .name = "testNP-51", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [223535744135199722597700842790109819993], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [60460917171393760924650753449093679022]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-52"}, .name = "testNP-52", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [159928134457379710572178241731236640678], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [223535744135199722597700842790109819993]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-53"}, .name = "testNP-53", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [119635299887588143896536870584846982759], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [159928134457379710572178241731236640678]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-54"}, .name = "testNP-54", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [113831036545704994957248832178974481894], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [119635299887588143896536870584846982759]}: +1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-23", .policy = k8spolicy.UID{.uid = "testNP-23"}, .node = "testNode-2"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-24", .policy = k8spolicy.UID{.uid = "testNP-24"}, .node = "testNode-2"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-25", .policy = k8spolicy.UID{.uid = "testNP-25"}, .node = "testNode-2"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-26", .policy = k8spolicy.UID{.uid = "testNP-26"}, .node = "testNode-2"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-27", .policy = k8spolicy.UID{.uid = "testNP-27"}, .node = "testNode-2"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-28", .policy = k8spolicy.UID{.uid = "testNP-28"}, .node = "testNode-2"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-29", .policy = k8spolicy.UID{.uid = "testNP-29"}, .node = "testNode-2"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-30", .policy = k8spolicy.UID{.uid = "testNP-30"}, .node = "testNode-3"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-31", .policy = k8spolicy.UID{.uid = "testNP-31"}, .node = "testNode-3"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-32", .policy = k8spolicy.UID{.uid = "testNP-32"}, .node = "testNode-3"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-33", .policy = k8spolicy.UID{.uid = "testNP-33"}, .node = "testNode-3"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-34", .policy = k8spolicy.UID{.uid = "testNP-34"}, .node = "testNode-3"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-35", .policy = k8spolicy.UID{.uid = "testNP-35"}, .node = "testNode-3"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-36", .policy = k8spolicy.UID{.uid = "testNP-36"}, .node = "testNode-3"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-37", .policy = k8spolicy.UID{.uid = "testNP-37"}, .node = "testNode-3"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-38", .policy = k8spolicy.UID{.uid = "testNP-38"}, .node = "testNode-3"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-39", .policy = k8spolicy.UID{.uid = "testNP-39"}, .node = "testNode-3"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-40", .policy = k8spolicy.UID{.uid = "testNP-40"}, .node = "testNode-4"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-41", .policy = k8spolicy.UID{.uid = "testNP-41"}, .node = "testNode-4"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-42", .policy = k8spolicy.UID{.uid = "testNP-42"}, .node = "testNode-4"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-43", .policy = k8spolicy.UID{.uid = "testNP-43"}, .node = "testNode-4"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-44", .policy = k8spolicy.UID{.uid = "testNP-44"}, .node = "testNode-4"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-45", .policy = k8spolicy.UID{.uid = "testNP-45"}, .node = "testNode-4"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-46", .policy = k8spolicy.UID{.uid = "testNP-46"}, .node = "testNode-4"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-47", .policy = k8spolicy.UID{.uid = "testNP-47"}, .node = "testNode-4"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-48", .policy = k8spolicy.UID{.uid = "testNP-48"}, .node = "testNode-4"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-49", .policy = k8spolicy.UID{.uid = "testNP-49"}, .node = "testNode-4"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-50", .policy = k8spolicy.UID{.uid = "testNP-50"}, .node = "testNode-5"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-51", .policy = k8spolicy.UID{.uid = "testNP-51"}, .node = "testNode-5"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-52", .policy = k8spolicy.UID{.uid = "testNP-52"}, .node = "testNode-5"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-53", .policy = k8spolicy.UID{.uid = "testNP-53"}, .node = "testNode-5"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-54", .policy = k8spolicy.UID{.uid = "testNP-54"}, .node = "testNode-5"}: +1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 22861342794206303209929185441815622320, .address = "10.10.8.5"}: +1
AddressGroupAddress{.addressGroup = 35184666245455068155766600872485278590, .address = "10.10.7.8"}: +1
AddressGroupAddress{.addressGroup = 38004132277364152320107829778209775275, .address = "10.10.6.4"}: +1
AddressGroupAddress{.addressGroup = 38628245282234504053248182638842229937, .address = "10.10.6.1"}: +1
AddressGroupAddress{.addressGroup = 39452312576163401031277279311434766391, .address = "10.10.5.9"}: +1
AddressGroupAddress{.addressGroup = 41273166673565770432178909612616696213, .address = "10.10.6.0"}: +1
AddressGroupAddress{.addressGroup = 43808627284850999836440511680257005060, .address = "10.10.6.6"}: +1
AddressGroupAddress{.addressGroup = 70580325334576926992948232860341253201, .address = "10.10.7.5"}: +1
AddressGroupAddress{.addressGroup = 83361076002547028554621603357616584295, .address = "10.10.6.7"}: +1
AddressGroupAddress{.addressGroup = 101518538893632532406007965810177493869, .address = "10.10.8.0"}: +1
AddressGroupAddress{.addressGroup = 112299973715776994013371347923002599379, .address = "10.10.7.2"}: +1
AddressGroupAddress{.addressGroup = 136744418091426290396479365750407022099, .address = "10.10.8.1"}: +1
AddressGroupAddress{.addressGroup = 151117400945067438640309587197077641860, .address = "10.10.5.8"}: +1
AddressGroupAddress{.addressGroup = 151905872123989268088239396191728799111, .address = "10.10.6.5"}: +1
AddressGroupAddress{.addressGroup = 156721006097654111554548022160434781123, .address = "10.10.7.9"}: +1
AddressGroupAddress{.addressGroup = 180337676044367460640997715204112802096, .address = "10.10.8.3"}: +1
AddressGroupAddress{.addressGroup = 198898627122014703402066283836612161345, .address = "10.10.8.2"}: +1
AddressGroupAddress{.addressGroup = 202302642131276625801490600770378263466, .address = "10.10.6.3"}: +1
AddressGroupAddress{.addressGroup = 207062112071959762746330428969528801157, .address = "10.10.7.3"}: +1
AddressGroupAddress{.addressGroup = 215513316860074733245676901009072053322, .address = "10.10.5.7"}: +1
AddressGroupAddress{.addressGroup = 216079185330943871065821579875144935337, .address = "10.10.7.4"}: +1
AddressGroupAddress{.addressGroup = 225258361982660033586696895651733671374, .address = "10.10.6.8"}: +1
AddressGroupAddress{.addressGroup = 241668530693184253737879454563077500169, .address = "10.10.7.6"}: +1
AddressGroupAddress{.addressGroup = 243420142607871313129022015229202740915, .address = "10.10.8.7"}: +1
AddressGroupAddress{.addressGroup = 252838272729494038051191256155543415249, .address = "10.10.8.4"}: +1
AddressGroupAddress{.addressGroup = 268407614332431288519984878690122756601, .address = "10.10.8.6"}: +1
AddressGroupAddress{.addressGroup = 271035497562104608376238663622262080518, .address = "10.10.7.0"}: +1
AddressGroupAddress{.addressGroup = 281202759973643394147461313037128163534, .address = "10.10.7.1"}: +1
AddressGroupAddress{.addressGroup = 292709995959071864261371376180066479171, .address = "10.10.6.9"}: +1
AddressGroupAddress{.addressGroup = 310940190933221253890865733277244449454, .address = "10.10.5.6"}: +1
AddressGroupAddress{.addressGroup = 323906248563065033049990240949028664315, .address = "10.10.7.7"}: +1
AddressGroupAddress{.addressGroup = 324271088399173558429504239361653168070, .address = "10.10.6.2"}: +1
AddressGroupDescr:
AddressGroupDescr{.name = "1132ef39-23a8-50b0-832a-4e2d43e672b0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-85]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-85")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "1a7851fa-a0ed-5c12-b4e0-6131bc09537e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-78]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-78")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "1c975463-0c20-5ec3-9552-7dc30a671eab", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-64]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-64")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "1d0f8788-a5a7-56a5-842e-dfef785034b1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-61]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-61")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "1dae3d30-30b8-5bff-a131-5db10e5e5837", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-59]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-59")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "1f0cec39-f9a3-5773-a5f8-d75c15ebc195", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-60]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-60")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "20f53c16-05ce-54e7-ae47-396d24111604", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-66]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-66")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "351946b5-58ff-5208-85f5-88334f3e3451", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-75]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-75")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "3eb6c25e-0252-58bf-b260-387044d53667", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-67]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-67")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "4c5fc267-d043-5294-9044-61ec13124b6d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-80]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-80")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "547c302e-bf61-5241-be2f-d5d117fa27d3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-72]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-72")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "66e00457-0849-5184-bf00-abca386fc613", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-81]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-81")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "71b0271b-444a-5dfd-bd9a-20a347925a84", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-58]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-58")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "724801bc-ac83-557b-b23e-987677738d87", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-65]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-65")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "75e75e2b-cc28-5038-bc0c-b760d589dbc3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-79]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-79")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "87abc5e5-eac1-5746-8fcc-5a7c58a66130", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-83]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-83")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "95a27b70-9e78-5dc7-826b-fb7baa062f41", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-82]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-82")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "98321256-678d-57ed-a5f3-fc3d3571ebaa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-63]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-63")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "9bc6b652-a82f-57cd-9a60-91ce90eb3785", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-73]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-73")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "a2225ae3-9b53-5d5f-866f-fb4c2eabdc4a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-57]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-57")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "a28f565b-d559-57df-ba26-e0167663a7a9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-74]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-74")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "a9772eb5-79d4-5e3e-9b39-c76348a18dce", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-68]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-68")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "b5cfaa7e-2d4a-5223-8550-75d22758ad09", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-76]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-76")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "b72103a0-bf2c-5823-b0f8-5ba0e64b36b3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-87]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-87")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "be36e14b-32d0-59d6-a7c5-aafc86f1a9d1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-84]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-84")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "c9ed6d19-c495-52d4-b1b7-1750965a71f9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-86]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-86")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "cbe789bf-430c-5438-a094-736e589d4406", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-70]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-70")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "d38dae7c-8908-5aeb-85fa-35c607f3e0ce", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-71]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-71")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "dc35e506-127b-51f2-a292-a61d8edb6c43", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-69]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-69")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "e9ece707-d3a9-56b7-b64f-5e06272be2ae", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-56]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-56")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "f3ae1307-2bd5-5fc8-81c8-d5945eaa33fb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-77]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-77")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "f3f45705-4e21-5ed2-9f79-2f41496f57c6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-62]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-62")], .matchExpressions = []}}}}: +1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 22861342794206303209929185441815622320, .node = "testNode-8"}: +1
AddressGroupSpan{.addressGroup = 35184666245455068155766600872485278590, .node = "testNode-7"}: +1
AddressGroupSpan{.addressGroup = 38004132277364152320107829778209775275, .node = "testNode-6"}: +1
AddressGroupSpan{.addressGroup = 38628245282234504053248182638842229937, .node = "testNode-6"}: +1
AddressGroupSpan{.addressGroup = 39452312576163401031277279311434766391, .node = "testNode-5"}: +1
AddressGroupSpan{.addressGroup = 41273166673565770432178909612616696213, .node = "testNode-5"}: +1
AddressGroupSpan{.addressGroup = 43808627284850999836440511680257005060, .node = "testNode-6"}: +1
AddressGroupSpan{.addressGroup = 70580325334576926992948232860341253201, .node = "testNode-7"}: +1
AddressGroupSpan{.addressGroup = 83361076002547028554621603357616584295, .node = "testNode-6"}: +1
AddressGroupSpan{.addressGroup = 101518538893632532406007965810177493869, .node = "testNode-7"}: +1
AddressGroupSpan{.addressGroup = 112299973715776994013371347923002599379, .node = "testNode-7"}: +1
AddressGroupSpan{.addressGroup = 136744418091426290396479365750407022099, .node = "testNode-8"}: +1
AddressGroupSpan{.addressGroup = 151117400945067438640309587197077641860, .node = "testNode-5"}: +1
AddressGroupSpan{.addressGroup = 151905872123989268088239396191728799111, .node = "testNode-6"}: +1
AddressGroupSpan{.addressGroup = 156721006097654111554548022160434781123, .node = "testNode-7"}: +1
AddressGroupSpan{.addressGroup = 180337676044367460640997715204112802096, .node = "testNode-8"}: +1
AddressGroupSpan{.addressGroup = 198898627122014703402066283836612161345, .node = "testNode-8"}: +1
AddressGroupSpan{.addressGroup = 202302642131276625801490600770378263466, .node = "testNode-6"}: +1
AddressGroupSpan{.addressGroup = 207062112071959762746330428969528801157, .node = "testNode-7"}: +1
AddressGroupSpan{.addressGroup = 215513316860074733245676901009072053322, .node = "testNode-5"}: +1
AddressGroupSpan{.addressGroup = 216079185330943871065821579875144935337, .node = "testNode-7"}: +1
AddressGroupSpan{.addressGroup = 225258361982660033586696895651733671374, .node = "testNode-6"}: +1
AddressGroupSpan{.addressGroup = 241668530693184253737879454563077500169, .node = "testNode-7"}: +1
AddressGroupSpan{.addressGroup = 243420142607871313129022015229202740915, .node = "testNode-8"}: +1
AddressGroupSpan{.addressGroup = 252838272729494038051191256155543415249, .node = "testNode-8"}: +1
AddressGroupSpan{.addressGroup = 268407614332431288519984878690122756601, .node = "testNode-8"}: +1
AddressGroupSpan{.addressGroup = 271035497562104608376238663622262080518, .node = "testNode-6"}: +1
AddressGroupSpan{.addressGroup = 281202759973643394147461313037128163534, .node = "testNode-7"}: +1
AddressGroupSpan{.addressGroup = 292709995959071864261371376180066479171, .node = "testNode-6"}: +1
AddressGroupSpan{.addressGroup = 310940190933221253890865733277244449454, .node = "testNode-5"}: +1
AddressGroupSpan{.addressGroup = 323906248563065033049990240949028664315, .node = "testNode-7"}: +1
AddressGroupSpan{.addressGroup = 324271088399173558429504239361653168070, .node = "testNode-6"}: +1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "1132ef39-23a8-50b0-832a-4e2d43e672b0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-85]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-85")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "1a7851fa-a0ed-5c12-b4e0-6131bc09537e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-78]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-78")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "1c975463-0c20-5ec3-9552-7dc30a671eab", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-64]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-64")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "1d0f8788-a5a7-56a5-842e-dfef785034b1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-61]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-61")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "1dae3d30-30b8-5bff-a131-5db10e5e5837", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-59]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-59")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "1f0cec39-f9a3-5773-a5f8-d75c15ebc195", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-60]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-60")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "20f53c16-05ce-54e7-ae47-396d24111604", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-66]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-66")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "351946b5-58ff-5208-85f5-88334f3e3451", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-75]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-75")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "3eb6c25e-0252-58bf-b260-387044d53667", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-67]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-67")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "4c5fc267-d043-5294-9044-61ec13124b6d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-80]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-80")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "547c302e-bf61-5241-be2f-d5d117fa27d3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-72]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-72")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "55a30f68-81ce-5650-b9a1-7f0b3689dde6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-55]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-55")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "66e00457-0849-5184-bf00-abca386fc613", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-81]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-81")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "71b0271b-444a-5dfd-bd9a-20a347925a84", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-58]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-58")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "724801bc-ac83-557b-b23e-987677738d87", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-65]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-65")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "75e75e2b-cc28-5038-bc0c-b760d589dbc3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-79]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-79")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "87abc5e5-eac1-5746-8fcc-5a7c58a66130", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-83]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-83")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "95a27b70-9e78-5dc7-826b-fb7baa062f41", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-82]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-82")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "98321256-678d-57ed-a5f3-fc3d3571ebaa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-63]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-63")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "9bc6b652-a82f-57cd-9a60-91ce90eb3785", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-73]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-73")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "a2225ae3-9b53-5d5f-866f-fb4c2eabdc4a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-57]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-57")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "a28f565b-d559-57df-ba26-e0167663a7a9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-74]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-74")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "a9772eb5-79d4-5e3e-9b39-c76348a18dce", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-68]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-68")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "b5cfaa7e-2d4a-5223-8550-75d22758ad09", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-76]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-76")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "be36e14b-32d0-59d6-a7c5-aafc86f1a9d1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-84]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-84")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "c9ed6d19-c495-52d4-b1b7-1750965a71f9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-86]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-86")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "cbe789bf-430c-5438-a094-736e589d4406", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-70]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-70")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "d38dae7c-8908-5aeb-85fa-35c607f3e0ce", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-71]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-71")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "dc35e506-127b-51f2-a292-a61d8edb6c43", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-69]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-69")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "e9ece707-d3a9-56b7-b64f-5e06272be2ae", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-56]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-56")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "f3ae1307-2bd5-5fc8-81c8-d5945eaa33fb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-77]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-77")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "f3f45705-4e21-5ed2-9f79-2f41496f57c6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-62]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-62")], .matchExpressions = []}}}}: +1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 22861342794206303209929185441815622320, .node = "testNode-8", .pods = [k8spolicy.PodReference{.name = "testPod-85", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 35184666245455068155766600872485278590, .node = "testNode-7", .pods = [k8spolicy.PodReference{.name = "testPod-78", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 38004132277364152320107829778209775275, .node = "testNode-6", .pods = [k8spolicy.PodReference{.name = "testPod-64", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 38628245282234504053248182638842229937, .node = "testNode-6", .pods = [k8spolicy.PodReference{.name = "testPod-61", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 39452312576163401031277279311434766391, .node = "testNode-5", .pods = [k8spolicy.PodReference{.name = "testPod-59", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 41273166673565770432178909612616696213, .node = "testNode-6", .pods = [k8spolicy.PodReference{.name = "testPod-60", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 43808627284850999836440511680257005060, .node = "testNode-6", .pods = [k8spolicy.PodReference{.name = "testPod-66", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 70580325334576926992948232860341253201, .node = "testNode-7", .pods = [k8spolicy.PodReference{.name = "testPod-75", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 83361076002547028554621603357616584295, .node = "testNode-6", .pods = [k8spolicy.PodReference{.name = "testPod-67", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 101518538893632532406007965810177493869, .node = "testNode-8", .pods = [k8spolicy.PodReference{.name = "testPod-80", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 112299973715776994013371347923002599379, .node = "testNode-7", .pods = [k8spolicy.PodReference{.name = "testPod-72", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 113831036545704994957248832178974481894, .node = "testNode-5", .pods = [k8spolicy.PodReference{.name = "testPod-55", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 136744418091426290396479365750407022099, .node = "testNode-8", .pods = [k8spolicy.PodReference{.name = "testPod-81", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 151117400945067438640309587197077641860, .node = "testNode-5", .pods = [k8spolicy.PodReference{.name = "testPod-58", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 151905872123989268088239396191728799111, .node = "testNode-6", .pods = [k8spolicy.PodReference{.name = "testPod-65", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 156721006097654111554548022160434781123, .node = "testNode-7", .pods = [k8spolicy.PodReference{.name = "testPod-79", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 180337676044367460640997715204112802096, .node = "testNode-8", .pods = [k8spolicy.PodReference{.name = "testPod-83", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 198898627122014703402066283836612161345, .node = "testNode-8", .pods = [k8spolicy.PodReference{.name = "testPod-82", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 202302642131276625801490600770378263466, .node = "testNode-6", .pods = [k8spolicy.PodReference{.name = "testPod-63", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 207062112071959762746330428969528801157, .node = "testNode-7", .pods = [k8spolicy.PodReference{.name = "testPod-73", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 215513316860074733245676901009072053322, .node = "testNode-5", .pods = [k8spolicy.PodReference{.name = "testPod-57", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 216079185330943871065821579875144935337, .node = "testNode-7", .pods = [k8spolicy.PodReference{.name = "testPod-74", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 225258361982660033586696895651733671374, .node = "testNode-6", .pods = [k8spolicy.PodReference{.name = "testPod-68", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 241668530693184253737879454563077500169, .node = "testNode-7", .pods = [k8spolicy.PodReference{.name = "testPod-76", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 252838272729494038051191256155543415249, .node = "testNode-8", .pods = [k8spolicy.PodReference{.name = "testPod-84", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 268407614332431288519984878690122756601, .node = "testNode-8", .pods = [k8spolicy.PodReference{.name = "testPod-86", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 271035497562104608376238663622262080518, .node = "testNode-7", .pods = [k8spolicy.PodReference{.name = "testPod-70", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 281202759973643394147461313037128163534, .node = "testNode-7", .pods = [k8spolicy.PodReference{.name = "testPod-71", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 292709995959071864261371376180066479171, .node = "testNode-6", .pods = [k8spolicy.PodReference{.name = "testPod-69", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 310940190933221253890865733277244449454, .node = "testNode-5", .pods = [k8spolicy.PodReference{.name = "testPod-56", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 323906248563065033049990240949028664315, .node = "testNode-7", .pods = [k8spolicy.PodReference{.name = "testPod-77", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 324271088399173558429504239361653168070, .node = "testNode-6", .pods = [k8spolicy.PodReference{.name = "testPod-62", .namespace = "testNamespace"}]}: +1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 22861342794206303209929185441815622320, .span = "testNode-8"}: +1
AppliedToGroupSpan{.appliedToGroup = 35184666245455068155766600872485278590, .span = "testNode-7"}: +1
AppliedToGroupSpan{.appliedToGroup = 38004132277364152320107829778209775275, .span = "testNode-6"}: +1
AppliedToGroupSpan{.appliedToGroup = 38628245282234504053248182638842229937, .span = "testNode-6"}: +1
AppliedToGroupSpan{.appliedToGroup = 39452312576163401031277279311434766391, .span = "testNode-5"}: +1
AppliedToGroupSpan{.appliedToGroup = 41273166673565770432178909612616696213, .span = "testNode-6"}: +1
AppliedToGroupSpan{.appliedToGroup = 43808627284850999836440511680257005060, .span = "testNode-6"}: +1
AppliedToGroupSpan{.appliedToGroup = 70580325334576926992948232860341253201, .span = "testNode-7"}: +1
AppliedToGroupSpan{.appliedToGroup = 83361076002547028554621603357616584295, .span = "testNode-6"}: +1
AppliedToGroupSpan{.appliedToGroup = 101518538893632532406007965810177493869, .span = "testNode-8"}: +1
AppliedToGroupSpan{.appliedToGroup = 112299973715776994013371347923002599379, .span = "testNode-7"}: +1
AppliedToGroupSpan{.appliedToGroup = 113831036545704994957248832178974481894, .span = "testNode-5"}: +1
AppliedToGroupSpan{.appliedToGroup = 136744418091426290396479365750407022099, .span = "testNode-8"}: +1
AppliedToGroupSpan{.appliedToGroup = 151117400945067438640309587197077641860, .span = "testNode-5"}: +1
AppliedToGroupSpan{.appliedToGroup = 151905872123989268088239396191728799111, .span = "testNode-6"}: +1
AppliedToGroupSpan{.appliedToGroup = 156721006097654111554548022160434781123, .span = "testNode-7"}: +1
AppliedToGroupSpan{.appliedToGroup = 180337676044367460640997715204112802096, .span = "testNode-8"}: +1
AppliedToGroupSpan{.appliedToGroup = 198898627122014703402066283836612161345, .span = "testNode-8"}: +1
AppliedToGroupSpan{.appliedToGroup = 202302642131276625801490600770378263466, .span = "testNode-6"}: +1
AppliedToGroupSpan{.appliedToGroup = 207062112071959762746330428969528801157, .span = "testNode-7"}: +1
AppliedToGroupSpan{.appliedToGroup = 215513316860074733245676901009072053322, .span = "testNode-5"}: +1
AppliedToGroupSpan{.appliedToGroup = 216079185330943871065821579875144935337, .span = "testNode-7"}: +1
AppliedToGroupSpan{.appliedToGroup = 225258361982660033586696895651733671374, .span = "testNode-6"}: +1
AppliedToGroupSpan{.appliedToGroup = 241668530693184253737879454563077500169, .span = "testNode-7"}: +1
AppliedToGroupSpan{.appliedToGroup = 252838272729494038051191256155543415249, .span = "testNode-8"}: +1
AppliedToGroupSpan{.appliedToGroup = 268407614332431288519984878690122756601, .span = "testNode-8"}: +1
AppliedToGroupSpan{.appliedToGroup = 271035497562104608376238663622262080518, .span = "testNode-7"}: +1
AppliedToGroupSpan{.appliedToGroup = 281202759973643394147461313037128163534, .span = "testNode-7"}: +1
AppliedToGroupSpan{.appliedToGroup = 292709995959071864261371376180066479171, .span = "testNode-6"}: +1
AppliedToGroupSpan{.appliedToGroup = 310940190933221253890865733277244449454, .span = "testNode-5"}: +1
AppliedToGroupSpan{.appliedToGroup = 323906248563065033049990240949028664315, .span = "testNode-7"}: +1
AppliedToGroupSpan{.appliedToGroup = 324271088399173558429504239361653168070, .span = "testNode-6"}: +1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-55"}, .name = "testNP-55", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [310940190933221253890865733277244449454], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [113831036545704994957248832178974481894]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-56"}, .name = "testNP-56", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [215513316860074733245676901009072053322], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [310940190933221253890865733277244449454]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-57"}, .name = "testNP-57", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [151117400945067438640309587197077641860], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [215513316860074733245676901009072053322]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-58"}, .name = "testNP-58", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [39452312576163401031277279311434766391], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [151117400945067438640309587197077641860]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-59"}, .name = "testNP-59", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [41273166673565770432178909612616696213], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [39452312576163401031277279311434766391]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-60"}, .name = "testNP-60", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [38628245282234504053248182638842229937], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [41273166673565770432178909612616696213]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-61"}, .name = "testNP-61", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [324271088399173558429504239361653168070], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [38628245282234504053248182638842229937]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-62"}, .name = "testNP-62", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [202302642131276625801490600770378263466], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [324271088399173558429504239361653168070]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-63"}, .name = "testNP-63", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [38004132277364152320107829778209775275], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [202302642131276625801490600770378263466]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-64"}, .name = "testNP-64", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [151905872123989268088239396191728799111], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [38004132277364152320107829778209775275]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-65"}, .name = "testNP-65", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [43808627284850999836440511680257005060], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [151905872123989268088239396191728799111]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-66"}, .name = "testNP-66", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [83361076002547028554621603357616584295], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [43808627284850999836440511680257005060]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-67"}, .name = "testNP-67", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [225258361982660033586696895651733671374], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [83361076002547028554621603357616584295]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-68"}, .name = "testNP-68", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [292709995959071864261371376180066479171], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [225258361982660033586696895651733671374]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-69"}, .name = "testNP-69", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [271035497562104608376238663622262080518], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [292709995959071864261371376180066479171]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-70"}, .name = "testNP-70", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [281202759973643394147461313037128163534], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [271035497562104608376238663622262080518]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-71"}, .name = "testNP-71", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [112299973715776994013371347923002599379], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [281202759973643394147461313037128163534]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-72"}, .name = "testNP-72", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [207062112071959762746330428969528801157], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [112299973715776994013371347923002599379]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-73"}, .name = "testNP-73", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [216079185330943871065821579875144935337], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [207062112071959762746330428969528801157]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-74"}, .name = "testNP-74", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [70580325334576926992948232860341253201], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [216079185330943871065821579875144935337]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-75"}, .name = "testNP-75", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [241668530693184253737879454563077500169], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [70580325334576926992948232860341253201]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-76"}, .name = "testNP-76", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [323906248563065033049990240949028664315], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [241668530693184253737879454563077500169]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-77"}, .name = "testNP-77", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [35184666245455068155766600872485278590], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [323906248563065033049990240949028664315]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-78"}, .name = "testNP-78", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [156721006097654111554548022160434781123], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [35184666245455068155766600872485278590]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-79"}, .name = "testNP-79", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [101518538893632532406007965810177493869], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [156721006097654111554548022160434781123]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-80"}, .name = "testNP-80", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [136744418091426290396479365750407022099], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [101518538893632532406007965810177493869]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-81"}, .name = "testNP-81", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [198898627122014703402066283836612161345], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [136744418091426290396479365750407022099]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-82"}, .name = "testNP-82", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [180337676044367460640997715204112802096], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [198898627122014703402066283836612161345]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-83"}, .name = "testNP-83", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [252838272729494038051191256155543415249], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [180337676044367460640997715204112802096]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-84"}, .name = "testNP-84", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [22861342794206303209929185441815622320], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [252838272729494038051191256155543415249]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-85"}, .name = "testNP-85", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [268407614332431288519984878690122756601], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [22861342794206303209929185441815622320]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-86"}, .name = "testNP-86", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [243420142607871313129022015229202740915], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [268407614332431288519984878690122756601]}: +1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-55", .policy = k8spolicy.UID{.uid = "testNP-55"}, .node = "testNode-5"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-56", .policy = k8spolicy.UID{.uid = "testNP-56"}, .node = "testNode-5"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-57", .policy = k8spolicy.UID{.uid = "testNP-57"}, .node = "testNode-5"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-58", .policy = k8spolicy.UID{.uid = "testNP-58"}, .node = "testNode-5"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-59", .policy = k8spolicy.UID{.uid = "testNP-59"}, .node = "testNode-5"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-60", .policy = k8spolicy.UID{.uid = "testNP-60"}, .node = "testNode-6"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-61", .policy = k8spolicy.UID{.uid = "testNP-61"}, .node = "testNode-6"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-62", .policy = k8spolicy.UID{.uid = "testNP-62"}, .node = "testNode-6"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-63", .policy = k8spolicy.UID{.uid = "testNP-63"}, .node = "testNode-6"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-64", .policy = k8spolicy.UID{.uid = "testNP-64"}, .node = "testNode-6"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-65", .policy = k8spolicy.UID{.uid = "testNP-65"}, .node = "testNode-6"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-66", .policy = k8spolicy.UID{.uid = "testNP-66"}, .node = "testNode-6"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-67", .policy = k8spolicy.UID{.uid = "testNP-67"}, .node = "testNode-6"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-68", .policy = k8spolicy.UID{.uid = "testNP-68"}, .node = "testNode-6"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-69", .policy = k8spolicy.UID{.uid = "testNP-69"}, .node = "testNode-6"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-70", .policy = k8spolicy.UID{.uid = "testNP-70"}, .node = "testNode-7"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-71", .policy = k8spolicy.UID{.uid = "testNP-71"}, .node = "testNode-7"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-72", .policy = k8spolicy.UID{.uid = "testNP-72"}, .node = "testNode-7"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-73", .policy = k8spolicy.UID{.uid = "testNP-73"}, .node = "testNode-7"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-74", .policy = k8spolicy.UID{.uid = "testNP-74"}, .node = "testNode-7"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-75", .policy = k8spolicy.UID{.uid = "testNP-75"}, .node = "testNode-7"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-76", .policy = k8spolicy.UID{.uid = "testNP-76"}, .node = "testNode-7"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-77", .policy = k8spolicy.UID{.uid = "testNP-77"}, .node = "testNode-7"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-78", .policy = k8spolicy.UID{.uid = "testNP-78"}, .node = "testNode-7"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-79", .policy = k8spolicy.UID{.uid = "testNP-79"}, .node = "testNode-7"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-80", .policy = k8spolicy.UID{.uid = "testNP-80"}, .node = "testNode-8"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-81", .policy = k8spolicy.UID{.uid = "testNP-81"}, .node = "testNode-8"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-82", .policy = k8spolicy.UID{.uid = "testNP-82"}, .node = "testNode-8"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-83", .policy = k8spolicy.UID{.uid = "testNP-83"}, .node = "testNode-8"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-84", .policy = k8spolicy.UID{.uid = "testNP-84"}, .node = "testNode-8"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-85", .policy = k8spolicy.UID{.uid = "testNP-85"}, .node = "testNode-8"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-86", .policy = k8spolicy.UID{.uid = "testNP-86"}, .node = "testNode-8"}: +1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 22210396090670704327531025234772154740, .address = "10.10.9.0"}: +1
AddressGroupAddress{.addressGroup = 37094232250629904696615345556549125086, .address = "10.10.11.6"}: +1
AddressGroupAddress{.addressGroup = 40226556570344230591673114971473823913, .address = "10.10.10.8"}: +1
AddressGroupAddress{.addressGroup = 48355655105218248400214367788657140487, .address = "10.10.10.5"}: +1
AddressGroupAddress{.addressGroup = 60386306182705873281447315111536782089, .address = "10.10.9.3"}: +1
AddressGroupAddress{.addressGroup = 64948609301626119424448148183788342866, .address = "10.10.9.2"}: +1
AddressGroupAddress{.addressGroup = 71503701122299566550815862563487196482, .address = "10.10.9.7"}: +1
AddressGroupAddress{.addressGroup = 76505436127682966627559488275809969935, .address = "10.10.10.7"}: +1
AddressGroupAddress{.addressGroup = 83842439654690705305462600332173591641, .address = "10.10.11.3"}: +1
AddressGroupAddress{.addressGroup = 87587464778203803044727175222927015864, .address = "10.10.11.1"}: +1
AddressGroupAddress{.addressGroup = 97163317757406971048806639485267087470, .address = "10.10.10.1"}: +1
AddressGroupAddress{.addressGroup = 103978118845097611771361772982098164468, .address = "10.10.10.9"}: +1
AddressGroupAddress{.addressGroup = 106849196439510839689295162975966348245, .address = "10.10.10.4"}: +1
AddressGroupAddress{.addressGroup = 110489607692344612611469296967415356937, .address = "10.10.11.2"}: +1
AddressGroupAddress{.addressGroup = 124407188772037775036834619774522604758, .address = "10.10.11.8"}: +1
AddressGroupAddress{.addressGroup = 136531156628800201268540616835061467659, .address = "10.10.9.5"}: +1
AddressGroupAddress{.addressGroup = 137836733821018051449608580289007076441, .address = "10.10.10.6"}: +1
AddressGroupAddress{.addressGroup = 146555467124840070340015562061588014158, .address = "10.10.9.1"}: +1
AddressGroupAddress{.addressGroup = 156821087437095192774093726492480999556, .address = "10.10.11.0"}: +1
AddressGroupAddress{.addressGroup = 170265535328858483244073312225293336437, .address = "10.10.11.4"}: +1
AddressGroupAddress{.addressGroup = 180256761869604097147275307970390218967, .address = "10.10.9.8"}: +1
AddressGroupAddress{.addressGroup = 185092290797436099830614230358285476905, .address = "10.10.10.2"}: +1
AddressGroupAddress{.addressGroup = 187899322683655706681824521420354734939, .address = "10.10.9.6"}: +1
AddressGroupAddress{.addressGroup = 211806542268647232324164049752470641112, .address = "10.10.11.9"}: +1
AddressGroupAddress{.addressGroup = 213411722502795708203597923932530478918, .address = "10.10.10.3"}: +1
AddressGroupAddress{.addressGroup = 223955728476299927111283106740832335974, .address = "10.10.8.8"}: +1
AddressGroupAddress{.addressGroup = 243953198337152849466731736236542213108, .address = "10.10.8.9"}: +1
AddressGroupAddress{.addressGroup = 260358766361233030153346401094923757693, .address = "10.10.10.0"}: +1
AddressGroupAddress{.addressGroup = 286128460058581977126156559513193502164, .address = "10.10.9.9"}: +1
AddressGroupAddress{.addressGroup = 315405270023021899541948823901841373403, .address = "10.10.11.7"}: +1
AddressGroupAddress{.addressGroup = 323858756633658217275083867718577893925, .address = "10.10.9.4"}: +1
AddressGroupAddress{.addressGroup = 335155796345710149772225273215530780623, .address = "10.10.11.5"}: +1
AddressGroupDescr:
AddressGroupDescr{.name = "10b59112-a57e-5d49-968b-9f862c18d974", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-90]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-90")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "1be816da-1b7c-51a7-b348-474c6219c3de", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-116]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-116")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "1e435a5d-47b4-5c5a-bee8-24096b4dc8a9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-108]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-108")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "2460f5dd-bde1-5ee0-9f92-4e516f71e307", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-105]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-105")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "2d6dfac2-8829-539a-b265-c63a13346b09", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-93]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-93")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "30dca5ab-9fda-5d4c-8615-48e88970ce52", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-92]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-92")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "35cb1ca6-4dc8-5e2d-97fa-2f3a7bc9a542", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-97]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-97")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "398e6939-9175-5476-888b-77fd6b52270f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-107]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-107")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "3f13776d-7893-50d4-8996-a85dfef34459", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-113]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-113")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "41e4bb6c-03e1-5ba9-a6f3-2d070417bfb8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-111]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-111")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "4918f96c-ce60-5e9a-a85d-2dfff6c6106e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-101]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-101")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "4e39750f-48ff-5a5e-adb8-a9a10a577af4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-109]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-109")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "5062681d-34e1-5c2a-8279-f82765d643d5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-104]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-104")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "531f863f-1131-55d0-9c8e-2446ef21de09", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-112]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-112")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "5d97f3f8-cfb6-5a84-9c49-c43cb45fbcd6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-118]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-118")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "66b6f1bc-f1f0-50be-a451-a991f5bf4a0b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-95]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-95")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "67b263a9-d60a-56b3-9aa8-7c0af1d64459", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-106]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-106")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "6e418e67-6108-51aa-9efd-15ab697d244e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-91]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-91")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "75faa48f-e4d8-507d-a68b-66e729b79084", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-110]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-110")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "8017f305-3d4a-55a4-bbb0-a99fc77d7f75", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-114]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-114")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "879c3085-735c-5bf2-bc12-c6460ffd58d7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-98]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-98")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "8b3f7a81-161a-51ff-8401-2d1875f5e429", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-102]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-102")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "8d5c17dc-85b5-55db-ba20-2565a735cb5b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-96]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-96")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "9f5874ca-a706-5d9a-8b0a-27075810d9d8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-119]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-119")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "a08d9a49-92c3-5076-8b73-15bfeafb0f46", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-103]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-103")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "a87c4deb-1fb9-5126-b493-cda9d5907866", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-88]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-88")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "b787ad4d-f2ec-58ae-8a53-eb5575093bf4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-89]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-89")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "c3df4641-d2bb-5aa9-930e-51d73740a87d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-100]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-100")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "d7425640-2e50-5a48-b84f-318532f355d4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-99]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-99")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "ed48d86d-2640-5a21-9f41-3f5ddedbb8db", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-117]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-117")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "f3a4ed7e-bf9b-51b2-a75d-becfe6013225", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-94]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-94")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "fc24a88e-5356-50e7-bb4d-a5394fcf47cf", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-115]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-115")], .matchExpressions = []}}}}: +1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 22210396090670704327531025234772154740, .node = "testNode-8"}: +1
AddressGroupSpan{.addressGroup = 37094232250629904696615345556549125086, .node = "testNode-11"}: +1
AddressGroupSpan{.addressGroup = 40226556570344230591673114971473823913, .node = "testNode-10"}: +1
AddressGroupSpan{.addressGroup = 48355655105218248400214367788657140487, .node = "testNode-10"}: +1
AddressGroupSpan{.addressGroup = 60386306182705873281447315111536782089, .node = "testNode-9"}: +1
AddressGroupSpan{.addressGroup = 64948609301626119424448148183788342866, .node = "testNode-9"}: +1
AddressGroupSpan{.addressGroup = 71503701122299566550815862563487196482, .node = "testNode-9"}: +1
AddressGroupSpan{.addressGroup = 76505436127682966627559488275809969935, .node = "testNode-10"}: +1
AddressGroupSpan{.addressGroup = 83842439654690705305462600332173591641, .node = "testNode-11"}: +1
AddressGroupSpan{.addressGroup = 87587464778203803044727175222927015864, .node = "testNode-11"}: +1
AddressGroupSpan{.addressGroup = 97163317757406971048806639485267087470, .node = "testNode-10"}: +1
AddressGroupSpan{.addressGroup = 103978118845097611771361772982098164468, .node = "testNode-10"}: +1
AddressGroupSpan{.addressGroup = 106849196439510839689295162975966348245, .node = "testNode-10"}: +1
AddressGroupSpan{.addressGroup = 110489607692344612611469296967415356937, .node = "testNode-11"}: +1
AddressGroupSpan{.addressGroup = 124407188772037775036834619774522604758, .node = "testNode-11"}: +1
AddressGroupSpan{.addressGroup = 136531156628800201268540616835061467659, .node = "testNode-9"}: +1
AddressGroupSpan{.addressGroup = 137836733821018051449608580289007076441, .node = "testNode-10"}: +1
AddressGroupSpan{.addressGroup = 146555467124840070340015562061588014158, .node = "testNode-9"}: +1
AddressGroupSpan{.addressGroup = 156821087437095192774093726492480999556, .node = "testNode-10"}: +1
AddressGroupSpan{.addressGroup = 170265535328858483244073312225293336437, .node = "testNode-11"}: +1
AddressGroupSpan{.addressGroup = 180256761869604097147275307970390218967, .node = "testNode-9"}: +1
AddressGroupSpan{.addressGroup = 185092290797436099830614230358285476905, .node = "testNode-10"}: +1
AddressGroupSpan{.addressGroup = 187899322683655706681824521420354734939, .node = "testNode-9"}: +1
AddressGroupSpan{.addressGroup = 211806542268647232324164049752470641112, .node = "testNode-11"}: +1
AddressGroupSpan{.addressGroup = 213411722502795708203597923932530478918, .node = "testNode-10"}: +1
AddressGroupSpan{.addressGroup = 223955728476299927111283106740832335974, .node = "testNode-8"}: +1
AddressGroupSpan{.addressGroup = 243953198337152849466731736236542213108, .node = "testNode-8"}: +1
AddressGroupSpan{.addressGroup = 260358766361233030153346401094923757693, .node = "testNode-9"}: +1
AddressGroupSpan{.addressGroup = 286128460058581977126156559513193502164, .node = "testNode-9"}: +1
AddressGroupSpan{.addressGroup = 315405270023021899541948823901841373403, .node = "testNode-11"}: +1
AddressGroupSpan{.addressGroup = 323858756633658217275083867718577893925, .node = "testNode-9"}: +1
AddressGroupSpan{.addressGroup = 335155796345710149772225273215530780623, .node = "testNode-11"}: +1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "10b59112-a57e-5d49-968b-9f862c18d974", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-90]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-90")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "1be816da-1b7c-51a7-b348-474c6219c3de", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-116]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-116")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "1e435a5d-47b4-5c5a-bee8-24096b4dc8a9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-108]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-108")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "2460f5dd-bde1-5ee0-9f92-4e516f71e307", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-105]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-105")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "2d6dfac2-8829-539a-b265-c63a13346b09", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-93]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-93")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "30dca5ab-9fda-5d4c-8615-48e88970ce52", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-92]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-92")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "35cb1ca6-4dc8-5e2d-97fa-2f3a7bc9a542", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-97]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-97")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "398e6939-9175-5476-888b-77fd6b52270f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-107]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-107")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "3f13776d-7893-50d4-8996-a85dfef34459", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-113]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-113")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "41e4bb6c-03e1-5ba9-a6f3-2d070417bfb8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-111]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-111")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "4918f96c-ce60-5e9a-a85d-2dfff6c6106e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-101]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-101")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "4e39750f-48ff-5a5e-adb8-a9a10a577af4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-109]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-109")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "5062681d-34e1-5c2a-8279-f82765d643d5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-104]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-104")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "531f863f-1131-55d0-9c8e-2446ef21de09", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-112]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-112")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "5d97f3f8-cfb6-5a84-9c49-c43cb45fbcd6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-118]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-118")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "66b6f1bc-f1f0-50be-a451-a991f5bf4a0b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-95]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-95")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "67b263a9-d60a-56b3-9aa8-7c0af1d64459", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-106]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-106")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "6e418e67-6108-51aa-9efd-15ab697d244e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-91]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-91")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "75faa48f-e4d8-507d-a68b-66e729b79084", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-110]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-110")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "8017f305-3d4a-55a4-bbb0-a99fc77d7f75", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-114]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-114")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "879c3085-735c-5bf2-bc12-c6460ffd58d7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-98]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-98")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "8b3f7a81-161a-51ff-8401-2d1875f5e429", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-102]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-102")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "8d5c17dc-85b5-55db-ba20-2565a735cb5b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-96]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-96")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "a08d9a49-92c3-5076-8b73-15bfeafb0f46", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-103]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-103")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "a87c4deb-1fb9-5126-b493-cda9d5907866", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-88]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-88")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "b72103a0-bf2c-5823-b0f8-5ba0e64b36b3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-87]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-87")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "b787ad4d-f2ec-58ae-8a53-eb5575093bf4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-89]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-89")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "c3df4641-d2bb-5aa9-930e-51d73740a87d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-100]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-100")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "d7425640-2e50-5a48-b84f-318532f355d4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-99]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-99")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "ed48d86d-2640-5a21-9f41-3f5ddedbb8db", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-117]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-117")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "f3a4ed7e-bf9b-51b2-a75d-becfe6013225", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-94]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-94")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "fc24a88e-5356-50e7-bb4d-a5394fcf47cf", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-115]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-115")], .matchExpressions = []}}}}: +1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 22210396090670704327531025234772154740, .node = "testNode-9", .pods = [k8spolicy.PodReference{.name = "testPod-90", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 37094232250629904696615345556549125086, .node = "testNode-11", .pods = [k8spolicy.PodReference{.name = "testPod-116", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 40226556570344230591673114971473823913, .node = "testNode-10", .pods = [k8spolicy.PodReference{.name = "testPod-108", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 48355655105218248400214367788657140487, .node = "testNode-10", .pods = [k8spolicy.PodReference{.name = "testPod-105", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 60386306182705873281447315111536782089, .node = "testNode-9", .pods = [k8spolicy.PodReference{.name = "testPod-93", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 64948609301626119424448148183788342866, .node = "testNode-9", .pods = [k8spolicy.PodReference{.name = "testPod-92", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 71503701122299566550815862563487196482, .node = "testNode-9", .pods = [k8spolicy.PodReference{.name = "testPod-97", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 76505436127682966627559488275809969935, .node = "testNode-10", .pods = [k8spolicy.PodReference{.name = "testPod-107", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 83842439654690705305462600332173591641, .node = "testNode-11", .pods = [k8spolicy.PodReference{.name = "testPod-113", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 87587464778203803044727175222927015864, .node = "testNode-11", .pods = [k8spolicy.PodReference{.name = "testPod-111", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 97163317757406971048806639485267087470, .node = "testNode-10", .pods = [k8spolicy.PodReference{.name = "testPod-101", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 103978118845097611771361772982098164468, .node = "testNode-10", .pods = [k8spolicy.PodReference{.name = "testPod-109", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 106849196439510839689295162975966348245, .node = "testNode-10", .pods = [k8spolicy.PodReference{.name = "testPod-104", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 110489607692344612611469296967415356937, .node = "testNode-11", .pods = [k8spolicy.PodReference{.name = "testPod-112", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 124407188772037775036834619774522604758, .node = "testNode-11", .pods = [k8spolicy.PodReference{.name = "testPod-118", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 136531156628800201268540616835061467659, .node = "testNode-9", .pods = [k8spolicy.PodReference{.name = "testPod-95", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 137836733821018051449608580289007076441, .node = "testNode-10", .pods = [k8spolicy.PodReference{.name = "testPod-106", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 146555467124840070340015562061588014158, .node = "testNode-9", .pods = [k8spolicy.PodReference{.name = "testPod-91", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 156821087437095192774093726492480999556, .node = "testNode-11", .pods = [k8spolicy.PodReference{.name = "testPod-110", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 170265535328858483244073312225293336437, .node = "testNode-11", .pods = [k8spolicy.PodReference{.name = "testPod-114", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 180256761869604097147275307970390218967, .node = "testNode-9", .pods = [k8spolicy.PodReference{.name = "testPod-98", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 185092290797436099830614230358285476905, .node = "testNode-10", .pods = [k8spolicy.PodReference{.name = "testPod-102", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 187899322683655706681824521420354734939, .node = "testNode-9", .pods = [k8spolicy.PodReference{.name = "testPod-96", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 213411722502795708203597923932530478918, .node = "testNode-10", .pods = [k8spolicy.PodReference{.name = "testPod-103", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 223955728476299927111283106740832335974, .node = "testNode-8", .pods = [k8spolicy.PodReference{.name = "testPod-88", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 243420142607871313129022015229202740915, .node = "testNode-8", .pods = [k8spolicy.PodReference{.name = "testPod-87", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 243953198337152849466731736236542213108, .node = "testNode-8", .pods = [k8spolicy.PodReference{.name = "testPod-89", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 260358766361233030153346401094923757693, .node = "testNode-10", .pods = [k8spolicy.PodReference{.name = "testPod-100", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 286128460058581977126156559513193502164, .node = "testNode-9", .pods = [k8spolicy.PodReference{.name = "testPod-99", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 315405270023021899541948823901841373403, .node = "testNode-11", .pods = [k8spolicy.PodReference{.name = "testPod-117", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 323858756633658217275083867718577893925, .node = "testNode-9", .pods = [k8spolicy.PodReference{.name = "testPod-94", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 335155796345710149772225273215530780623, .node = "testNode-11", .pods = [k8spolicy.PodReference{.name = "testPod-115", .namespace = "testNamespace"}]}: +1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 22210396090670704327531025234772154740, .span = "testNode-9"}: +1
AppliedToGroupSpan{.appliedToGroup = 37094232250629904696615345556549125086, .span = "testNode-11"}: +1
AppliedToGroupSpan{.appliedToGroup = 40226556570344230591673114971473823913, .span = "testNode-10"}: +1
AppliedToGroupSpan{.appliedToGroup = 48355655105218248400214367788657140487, .span = "testNode-10"}: +1
AppliedToGroupSpan{.appliedToGroup = 60386306182705873281447315111536782089, .span = "testNode-9"}: +1
AppliedToGroupSpan{.appliedToGroup = 64948609301626119424448148183788342866, .span = "testNode-9"}: +1
AppliedToGroupSpan{.appliedToGroup = 71503701122299566550815862563487196482, .span = "testNode-9"}: +1
AppliedToGroupSpan{.appliedToGroup = 76505436127682966627559488275809969935, .span = "testNode-10"}: +1
AppliedToGroupSpan{.appliedToGroup = 83842439654690705305462600332173591641, .span = "testNode-11"}: +1
AppliedToGroupSpan{.appliedToGroup = 87587464778203803044727175222927015864, .span = "testNode-11"}: +1
AppliedToGroupSpan{.appliedToGroup = 97163317757406971048806639485267087470, .span = "testNode-10"}: +1
AppliedToGroupSpan{.appliedToGroup = 103978118845097611771361772982098164468, .span = "testNode-10"}: +1
AppliedToGroupSpan{.appliedToGroup = 106849196439510839689295162975966348245, .span = "testNode-10"}: +1
AppliedToGroupSpan{.appliedToGroup = 110489607692344612611469296967415356937, .span = "testNode-11"}: +1
AppliedToGroupSpan{.appliedToGroup = 124407188772037775036834619774522604758, .span = "testNode-11"}: +1
AppliedToGroupSpan{.appliedToGroup = 136531156628800201268540616835061467659, .span = "testNode-9"}: +1
AppliedToGroupSpan{.appliedToGroup = 137836733821018051449608580289007076441, .span = "testNode-10"}: +1
AppliedToGroupSpan{.appliedToGroup = 146555467124840070340015562061588014158, .span = "testNode-9"}: +1
AppliedToGroupSpan{.appliedToGroup = 156821087437095192774093726492480999556, .span = "testNode-11"}: +1
AppliedToGroupSpan{.appliedToGroup = 170265535328858483244073312225293336437, .span = "testNode-11"}: +1
AppliedToGroupSpan{.appliedToGroup = 180256761869604097147275307970390218967, .span = "testNode-9"}: +1
AppliedToGroupSpan{.appliedToGroup = 185092290797436099830614230358285476905, .span = "testNode-10"}: +1
AppliedToGroupSpan{.appliedToGroup = 187899322683655706681824521420354734939, .span = "testNode-9"}: +1
AppliedToGroupSpan{.appliedToGroup = 213411722502795708203597923932530478918, .span = "testNode-10"}: +1
AppliedToGroupSpan{.appliedToGroup = 223955728476299927111283106740832335974, .span = "testNode-8"}: +1
AppliedToGroupSpan{.appliedToGroup = 243420142607871313129022015229202740915, .span = "testNode-8"}: +1
AppliedToGroupSpan{.appliedToGroup = 243953198337152849466731736236542213108, .span = "testNode-8"}: +1
AppliedToGroupSpan{.appliedToGroup = 260358766361233030153346401094923757693, .span = "testNode-10"}: +1
AppliedToGroupSpan{.appliedToGroup = 286128460058581977126156559513193502164, .span = "testNode-9"}: +1
AppliedToGroupSpan{.appliedToGroup = 315405270023021899541948823901841373403, .span = "testNode-11"}: +1
AppliedToGroupSpan{.appliedToGroup = 323858756633658217275083867718577893925, .span = "testNode-9"}: +1
AppliedToGroupSpan{.appliedToGroup = 335155796345710149772225273215530780623, .span = "testNode-11"}: +1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-100"}, .name = "testNP-100", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [97163317757406971048806639485267087470], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [260358766361233030153346401094923757693]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-101"}, .name = "testNP-101", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [185092290797436099830614230358285476905], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [97163317757406971048806639485267087470]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-102"}, .name = "testNP-102", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [213411722502795708203597923932530478918], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [185092290797436099830614230358285476905]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-103"}, .name = "testNP-103", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [106849196439510839689295162975966348245], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [213411722502795708203597923932530478918]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-104"}, .name = "testNP-104", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [48355655105218248400214367788657140487], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [106849196439510839689295162975966348245]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-105"}, .name = "testNP-105", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [137836733821018051449608580289007076441], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [48355655105218248400214367788657140487]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-106"}, .name = "testNP-106", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [76505436127682966627559488275809969935], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [137836733821018051449608580289007076441]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-107"}, .name = "testNP-107", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [40226556570344230591673114971473823913], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [76505436127682966627559488275809969935]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-108"}, .name = "testNP-108", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [103978118845097611771361772982098164468], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [40226556570344230591673114971473823913]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-109"}, .name = "testNP-109", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [156821087437095192774093726492480999556], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [103978118845097611771361772982098164468]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-110"}, .name = "testNP-110", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [87587464778203803044727175222927015864], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [156821087437095192774093726492480999556]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-111"}, .name = "testNP-111", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [110489607692344612611469296967415356937], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [87587464778203803044727175222927015864]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-112"}, .name = "testNP-112", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [83842439654690705305462600332173591641], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [110489607692344612611469296967415356937]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-113"}, .name = "testNP-113", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [170265535328858483244073312225293336437], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [83842439654690705305462600332173591641]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-114"}, .name = "testNP-114", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [335155796345710149772225273215530780623], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [170265535328858483244073312225293336437]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-115"}, .name = "testNP-115", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [37094232250629904696615345556549125086], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [335155796345710149772225273215530780623]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-116"}, .name = "testNP-116", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [315405270023021899541948823901841373403], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [37094232250629904696615345556549125086]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-117"}, .name = "testNP-117", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [124407188772037775036834619774522604758], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [315405270023021899541948823901841373403]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-118"}, .name = "testNP-118", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [211806542268647232324164049752470641112], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [124407188772037775036834619774522604758]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-87"}, .name = "testNP-87", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [223955728476299927111283106740832335974], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [243420142607871313129022015229202740915]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-88"}, .name = "testNP-88", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [243953198337152849466731736236542213108], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [223955728476299927111283106740832335974]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-89"}, .name = "testNP-89", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [22210396090670704327531025234772154740], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [243953198337152849466731736236542213108]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-90"}, .name = "testNP-90", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [146555467124840070340015562061588014158], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [22210396090670704327531025234772154740]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-91"}, .name = "testNP-91", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [64948609301626119424448148183788342866], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [146555467124840070340015562061588014158]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-92"}, .name = "testNP-92", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [60386306182705873281447315111536782089], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [64948609301626119424448148183788342866]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-93"}, .name = "testNP-93", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [323858756633658217275083867718577893925], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [60386306182705873281447315111536782089]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-94"}, .name = "testNP-94", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [136531156628800201268540616835061467659], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [323858756633658217275083867718577893925]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-95"}, .name = "testNP-95", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [187899322683655706681824521420354734939], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [136531156628800201268540616835061467659]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-96"}, .name = "testNP-96", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [71503701122299566550815862563487196482], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [187899322683655706681824521420354734939]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-97"}, .name = "testNP-97", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [180256761869604097147275307970390218967], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [71503701122299566550815862563487196482]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-98"}, .name = "testNP-98", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [286128460058581977126156559513193502164], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [180256761869604097147275307970390218967]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-99"}, .name = "testNP-99", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [260358766361233030153346401094923757693], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [286128460058581977126156559513193502164]}: +1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-100", .policy = k8spolicy.UID{.uid = "testNP-100"}, .node = "testNode-10"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-101", .policy = k8spolicy.UID{.uid = "testNP-101"}, .node = "testNode-10"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-102", .policy = k8spolicy.UID{.uid = "testNP-102"}, .node = "testNode-10"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-103", .policy = k8spolicy.UID{.uid = "testNP-103"}, .node = "testNode-10"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-104", .policy = k8spolicy.UID{.uid = "testNP-104"}, .node = "testNode-10"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-105", .policy = k8spolicy.UID{.uid = "testNP-105"}, .node = "testNode-10"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-106", .policy = k8spolicy.UID{.uid = "testNP-106"}, .node = "testNode-10"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-107", .policy = k8spolicy.UID{.uid = "testNP-107"}, .node = "testNode-10"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-108", .policy = k8spolicy.UID{.uid = "testNP-108"}, .node = "testNode-10"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-109", .policy = k8spolicy.UID{.uid = "testNP-109"}, .node = "testNode-10"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-110", .policy = k8spolicy.UID{.uid = "testNP-110"}, .node = "testNode-11"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-111", .policy = k8spolicy.UID{.uid = "testNP-111"}, .node = "testNode-11"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-112", .policy = k8spolicy.UID{.uid = "testNP-112"}, .node = "testNode-11"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-113", .policy = k8spolicy.UID{.uid = "testNP-113"}, .node = "testNode-11"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-114", .policy = k8spolicy.UID{.uid = "testNP-114"}, .node = "testNode-11"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-115", .policy = k8spolicy.UID{.uid = "testNP-115"}, .node = "testNode-11"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-116", .policy = k8spolicy.UID{.uid = "testNP-116"}, .node = "testNode-11"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-117", .policy = k8spolicy.UID{.uid = "testNP-117"}, .node = "testNode-11"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-118", .policy = k8spolicy.UID{.uid = "testNP-118"}, .node = "testNode-11"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-87", .policy = k8spolicy.UID{.uid = "testNP-87"}, .node = "testNode-8"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-88", .policy = k8spolicy.UID{.uid = "testNP-88"}, .node = "testNode-8"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-89", .policy = k8spolicy.UID{.uid = "testNP-89"}, .node = "testNode-8"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-90", .policy = k8spolicy.UID{.uid = "testNP-90"}, .node = "testNode-9"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-91", .policy = k8spolicy.UID{.uid = "testNP-91"}, .node = "testNode-9"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-92", .policy = k8spolicy.UID{.uid = "testNP-92"}, .node = "testNode-9"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-93", .policy = k8spolicy.UID{.uid = "testNP-93"}, .node = "testNode-9"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-94", .policy = k8spolicy.UID{.uid = "testNP-94"}, .node = "testNode-9"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-95", .policy = k8spolicy.UID{.uid = "testNP-95"}, .node = "testNode-9"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-96", .policy = k8spolicy.UID{.uid = "testNP-96"}, .node = "testNode-9"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-97", .policy = k8spolicy.UID{.uid = "testNP-97"}, .node = "testNode-9"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-98", .policy = k8spolicy.UID{.uid = "testNP-98"}, .node = "testNode-9"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-99", .policy = k8spolicy.UID{.uid = "testNP-99"}, .node = "testNode-9"}: +1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 5174678131681871740017664947586831952, .address = "10.10.14.1"}: +1
AddressGroupAddress{.addressGroup = 23859904554043317776138937686972490692, .address = "10.10.13.2"}: +1
AddressGroupAddress{.addressGroup = 34503473083417678635513967958248208655, .address = "10.10.13.7"}: +1
AddressGroupAddress{.addressGroup = 48309711104650181870977623970954456715, .address = "10.10.13.8"}: +1
AddressGroupAddress{.addressGroup = 88306647967896663440454702563333622411, .address = "10.10.14.2"}: +1
AddressGroupAddress{.addressGroup = 88593012092994971404195594578066505753, .address = "10.10.14.6"}: +1
AddressGroupAddress{.addressGroup = 103540348370426618402557980166152264074, .address = "10.10.13.9"}: +1
AddressGroupAddress{.addressGroup = 105288662624453264750951304918564969592, .address = "10.10.14.9"}: +1
AddressGroupAddress{.addressGroup = 105541544679718557174351818626480748349, .address = "10.10.15.1"}: +1
AddressGroupAddress{.addressGroup = 109826924473310848161915484640883073288, .address = "10.10.12.6"}: +1
AddressGroupAddress{.addressGroup = 127997802756657206686749848402997922788, .address = "10.10.14.7"}: +1
AddressGroupAddress{.addressGroup = 135235726876099996338886379078866691609, .address = "10.10.12.2"}: +1
AddressGroupAddress{.addressGroup = 141855097966456625106267262973040160760, .address = "10.10.14.4"}: +1
AddressGroupAddress{.addressGroup = 152622529118381787560133857353049784362, .address = "10.10.13.3"}: +1
AddressGroupAddress{.addressGroup = 162670393145983371263408187545058521866, .address = "10.10.12.1"}: +1
AddressGroupAddress{.addressGroup = 162719744790132748984941022468429009156, .address = "10.10.12.4"}: +1
AddressGroupAddress{.addressGroup = 168119171796060862792535601563218818929, .address = "10.10.13.1"}: +1
AddressGroupAddress{.addressGroup = 171251048780850527017278303207274963999, .address = "10.10.15.0"}: +1
AddressGroupAddress{.addressGroup = 177290530696359873639164811705966787107, .address = "10.10.12.3"}: +1
AddressGroupAddress{.addressGroup = 180696582671324939437016125830931674222, .address = "10.10.12.7"}: +1
AddressGroupAddress{.addressGroup = 217009013054914692991117235578490985621, .address = "10.10.14.0"}: +1
AddressGroupAddress{.addressGroup = 219182765788762484199904846940068515825, .address = "10.10.13.5"}: +1
AddressGroupAddress{.addressGroup = 232790950656709164395444420136473141434, .address = "10.10.13.0"}: +1
AddressGroupAddress{.addressGroup = 242822805854533997069140197230193475072, .address = "10.10.13.6"}: +1
AddressGroupAddress{.addressGroup = 263582411874843359805262917493823858270, .address = "10.10.13.4"}: +1
AddressGroupAddress{.addressGroup = 266160596277303920306906385582642592399, .address = "10.10.12.5"}: +1
AddressGroupAddress{.addressGroup = 273498342722146853995965744453610466834, .address = "10.10.12.8"}: +1
AddressGroupAddress{.addressGroup = 286248117606648181817375295335297863313, .address = "10.10.14.8"}: +1
AddressGroupAddress{.addressGroup = 294769527764678373131618238457085121326, .address = "10.10.14.3"}: +1
AddressGroupAddress{.addressGroup = 318107101283880568845359000382843925186, .address = "10.10.12.9"}: +1
AddressGroupAddress{.addressGroup = 330962894326518286540943393408930974864, .address = "10.10.12.0"}: +1
AddressGroupAddress{.addressGroup = 335879917074264638271285719334370053948, .address = "10.10.14.5"}: +1
AddressGroupDescr:
AddressGroupDescr{.name = "03e49b54-6729-5e12-8d61-f782ee539650", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-141]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-141")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "11f3401e-7ad6-5382-8c45-71974428e3c4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-132]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-132")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "19f52090-285c-5684-861f-5e37131d390f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-137]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-137")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "24581ca6-ed7c-5737-94ef-e306779dae8b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-138]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-138")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "426f3de4-0c3d-56af-b8de-ee0d5a35ca8b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-142]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-142")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "42a664bb-7479-5e6c-bc90-d47696558019", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-146]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-146")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "4de5254f-140b-5efb-8f31-8c35be80198a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-139]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-139")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "4f35dbdb-51a8-526d-8499-46af611d9c78", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-149]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-149")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "4f668fe7-976a-55cd-8e8f-464d4ed8373d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-151]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-151")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "529fe570-ec28-5fac-acdd-44b8870d6108", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-126]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-126")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "604b7ae8-c85d-5292-8a2e-da3fd3cdcbe4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-147]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-147")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "65bd741e-bf4a-57bd-b810-965b3fb7e619", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-122]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-122")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "6ab84c4f-df5f-5774-a9ff-25cc55b46ff8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-144]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-144")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "72d207a7-a39f-5992-b79f-cd6d08bb402a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-133]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-133")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "7a612d99-6fd0-5c13-b062-6498518fb30a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-121]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-121")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "7a6aaed2-c276-574a-b2df-601fdc3f5104", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-124]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-124")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "7e7a9320-c4cd-517f-a01e-978c0ced3771", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-131]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-131")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "80d5c095-c7ec-5cb5-8ce4-dc8bbc7de41f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-150]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-150")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "8560ea08-8412-5100-b137-dac29e35fa23", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-123]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-123")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "87f0e55c-6c51-5e85-9d7d-493146f7f46e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-127]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-127")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "a3426a67-ac84-50b5-abd6-4f86f99a1c95", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-140]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-140")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "a4e510b0-76a7-5988-8174-b0d8161e0ff1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-135]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-135")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "af21e800-ff3a-53a1-8640-448f384f20ba", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-130]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-130")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "b6adf8a6-f496-58ad-8918-5d70e040fe00", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-136]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-136")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "c64c2040-82c5-5dbb-9ce9-412bdb6f665e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-134]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-134")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "c83caa8e-9d9b-5aad-93fc-641e567a7a8f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-125]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-125")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "cdc1dd63-75b7-554c-88c5-3fcac40d6e12", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-128]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-128")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "d75961d2-c492-5966-8737-2caa0f8e4e91", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-148]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-148")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "ddc28bc8-1071-5af0-89be-79967257532e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-143]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-143")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "ef5132fe-043c-5862-aa70-bf9ed5b832c2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-129]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-129")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "f8fd2286-9b94-5d2f-a4c9-15f522768c90", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-120]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-120")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "fcb01e76-dc36-5ccd-81b4-eb8de4328f3c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-145]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-145")], .matchExpressions = []}}}}: +1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 5174678131681871740017664947586831952, .node = "testNode-14"}: +1
AddressGroupSpan{.addressGroup = 23859904554043317776138937686972490692, .node = "testNode-13"}: +1
AddressGroupSpan{.addressGroup = 34503473083417678635513967958248208655, .node = "testNode-13"}: +1
AddressGroupSpan{.addressGroup = 48309711104650181870977623970954456715, .node = "testNode-13"}: +1
AddressGroupSpan{.addressGroup = 88306647967896663440454702563333622411, .node = "testNode-14"}: +1
AddressGroupSpan{.addressGroup = 88593012092994971404195594578066505753, .node = "testNode-14"}: +1
AddressGroupSpan{.addressGroup = 103540348370426618402557980166152264074, .node = "testNode-13"}: +1
AddressGroupSpan{.addressGroup = 105288662624453264750951304918564969592, .node = "testNode-14"}: +1
AddressGroupSpan{.addressGroup = 105541544679718557174351818626480748349, .node = "testNode-15"}: +1
AddressGroupSpan{.addressGroup = 109826924473310848161915484640883073288, .node = "testNode-12"}: +1
AddressGroupSpan{.addressGroup = 127997802756657206686749848402997922788, .node = "testNode-14"}: +1
AddressGroupSpan{.addressGroup = 135235726876099996338886379078866691609, .node = "testNode-12"}: +1
AddressGroupSpan{.addressGroup = 141855097966456625106267262973040160760, .node = "testNode-14"}: +1
AddressGroupSpan{.addressGroup = 152622529118381787560133857353049784362, .node = "testNode-13"}: +1
AddressGroupSpan{.addressGroup = 162670393145983371263408187545058521866, .node = "testNode-12"}: +1
AddressGroupSpan{.addressGroup = 162719744790132748984941022468429009156, .node = "testNode-12"}: +1
AddressGroupSpan{.addressGroup = 168119171796060862792535601563218818929, .node = "testNode-13"}: +1
AddressGroupSpan{.addressGroup = 171251048780850527017278303207274963999, .node = "testNode-14"}: +1
AddressGroupSpan{.addressGroup = 177290530696359873639164811705966787107, .node = "testNode-12"}: +1
AddressGroupSpan{.addressGroup = 180696582671324939437016125830931674222, .node = "testNode-12"}: +1
AddressGroupSpan{.addressGroup = 217009013054914692991117235578490985621, .node = "testNode-13"}: +1
AddressGroupSpan{.addressGroup = 219182765788762484199904846940068515825, .node = "testNode-13"}: +1
AddressGroupSpan{.addressGroup = 232790950656709164395444420136473141434, .node = "testNode-12"}: +1
AddressGroupSpan{.addressGroup = 242822805854533997069140197230193475072, .node = "testNode-13"}: +1
AddressGroupSpan{.addressGroup = 263582411874843359805262917493823858270, .node = "testNode-13"}: +1
AddressGroupSpan{.addressGroup = 266160596277303920306906385582642592399, .node = "testNode-12"}: +1
AddressGroupSpan{.addressGroup = 273498342722146853995965744453610466834, .node = "testNode-12"}: +1
AddressGroupSpan{.addressGroup = 286248117606648181817375295335297863313, .node = "testNode-14"}: +1
AddressGroupSpan{.addressGroup = 294769527764678373131618238457085121326, .node = "testNode-14"}: +1
AddressGroupSpan{.addressGroup = 318107101283880568845359000382843925186, .node = "testNode-12"}: +1
AddressGroupSpan{.addressGroup = 330962894326518286540943393408930974864, .node = "testNode-11"}: +1
AddressGroupSpan{.addressGroup = 335879917074264638271285719334370053948, .node = "testNode-14"}: +1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "03e49b54-6729-5e12-8d61-f782ee539650", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-141]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-141")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "11f3401e-7ad6-5382-8c45-71974428e3c4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-132]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-132")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "19f52090-285c-5684-861f-5e37131d390f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-137]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-137")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "24581ca6-ed7c-5737-94ef-e306779dae8b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-138]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-138")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "426f3de4-0c3d-56af-b8de-ee0d5a35ca8b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-142]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-142")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "42a664bb-7479-5e6c-bc90-d47696558019", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-146]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-146")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "4de5254f-140b-5efb-8f31-8c35be80198a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-139]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-139")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "4f35dbdb-51a8-526d-8499-46af611d9c78", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-149]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-149")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "529fe570-ec28-5fac-acdd-44b8870d6108", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-126]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-126")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "604b7ae8-c85d-5292-8a2e-da3fd3cdcbe4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-147]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-147")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "65bd741e-bf4a-57bd-b810-965b3fb7e619", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-122]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-122")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "6ab84c4f-df5f-5774-a9ff-25cc55b46ff8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-144]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-144")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "72d207a7-a39f-5992-b79f-cd6d08bb402a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-133]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-133")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "7a612d99-6fd0-5c13-b062-6498518fb30a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-121]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-121")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "7a6aaed2-c276-574a-b2df-601fdc3f5104", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-124]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-124")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "7e7a9320-c4cd-517f-a01e-978c0ced3771", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-131]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-131")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "80d5c095-c7ec-5cb5-8ce4-dc8bbc7de41f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-150]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-150")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "8560ea08-8412-5100-b137-dac29e35fa23", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-123]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-123")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "87f0e55c-6c51-5e85-9d7d-493146f7f46e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-127]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-127")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "9f5874ca-a706-5d9a-8b0a-27075810d9d8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-119]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-119")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "a3426a67-ac84-50b5-abd6-4f86f99a1c95", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-140]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-140")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "a4e510b0-76a7-5988-8174-b0d8161e0ff1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-135]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-135")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "af21e800-ff3a-53a1-8640-448f384f20ba", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-130]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-130")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "b6adf8a6-f496-58ad-8918-5d70e040fe00", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-136]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-136")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "c64c2040-82c5-5dbb-9ce9-412bdb6f665e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-134]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-134")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "c83caa8e-9d9b-5aad-93fc-641e567a7a8f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-125]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-125")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "cdc1dd63-75b7-554c-88c5-3fcac40d6e12", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-128]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-128")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "d75961d2-c492-5966-8737-2caa0f8e4e91", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-148]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-148")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "ddc28bc8-1071-5af0-89be-79967257532e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-143]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-143")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "ef5132fe-043c-5862-aa70-bf9ed5b832c2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-129]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-129")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "f8fd2286-9b94-5d2f-a4c9-15f522768c90", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-120]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-120")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "fcb01e76-dc36-5ccd-81b4-eb8de4328f3c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-145]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-145")], .matchExpressions = []}}}}: +1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 5174678131681871740017664947586831952, .node = "testNode-14", .pods = [k8spolicy.PodReference{.name = "testPod-141", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 23859904554043317776138937686972490692, .node = "testNode-13", .pods = [k8spolicy.PodReference{.name = "testPod-132", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 34503473083417678635513967958248208655, .node = "testNode-13", .pods = [k8spolicy.PodReference{.name = "testPod-137", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 48309711104650181870977623970954456715, .node = "testNode-13", .pods = [k8spolicy.PodReference{.name = "testPod-138", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 88306647967896663440454702563333622411, .node = "testNode-14", .pods = [k8spolicy.PodReference{.name = "testPod-142", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 88593012092994971404195594578066505753, .node = "testNode-14", .pods = [k8spolicy.PodReference{.name = "testPod-146", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 103540348370426618402557980166152264074, .node = "testNode-13", .pods = [k8spolicy.PodReference{.name = "testPod-139", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 105288662624453264750951304918564969592, .node = "testNode-14", .pods = [k8spolicy.PodReference{.name = "testPod-149", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 109826924473310848161915484640883073288, .node = "testNode-12", .pods = [k8spolicy.PodReference{.name = "testPod-126", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 127997802756657206686749848402997922788, .node = "testNode-14", .pods = [k8spolicy.PodReference{.name = "testPod-147", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 135235726876099996338886379078866691609, .node = "testNode-12", .pods = [k8spolicy.PodReference{.name = "testPod-122", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 141855097966456625106267262973040160760, .node = "testNode-14", .pods = [k8spolicy.PodReference{.name = "testPod-144", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 152622529118381787560133857353049784362, .node = "testNode-13", .pods = [k8spolicy.PodReference{.name = "testPod-133", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 162670393145983371263408187545058521866, .node = "testNode-12", .pods = [k8spolicy.PodReference{.name = "testPod-121", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 162719744790132748984941022468429009156, .node = "testNode-12", .pods = [k8spolicy.PodReference{.name = "testPod-124", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 168119171796060862792535601563218818929, .node = "testNode-13", .pods = [k8spolicy.PodReference{.name = "testPod-131", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 171251048780850527017278303207274963999, .node = "testNode-15", .pods = [k8spolicy.PodReference{.name = "testPod-150", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 177290530696359873639164811705966787107, .node = "testNode-12", .pods = [k8spolicy.PodReference{.name = "testPod-123", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 180696582671324939437016125830931674222, .node = "testNode-12", .pods = [k8spolicy.PodReference{.name = "testPod-127", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 211806542268647232324164049752470641112, .node = "testNode-11", .pods = [k8spolicy.PodReference{.name = "testPod-119", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 217009013054914692991117235578490985621, .node = "testNode-14", .pods = [k8spolicy.PodReference{.name = "testPod-140", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 219182765788762484199904846940068515825, .node = "testNode-13", .pods = [k8spolicy.PodReference{.name = "testPod-135", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 232790950656709164395444420136473141434, .node = "testNode-13", .pods = [k8spolicy.PodReference{.name = "testPod-130", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 242822805854533997069140197230193475072, .node = "testNode-13", .pods = [k8spolicy.PodReference{.name = "testPod-136", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 263582411874843359805262917493823858270, .node = "testNode-13", .pods = [k8spolicy.PodReference{.name = "testPod-134", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 266160596277303920306906385582642592399, .node = "testNode-12", .pods = [k8spolicy.PodReference{.name = "testPod-125", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 273498342722146853995965744453610466834, .node = "testNode-12", .pods = [k8spolicy.PodReference{.name = "testPod-128", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 286248117606648181817375295335297863313, .node = "testNode-14", .pods = [k8spolicy.PodReference{.name = "testPod-148", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 294769527764678373131618238457085121326, .node = "testNode-14", .pods = [k8spolicy.PodReference{.name = "testPod-143", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 318107101283880568845359000382843925186, .node = "testNode-12", .pods = [k8spolicy.PodReference{.name = "testPod-129", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 330962894326518286540943393408930974864, .node = "testNode-12", .pods = [k8spolicy.PodReference{.name = "testPod-120", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 335879917074264638271285719334370053948, .node = "testNode-14", .pods = [k8spolicy.PodReference{.name = "testPod-145", .namespace = "testNamespace"}]}: +1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 5174678131681871740017664947586831952, .span = "testNode-14"}: +1
AppliedToGroupSpan{.appliedToGroup = 23859904554043317776138937686972490692, .span = "testNode-13"}: +1
AppliedToGroupSpan{.appliedToGroup = 34503473083417678635513967958248208655, .span = "testNode-13"}: +1
AppliedToGroupSpan{.appliedToGroup = 48309711104650181870977623970954456715, .span = "testNode-13"}: +1
AppliedToGroupSpan{.appliedToGroup = 88306647967896663440454702563333622411, .span = "testNode-14"}: +1
AppliedToGroupSpan{.appliedToGroup = 88593012092994971404195594578066505753, .span = "testNode-14"}: +1
AppliedToGroupSpan{.appliedToGroup = 103540348370426618402557980166152264074, .span = "testNode-13"}: +1
AppliedToGroupSpan{.appliedToGroup = 105288662624453264750951304918564969592, .span = "testNode-14"}: +1
AppliedToGroupSpan{.appliedToGroup = 109826924473310848161915484640883073288, .span = "testNode-12"}: +1
AppliedToGroupSpan{.appliedToGroup = 127997802756657206686749848402997922788, .span = "testNode-14"}: +1
AppliedToGroupSpan{.appliedToGroup = 135235726876099996338886379078866691609, .span = "testNode-12"}: +1
AppliedToGroupSpan{.appliedToGroup = 141855097966456625106267262973040160760, .span = "testNode-14"}: +1
AppliedToGroupSpan{.appliedToGroup = 152622529118381787560133857353049784362, .span = "testNode-13"}: +1
AppliedToGroupSpan{.appliedToGroup = 162670393145983371263408187545058521866, .span = "testNode-12"}: +1
AppliedToGroupSpan{.appliedToGroup = 162719744790132748984941022468429009156, .span = "testNode-12"}: +1
AppliedToGroupSpan{.appliedToGroup = 168119171796060862792535601563218818929, .span = "testNode-13"}: +1
AppliedToGroupSpan{.appliedToGroup = 171251048780850527017278303207274963999, .span = "testNode-15"}: +1
AppliedToGroupSpan{.appliedToGroup = 177290530696359873639164811705966787107, .span = "testNode-12"}: +1
AppliedToGroupSpan{.appliedToGroup = 180696582671324939437016125830931674222, .span = "testNode-12"}: +1
AppliedToGroupSpan{.appliedToGroup = 211806542268647232324164049752470641112, .span = "testNode-11"}: +1
AppliedToGroupSpan{.appliedToGroup = 217009013054914692991117235578490985621, .span = "testNode-14"}: +1
AppliedToGroupSpan{.appliedToGroup = 219182765788762484199904846940068515825, .span = "testNode-13"}: +1
AppliedToGroupSpan{.appliedToGroup = 232790950656709164395444420136473141434, .span = "testNode-13"}: +1
AppliedToGroupSpan{.appliedToGroup = 242822805854533997069140197230193475072, .span = "testNode-13"}: +1
AppliedToGroupSpan{.appliedToGroup = 263582411874843359805262917493823858270, .span = "testNode-13"}: +1
AppliedToGroupSpan{.appliedToGroup = 266160596277303920306906385582642592399, .span = "testNode-12"}: +1
AppliedToGroupSpan{.appliedToGroup = 273498342722146853995965744453610466834, .span = "testNode-12"}: +1
AppliedToGroupSpan{.appliedToGroup = 286248117606648181817375295335297863313, .span = "testNode-14"}: +1
AppliedToGroupSpan{.appliedToGroup = 294769527764678373131618238457085121326, .span = "testNode-14"}: +1
AppliedToGroupSpan{.appliedToGroup = 318107101283880568845359000382843925186, .span = "testNode-12"}: +1
AppliedToGroupSpan{.appliedToGroup = 330962894326518286540943393408930974864, .span = "testNode-12"}: +1
AppliedToGroupSpan{.appliedToGroup = 335879917074264638271285719334370053948, .span = "testNode-14"}: +1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-119"}, .name = "testNP-119", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [330962894326518286540943393408930974864], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [211806542268647232324164049752470641112]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-120"}, .name = "testNP-120", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [162670393145983371263408187545058521866], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [330962894326518286540943393408930974864]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-121"}, .name = "testNP-121", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [135235726876099996338886379078866691609], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [162670393145983371263408187545058521866]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-122"}, .name = "testNP-122", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [177290530696359873639164811705966787107], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [135235726876099996338886379078866691609]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-123"}, .name = "testNP-123", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [162719744790132748984941022468429009156], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [177290530696359873639164811705966787107]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-124"}, .name = "testNP-124", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [266160596277303920306906385582642592399], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [162719744790132748984941022468429009156]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-125"}, .name = "testNP-125", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [109826924473310848161915484640883073288], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [266160596277303920306906385582642592399]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-126"}, .name = "testNP-126", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [180696582671324939437016125830931674222], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [109826924473310848161915484640883073288]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-127"}, .name = "testNP-127", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [273498342722146853995965744453610466834], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [180696582671324939437016125830931674222]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-128"}, .name = "testNP-128", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [318107101283880568845359000382843925186], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [273498342722146853995965744453610466834]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-129"}, .name = "testNP-129", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [232790950656709164395444420136473141434], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [318107101283880568845359000382843925186]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-130"}, .name = "testNP-130", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [168119171796060862792535601563218818929], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [232790950656709164395444420136473141434]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-131"}, .name = "testNP-131", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [23859904554043317776138937686972490692], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [168119171796060862792535601563218818929]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-132"}, .name = "testNP-132", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [152622529118381787560133857353049784362], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [23859904554043317776138937686972490692]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-133"}, .name = "testNP-133", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [263582411874843359805262917493823858270], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [152622529118381787560133857353049784362]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-134"}, .name = "testNP-134", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [219182765788762484199904846940068515825], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [263582411874843359805262917493823858270]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-135"}, .name = "testNP-135", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [242822805854533997069140197230193475072], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [219182765788762484199904846940068515825]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-136"}, .name = "testNP-136", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [34503473083417678635513967958248208655], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [242822805854533997069140197230193475072]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-137"}, .name = "testNP-137", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [48309711104650181870977623970954456715], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [34503473083417678635513967958248208655]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-138"}, .name = "testNP-138", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [103540348370426618402557980166152264074], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [48309711104650181870977623970954456715]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-139"}, .name = "testNP-139", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [217009013054914692991117235578490985621], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [103540348370426618402557980166152264074]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-140"}, .name = "testNP-140", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [5174678131681871740017664947586831952], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [217009013054914692991117235578490985621]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-141"}, .name = "testNP-141", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [88306647967896663440454702563333622411], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [5174678131681871740017664947586831952]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-142"}, .name = "testNP-142", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [294769527764678373131618238457085121326], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [88306647967896663440454702563333622411]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-143"}, .name = "testNP-143", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [141855097966456625106267262973040160760], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [294769527764678373131618238457085121326]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-144"}, .name = "testNP-144", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [335879917074264638271285719334370053948], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [141855097966456625106267262973040160760]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-145"}, .name = "testNP-145", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [88593012092994971404195594578066505753], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [335879917074264638271285719334370053948]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-146"}, .name = "testNP-146", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [127997802756657206686749848402997922788], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [88593012092994971404195594578066505753]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-147"}, .name = "testNP-147", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [286248117606648181817375295335297863313], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [127997802756657206686749848402997922788]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-148"}, .name = "testNP-148", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [105288662624453264750951304918564969592], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [286248117606648181817375295335297863313]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-149"}, .name = "testNP-149", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [171251048780850527017278303207274963999], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [105288662624453264750951304918564969592]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-150"}, .name = "testNP-150", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [105541544679718557174351818626480748349], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [171251048780850527017278303207274963999]}: +1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-119", .policy = k8spolicy.UID{.uid = "testNP-119"}, .node = "testNode-11"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-120", .policy = k8spolicy.UID{.uid = "testNP-120"}, .node = "testNode-12"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-121", .policy = k8spolicy.UID{.uid = "testNP-121"}, .node = "testNode-12"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-122", .policy = k8spolicy.UID{.uid = "testNP-122"}, .node = "testNode-12"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-123", .policy = k8spolicy.UID{.uid = "testNP-123"}, .node = "testNode-12"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-124", .policy = k8spolicy.UID{.uid = "testNP-124"}, .node = "testNode-12"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-125", .policy = k8spolicy.UID{.uid = "testNP-125"}, .node = "testNode-12"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-126", .policy = k8spolicy.UID{.uid = "testNP-126"}, .node = "testNode-12"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-127", .policy = k8spolicy.UID{.uid = "testNP-127"}, .node = "testNode-12"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-128", .policy = k8spolicy.UID{.uid = "testNP-128"}, .node = "testNode-12"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-129", .policy = k8spolicy.UID{.uid = "testNP-129"}, .node = "testNode-12"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-130", .policy = k8spolicy.UID{.uid = "testNP-130"}, .node = "testNode-13"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-131", .policy = k8spolicy.UID{.uid = "testNP-131"}, .node = "testNode-13"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-132", .policy = k8spolicy.UID{.uid = "testNP-132"}, .node = "testNode-13"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-133", .policy = k8spolicy.UID{.uid = "testNP-133"}, .node = "testNode-13"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-134", .policy = k8spolicy.UID{.uid = "testNP-134"}, .node = "testNode-13"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-135", .policy = k8spolicy.UID{.uid = "testNP-135"}, .node = "testNode-13"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-136", .policy = k8spolicy.UID{.uid = "testNP-136"}, .node = "testNode-13"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-137", .policy = k8spolicy.UID{.uid = "testNP-137"}, .node = "testNode-13"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-138", .policy = k8spolicy.UID{.uid = "testNP-138"}, .node = "testNode-13"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-139", .policy = k8spolicy.UID{.uid = "testNP-139"}, .node = "testNode-13"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-140", .policy = k8spolicy.UID{.uid = "testNP-140"}, .node = "testNode-14"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-141", .policy = k8spolicy.UID{.uid = "testNP-141"}, .node = "testNode-14"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-142", .policy = k8spolicy.UID{.uid = "testNP-142"}, .node = "testNode-14"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-143", .policy = k8spolicy.UID{.uid = "testNP-143"}, .node = "testNode-14"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-144", .policy = k8spolicy.UID{.uid = "testNP-144"}, .node = "testNode-14"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-145", .policy = k8spolicy.UID{.uid = "testNP-145"}, .node = "testNode-14"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-146", .policy = k8spolicy.UID{.uid = "testNP-146"}, .node = "testNode-14"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-147", .policy = k8spolicy.UID{.uid = "testNP-147"}, .node = "testNode-14"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-148", .policy = k8spolicy.UID{.uid = "testNP-148"}, .node = "testNode-14"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-149", .policy = k8spolicy.UID{.uid = "testNP-149"}, .node = "testNode-14"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-150", .policy = k8spolicy.UID{.uid = "testNP-150"}, .node = "testNode-15"}: +1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 9974211639473608319659941722946644199, .address = "10.10.17.9"}: +1
AddressGroupAddress{.addressGroup = 10182033094312184239641526473766767040, .address = "10.10.18.1"}: +1
AddressGroupAddress{.addressGroup = 36551653331402414760417302807572760213, .address = "10.10.17.1"}: +1
AddressGroupAddress{.addressGroup = 49151665004338976913036705027161529557, .address = "10.10.16.9"}: +1
AddressGroupAddress{.addressGroup = 62736095198605211225257809392018632659, .address = "10.10.15.4"}: +1
AddressGroupAddress{.addressGroup = 63883611013831348314868339228951323249, .address = "10.10.16.6"}: +1
AddressGroupAddress{.addressGroup = 66761871567052836029848502489228091960, .address = "10.10.16.5"}: +1
AddressGroupAddress{.addressGroup = 68320038444336093762246010090623310652, .address = "10.10.17.4"}: +1
AddressGroupAddress{.addressGroup = 85736293771979518900314375920704824975, .address = "10.10.16.0"}: +1
AddressGroupAddress{.addressGroup = 86041146750172122340794046651979546959, .address = "10.10.17.8"}: +1
AddressGroupAddress{.addressGroup = 90719153998053510093378737867866863921, .address = "10.10.16.3"}: +1
AddressGroupAddress{.addressGroup = 101236793920148805528803897551160429874, .address = "10.10.15.5"}: +1
AddressGroupAddress{.addressGroup = 101965737476516751481190340387943244725, .address = "10.10.17.5"}: +1
AddressGroupAddress{.addressGroup = 115734955286026134645148105451329628103, .address = "10.10.15.8"}: +1
AddressGroupAddress{.addressGroup = 132798376501879574902227363326979390325, .address = "10.10.16.2"}: +1
AddressGroupAddress{.addressGroup = 142367404777172477545007685153919311464, .address = "10.10.17.6"}: +1
AddressGroupAddress{.addressGroup = 145445688903953453565683089960176195512, .address = "10.10.15.2"}: +1
AddressGroupAddress{.addressGroup = 157653470633199016616762445680041740027, .address = "10.10.18.3"}: +1
AddressGroupAddress{.addressGroup = 187224818334107445908201002416377339679, .address = "10.10.16.4"}: +1
AddressGroupAddress{.addressGroup = 216336353712954726812863483949575378717, .address = "10.10.17.3"}: +1
AddressGroupAddress{.addressGroup = 224389261803876575839037860451583230551, .address = "10.10.18.0"}: +1
AddressGroupAddress{.addressGroup = 238001474346375222645344555139006607619, .address = "10.10.16.1"}: +1
AddressGroupAddress{.addressGroup = 245363590310446604044532254890596787847, .address = "10.10.16.8"}: +1
AddressGroupAddress{.addressGroup = 255162848066491254404362432706335389062, .address = "10.10.17.7"}: +1
AddressGroupAddress{.addressGroup = 266716386045000504023096980925676284275, .address = "10.10.15.9"}: +1
AddressGroupAddress{.addressGroup = 272143872542305492469587541571323597915, .address = "10.10.17.0"}: +1
AddressGroupAddress{.addressGroup = 282885779642291332653147546854698842358, .address = "10.10.17.2"}: +1
AddressGroupAddress{.addressGroup = 286410501704168837165861605088666066578, .address = "10.10.15.7"}: +1
AddressGroupAddress{.addressGroup = 301514260321844487074024254615064100404, .address = "10.10.15.6"}: +1
AddressGroupAddress{.addressGroup = 311966986161641290925012556157292490936, .address = "10.10.16.7"}: +1
AddressGroupAddress{.addressGroup = 321248390499260274484285298341757591550, .address = "10.10.18.2"}: +1
AddressGroupAddress{.addressGroup = 327681950154789363076035809114670984144, .address = "10.10.15.3"}: +1
AddressGroupDescr:
AddressGroupDescr{.name = "0780f699-f6e9-5158-ad62-c012c34da8e7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-179]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-179")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "07a8fcfd-8014-5a34-a8bd-13c6c03c89c0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-181]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-181")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "1b7f97a5-596f-5d36-9973-c53a4ac5c695", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-171]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-171")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "24fa442f-2cd2-541e-9765-3d4849131cd5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-169]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-169")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "2f32884d-930f-5128-9be6-c381f8cbafd3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-154]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-154")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "300f8933-6918-5c2a-9d54-003daf562271", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-166]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-166")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "3239de67-04a5-5398-89c0-6b0dfa4da238", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-165]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-165")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "3365f5f5-f370-5479-90bc-b38d0e8b9b3c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-174]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-174")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "408035a5-0b4c-599f-a516-938d95dc268f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-160]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-160")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "40baec0e-95e4-5295-806c-91c9d764414f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-178]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-178")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "443fdf9f-19c2-5a22-8bd7-43e3e4457931", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-163]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-163")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "4c297f4e-4bdd-511c-85f6-43b9a4194d32", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-155]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-155")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "4cb5e2ff-79de-563a-9956-a634c80863b5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-175]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-175")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "5711bdd9-7b7c-5dc7-9a4a-8d3d208127c7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-158]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-158")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "63e80977-fc88-57e2-9ab0-f8fe8fa6bb75", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-162]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-162")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "6b1af6fc-e75e-5e52-84bb-2829d56b9e68", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-176]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-176")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "6d6bd21c-f2c1-516e-a5cb-81c72bc417b8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-152]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-152")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "769af438-e108-5287-a978-31ac710b46fb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-183]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-183")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "8cda303a-bbf0-52d3-9fe9-378528fa9f1f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-164]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-164")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "a2c0ddbd-27ca-5a9b-a410-20a188a1171d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-173]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-173")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "a8cfccc3-0404-525a-b3d3-284dd5c38257", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-180]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-180")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "b30d6aa7-f2f6-5bce-ba24-615b7eba3103", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-161]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-161")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "b8974eff-5e85-5907-bda4-4bd7b8ac6687", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-168]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-168")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "bff693b4-df3f-5e7c-b929-9d26f3aab586", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-177]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-177")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "c8a7b51b-b949-51bc-82ea-3fd6f5e86973", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-159]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-159")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "ccbd00da-4e21-58a1-83e6-f6ebc038945b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-170]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-170")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "d4d1d1c3-3e8b-59c0-aa4d-09d26aa0f8f6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-172]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-172")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "d778a7fa-39fa-5b01-ae44-33c20b301e92", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-157]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-157")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "e2d588c5-5a40-5ebf-bb15-6c653c573e34", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-156]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-156")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "eab2a7f1-a404-59d7-8f5f-7ec0bdbdb0b8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-167]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-167")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "f1ae3082-14a4-598f-b762-2e7287c81ffe", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-182]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-182")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "f6853f7d-2dd9-58d9-b1d7-d873db3f6bd0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-153]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-153")], .matchExpressions = []}}}}: +1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 9974211639473608319659941722946644199, .node = "testNode-17"}: +1
AddressGroupSpan{.addressGroup = 10182033094312184239641526473766767040, .node = "testNode-18"}: +1
AddressGroupSpan{.addressGroup = 36551653331402414760417302807572760213, .node = "testNode-17"}: +1
AddressGroupSpan{.addressGroup = 49151665004338976913036705027161529557, .node = "testNode-16"}: +1
AddressGroupSpan{.addressGroup = 62736095198605211225257809392018632659, .node = "testNode-15"}: +1
AddressGroupSpan{.addressGroup = 63883611013831348314868339228951323249, .node = "testNode-16"}: +1
AddressGroupSpan{.addressGroup = 66761871567052836029848502489228091960, .node = "testNode-16"}: +1
AddressGroupSpan{.addressGroup = 68320038444336093762246010090623310652, .node = "testNode-17"}: +1
AddressGroupSpan{.addressGroup = 85736293771979518900314375920704824975, .node = "testNode-15"}: +1
AddressGroupSpan{.addressGroup = 86041146750172122340794046651979546959, .node = "testNode-17"}: +1
AddressGroupSpan{.addressGroup = 90719153998053510093378737867866863921, .node = "testNode-16"}: +1
AddressGroupSpan{.addressGroup = 101236793920148805528803897551160429874, .node = "testNode-15"}: +1
AddressGroupSpan{.addressGroup = 101965737476516751481190340387943244725, .node = "testNode-17"}: +1
AddressGroupSpan{.addressGroup = 115734955286026134645148105451329628103, .node = "testNode-15"}: +1
AddressGroupSpan{.addressGroup = 132798376501879574902227363326979390325, .node = "testNode-16"}: +1
AddressGroupSpan{.addressGroup = 142367404777172477545007685153919311464, .node = "testNode-17"}: +1
AddressGroupSpan{.addressGroup = 145445688903953453565683089960176195512, .node = "testNode-15"}: +1
AddressGroupSpan{.addressGroup = 157653470633199016616762445680041740027, .node = "testNode-18"}: +1
AddressGroupSpan{.addressGroup = 187224818334107445908201002416377339679, .node = "testNode-16"}: +1
AddressGroupSpan{.addressGroup = 216336353712954726812863483949575378717, .node = "testNode-17"}: +1
AddressGroupSpan{.addressGroup = 224389261803876575839037860451583230551, .node = "testNode-17"}: +1
AddressGroupSpan{.addressGroup = 238001474346375222645344555139006607619, .node = "testNode-16"}: +1
AddressGroupSpan{.addressGroup = 245363590310446604044532254890596787847, .node = "testNode-16"}: +1
AddressGroupSpan{.addressGroup = 255162848066491254404362432706335389062, .node = "testNode-17"}: +1
AddressGroupSpan{.addressGroup = 266716386045000504023096980925676284275, .node = "testNode-15"}: +1
AddressGroupSpan{.addressGroup = 272143872542305492469587541571323597915, .node = "testNode-16"}: +1
AddressGroupSpan{.addressGroup = 282885779642291332653147546854698842358, .node = "testNode-17"}: +1
AddressGroupSpan{.addressGroup = 286410501704168837165861605088666066578, .node = "testNode-15"}: +1
AddressGroupSpan{.addressGroup = 301514260321844487074024254615064100404, .node = "testNode-15"}: +1
AddressGroupSpan{.addressGroup = 311966986161641290925012556157292490936, .node = "testNode-16"}: +1
AddressGroupSpan{.addressGroup = 321248390499260274484285298341757591550, .node = "testNode-18"}: +1
AddressGroupSpan{.addressGroup = 327681950154789363076035809114670984144, .node = "testNode-15"}: +1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "0780f699-f6e9-5158-ad62-c012c34da8e7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-179]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-179")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "07a8fcfd-8014-5a34-a8bd-13c6c03c89c0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-181]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-181")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "1b7f97a5-596f-5d36-9973-c53a4ac5c695", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-171]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-171")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "24fa442f-2cd2-541e-9765-3d4849131cd5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-169]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-169")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "2f32884d-930f-5128-9be6-c381f8cbafd3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-154]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-154")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "300f8933-6918-5c2a-9d54-003daf562271", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-166]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-166")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "3239de67-04a5-5398-89c0-6b0dfa4da238", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-165]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-165")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "3365f5f5-f370-5479-90bc-b38d0e8b9b3c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-174]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-174")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "408035a5-0b4c-599f-a516-938d95dc268f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-160]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-160")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "40baec0e-95e4-5295-806c-91c9d764414f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-178]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-178")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "443fdf9f-19c2-5a22-8bd7-43e3e4457931", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-163]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-163")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "4c297f4e-4bdd-511c-85f6-43b9a4194d32", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-155]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-155")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "4cb5e2ff-79de-563a-9956-a634c80863b5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-175]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-175")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "4f668fe7-976a-55cd-8e8f-464d4ed8373d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-151]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-151")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "5711bdd9-7b7c-5dc7-9a4a-8d3d208127c7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-158]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-158")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "63e80977-fc88-57e2-9ab0-f8fe8fa6bb75", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-162]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-162")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "6b1af6fc-e75e-5e52-84bb-2829d56b9e68", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-176]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-176")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "6d6bd21c-f2c1-516e-a5cb-81c72bc417b8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-152]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-152")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "8cda303a-bbf0-52d3-9fe9-378528fa9f1f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-164]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-164")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "a2c0ddbd-27ca-5a9b-a410-20a188a1171d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-173]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-173")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "a8cfccc3-0404-525a-b3d3-284dd5c38257", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-180]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-180")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "b30d6aa7-f2f6-5bce-ba24-615b7eba3103", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-161]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-161")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "b8974eff-5e85-5907-bda4-4bd7b8ac6687", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-168]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-168")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "bff693b4-df3f-5e7c-b929-9d26f3aab586", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-177]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-177")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "c8a7b51b-b949-51bc-82ea-3fd6f5e86973", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-159]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-159")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "ccbd00da-4e21-58a1-83e6-f6ebc038945b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-170]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-170")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "d4d1d1c3-3e8b-59c0-aa4d-09d26aa0f8f6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-172]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-172")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "d778a7fa-39fa-5b01-ae44-33c20b301e92", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-157]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-157")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "e2d588c5-5a40-5ebf-bb15-6c653c573e34", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-156]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-156")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "eab2a7f1-a404-59d7-8f5f-7ec0bdbdb0b8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-167]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-167")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "f1ae3082-14a4-598f-b762-2e7287c81ffe", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-182]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-182")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "f6853f7d-2dd9-58d9-b1d7-d873db3f6bd0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-153]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-153")], .matchExpressions = []}}}}: +1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 9974211639473608319659941722946644199, .node = "testNode-17", .pods = [k8spolicy.PodReference{.name = "testPod-179", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 10182033094312184239641526473766767040, .node = "testNode-18", .pods = [k8spolicy.PodReference{.name = "testPod-181", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 36551653331402414760417302807572760213, .node = "testNode-17", .pods = [k8spolicy.PodReference{.name = "testPod-171", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 49151665004338976913036705027161529557, .node = "testNode-16", .pods = [k8spolicy.PodReference{.name = "testPod-169", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 62736095198605211225257809392018632659, .node = "testNode-15", .pods = [k8spolicy.PodReference{.name = "testPod-154", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 63883611013831348314868339228951323249, .node = "testNode-16", .pods = [k8spolicy.PodReference{.name = "testPod-166", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 66761871567052836029848502489228091960, .node = "testNode-16", .pods = [k8spolicy.PodReference{.name = "testPod-165", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 68320038444336093762246010090623310652, .node = "testNode-17", .pods = [k8spolicy.PodReference{.name = "testPod-174", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 85736293771979518900314375920704824975, .node = "testNode-16", .pods = [k8spolicy.PodReference{.name = "testPod-160", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 86041146750172122340794046651979546959, .node = "testNode-17", .pods = [k8spolicy.PodReference{.name = "testPod-178", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 90719153998053510093378737867866863921, .node = "testNode-16", .pods = [k8spolicy.PodReference{.name = "testPod-163", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 101236793920148805528803897551160429874, .node = "testNode-15", .pods = [k8spolicy.PodReference{.name = "testPod-155", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 101965737476516751481190340387943244725, .node = "testNode-17", .pods = [k8spolicy.PodReference{.name = "testPod-175", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 105541544679718557174351818626480748349, .node = "testNode-15", .pods = [k8spolicy.PodReference{.name = "testPod-151", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 115734955286026134645148105451329628103, .node = "testNode-15", .pods = [k8spolicy.PodReference{.name = "testPod-158", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 132798376501879574902227363326979390325, .node = "testNode-16", .pods = [k8spolicy.PodReference{.name = "testPod-162", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 142367404777172477545007685153919311464, .node = "testNode-17", .pods = [k8spolicy.PodReference{.name = "testPod-176", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 145445688903953453565683089960176195512, .node = "testNode-15", .pods = [k8spolicy.PodReference{.name = "testPod-152", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 187224818334107445908201002416377339679, .node = "testNode-16", .pods = [k8spolicy.PodReference{.name = "testPod-164", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 216336353712954726812863483949575378717, .node = "testNode-17", .pods = [k8spolicy.PodReference{.name = "testPod-173", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 224389261803876575839037860451583230551, .node = "testNode-18", .pods = [k8spolicy.PodReference{.name = "testPod-180", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 238001474346375222645344555139006607619, .node = "testNode-16", .pods = [k8spolicy.PodReference{.name = "testPod-161", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 245363590310446604044532254890596787847, .node = "testNode-16", .pods = [k8spolicy.PodReference{.name = "testPod-168", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 255162848066491254404362432706335389062, .node = "testNode-17", .pods = [k8spolicy.PodReference{.name = "testPod-177", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 266716386045000504023096980925676284275, .node = "testNode-15", .pods = [k8spolicy.PodReference{.name = "testPod-159", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 272143872542305492469587541571323597915, .node = "testNode-17", .pods = [k8spolicy.PodReference{.name = "testPod-170", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 282885779642291332653147546854698842358, .node = "testNode-17", .pods = [k8spolicy.PodReference{.name = "testPod-172", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 286410501704168837165861605088666066578, .node = "testNode-15", .pods = [k8spolicy.PodReference{.name = "testPod-157", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 301514260321844487074024254615064100404, .node = "testNode-15", .pods = [k8spolicy.PodReference{.name = "testPod-156", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 311966986161641290925012556157292490936, .node = "testNode-16", .pods = [k8spolicy.PodReference{.name = "testPod-167", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 321248390499260274484285298341757591550, .node = "testNode-18", .pods = [k8spolicy.PodReference{.name = "testPod-182", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 327681950154789363076035809114670984144, .node = "testNode-15", .pods = [k8spolicy.PodReference{.name = "testPod-153", .namespace = "testNamespace"}]}: +1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 9974211639473608319659941722946644199, .span = "testNode-17"}: +1
AppliedToGroupSpan{.appliedToGroup = 10182033094312184239641526473766767040, .span = "testNode-18"}: +1
AppliedToGroupSpan{.appliedToGroup = 36551653331402414760417302807572760213, .span = "testNode-17"}: +1
AppliedToGroupSpan{.appliedToGroup = 49151665004338976913036705027161529557, .span = "testNode-16"}: +1
AppliedToGroupSpan{.appliedToGroup = 62736095198605211225257809392018632659, .span = "testNode-15"}: +1
AppliedToGroupSpan{.appliedToGroup = 63883611013831348314868339228951323249, .span = "testNode-16"}: +1
AppliedToGroupSpan{.appliedToGroup = 66761871567052836029848502489228091960, .span = "testNode-16"}: +1
AppliedToGroupSpan{.appliedToGroup = 68320038444336093762246010090623310652, .span = "testNode-17"}: +1
AppliedToGroupSpan{.appliedToGroup = 85736293771979518900314375920704824975, .span = "testNode-16"}: +1
AppliedToGroupSpan{.appliedToGroup = 86041146750172122340794046651979546959, .span = "testNode-17"}: +1
AppliedToGroupSpan{.appliedToGroup = 90719153998053510093378737867866863921, .span = "testNode-16"}: +1
AppliedToGroupSpan{.appliedToGroup = 101236793920148805528803897551160429874, .span = "testNode-15"}: +1
AppliedToGroupSpan{.appliedToGroup = 101965737476516751481190340387943244725, .span = "testNode-17"}: +1
AppliedToGroupSpan{.appliedToGroup = 105541544679718557174351818626480748349, .span = "testNode-15"}: +1
AppliedToGroupSpan{.appliedToGroup = 115734955286026134645148105451329628103, .span = "testNode-15"}: +1
AppliedToGroupSpan{.appliedToGroup = 132798376501879574902227363326979390325, .span = "testNode-16"}: +1
AppliedToGroupSpan{.appliedToGroup = 142367404777172477545007685153919311464, .span = "testNode-17"}: +1
AppliedToGroupSpan{.appliedToGroup = 145445688903953453565683089960176195512, .span = "testNode-15"}: +1
AppliedToGroupSpan{.appliedToGroup = 187224818334107445908201002416377339679, .span = "testNode-16"}: +1
AppliedToGroupSpan{.appliedToGroup = 216336353712954726812863483949575378717, .span = "testNode-17"}: +1
AppliedToGroupSpan{.appliedToGroup = 224389261803876575839037860451583230551, .span = "testNode-18"}: +1
AppliedToGroupSpan{.appliedToGroup = 238001474346375222645344555139006607619, .span = "testNode-16"}: +1
AppliedToGroupSpan{.appliedToGroup = 245363590310446604044532254890596787847, .span = "testNode-16"}: +1
AppliedToGroupSpan{.appliedToGroup = 255162848066491254404362432706335389062, .span = "testNode-17"}: +1
AppliedToGroupSpan{.appliedToGroup = 266716386045000504023096980925676284275, .span = "testNode-15"}: +1
AppliedToGroupSpan{.appliedToGroup = 272143872542305492469587541571323597915, .span = "testNode-17"}: +1
AppliedToGroupSpan{.appliedToGroup = 282885779642291332653147546854698842358, .span = "testNode-17"}: +1
AppliedToGroupSpan{.appliedToGroup = 286410501704168837165861605088666066578, .span = "testNode-15"}: +1
AppliedToGroupSpan{.appliedToGroup = 301514260321844487074024254615064100404, .span = "testNode-15"}: +1
AppliedToGroupSpan{.appliedToGroup = 311966986161641290925012556157292490936, .span = "testNode-16"}: +1
AppliedToGroupSpan{.appliedToGroup = 321248390499260274484285298341757591550, .span = "testNode-18"}: +1
AppliedToGroupSpan{.appliedToGroup = 327681950154789363076035809114670984144, .span = "testNode-15"}: +1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-151"}, .name = "testNP-151", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [145445688903953453565683089960176195512], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [105541544679718557174351818626480748349]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-152"}, .name = "testNP-152", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [327681950154789363076035809114670984144], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [145445688903953453565683089960176195512]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-153"}, .name = "testNP-153", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [62736095198605211225257809392018632659], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [327681950154789363076035809114670984144]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-154"}, .name = "testNP-154", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [101236793920148805528803897551160429874], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [62736095198605211225257809392018632659]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-155"}, .name = "testNP-155", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [301514260321844487074024254615064100404], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [101236793920148805528803897551160429874]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-156"}, .name = "testNP-156", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [286410501704168837165861605088666066578], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [301514260321844487074024254615064100404]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-157"}, .name = "testNP-157", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [115734955286026134645148105451329628103], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [286410501704168837165861605088666066578]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-158"}, .name = "testNP-158", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [266716386045000504023096980925676284275], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [115734955286026134645148105451329628103]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-159"}, .name = "testNP-159", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [85736293771979518900314375920704824975], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [266716386045000504023096980925676284275]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-160"}, .name = "testNP-160", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [238001474346375222645344555139006607619], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [85736293771979518900314375920704824975]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-161"}, .name = "testNP-161", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [132798376501879574902227363326979390325], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [238001474346375222645344555139006607619]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-162"}, .name = "testNP-162", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [90719153998053510093378737867866863921], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [132798376501879574902227363326979390325]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-163"}, .name = "testNP-163", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [187224818334107445908201002416377339679], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [90719153998053510093378737867866863921]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-164"}, .name = "testNP-164", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [66761871567052836029848502489228091960], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [187224818334107445908201002416377339679]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-165"}, .name = "testNP-165", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [63883611013831348314868339228951323249], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [66761871567052836029848502489228091960]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-166"}, .name = "testNP-166", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [311966986161641290925012556157292490936], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [63883611013831348314868339228951323249]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-167"}, .name = "testNP-167", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [245363590310446604044532254890596787847], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [311966986161641290925012556157292490936]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-168"}, .name = "testNP-168", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [49151665004338976913036705027161529557], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [245363590310446604044532254890596787847]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-169"}, .name = "testNP-169", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [272143872542305492469587541571323597915], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [49151665004338976913036705027161529557]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-170"}, .name = "testNP-170", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [36551653331402414760417302807572760213], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [272143872542305492469587541571323597915]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-171"}, .name = "testNP-171", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [282885779642291332653147546854698842358], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [36551653331402414760417302807572760213]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-172"}, .name = "testNP-172", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [216336353712954726812863483949575378717], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [282885779642291332653147546854698842358]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-173"}, .name = "testNP-173", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [68320038444336093762246010090623310652], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [216336353712954726812863483949575378717]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-174"}, .name = "testNP-174", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [101965737476516751481190340387943244725], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [68320038444336093762246010090623310652]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-175"}, .name = "testNP-175", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [142367404777172477545007685153919311464], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [101965737476516751481190340387943244725]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-176"}, .name = "testNP-176", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [255162848066491254404362432706335389062], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [142367404777172477545007685153919311464]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-177"}, .name = "testNP-177", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [86041146750172122340794046651979546959], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [255162848066491254404362432706335389062]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-178"}, .name = "testNP-178", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [9974211639473608319659941722946644199], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [86041146750172122340794046651979546959]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-179"}, .name = "testNP-179", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [224389261803876575839037860451583230551], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [9974211639473608319659941722946644199]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-180"}, .name = "testNP-180", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [10182033094312184239641526473766767040], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [224389261803876575839037860451583230551]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-181"}, .name = "testNP-181", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [321248390499260274484285298341757591550], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [10182033094312184239641526473766767040]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-182"}, .name = "testNP-182", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [157653470633199016616762445680041740027], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [321248390499260274484285298341757591550]}: +1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-151", .policy = k8spolicy.UID{.uid = "testNP-151"}, .node = "testNode-15"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-152", .policy = k8spolicy.UID{.uid = "testNP-152"}, .node = "testNode-15"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-153", .policy = k8spolicy.UID{.uid = "testNP-153"}, .node = "testNode-15"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-154", .policy = k8spolicy.UID{.uid = "testNP-154"}, .node = "testNode-15"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-155", .policy = k8spolicy.UID{.uid = "testNP-155"}, .node = "testNode-15"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-156", .policy = k8spolicy.UID{.uid = "testNP-156"}, .node = "testNode-15"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-157", .policy = k8spolicy.UID{.uid = "testNP-157"}, .node = "testNode-15"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-158", .policy = k8spolicy.UID{.uid = "testNP-158"}, .node = "testNode-15"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-159", .policy = k8spolicy.UID{.uid = "testNP-159"}, .node = "testNode-15"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-160", .policy = k8spolicy.UID{.uid = "testNP-160"}, .node = "testNode-16"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-161", .policy = k8spolicy.UID{.uid = "testNP-161"}, .node = "testNode-16"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-162", .policy = k8spolicy.UID{.uid = "testNP-162"}, .node = "testNode-16"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-163", .policy = k8spolicy.UID{.uid = "testNP-163"}, .node = "testNode-16"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-164", .policy = k8spolicy.UID{.uid = "testNP-164"}, .node = "testNode-16"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-165", .policy = k8spolicy.UID{.uid = "testNP-165"}, .node = "testNode-16"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-166", .policy = k8spolicy.UID{.uid = "testNP-166"}, .node = "testNode-16"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-167", .policy = k8spolicy.UID{.uid = "testNP-167"}, .node = "testNode-16"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-168", .policy = k8spolicy.UID{.uid = "testNP-168"}, .node = "testNode-16"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-169", .policy = k8spolicy.UID{.uid = "testNP-169"}, .node = "testNode-16"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-170", .policy = k8spolicy.UID{.uid = "testNP-170"}, .node = "testNode-17"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-171", .policy = k8spolicy.UID{.uid = "testNP-171"}, .node = "testNode-17"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-172", .policy = k8spolicy.UID{.uid = "testNP-172"}, .node = "testNode-17"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-173", .policy = k8spolicy.UID{.uid = "testNP-173"}, .node = "testNode-17"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-174", .policy = k8spolicy.UID{.uid = "testNP-174"}, .node = "testNode-17"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-175", .policy = k8spolicy.UID{.uid = "testNP-175"}, .node = "testNode-17"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-176", .policy = k8spolicy.UID{.uid = "testNP-176"}, .node = "testNode-17"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-177", .policy = k8spolicy.UID{.uid = "testNP-177"}, .node = "testNode-17"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-178", .policy = k8spolicy.UID{.uid = "testNP-178"}, .node = "testNode-17"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-179", .policy = k8spolicy.UID{.uid = "testNP-179"}, .node = "testNode-17"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-180", .policy = k8spolicy.UID{.uid = "testNP-180"}, .node = "testNode-18"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-181", .policy = k8spolicy.UID{.uid = "testNP-181"}, .node = "testNode-18"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-182", .policy = k8spolicy.UID{.uid = "testNP-182"}, .node = "testNode-18"}: +1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 2726805893817710174022653320676471588, .address = "10.10.18.4"}: +1
AddressGroupAddress{.addressGroup = 17256720215278577374007817148573614136, .address = "10.10.18.5"}: +1
AddressGroupAddress{.addressGroup = 20328604585586023979547482022759361984, .address = "10.10.18.8"}: +1
AddressGroupAddress{.addressGroup = 25696023426616215154958532051893520306, .address = "10.10.19.8"}: +1
AddressGroupAddress{.addressGroup = 31006974088550824198755824768856600235, .address = "10.10.20.1"}: +1
AddressGroupAddress{.addressGroup = 33703463587909161242769186897832987590, .address = "10.10.20.3"}: +1
AddressGroupAddress{.addressGroup = 40907116952880894293774087494266444075, .address = "10.10.21.1"}: +1
AddressGroupAddress{.addressGroup = 53461813972510612144985104795020463894, .address = "10.10.19.4"}: +1
AddressGroupAddress{.addressGroup = 57300239076662165375439007813575462000, .address = "10.10.19.3"}: +1
AddressGroupAddress{.addressGroup = 68986903415887453706751896061239479418, .address = "10.10.19.1"}: +1
AddressGroupAddress{.addressGroup = 75942463945999836881962796856495961412, .address = "10.10.20.2"}: +1
AddressGroupAddress{.addressGroup = 83785598465348900714859335941647885594, .address = "10.10.20.4"}: +1
AddressGroupAddress{.addressGroup = 96129841428936758687501228319270128609, .address = "10.10.20.9"}: +1
AddressGroupAddress{.addressGroup = 98084079121610444304202333165918820717, .address = "10.10.19.6"}: +1
AddressGroupAddress{.addressGroup = 119943215358358031355366371303809726165, .address = "10.10.20.8"}: +1
AddressGroupAddress{.addressGroup = 162011623228205519824689437489696841739, .address = "10.10.19.7"}: +1
AddressGroupAddress{.addressGroup = 185095757664273280601006928671604579678, .address = "10.10.21.0"}: +1
AddressGroupAddress{.addressGroup = 206113199014032320922053922067967002044, .address = "10.10.20.0"}: +1
AddressGroupAddress{.addressGroup = 227490618867503998727090134637222993911, .address = "10.10.20.7"}: +1
AddressGroupAddress{.addressGroup = 233478311629120248037837049617413376244, .address = "10.10.19.0"}: +1
AddressGroupAddress{.addressGroup = 236585385853030717689703769531827284787, .address = "10.10.18.9"}: +1
AddressGroupAddress{.addressGroup = 242363711763724829089145815052878036562, .address = "10.10.20.5"}: +1
AddressGroupAddress{.addressGroup = 242902656798424184510869763157271317029, .address = "10.10.20.6"}: +1
AddressGroupAddress{.addressGroup = 243387286179380872418279174833502995369, .address = "10.10.21.2"}: +1
AddressGroupAddress{.addressGroup = 253301405221812236416901820238840297181, .address = "10.10.19.9"}: +1
AddressGroupAddress{.addressGroup = 254650429442398006867559744965885096267, .address = "10.10.19.2"}: +1
AddressGroupAddress{.addressGroup = 273903785612067732148175004176344542828, .address = "10.10.21.5"}: +1
AddressGroupAddress{.addressGroup = 302049344293990434719066002872617220537, .address = "10.10.19.5"}: +1
AddressGroupAddress{.addressGroup = 319667111843607341849615986754096266255, .address = "10.10.21.4"}: +1
AddressGroupAddress{.addressGroup = 323172733288198583288479242077076248832, .address = "10.10.21.3"}: +1
AddressGroupAddress{.addressGroup = 325194613543852890456429179505499702299, .address = "10.10.18.7"}: +1
AddressGroupAddress{.addressGroup = 335016774647576936724650941556949766459, .address = "10.10.18.6"}: +1
AddressGroupDescr:
AddressGroupDescr{.name = "020d29e9-0d59-56f2-be4f-80e1ca9f7324", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-184]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-184")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "0cfb85fe-e1fa-5967-bee3-5530bc9b0038", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-185]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-185")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "0f4b2596-a4ed-55a9-bf6e-e3af9547edc0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-188]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-188")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "1354dfc4-d07d-599b-9202-2a047d7887b2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-198]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-198")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "1753b9da-5ccf-53e6-b0fb-d05a9c7baeab", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-201]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-201")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "195b0d0c-b87d-5d28-9286-324a27604bc6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-203]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-203")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "1ec66c94-f36e-5c6f-af53-9982c106d92b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-211]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-211")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "28385eef-7119-578d-b809-9694ba7a8f16", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-194]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-194")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "2b1b9fe7-7a74-57c5-9583-858774654c70", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-193]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-193")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "33e664f1-3b9a-575d-a9d1-a8332819cc7a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-191]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-191")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "3921fc8d-a686-5d41-b716-bc5b4ef1f544", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-202]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-202")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "3f0884f0-cc39-51b6-b019-74e3b40de51a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-204]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-204")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "4851ef1b-a775-5343-b0c7-53be5c924be1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-209]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-209")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "49ca4e77-1929-5c26-943c-472b2f1f196d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-196]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-196")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "5a3c3917-155a-502d-bc7e-0656e685b6d5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-208]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-208")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "79e24dbc-1919-5e6c-b7c1-9d4fe977a00b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-197]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-197")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "8b40256f-1904-56da-8ebb-021e3b859d5e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-210]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-210")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "9b0ff54c-090b-5ae2-8883-8c9f80e245bc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-200]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-200")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "ab251978-7739-5005-b186-1b8b695e9ff7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-207]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-207")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "afa64984-2df6-5f21-9d9c-7ab14dc108f4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-190]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-190")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "b1fcb01a-565c-5b61-becc-800d4492eb33", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-189]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-189")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "b6558d90-dfdf-57f0-a0f0-47b447973e52", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-205]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-205")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "b6bd599b-8fbe-5e7c-978a-d72910190a25", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-206]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-206")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "b71aafae-50e7-5119-9d3a-52b08374c3a9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-212]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-212")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "be90137d-1291-5421-be9a-568c1d5576dd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-199]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-199")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "bf93e384-8ebe-5643-85f5-1f91edd0f14b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-192]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-192")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "ce0ff344-2eaf-5ade-9cd0-be745f89ee6c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-215]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-215")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "e33c9672-9427-5cbe-abab-4284039d39b9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-195]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-195")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "f07da573-7e4c-5433-bf13-8fa09504fc0f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-214]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-214")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "f320cdee-caa8-577e-8561-bbcc5a6cd900", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-213]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-213")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "f4a63453-6945-5801-9c67-f941d090041b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-187]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-187")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "fc09e241-cdaa-52a0-9cc4-04d72757d13b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-186]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-186")], .matchExpressions = []}}}}: +1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 2726805893817710174022653320676471588, .node = "testNode-18"}: +1
AddressGroupSpan{.addressGroup = 17256720215278577374007817148573614136, .node = "testNode-18"}: +1
AddressGroupSpan{.addressGroup = 20328604585586023979547482022759361984, .node = "testNode-18"}: +1
AddressGroupSpan{.addressGroup = 25696023426616215154958532051893520306, .node = "testNode-19"}: +1
AddressGroupSpan{.addressGroup = 31006974088550824198755824768856600235, .node = "testNode-20"}: +1
AddressGroupSpan{.addressGroup = 33703463587909161242769186897832987590, .node = "testNode-20"}: +1
AddressGroupSpan{.addressGroup = 40907116952880894293774087494266444075, .node = "testNode-21"}: +1
AddressGroupSpan{.addressGroup = 53461813972510612144985104795020463894, .node = "testNode-19"}: +1
AddressGroupSpan{.addressGroup = 57300239076662165375439007813575462000, .node = "testNode-19"}: +1
AddressGroupSpan{.addressGroup = 68986903415887453706751896061239479418, .node = "testNode-19"}: +1
AddressGroupSpan{.addressGroup = 75942463945999836881962796856495961412, .node = "testNode-20"}: +1
AddressGroupSpan{.addressGroup = 83785598465348900714859335941647885594, .node = "testNode-20"}: +1
AddressGroupSpan{.addressGroup = 96129841428936758687501228319270128609, .node = "testNode-20"}: +1
AddressGroupSpan{.addressGroup = 98084079121610444304202333165918820717, .node = "testNode-19"}: +1
AddressGroupSpan{.addressGroup = 119943215358358031355366371303809726165, .node = "testNode-20"}: +1
AddressGroupSpan{.addressGroup = 162011623228205519824689437489696841739, .node = "testNode-19"}: +1
AddressGroupSpan{.addressGroup = 185095757664273280601006928671604579678, .node = "testNode-20"}: +1
AddressGroupSpan{.addressGroup = 206113199014032320922053922067967002044, .node = "testNode-19"}: +1
AddressGroupSpan{.addressGroup = 227490618867503998727090134637222993911, .node = "testNode-20"}: +1
AddressGroupSpan{.addressGroup = 233478311629120248037837049617413376244, .node = "testNode-18"}: +1
AddressGroupSpan{.addressGroup = 236585385853030717689703769531827284787, .node = "testNode-18"}: +1
AddressGroupSpan{.addressGroup = 242363711763724829089145815052878036562, .node = "testNode-20"}: +1
AddressGroupSpan{.addressGroup = 242902656798424184510869763157271317029, .node = "testNode-20"}: +1
AddressGroupSpan{.addressGroup = 243387286179380872418279174833502995369, .node = "testNode-21"}: +1
AddressGroupSpan{.addressGroup = 253301405221812236416901820238840297181, .node = "testNode-19"}: +1
AddressGroupSpan{.addressGroup = 254650429442398006867559744965885096267, .node = "testNode-19"}: +1
AddressGroupSpan{.addressGroup = 273903785612067732148175004176344542828, .node = "testNode-21"}: +1
AddressGroupSpan{.addressGroup = 302049344293990434719066002872617220537, .node = "testNode-19"}: +1
AddressGroupSpan{.addressGroup = 319667111843607341849615986754096266255, .node = "testNode-21"}: +1
AddressGroupSpan{.addressGroup = 323172733288198583288479242077076248832, .node = "testNode-21"}: +1
AddressGroupSpan{.addressGroup = 325194613543852890456429179505499702299, .node = "testNode-18"}: +1
AddressGroupSpan{.addressGroup = 335016774647576936724650941556949766459, .node = "testNode-18"}: +1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "020d29e9-0d59-56f2-be4f-80e1ca9f7324", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-184]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-184")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "0cfb85fe-e1fa-5967-bee3-5530bc9b0038", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-185]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-185")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "0f4b2596-a4ed-55a9-bf6e-e3af9547edc0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-188]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-188")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "1354dfc4-d07d-599b-9202-2a047d7887b2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-198]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-198")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "1753b9da-5ccf-53e6-b0fb-d05a9c7baeab", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-201]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-201")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "195b0d0c-b87d-5d28-9286-324a27604bc6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-203]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-203")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "1ec66c94-f36e-5c6f-af53-9982c106d92b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-211]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-211")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "28385eef-7119-578d-b809-9694ba7a8f16", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-194]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-194")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "2b1b9fe7-7a74-57c5-9583-858774654c70", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-193]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-193")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "33e664f1-3b9a-575d-a9d1-a8332819cc7a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-191]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-191")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "3921fc8d-a686-5d41-b716-bc5b4ef1f544", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-202]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-202")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "3f0884f0-cc39-51b6-b019-74e3b40de51a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-204]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-204")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "4851ef1b-a775-5343-b0c7-53be5c924be1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-209]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-209")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "49ca4e77-1929-5c26-943c-472b2f1f196d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-196]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-196")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "5a3c3917-155a-502d-bc7e-0656e685b6d5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-208]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-208")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "769af438-e108-5287-a978-31ac710b46fb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-183]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-183")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "79e24dbc-1919-5e6c-b7c1-9d4fe977a00b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-197]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-197")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "8b40256f-1904-56da-8ebb-021e3b859d5e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-210]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-210")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "9b0ff54c-090b-5ae2-8883-8c9f80e245bc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-200]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-200")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "ab251978-7739-5005-b186-1b8b695e9ff7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-207]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-207")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "afa64984-2df6-5f21-9d9c-7ab14dc108f4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-190]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-190")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "b1fcb01a-565c-5b61-becc-800d4492eb33", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-189]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-189")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "b6558d90-dfdf-57f0-a0f0-47b447973e52", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-205]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-205")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "b6bd599b-8fbe-5e7c-978a-d72910190a25", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-206]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-206")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "b71aafae-50e7-5119-9d3a-52b08374c3a9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-212]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-212")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "be90137d-1291-5421-be9a-568c1d5576dd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-199]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-199")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "bf93e384-8ebe-5643-85f5-1f91edd0f14b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-192]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-192")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "e33c9672-9427-5cbe-abab-4284039d39b9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-195]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-195")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "f07da573-7e4c-5433-bf13-8fa09504fc0f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-214]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-214")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "f320cdee-caa8-577e-8561-bbcc5a6cd900", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-213]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-213")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "f4a63453-6945-5801-9c67-f941d090041b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-187]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-187")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "fc09e241-cdaa-52a0-9cc4-04d72757d13b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-186]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-186")], .matchExpressions = []}}}}: +1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 2726805893817710174022653320676471588, .node = "testNode-18", .pods = [k8spolicy.PodReference{.name = "testPod-184", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 17256720215278577374007817148573614136, .node = "testNode-18", .pods = [k8spolicy.PodReference{.name = "testPod-185", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 20328604585586023979547482022759361984, .node = "testNode-18", .pods = [k8spolicy.PodReference{.name = "testPod-188", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 25696023426616215154958532051893520306, .node = "testNode-19", .pods = [k8spolicy.PodReference{.name = "testPod-198", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 31006974088550824198755824768856600235, .node = "testNode-20", .pods = [k8spolicy.PodReference{.name = "testPod-201", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 33703463587909161242769186897832987590, .node = "testNode-20", .pods = [k8spolicy.PodReference{.name = "testPod-203", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 40907116952880894293774087494266444075, .node = "testNode-21", .pods = [k8spolicy.PodReference{.name = "testPod-211", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 53461813972510612144985104795020463894, .node = "testNode-19", .pods = [k8spolicy.PodReference{.name = "testPod-194", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 57300239076662165375439007813575462000, .node = "testNode-19", .pods = [k8spolicy.PodReference{.name = "testPod-193", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 68986903415887453706751896061239479418, .node = "testNode-19", .pods = [k8spolicy.PodReference{.name = "testPod-191", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 75942463945999836881962796856495961412, .node = "testNode-20", .pods = [k8spolicy.PodReference{.name = "testPod-202", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 83785598465348900714859335941647885594, .node = "testNode-20", .pods = [k8spolicy.PodReference{.name = "testPod-204", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 96129841428936758687501228319270128609, .node = "testNode-20", .pods = [k8spolicy.PodReference{.name = "testPod-209", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 98084079121610444304202333165918820717, .node = "testNode-19", .pods = [k8spolicy.PodReference{.name = "testPod-196", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 119943215358358031355366371303809726165, .node = "testNode-20", .pods = [k8spolicy.PodReference{.name = "testPod-208", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 157653470633199016616762445680041740027, .node = "testNode-18", .pods = [k8spolicy.PodReference{.name = "testPod-183", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 162011623228205519824689437489696841739, .node = "testNode-19", .pods = [k8spolicy.PodReference{.name = "testPod-197", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 185095757664273280601006928671604579678, .node = "testNode-21", .pods = [k8spolicy.PodReference{.name = "testPod-210", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 206113199014032320922053922067967002044, .node = "testNode-20", .pods = [k8spolicy.PodReference{.name = "testPod-200", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 227490618867503998727090134637222993911, .node = "testNode-20", .pods = [k8spolicy.PodReference{.name = "testPod-207", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 233478311629120248037837049617413376244, .node = "testNode-19", .pods = [k8spolicy.PodReference{.name = "testPod-190", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 236585385853030717689703769531827284787, .node = "testNode-18", .pods = [k8spolicy.PodReference{.name = "testPod-189", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 242363711763724829089145815052878036562, .node = "testNode-20", .pods = [k8spolicy.PodReference{.name = "testPod-205", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 242902656798424184510869763157271317029, .node = "testNode-20", .pods = [k8spolicy.PodReference{.name = "testPod-206", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 243387286179380872418279174833502995369, .node = "testNode-21", .pods = [k8spolicy.PodReference{.name = "testPod-212", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 253301405221812236416901820238840297181, .node = "testNode-19", .pods = [k8spolicy.PodReference{.name = "testPod-199", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 254650429442398006867559744965885096267, .node = "testNode-19", .pods = [k8spolicy.PodReference{.name = "testPod-192", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 302049344293990434719066002872617220537, .node = "testNode-19", .pods = [k8spolicy.PodReference{.name = "testPod-195", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 319667111843607341849615986754096266255, .node = "testNode-21", .pods = [k8spolicy.PodReference{.name = "testPod-214", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 323172733288198583288479242077076248832, .node = "testNode-21", .pods = [k8spolicy.PodReference{.name = "testPod-213", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 325194613543852890456429179505499702299, .node = "testNode-18", .pods = [k8spolicy.PodReference{.name = "testPod-187", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 335016774647576936724650941556949766459, .node = "testNode-18", .pods = [k8spolicy.PodReference{.name = "testPod-186", .namespace = "testNamespace"}]}: +1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 2726805893817710174022653320676471588, .span = "testNode-18"}: +1
AppliedToGroupSpan{.appliedToGroup = 17256720215278577374007817148573614136, .span = "testNode-18"}: +1
AppliedToGroupSpan{.appliedToGroup = 20328604585586023979547482022759361984, .span = "testNode-18"}: +1
AppliedToGroupSpan{.appliedToGroup = 25696023426616215154958532051893520306, .span = "testNode-19"}: +1
AppliedToGroupSpan{.appliedToGroup = 31006974088550824198755824768856600235, .span = "testNode-20"}: +1
AppliedToGroupSpan{.appliedToGroup = 33703463587909161242769186897832987590, .span = "testNode-20"}: +1
AppliedToGroupSpan{.appliedToGroup = 40907116952880894293774087494266444075, .span = "testNode-21"}: +1
AppliedToGroupSpan{.appliedToGroup = 53461813972510612144985104795020463894, .span = "testNode-19"}: +1
AppliedToGroupSpan{.appliedToGroup = 57300239076662165375439007813575462000, .span = "testNode-19"}: +1
AppliedToGroupSpan{.appliedToGroup = 68986903415887453706751896061239479418, .span = "testNode-19"}: +1
AppliedToGroupSpan{.appliedToGroup = 75942463945999836881962796856495961412, .span = "testNode-20"}: +1
AppliedToGroupSpan{.appliedToGroup = 83785598465348900714859335941647885594, .span = "testNode-20"}: +1
AppliedToGroupSpan{.appliedToGroup = 96129841428936758687501228319270128609, .span = "testNode-20"}: +1
AppliedToGroupSpan{.appliedToGroup = 98084079121610444304202333165918820717, .span = "testNode-19"}: +1
AppliedToGroupSpan{.appliedToGroup = 119943215358358031355366371303809726165, .span = "testNode-20"}: +1
AppliedToGroupSpan{.appliedToGroup = 157653470633199016616762445680041740027, .span = "testNode-18"}: +1
AppliedToGroupSpan{.appliedToGroup = 162011623228205519824689437489696841739, .span = "testNode-19"}: +1
AppliedToGroupSpan{.appliedToGroup = 185095757664273280601006928671604579678, .span = "testNode-21"}: +1
AppliedToGroupSpan{.appliedToGroup = 206113199014032320922053922067967002044, .span = "testNode-20"}: +1
AppliedToGroupSpan{.appliedToGroup = 227490618867503998727090134637222993911, .span = "testNode-20"}: +1
AppliedToGroupSpan{.appliedToGroup = 233478311629120248037837049617413376244, .span = "testNode-19"}: +1
AppliedToGroupSpan{.appliedToGroup = 236585385853030717689703769531827284787, .span = "testNode-18"}: +1
AppliedToGroupSpan{.appliedToGroup = 242363711763724829089145815052878036562, .span = "testNode-20"}: +1
AppliedToGroupSpan{.appliedToGroup = 242902656798424184510869763157271317029, .span = "testNode-20"}: +1
AppliedToGroupSpan{.appliedToGroup = 243387286179380872418279174833502995369, .span = "testNode-21"}: +1
AppliedToGroupSpan{.appliedToGroup = 253301405221812236416901820238840297181, .span = "testNode-19"}: +1
AppliedToGroupSpan{.appliedToGroup = 254650429442398006867559744965885096267, .span = "testNode-19"}: +1
AppliedToGroupSpan{.appliedToGroup = 302049344293990434719066002872617220537, .span = "testNode-19"}: +1
AppliedToGroupSpan{.appliedToGroup = 319667111843607341849615986754096266255, .span = "testNode-21"}: +1
AppliedToGroupSpan{.appliedToGroup = 323172733288198583288479242077076248832, .span = "testNode-21"}: +1
AppliedToGroupSpan{.appliedToGroup = 325194613543852890456429179505499702299, .span = "testNode-18"}: +1
AppliedToGroupSpan{.appliedToGroup = 335016774647576936724650941556949766459, .span = "testNode-18"}: +1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-183"}, .name = "testNP-183", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [2726805893817710174022653320676471588], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [157653470633199016616762445680041740027]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-184"}, .name = "testNP-184", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [17256720215278577374007817148573614136], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [2726805893817710174022653320676471588]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-185"}, .name = "testNP-185", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [335016774647576936724650941556949766459], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [17256720215278577374007817148573614136]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-186"}, .name = "testNP-186", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [325194613543852890456429179505499702299], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [335016774647576936724650941556949766459]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-187"}, .name = "testNP-187", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [20328604585586023979547482022759361984], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [325194613543852890456429179505499702299]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-188"}, .name = "testNP-188", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [236585385853030717689703769531827284787], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [20328604585586023979547482022759361984]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-189"}, .name = "testNP-189", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [233478311629120248037837049617413376244], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [236585385853030717689703769531827284787]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-190"}, .name = "testNP-190", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [68986903415887453706751896061239479418], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [233478311629120248037837049617413376244]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-191"}, .name = "testNP-191", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [254650429442398006867559744965885096267], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [68986903415887453706751896061239479418]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-192"}, .name = "testNP-192", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [57300239076662165375439007813575462000], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [254650429442398006867559744965885096267]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-193"}, .name = "testNP-193", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [53461813972510612144985104795020463894], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [57300239076662165375439007813575462000]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-194"}, .name = "testNP-194", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [302049344293990434719066002872617220537], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [53461813972510612144985104795020463894]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-195"}, .name = "testNP-195", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [98084079121610444304202333165918820717], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [302049344293990434719066002872617220537]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-196"}, .name = "testNP-196", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [162011623228205519824689437489696841739], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [98084079121610444304202333165918820717]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-197"}, .name = "testNP-197", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [25696023426616215154958532051893520306], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [162011623228205519824689437489696841739]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-198"}, .name = "testNP-198", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [253301405221812236416901820238840297181], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [25696023426616215154958532051893520306]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-199"}, .name = "testNP-199", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [206113199014032320922053922067967002044], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [253301405221812236416901820238840297181]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-200"}, .name = "testNP-200", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [31006974088550824198755824768856600235], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [206113199014032320922053922067967002044]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-201"}, .name = "testNP-201", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [75942463945999836881962796856495961412], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [31006974088550824198755824768856600235]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-202"}, .name = "testNP-202", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [33703463587909161242769186897832987590], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [75942463945999836881962796856495961412]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-203"}, .name = "testNP-203", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [83785598465348900714859335941647885594], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [33703463587909161242769186897832987590]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-204"}, .name = "testNP-204", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [242363711763724829089145815052878036562], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [83785598465348900714859335941647885594]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-205"}, .name = "testNP-205", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [242902656798424184510869763157271317029], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [242363711763724829089145815052878036562]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-206"}, .name = "testNP-206", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [227490618867503998727090134637222993911], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [242902656798424184510869763157271317029]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-207"}, .name = "testNP-207", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [119943215358358031355366371303809726165], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [227490618867503998727090134637222993911]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-208"}, .name = "testNP-208", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [96129841428936758687501228319270128609], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [119943215358358031355366371303809726165]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-209"}, .name = "testNP-209", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [185095757664273280601006928671604579678], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [96129841428936758687501228319270128609]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-210"}, .name = "testNP-210", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [40907116952880894293774087494266444075], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [185095757664273280601006928671604579678]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-211"}, .name = "testNP-211", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [243387286179380872418279174833502995369], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [40907116952880894293774087494266444075]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-212"}, .name = "testNP-212", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [323172733288198583288479242077076248832], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [243387286179380872418279174833502995369]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-213"}, .name = "testNP-213", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [319667111843607341849615986754096266255], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [323172733288198583288479242077076248832]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-214"}, .name = "testNP-214", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [273903785612067732148175004176344542828], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [319667111843607341849615986754096266255]}: +1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-183", .policy = k8spolicy.UID{.uid = "testNP-183"}, .node = "testNode-18"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-184", .policy = k8spolicy.UID{.uid = "testNP-184"}, .node = "testNode-18"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-185", .policy = k8spolicy.UID{.uid = "testNP-185"}, .node = "testNode-18"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-186", .policy = k8spolicy.UID{.uid = "testNP-186"}, .node = "testNode-18"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-187", .policy = k8spolicy.UID{.uid = "testNP-187"}, .node = "testNode-18"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-188", .policy = k8spolicy.UID{.uid = "testNP-188"}, .node = "testNode-18"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-189", .policy = k8spolicy.UID{.uid = "testNP-189"}, .node = "testNode-18"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-190", .policy = k8spolicy.UID{.uid = "testNP-190"}, .node = "testNode-19"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-191", .policy = k8spolicy.UID{.uid = "testNP-191"}, .node = "testNode-19"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-192", .policy = k8spolicy.UID{.uid = "testNP-192"}, .node = "testNode-19"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-193", .policy = k8spolicy.UID{.uid = "testNP-193"}, .node = "testNode-19"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-194", .policy = k8spolicy.UID{.uid = "testNP-194"}, .node = "testNode-19"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-195", .policy = k8spolicy.UID{.uid = "testNP-195"}, .node = "testNode-19"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-196", .policy = k8spolicy.UID{.uid = "testNP-196"}, .node = "testNode-19"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-197", .policy = k8spolicy.UID{.uid = "testNP-197"}, .node = "testNode-19"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-198", .policy = k8spolicy.UID{.uid = "testNP-198"}, .node = "testNode-19"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-199", .policy = k8spolicy.UID{.uid = "testNP-199"}, .node = "testNode-19"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-200", .policy = k8spolicy.UID{.uid = "testNP-200"}, .node = "testNode-20"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-201", .policy = k8spolicy.UID{.uid = "testNP-201"}, .node = "testNode-20"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-202", .policy = k8spolicy.UID{.uid = "testNP-202"}, .node = "testNode-20"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-203", .policy = k8spolicy.UID{.uid = "testNP-203"}, .node = "testNode-20"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-204", .policy = k8spolicy.UID{.uid = "testNP-204"}, .node = "testNode-20"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-205", .policy = k8spolicy.UID{.uid = "testNP-205"}, .node = "testNode-20"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-206", .policy = k8spolicy.UID{.uid = "testNP-206"}, .node = "testNode-20"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-207", .policy = k8spolicy.UID{.uid = "testNP-207"}, .node = "testNode-20"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-208", .policy = k8spolicy.UID{.uid = "testNP-208"}, .node = "testNode-20"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-209", .policy = k8spolicy.UID{.uid = "testNP-209"}, .node = "testNode-20"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-210", .policy = k8spolicy.UID{.uid = "testNP-210"}, .node = "testNode-21"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-211", .policy = k8spolicy.UID{.uid = "testNP-211"}, .node = "testNode-21"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-212", .policy = k8spolicy.UID{.uid = "testNP-212"}, .node = "testNode-21"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-213", .policy = k8spolicy.UID{.uid = "testNP-213"}, .node = "testNode-21"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-214", .policy = k8spolicy.UID{.uid = "testNP-214"}, .node = "testNode-21"}: +1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 5000348061321598198544054792473025953, .address = "10.10.24.1"}: +1
AddressGroupAddress{.addressGroup = 19954882372624767847269339684625319556, .address = "10.10.22.0"}: +1
AddressGroupAddress{.addressGroup = 24207714993854062402672490706735243245, .address = "10.10.23.4"}: +1
AddressGroupAddress{.addressGroup = 32799975566556251485002269396672892334, .address = "10.10.24.4"}: +1
AddressGroupAddress{.addressGroup = 50357878079141964382064563425032511967, .address = "10.10.22.5"}: +1
AddressGroupAddress{.addressGroup = 62732359457955505848815890202296019829, .address = "10.10.24.7"}: +1
AddressGroupAddress{.addressGroup = 65075389810740430332440348069746261908, .address = "10.10.22.3"}: +1
AddressGroupAddress{.addressGroup = 78721238079268886571836885286107397058, .address = "10.10.22.9"}: +1
AddressGroupAddress{.addressGroup = 81017432767208634160878707617635971083, .address = "10.10.22.7"}: +1
AddressGroupAddress{.addressGroup = 98752078049165748701833396063987600954, .address = "10.10.23.3"}: +1
AddressGroupAddress{.addressGroup = 121166866869133903682801473025245130326, .address = "10.10.22.8"}: +1
AddressGroupAddress{.addressGroup = 131788962422218172241686865476794051526, .address = "10.10.23.7"}: +1
AddressGroupAddress{.addressGroup = 167530786211348237968764042909968735852, .address = "10.10.23.9"}: +1
AddressGroupAddress{.addressGroup = 190460611465846798285191163804162431147, .address = "10.10.24.3"}: +1
AddressGroupAddress{.addressGroup = 200200896977569317375034003776843348530, .address = "10.10.23.8"}: +1
AddressGroupAddress{.addressGroup = 200459869075163341577850205116491218554, .address = "10.10.23.5"}: +1
AddressGroupAddress{.addressGroup = 200625523123688564407237909476201822814, .address = "10.10.22.4"}: +1
AddressGroupAddress{.addressGroup = 233265439487618365758316340603862945483, .address = "10.10.24.5"}: +1
AddressGroupAddress{.addressGroup = 244224093007820216493804104085222208038, .address = "10.10.24.6"}: +1
AddressGroupAddress{.addressGroup = 254274852237376053379399165541838943723, .address = "10.10.22.2"}: +1
AddressGroupAddress{.addressGroup = 259240135738401922606075083345883065730, .address = "10.10.23.2"}: +1
AddressGroupAddress{.addressGroup = 268345534186152870112432675652845772444, .address = "10.10.23.6"}: +1
AddressGroupAddress{.addressGroup = 272361320202870035058683159969001521237, .address = "10.10.21.7"}: +1
AddressGroupAddress{.addressGroup = 272617845590879382841056528498694166965, .address = "10.10.21.8"}: +1
AddressGroupAddress{.addressGroup = 291552711123575801776829061693263992941, .address = "10.10.23.0"}: +1
AddressGroupAddress{.addressGroup = 297641443841427172847837255856041654708, .address = "10.10.22.6"}: +1
AddressGroupAddress{.addressGroup = 298696299457761002590106537850835748215, .address = "10.10.21.6"}: +1
AddressGroupAddress{.addressGroup = 303083713667118274442842133486781045329, .address = "10.10.24.2"}: +1
AddressGroupAddress{.addressGroup = 305857481517685389569122444645882591043, .address = "10.10.21.9"}: +1
AddressGroupAddress{.addressGroup = 320929280564012470485576605372406179473, .address = "10.10.24.0"}: +1
AddressGroupAddress{.addressGroup = 325361514656320789968046420851435115919, .address = "10.10.23.1"}: +1
AddressGroupAddress{.addressGroup = 333534983878518753844206178808645995449, .address = "10.10.22.1"}: +1
AddressGroupDescr:
AddressGroupDescr{.name = "03c30831-91b6-580f-a2e1-24562dcc1da1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-241]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-241")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "0f032ba9-271b-5ea5-a68c-a17f073e0684", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-220]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-220")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "12363c7f-6a05-50df-bc3c-49a85d7c9fed", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-234]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-234")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "18ad0ba6-aaa4-574f-a7e5-5380d9decdae", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-244]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-244")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "25e29314-9597-55b2-b357-ce6cad43a1df", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-225]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-225")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "2f31d01d-e600-5abf-a95d-7f691b736b75", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-247]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-247")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "30f5106e-9e8f-5329-a04f-f5223d313f94", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-223]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-223")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "3b3928b2-19ee-5d88-8ffb-4da451fabbc2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-229]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-229")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "3cf363d5-9f6d-5fbe-bce8-ead2115f300b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-227]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-227")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "4a4af55a-eac9-527c-8aee-491684848e3a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-233]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-233")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "5b27e3c4-7fb5-5646-9309-e6b53a932e56", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-228]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-228")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "6325a183-1cca-5fa2-93a7-8d93436debc6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-237]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-237")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "7e09417a-9bf1-5ba5-9fa1-211122179e6c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-239]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-239")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "8f496125-eb17-5c5e-8643-dd1f181798ab", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-243]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-243")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "969d4a4d-0d73-5ff1-ac23-9a3c6060fa32", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-238]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-238")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "96cf2a9c-7745-5799-805c-f5491131be7a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-235]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-235")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "96ef11fc-8238-5331-acdc-7a54fa317a5e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-224]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-224")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "af7d4a1c-0403-5ead-b5ab-424c37808ecb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-245]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-245")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "b7bbd971-6410-546b-bdec-d44038b03226", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-246]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-246")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "bf4b8e21-c64f-52cb-a0e0-5c7a300ef5eb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-222]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-222")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "c307d582-5f15-57ff-9bc8-84b78be06d82", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-232]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-232")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "c9e17850-2963-5c1f-aba2-fe7636551e9c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-236]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-236")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "cce6e1d9-a389-58ee-bf74-9faadfa24055", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-217]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-217")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "cd184987-3c4e-52a2-82de-406b959e19b5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-218]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-218")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "db570279-dd87-5b76-8602-bd407ca2586d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-230]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-230")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "dfeba82d-1edf-50bf-8ab9-0f84b7d679b4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-226]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-226")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "e0b6d092-d299-5591-ac2f-94ba68eac577", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-216]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-216")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "e403cccb-89fd-5709-a1f4-49bbfcf39a51", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-242]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-242")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "e61a021b-d18d-5759-bc20-c440a1def743", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-219]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-219")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "f170bb2c-7146-5078-9c22-3bfd840e2691", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-240]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-240")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "f4c6592f-9d24-5299-a825-1b870d36158f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-231]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-231")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "faec8054-e271-5a63-8328-d0b7a1decbb9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-221]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-221")], .matchExpressions = []}}}}: +1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 5000348061321598198544054792473025953, .node = "testNode-24"}: +1
AddressGroupSpan{.addressGroup = 19954882372624767847269339684625319556, .node = "testNode-21"}: +1
AddressGroupSpan{.addressGroup = 24207714993854062402672490706735243245, .node = "testNode-23"}: +1
AddressGroupSpan{.addressGroup = 32799975566556251485002269396672892334, .node = "testNode-24"}: +1
AddressGroupSpan{.addressGroup = 50357878079141964382064563425032511967, .node = "testNode-22"}: +1
AddressGroupSpan{.addressGroup = 62732359457955505848815890202296019829, .node = "testNode-24"}: +1
AddressGroupSpan{.addressGroup = 65075389810740430332440348069746261908, .node = "testNode-22"}: +1
AddressGroupSpan{.addressGroup = 78721238079268886571836885286107397058, .node = "testNode-22"}: +1
AddressGroupSpan{.addressGroup = 81017432767208634160878707617635971083, .node = "testNode-22"}: +1
AddressGroupSpan{.addressGroup = 98752078049165748701833396063987600954, .node = "testNode-23"}: +1
AddressGroupSpan{.addressGroup = 121166866869133903682801473025245130326, .node = "testNode-22"}: +1
AddressGroupSpan{.addressGroup = 131788962422218172241686865476794051526, .node = "testNode-23"}: +1
AddressGroupSpan{.addressGroup = 167530786211348237968764042909968735852, .node = "testNode-23"}: +1
AddressGroupSpan{.addressGroup = 190460611465846798285191163804162431147, .node = "testNode-24"}: +1
AddressGroupSpan{.addressGroup = 200200896977569317375034003776843348530, .node = "testNode-23"}: +1
AddressGroupSpan{.addressGroup = 200459869075163341577850205116491218554, .node = "testNode-23"}: +1
AddressGroupSpan{.addressGroup = 200625523123688564407237909476201822814, .node = "testNode-22"}: +1
AddressGroupSpan{.addressGroup = 233265439487618365758316340603862945483, .node = "testNode-24"}: +1
AddressGroupSpan{.addressGroup = 244224093007820216493804104085222208038, .node = "testNode-24"}: +1
AddressGroupSpan{.addressGroup = 254274852237376053379399165541838943723, .node = "testNode-22"}: +1
AddressGroupSpan{.addressGroup = 259240135738401922606075083345883065730, .node = "testNode-23"}: +1
AddressGroupSpan{.addressGroup = 268345534186152870112432675652845772444, .node = "testNode-23"}: +1
AddressGroupSpan{.addressGroup = 272361320202870035058683159969001521237, .node = "testNode-21"}: +1
AddressGroupSpan{.addressGroup = 272617845590879382841056528498694166965, .node = "testNode-21"}: +1
AddressGroupSpan{.addressGroup = 291552711123575801776829061693263992941, .node = "testNode-22"}: +1
AddressGroupSpan{.addressGroup = 297641443841427172847837255856041654708, .node = "testNode-22"}: +1
AddressGroupSpan{.addressGroup = 298696299457761002590106537850835748215, .node = "testNode-21"}: +1
AddressGroupSpan{.addressGroup = 303083713667118274442842133486781045329, .node = "testNode-24"}: +1
AddressGroupSpan{.addressGroup = 305857481517685389569122444645882591043, .node = "testNode-21"}: +1
AddressGroupSpan{.addressGroup = 320929280564012470485576605372406179473, .node = "testNode-23"}: +1
AddressGroupSpan{.addressGroup = 325361514656320789968046420851435115919, .node = "testNode-23"}: +1
AddressGroupSpan{.addressGroup = 333534983878518753844206178808645995449, .node = "testNode-22"}: +1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "03c30831-91b6-580f-a2e1-24562dcc1da1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-241]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-241")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "0f032ba9-271b-5ea5-a68c-a17f073e0684", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-220]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-220")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "12363c7f-6a05-50df-bc3c-49a85d7c9fed", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-234]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-234")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "18ad0ba6-aaa4-574f-a7e5-5380d9decdae", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-244]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-244")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "25e29314-9597-55b2-b357-ce6cad43a1df", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-225]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-225")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "30f5106e-9e8f-5329-a04f-f5223d313f94", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-223]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-223")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "3b3928b2-19ee-5d88-8ffb-4da451fabbc2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-229]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-229")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "3cf363d5-9f6d-5fbe-bce8-ead2115f300b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-227]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-227")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "4a4af55a-eac9-527c-8aee-491684848e3a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-233]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-233")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "5b27e3c4-7fb5-5646-9309-e6b53a932e56", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-228]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-228")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "6325a183-1cca-5fa2-93a7-8d93436debc6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-237]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-237")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "7e09417a-9bf1-5ba5-9fa1-211122179e6c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-239]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-239")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "8f496125-eb17-5c5e-8643-dd1f181798ab", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-243]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-243")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "969d4a4d-0d73-5ff1-ac23-9a3c6060fa32", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-238]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-238")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "96cf2a9c-7745-5799-805c-f5491131be7a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-235]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-235")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "96ef11fc-8238-5331-acdc-7a54fa317a5e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-224]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-224")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "af7d4a1c-0403-5ead-b5ab-424c37808ecb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-245]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-245")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "b7bbd971-6410-546b-bdec-d44038b03226", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-246]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-246")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "bf4b8e21-c64f-52cb-a0e0-5c7a300ef5eb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-222]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-222")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "c307d582-5f15-57ff-9bc8-84b78be06d82", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-232]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-232")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "c9e17850-2963-5c1f-aba2-fe7636551e9c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-236]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-236")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "cce6e1d9-a389-58ee-bf74-9faadfa24055", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-217]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-217")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "cd184987-3c4e-52a2-82de-406b959e19b5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-218]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-218")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "ce0ff344-2eaf-5ade-9cd0-be745f89ee6c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-215]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-215")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "db570279-dd87-5b76-8602-bd407ca2586d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-230]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-230")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "dfeba82d-1edf-50bf-8ab9-0f84b7d679b4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-226]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-226")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "e0b6d092-d299-5591-ac2f-94ba68eac577", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-216]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-216")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "e403cccb-89fd-5709-a1f4-49bbfcf39a51", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-242]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-242")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "e61a021b-d18d-5759-bc20-c440a1def743", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-219]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-219")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "f170bb2c-7146-5078-9c22-3bfd840e2691", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-240]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-240")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "f4c6592f-9d24-5299-a825-1b870d36158f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-231]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-231")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "faec8054-e271-5a63-8328-d0b7a1decbb9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-221]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-221")], .matchExpressions = []}}}}: +1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 5000348061321598198544054792473025953, .node = "testNode-24", .pods = [k8spolicy.PodReference{.name = "testPod-241", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 19954882372624767847269339684625319556, .node = "testNode-22", .pods = [k8spolicy.PodReference{.name = "testPod-220", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 24207714993854062402672490706735243245, .node = "testNode-23", .pods = [k8spolicy.PodReference{.name = "testPod-234", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 32799975566556251485002269396672892334, .node = "testNode-24", .pods = [k8spolicy.PodReference{.name = "testPod-244", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 50357878079141964382064563425032511967, .node = "testNode-22", .pods = [k8spolicy.PodReference{.name = "testPod-225", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 65075389810740430332440348069746261908, .node = "testNode-22", .pods = [k8spolicy.PodReference{.name = "testPod-223", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 78721238079268886571836885286107397058, .node = "testNode-22", .pods = [k8spolicy.PodReference{.name = "testPod-229", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 81017432767208634160878707617635971083, .node = "testNode-22", .pods = [k8spolicy.PodReference{.name = "testPod-227", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 98752078049165748701833396063987600954, .node = "testNode-23", .pods = [k8spolicy.PodReference{.name = "testPod-233", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 121166866869133903682801473025245130326, .node = "testNode-22", .pods = [k8spolicy.PodReference{.name = "testPod-228", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 131788962422218172241686865476794051526, .node = "testNode-23", .pods = [k8spolicy.PodReference{.name = "testPod-237", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 167530786211348237968764042909968735852, .node = "testNode-23", .pods = [k8spolicy.PodReference{.name = "testPod-239", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 190460611465846798285191163804162431147, .node = "testNode-24", .pods = [k8spolicy.PodReference{.name = "testPod-243", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 200200896977569317375034003776843348530, .node = "testNode-23", .pods = [k8spolicy.PodReference{.name = "testPod-238", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 200459869075163341577850205116491218554, .node = "testNode-23", .pods = [k8spolicy.PodReference{.name = "testPod-235", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 200625523123688564407237909476201822814, .node = "testNode-22", .pods = [k8spolicy.PodReference{.name = "testPod-224", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 233265439487618365758316340603862945483, .node = "testNode-24", .pods = [k8spolicy.PodReference{.name = "testPod-245", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 244224093007820216493804104085222208038, .node = "testNode-24", .pods = [k8spolicy.PodReference{.name = "testPod-246", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 254274852237376053379399165541838943723, .node = "testNode-22", .pods = [k8spolicy.PodReference{.name = "testPod-222", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 259240135738401922606075083345883065730, .node = "testNode-23", .pods = [k8spolicy.PodReference{.name = "testPod-232", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 268345534186152870112432675652845772444, .node = "testNode-23", .pods = [k8spolicy.PodReference{.name = "testPod-236", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 272361320202870035058683159969001521237, .node = "testNode-21", .pods = [k8spolicy.PodReference{.name = "testPod-217", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 272617845590879382841056528498694166965, .node = "testNode-21", .pods = [k8spolicy.PodReference{.name = "testPod-218", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 273903785612067732148175004176344542828, .node = "testNode-21", .pods = [k8spolicy.PodReference{.name = "testPod-215", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 291552711123575801776829061693263992941, .node = "testNode-23", .pods = [k8spolicy.PodReference{.name = "testPod-230", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 297641443841427172847837255856041654708, .node = "testNode-22", .pods = [k8spolicy.PodReference{.name = "testPod-226", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 298696299457761002590106537850835748215, .node = "testNode-21", .pods = [k8spolicy.PodReference{.name = "testPod-216", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 303083713667118274442842133486781045329, .node = "testNode-24", .pods = [k8spolicy.PodReference{.name = "testPod-242", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 305857481517685389569122444645882591043, .node = "testNode-21", .pods = [k8spolicy.PodReference{.name = "testPod-219", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 320929280564012470485576605372406179473, .node = "testNode-24", .pods = [k8spolicy.PodReference{.name = "testPod-240", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 325361514656320789968046420851435115919, .node = "testNode-23", .pods = [k8spolicy.PodReference{.name = "testPod-231", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 333534983878518753844206178808645995449, .node = "testNode-22", .pods = [k8spolicy.PodReference{.name = "testPod-221", .namespace = "testNamespace"}]}: +1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 5000348061321598198544054792473025953, .span = "testNode-24"}: +1
AppliedToGroupSpan{.appliedToGroup = 19954882372624767847269339684625319556, .span = "testNode-22"}: +1
AppliedToGroupSpan{.appliedToGroup = 24207714993854062402672490706735243245, .span = "testNode-23"}: +1
AppliedToGroupSpan{.appliedToGroup = 32799975566556251485002269396672892334, .span = "testNode-24"}: +1
AppliedToGroupSpan{.appliedToGroup = 50357878079141964382064563425032511967, .span = "testNode-22"}: +1
AppliedToGroupSpan{.appliedToGroup = 65075389810740430332440348069746261908, .span = "testNode-22"}: +1
AppliedToGroupSpan{.appliedToGroup = 78721238079268886571836885286107397058, .span = "testNode-22"}: +1
AppliedToGroupSpan{.appliedToGroup = 81017432767208634160878707617635971083, .span = "testNode-22"}: +1
AppliedToGroupSpan{.appliedToGroup = 98752078049165748701833396063987600954, .span = "testNode-23"}: +1
AppliedToGroupSpan{.appliedToGroup = 121166866869133903682801473025245130326, .span = "testNode-22"}: +1
AppliedToGroupSpan{.appliedToGroup = 131788962422218172241686865476794051526, .span = "testNode-23"}: +1
AppliedToGroupSpan{.appliedToGroup = 167530786211348237968764042909968735852, .span = "testNode-23"}: +1
AppliedToGroupSpan{.appliedToGroup = 190460611465846798285191163804162431147, .span = "testNode-24"}: +1
AppliedToGroupSpan{.appliedToGroup = 200200896977569317375034003776843348530, .span = "testNode-23"}: +1
AppliedToGroupSpan{.appliedToGroup = 200459869075163341577850205116491218554, .span = "testNode-23"}: +1
AppliedToGroupSpan{.appliedToGroup = 200625523123688564407237909476201822814, .span = "testNode-22"}: +1
AppliedToGroupSpan{.appliedToGroup = 233265439487618365758316340603862945483, .span = "testNode-24"}: +1
AppliedToGroupSpan{.appliedToGroup = 244224093007820216493804104085222208038, .span = "testNode-24"}: +1
AppliedToGroupSpan{.appliedToGroup = 254274852237376053379399165541838943723, .span = "testNode-22"}: +1
AppliedToGroupSpan{.appliedToGroup = 259240135738401922606075083345883065730, .span = "testNode-23"}: +1
AppliedToGroupSpan{.appliedToGroup = 268345534186152870112432675652845772444, .span = "testNode-23"}: +1
AppliedToGroupSpan{.appliedToGroup = 272361320202870035058683159969001521237, .span = "testNode-21"}: +1
AppliedToGroupSpan{.appliedToGroup = 272617845590879382841056528498694166965, .span = "testNode-21"}: +1
AppliedToGroupSpan{.appliedToGroup = 273903785612067732148175004176344542828, .span = "testNode-21"}: +1
AppliedToGroupSpan{.appliedToGroup = 291552711123575801776829061693263992941, .span = "testNode-23"}: +1
AppliedToGroupSpan{.appliedToGroup = 297641443841427172847837255856041654708, .span = "testNode-22"}: +1
AppliedToGroupSpan{.appliedToGroup = 298696299457761002590106537850835748215, .span = "testNode-21"}: +1
AppliedToGroupSpan{.appliedToGroup = 303083713667118274442842133486781045329, .span = "testNode-24"}: +1
AppliedToGroupSpan{.appliedToGroup = 305857481517685389569122444645882591043, .span = "testNode-21"}: +1
AppliedToGroupSpan{.appliedToGroup = 320929280564012470485576605372406179473, .span = "testNode-24"}: +1
AppliedToGroupSpan{.appliedToGroup = 325361514656320789968046420851435115919, .span = "testNode-23"}: +1
AppliedToGroupSpan{.appliedToGroup = 333534983878518753844206178808645995449, .span = "testNode-22"}: +1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-215"}, .name = "testNP-215", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [298696299457761002590106537850835748215], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [273903785612067732148175004176344542828]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-216"}, .name = "testNP-216", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [272361320202870035058683159969001521237], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [298696299457761002590106537850835748215]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-217"}, .name = "testNP-217", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [272617845590879382841056528498694166965], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [272361320202870035058683159969001521237]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-218"}, .name = "testNP-218", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [305857481517685389569122444645882591043], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [272617845590879382841056528498694166965]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-219"}, .name = "testNP-219", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [19954882372624767847269339684625319556], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [305857481517685389569122444645882591043]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-220"}, .name = "testNP-220", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [333534983878518753844206178808645995449], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [19954882372624767847269339684625319556]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-221"}, .name = "testNP-221", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [254274852237376053379399165541838943723], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [333534983878518753844206178808645995449]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-222"}, .name = "testNP-222", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [65075389810740430332440348069746261908], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [254274852237376053379399165541838943723]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-223"}, .name = "testNP-223", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [200625523123688564407237909476201822814], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [65075389810740430332440348069746261908]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-224"}, .name = "testNP-224", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [50357878079141964382064563425032511967], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [200625523123688564407237909476201822814]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-225"}, .name = "testNP-225", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [297641443841427172847837255856041654708], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [50357878079141964382064563425032511967]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-226"}, .name = "testNP-226", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [81017432767208634160878707617635971083], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [297641443841427172847837255856041654708]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-227"}, .name = "testNP-227", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [121166866869133903682801473025245130326], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [81017432767208634160878707617635971083]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-228"}, .name = "testNP-228", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [78721238079268886571836885286107397058], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [121166866869133903682801473025245130326]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-229"}, .name = "testNP-229", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [291552711123575801776829061693263992941], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [78721238079268886571836885286107397058]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-230"}, .name = "testNP-230", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [325361514656320789968046420851435115919], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [291552711123575801776829061693263992941]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-231"}, .name = "testNP-231", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [259240135738401922606075083345883065730], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [325361514656320789968046420851435115919]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-232"}, .name = "testNP-232", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [98752078049165748701833396063987600954], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [259240135738401922606075083345883065730]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-233"}, .name = "testNP-233", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [24207714993854062402672490706735243245], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [98752078049165748701833396063987600954]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-234"}, .name = "testNP-234", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [200459869075163341577850205116491218554], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [24207714993854062402672490706735243245]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-235"}, .name = "testNP-235", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [268345534186152870112432675652845772444], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [200459869075163341577850205116491218554]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-236"}, .name = "testNP-236", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [131788962422218172241686865476794051526], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [268345534186152870112432675652845772444]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-237"}, .name = "testNP-237", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [200200896977569317375034003776843348530], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [131788962422218172241686865476794051526]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-238"}, .name = "testNP-238", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [167530786211348237968764042909968735852], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [200200896977569317375034003776843348530]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-239"}, .name = "testNP-239", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [320929280564012470485576605372406179473], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [167530786211348237968764042909968735852]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-240"}, .name = "testNP-240", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [5000348061321598198544054792473025953], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [320929280564012470485576605372406179473]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-241"}, .name = "testNP-241", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [303083713667118274442842133486781045329], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [5000348061321598198544054792473025953]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-242"}, .name = "testNP-242", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [190460611465846798285191163804162431147], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [303083713667118274442842133486781045329]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-243"}, .name = "testNP-243", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [32799975566556251485002269396672892334], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [190460611465846798285191163804162431147]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-244"}, .name = "testNP-244", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [233265439487618365758316340603862945483], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [32799975566556251485002269396672892334]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-245"}, .name = "testNP-245", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [244224093007820216493804104085222208038], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [233265439487618365758316340603862945483]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-246"}, .name = "testNP-246", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [62732359457955505848815890202296019829], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [244224093007820216493804104085222208038]}: +1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-215", .policy = k8spolicy.UID{.uid = "testNP-215"}, .node = "testNode-21"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-216", .policy = k8spolicy.UID{.uid = "testNP-216"}, .node = "testNode-21"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-217", .policy = k8spolicy.UID{.uid = "testNP-217"}, .node = "testNode-21"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-218", .policy = k8spolicy.UID{.uid = "testNP-218"}, .node = "testNode-21"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-219", .policy = k8spolicy.UID{.uid = "testNP-219"}, .node = "testNode-21"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-220", .policy = k8spolicy.UID{.uid = "testNP-220"}, .node = "testNode-22"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-221", .policy = k8spolicy.UID{.uid = "testNP-221"}, .node = "testNode-22"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-222", .policy = k8spolicy.UID{.uid = "testNP-222"}, .node = "testNode-22"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-223", .policy = k8spolicy.UID{.uid = "testNP-223"}, .node = "testNode-22"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-224", .policy = k8spolicy.UID{.uid = "testNP-224"}, .node = "testNode-22"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-225", .policy = k8spolicy.UID{.uid = "testNP-225"}, .node = "testNode-22"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-226", .policy = k8spolicy.UID{.uid = "testNP-226"}, .node = "testNode-22"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-227", .policy = k8spolicy.UID{.uid = "testNP-227"}, .node = "testNode-22"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-228", .policy = k8spolicy.UID{.uid = "testNP-228"}, .node = "testNode-22"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-229", .policy = k8spolicy.UID{.uid = "testNP-229"}, .node = "testNode-22"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-230", .policy = k8spolicy.UID{.uid = "testNP-230"}, .node = "testNode-23"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-231", .policy = k8spolicy.UID{.uid = "testNP-231"}, .node = "testNode-23"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-232", .policy = k8spolicy.UID{.uid = "testNP-232"}, .node = "testNode-23"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-233", .policy = k8spolicy.UID{.uid = "testNP-233"}, .node = "testNode-23"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-234", .policy = k8spolicy.UID{.uid = "testNP-234"}, .node = "testNode-23"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-235", .policy = k8spolicy.UID{.uid = "testNP-235"}, .node = "testNode-23"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-236", .policy = k8spolicy.UID{.uid = "testNP-236"}, .node = "testNode-23"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-237", .policy = k8spolicy.UID{.uid = "testNP-237"}, .node = "testNode-23"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-238", .policy = k8spolicy.UID{.uid = "testNP-238"}, .node = "testNode-23"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-239", .policy = k8spolicy.UID{.uid = "testNP-239"}, .node = "testNode-23"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-240", .policy = k8spolicy.UID{.uid = "testNP-240"}, .node = "testNode-24"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-241", .policy = k8spolicy.UID{.uid = "testNP-241"}, .node = "testNode-24"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-242", .policy = k8spolicy.UID{.uid = "testNP-242"}, .node = "testNode-24"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-243", .policy = k8spolicy.UID{.uid = "testNP-243"}, .node = "testNode-24"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-244", .policy = k8spolicy.UID{.uid = "testNP-244"}, .node = "testNode-24"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-245", .policy = k8spolicy.UID{.uid = "testNP-245"}, .node = "testNode-24"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-246", .policy = k8spolicy.UID{.uid = "testNP-246"}, .node = "testNode-24"}: +1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 21635672696621659145282466240689271719, .address = "10.10.25.3"}: +1
AddressGroupAddress{.addressGroup = 38547867095710278151103125597346105774, .address = "10.10.26.8"}: +1
AddressGroupAddress{.addressGroup = 49397092328259744860688097983021229415, .address = "10.10.25.7"}: +1
AddressGroupAddress{.addressGroup = 54173367739610389021744724036216383038, .address = "10.10.26.0"}: +1
AddressGroupAddress{.addressGroup = 73456120734767717407669044687261056014, .address = "10.10.25.0"}: +1
AddressGroupAddress{.addressGroup = 85782303579613378772361651334418289549, .address = "10.10.26.6"}: +1
AddressGroupAddress{.addressGroup = 90974300742102068063722133264993469160, .address = "10.10.25.1"}: +1
AddressGroupAddress{.addressGroup = 105262092280727309163668449514915827968, .address = "10.10.26.2"}: +1
AddressGroupAddress{.addressGroup = 106595406649655788404178246914544831141, .address = "10.10.26.5"}: +1
AddressGroupAddress{.addressGroup = 127258093284410874578276543482273225553, .address = "10.10.26.3"}: +1
AddressGroupAddress{.addressGroup = 136453088387764345787124003034617416831, .address = "10.10.27.2"}: +1
AddressGroupAddress{.addressGroup = 139849944424790845208688965132217560649, .address = "10.10.24.9"}: +1
AddressGroupAddress{.addressGroup = 148654982392265016181588333582428753722, .address = "10.10.27.0"}: +1
AddressGroupAddress{.addressGroup = 155714705312979213405431466543305483147, .address = "10.10.25.4"}: +1
AddressGroupAddress{.addressGroup = 157889365267049042872010997512883971494, .address = "10.10.25.2"}: +1
AddressGroupAddress{.addressGroup = 157985805333154754199542315854719920445, .address = "10.10.27.4"}: +1
AddressGroupAddress{.addressGroup = 184731771022276550172337454322659699387, .address = "10.10.27.3"}: +1
AddressGroupAddress{.addressGroup = 192812925966794127159312995671770491559, .address = "10.10.27.8"}: +1
AddressGroupAddress{.addressGroup = 210129332259193493485763176358356638987, .address = "10.10.26.1"}: +1
AddressGroupAddress{.addressGroup = 214865031273587251322774421605536797293, .address = "10.10.27.7"}: +1
AddressGroupAddress{.addressGroup = 225728898954448707343846920380925188998, .address = "10.10.26.9"}: +1
AddressGroupAddress{.addressGroup = 227701430734608610339502583555857715375, .address = "10.10.27.1"}: +1
AddressGroupAddress{.addressGroup = 238705569364434725930358941439262742398, .address = "10.10.25.8"}: +1
AddressGroupAddress{.addressGroup = 242301727091993075644961042592813426762, .address = "10.10.27.9"}: +1
AddressGroupAddress{.addressGroup = 249683883932718758567018628419093851827, .address = "10.10.25.5"}: +1
AddressGroupAddress{.addressGroup = 306298228026850752664550689649567882491, .address = "10.10.26.7"}: +1
AddressGroupAddress{.addressGroup = 312710907542561639138425961858530591396, .address = "10.10.25.6"}: +1
AddressGroupAddress{.addressGroup = 315436731749062220140046054035387773271, .address = "10.10.26.4"}: +1
AddressGroupAddress{.addressGroup = 321235439773102702454149290415836106728, .address = "10.10.24.8"}: +1
AddressGroupAddress{.addressGroup = 321369933391693023813289760771402686256, .address = "10.10.27.6"}: +1
AddressGroupAddress{.addressGroup = 321547543023437848811106824117497987275, .address = "10.10.27.5"}: +1
AddressGroupAddress{.addressGroup = 334720320446643550315781540352394834310, .address = "10.10.25.9"}: +1
AddressGroupDescr:
AddressGroupDescr{.name = "1046e105-938c-51f2-b9a2-7cb6d3d6f3a7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-253]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-253")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "1d000c95-4daa-53e8-8849-adc210cc89ae", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-268]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-268")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "252988af-827c-5c19-874a-2b41c094a567", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-257]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-257")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "28c1693e-9f7f-598e-b11f-78f7d0b3663e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-260]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-260")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "3743225e-5982-515c-8798-cd2d602abc0e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-250]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-250")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "4089121a-75ca-5f8e-a05e-a3c9775c538d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-266]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-266")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "44710353-c3a3-594d-91e3-188bce89c2e8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-251]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-251")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "4f30bdd6-6eb9-576f-820b-06f111a31100", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-262]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-262")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "5031874f-b679-5ac2-abbf-affbdd110aa5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-265]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-265")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "5fbd046a-a401-5321-8e1c-d14171e05b51", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-263]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-263")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "66a7e8ad-365f-56cc-a437-39062f7d0c7f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-272]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-272")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "69361e9c-1095-5e70-bed3-1e101dd52e49", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-249]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-249")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "6fd5e87f-9bf5-51c5-9f33-e0465acd4f3a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-270]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-270")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "75258fb6-3b10-56b5-bb55-e60abd84638b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-254]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-254")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "76c862b9-bfd6-5bf9-9b43-cb1fbcbca5a6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-252]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-252")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "76daf596-83d2-5607-bcdc-95e838a0a93d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-274]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-274")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "8afa0b81-c994-5d3c-be76-bfb62cfd2abb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-273]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-273")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "910e6b35-104a-5787-b0a5-e0a02a996aa7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-278]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-278")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "9e156ff4-26ce-5a44-9eab-44feb066dd0b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-261]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-261")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "a1a57ff1-2217-59c3-9b5f-84ae0610926d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-277]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-277")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "a9d1cdf9-051d-5eb8-8a31-55cb54f19b86", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-269]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-269")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "ab4db34c-4f8e-5a49-92fd-e280ff8610af", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-271]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-271")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "b3950538-7b64-5a87-bb38-37e2fcd4577e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-258]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-258")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "b6499d7c-5393-5f94-b3e2-5b90801a284a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-279]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-279")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "bbd75deb-2c15-5e08-a6f1-37aaa90ceeb3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-255]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-255")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "e66ee496-dc95-5ad9-b85a-3b1ed35a5cfb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-267]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-267")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "eb41ee19-8b4d-56bc-9bc6-6baa5fdcc2a4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-256]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-256")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "ed4ee79b-f5da-5c29-9934-d38e15f2f157", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-264]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-264")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "f1abb1fc-ef88-52a9-806e-ca9360600fe8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-248]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-248")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "f1c59909-0f1a-5693-b2ba-a4b4ef40df30", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-276]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-276")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "f1e7cddd-c6e8-5717-8129-e2f531b580cb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-275]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-275")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "fbd0c9ef-bc08-536a-91f3-d7c220ecb186", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-259]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-259")], .matchExpressions = []}}}}: +1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 21635672696621659145282466240689271719, .node = "testNode-25"}: +1
AddressGroupSpan{.addressGroup = 38547867095710278151103125597346105774, .node = "testNode-26"}: +1
AddressGroupSpan{.addressGroup = 49397092328259744860688097983021229415, .node = "testNode-25"}: +1
AddressGroupSpan{.addressGroup = 54173367739610389021744724036216383038, .node = "testNode-25"}: +1
AddressGroupSpan{.addressGroup = 73456120734767717407669044687261056014, .node = "testNode-24"}: +1
AddressGroupSpan{.addressGroup = 85782303579613378772361651334418289549, .node = "testNode-26"}: +1
AddressGroupSpan{.addressGroup = 90974300742102068063722133264993469160, .node = "testNode-25"}: +1
AddressGroupSpan{.addressGroup = 105262092280727309163668449514915827968, .node = "testNode-26"}: +1
AddressGroupSpan{.addressGroup = 106595406649655788404178246914544831141, .node = "testNode-26"}: +1
AddressGroupSpan{.addressGroup = 127258093284410874578276543482273225553, .node = "testNode-26"}: +1
AddressGroupSpan{.addressGroup = 136453088387764345787124003034617416831, .node = "testNode-27"}: +1
AddressGroupSpan{.addressGroup = 139849944424790845208688965132217560649, .node = "testNode-24"}: +1
AddressGroupSpan{.addressGroup = 148654982392265016181588333582428753722, .node = "testNode-26"}: +1
AddressGroupSpan{.addressGroup = 155714705312979213405431466543305483147, .node = "testNode-25"}: +1
AddressGroupSpan{.addressGroup = 157889365267049042872010997512883971494, .node = "testNode-25"}: +1
AddressGroupSpan{.addressGroup = 157985805333154754199542315854719920445, .node = "testNode-27"}: +1
AddressGroupSpan{.addressGroup = 184731771022276550172337454322659699387, .node = "testNode-27"}: +1
AddressGroupSpan{.addressGroup = 192812925966794127159312995671770491559, .node = "testNode-27"}: +1
AddressGroupSpan{.addressGroup = 210129332259193493485763176358356638987, .node = "testNode-26"}: +1
AddressGroupSpan{.addressGroup = 214865031273587251322774421605536797293, .node = "testNode-27"}: +1
AddressGroupSpan{.addressGroup = 225728898954448707343846920380925188998, .node = "testNode-26"}: +1
AddressGroupSpan{.addressGroup = 227701430734608610339502583555857715375, .node = "testNode-27"}: +1
AddressGroupSpan{.addressGroup = 238705569364434725930358941439262742398, .node = "testNode-25"}: +1
AddressGroupSpan{.addressGroup = 242301727091993075644961042592813426762, .node = "testNode-27"}: +1
AddressGroupSpan{.addressGroup = 249683883932718758567018628419093851827, .node = "testNode-25"}: +1
AddressGroupSpan{.addressGroup = 306298228026850752664550689649567882491, .node = "testNode-26"}: +1
AddressGroupSpan{.addressGroup = 312710907542561639138425961858530591396, .node = "testNode-25"}: +1
AddressGroupSpan{.addressGroup = 315436731749062220140046054035387773271, .node = "testNode-26"}: +1
AddressGroupSpan{.addressGroup = 321235439773102702454149290415836106728, .node = "testNode-24"}: +1
AddressGroupSpan{.addressGroup = 321369933391693023813289760771402686256, .node = "testNode-27"}: +1
AddressGroupSpan{.addressGroup = 321547543023437848811106824117497987275, .node = "testNode-27"}: +1
AddressGroupSpan{.addressGroup = 334720320446643550315781540352394834310, .node = "testNode-25"}: +1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "1046e105-938c-51f2-b9a2-7cb6d3d6f3a7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-253]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-253")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "1d000c95-4daa-53e8-8849-adc210cc89ae", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-268]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-268")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "252988af-827c-5c19-874a-2b41c094a567", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-257]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-257")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "28c1693e-9f7f-598e-b11f-78f7d0b3663e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-260]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-260")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "2f31d01d-e600-5abf-a95d-7f691b736b75", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-247]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-247")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "3743225e-5982-515c-8798-cd2d602abc0e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-250]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-250")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "4089121a-75ca-5f8e-a05e-a3c9775c538d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-266]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-266")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "44710353-c3a3-594d-91e3-188bce89c2e8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-251]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-251")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "4f30bdd6-6eb9-576f-820b-06f111a31100", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-262]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-262")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "5031874f-b679-5ac2-abbf-affbdd110aa5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-265]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-265")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "5fbd046a-a401-5321-8e1c-d14171e05b51", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-263]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-263")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "66a7e8ad-365f-56cc-a437-39062f7d0c7f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-272]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-272")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "69361e9c-1095-5e70-bed3-1e101dd52e49", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-249]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-249")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "6fd5e87f-9bf5-51c5-9f33-e0465acd4f3a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-270]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-270")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "75258fb6-3b10-56b5-bb55-e60abd84638b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-254]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-254")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "76c862b9-bfd6-5bf9-9b43-cb1fbcbca5a6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-252]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-252")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "76daf596-83d2-5607-bcdc-95e838a0a93d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-274]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-274")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "8afa0b81-c994-5d3c-be76-bfb62cfd2abb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-273]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-273")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "910e6b35-104a-5787-b0a5-e0a02a996aa7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-278]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-278")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "9e156ff4-26ce-5a44-9eab-44feb066dd0b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-261]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-261")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "a1a57ff1-2217-59c3-9b5f-84ae0610926d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-277]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-277")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "a9d1cdf9-051d-5eb8-8a31-55cb54f19b86", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-269]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-269")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "ab4db34c-4f8e-5a49-92fd-e280ff8610af", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-271]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-271")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "b3950538-7b64-5a87-bb38-37e2fcd4577e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-258]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-258")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "bbd75deb-2c15-5e08-a6f1-37aaa90ceeb3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-255]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-255")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "e66ee496-dc95-5ad9-b85a-3b1ed35a5cfb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-267]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-267")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "eb41ee19-8b4d-56bc-9bc6-6baa5fdcc2a4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-256]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-256")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "ed4ee79b-f5da-5c29-9934-d38e15f2f157", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-264]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-264")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "f1abb1fc-ef88-52a9-806e-ca9360600fe8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-248]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-248")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "f1c59909-0f1a-5693-b2ba-a4b4ef40df30", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-276]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-276")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "f1e7cddd-c6e8-5717-8129-e2f531b580cb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-275]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-275")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "fbd0c9ef-bc08-536a-91f3-d7c220ecb186", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-259]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-259")], .matchExpressions = []}}}}: +1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 21635672696621659145282466240689271719, .node = "testNode-25", .pods = [k8spolicy.PodReference{.name = "testPod-253", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 38547867095710278151103125597346105774, .node = "testNode-26", .pods = [k8spolicy.PodReference{.name = "testPod-268", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 49397092328259744860688097983021229415, .node = "testNode-25", .pods = [k8spolicy.PodReference{.name = "testPod-257", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 54173367739610389021744724036216383038, .node = "testNode-26", .pods = [k8spolicy.PodReference{.name = "testPod-260", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 62732359457955505848815890202296019829, .node = "testNode-24", .pods = [k8spolicy.PodReference{.name = "testPod-247", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 73456120734767717407669044687261056014, .node = "testNode-25", .pods = [k8spolicy.PodReference{.name = "testPod-250", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 85782303579613378772361651334418289549, .node = "testNode-26", .pods = [k8spolicy.PodReference{.name = "testPod-266", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 90974300742102068063722133264993469160, .node = "testNode-25", .pods = [k8spolicy.PodReference{.name = "testPod-251", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 105262092280727309163668449514915827968, .node = "testNode-26", .pods = [k8spolicy.PodReference{.name = "testPod-262", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 106595406649655788404178246914544831141, .node = "testNode-26", .pods = [k8spolicy.PodReference{.name = "testPod-265", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 127258093284410874578276543482273225553, .node = "testNode-26", .pods = [k8spolicy.PodReference{.name = "testPod-263", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 136453088387764345787124003034617416831, .node = "testNode-27", .pods = [k8spolicy.PodReference{.name = "testPod-272", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 139849944424790845208688965132217560649, .node = "testNode-24", .pods = [k8spolicy.PodReference{.name = "testPod-249", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 148654982392265016181588333582428753722, .node = "testNode-27", .pods = [k8spolicy.PodReference{.name = "testPod-270", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 155714705312979213405431466543305483147, .node = "testNode-25", .pods = [k8spolicy.PodReference{.name = "testPod-254", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 157889365267049042872010997512883971494, .node = "testNode-25", .pods = [k8spolicy.PodReference{.name = "testPod-252", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 157985805333154754199542315854719920445, .node = "testNode-27", .pods = [k8spolicy.PodReference{.name = "testPod-274", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 184731771022276550172337454322659699387, .node = "testNode-27", .pods = [k8spolicy.PodReference{.name = "testPod-273", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 192812925966794127159312995671770491559, .node = "testNode-27", .pods = [k8spolicy.PodReference{.name = "testPod-278", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 210129332259193493485763176358356638987, .node = "testNode-26", .pods = [k8spolicy.PodReference{.name = "testPod-261", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 214865031273587251322774421605536797293, .node = "testNode-27", .pods = [k8spolicy.PodReference{.name = "testPod-277", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 225728898954448707343846920380925188998, .node = "testNode-26", .pods = [k8spolicy.PodReference{.name = "testPod-269", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 227701430734608610339502583555857715375, .node = "testNode-27", .pods = [k8spolicy.PodReference{.name = "testPod-271", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 238705569364434725930358941439262742398, .node = "testNode-25", .pods = [k8spolicy.PodReference{.name = "testPod-258", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 249683883932718758567018628419093851827, .node = "testNode-25", .pods = [k8spolicy.PodReference{.name = "testPod-255", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 306298228026850752664550689649567882491, .node = "testNode-26", .pods = [k8spolicy.PodReference{.name = "testPod-267", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 312710907542561639138425961858530591396, .node = "testNode-25", .pods = [k8spolicy.PodReference{.name = "testPod-256", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 315436731749062220140046054035387773271, .node = "testNode-26", .pods = [k8spolicy.PodReference{.name = "testPod-264", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 321235439773102702454149290415836106728, .node = "testNode-24", .pods = [k8spolicy.PodReference{.name = "testPod-248", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 321369933391693023813289760771402686256, .node = "testNode-27", .pods = [k8spolicy.PodReference{.name = "testPod-276", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 321547543023437848811106824117497987275, .node = "testNode-27", .pods = [k8spolicy.PodReference{.name = "testPod-275", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 334720320446643550315781540352394834310, .node = "testNode-25", .pods = [k8spolicy.PodReference{.name = "testPod-259", .namespace = "testNamespace"}]}: +1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 21635672696621659145282466240689271719, .span = "testNode-25"}: +1
AppliedToGroupSpan{.appliedToGroup = 38547867095710278151103125597346105774, .span = "testNode-26"}: +1
AppliedToGroupSpan{.appliedToGroup = 49397092328259744860688097983021229415, .span = "testNode-25"}: +1
AppliedToGroupSpan{.appliedToGroup = 54173367739610389021744724036216383038, .span = "testNode-26"}: +1
AppliedToGroupSpan{.appliedToGroup = 62732359457955505848815890202296019829, .span = "testNode-24"}: +1
AppliedToGroupSpan{.appliedToGroup = 73456120734767717407669044687261056014, .span = "testNode-25"}: +1
AppliedToGroupSpan{.appliedToGroup = 85782303579613378772361651334418289549, .span = "testNode-26"}: +1
AppliedToGroupSpan{.appliedToGroup = 90974300742102068063722133264993469160, .span = "testNode-25"}: +1
AppliedToGroupSpan{.appliedToGroup = 105262092280727309163668449514915827968, .span = "testNode-26"}: +1
AppliedToGroupSpan{.appliedToGroup = 106595406649655788404178246914544831141, .span = "testNode-26"}: +1
AppliedToGroupSpan{.appliedToGroup = 127258093284410874578276543482273225553, .span = "testNode-26"}: +1
AppliedToGroupSpan{.appliedToGroup = 136453088387764345787124003034617416831, .span = "testNode-27"}: +1
AppliedToGroupSpan{.appliedToGroup = 139849944424790845208688965132217560649, .span = "testNode-24"}: +1
AppliedToGroupSpan{.appliedToGroup = 148654982392265016181588333582428753722, .span = "testNode-27"}: +1
AppliedToGroupSpan{.appliedToGroup = 155714705312979213405431466543305483147, .span = "testNode-25"}: +1
AppliedToGroupSpan{.appliedToGroup = 157889365267049042872010997512883971494, .span = "testNode-25"}: +1
AppliedToGroupSpan{.appliedToGroup = 157985805333154754199542315854719920445, .span = "testNode-27"}: +1
AppliedToGroupSpan{.appliedToGroup = 184731771022276550172337454322659699387, .span = "testNode-27"}: +1
AppliedToGroupSpan{.appliedToGroup = 192812925966794127159312995671770491559, .span = "testNode-27"}: +1
AppliedToGroupSpan{.appliedToGroup = 210129332259193493485763176358356638987, .span = "testNode-26"}: +1
AppliedToGroupSpan{.appliedToGroup = 214865031273587251322774421605536797293, .span = "testNode-27"}: +1
AppliedToGroupSpan{.appliedToGroup = 225728898954448707343846920380925188998, .span = "testNode-26"}: +1
AppliedToGroupSpan{.appliedToGroup = 227701430734608610339502583555857715375, .span = "testNode-27"}: +1
AppliedToGroupSpan{.appliedToGroup = 238705569364434725930358941439262742398, .span = "testNode-25"}: +1
AppliedToGroupSpan{.appliedToGroup = 249683883932718758567018628419093851827, .span = "testNode-25"}: +1
AppliedToGroupSpan{.appliedToGroup = 306298228026850752664550689649567882491, .span = "testNode-26"}: +1
AppliedToGroupSpan{.appliedToGroup = 312710907542561639138425961858530591396, .span = "testNode-25"}: +1
AppliedToGroupSpan{.appliedToGroup = 315436731749062220140046054035387773271, .span = "testNode-26"}: +1
AppliedToGroupSpan{.appliedToGroup = 321235439773102702454149290415836106728, .span = "testNode-24"}: +1
AppliedToGroupSpan{.appliedToGroup = 321369933391693023813289760771402686256, .span = "testNode-27"}: +1
AppliedToGroupSpan{.appliedToGroup = 321547543023437848811106824117497987275, .span = "testNode-27"}: +1
AppliedToGroupSpan{.appliedToGroup = 334720320446643550315781540352394834310, .span = "testNode-25"}: +1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-247"}, .name = "testNP-247", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [321235439773102702454149290415836106728], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [62732359457955505848815890202296019829]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-248"}, .name = "testNP-248", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [139849944424790845208688965132217560649], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [321235439773102702454149290415836106728]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-249"}, .name = "testNP-249", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [73456120734767717407669044687261056014], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [139849944424790845208688965132217560649]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-250"}, .name = "testNP-250", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [90974300742102068063722133264993469160], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [73456120734767717407669044687261056014]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-251"}, .name = "testNP-251", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [157889365267049042872010997512883971494], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [90974300742102068063722133264993469160]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-252"}, .name = "testNP-252", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [21635672696621659145282466240689271719], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [157889365267049042872010997512883971494]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-253"}, .name = "testNP-253", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [155714705312979213405431466543305483147], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [21635672696621659145282466240689271719]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-254"}, .name = "testNP-254", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [249683883932718758567018628419093851827], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [155714705312979213405431466543305483147]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-255"}, .name = "testNP-255", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [312710907542561639138425961858530591396], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [249683883932718758567018628419093851827]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-256"}, .name = "testNP-256", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [49397092328259744860688097983021229415], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [312710907542561639138425961858530591396]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-257"}, .name = "testNP-257", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [238705569364434725930358941439262742398], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [49397092328259744860688097983021229415]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-258"}, .name = "testNP-258", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [334720320446643550315781540352394834310], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [238705569364434725930358941439262742398]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-259"}, .name = "testNP-259", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [54173367739610389021744724036216383038], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [334720320446643550315781540352394834310]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-260"}, .name = "testNP-260", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [210129332259193493485763176358356638987], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [54173367739610389021744724036216383038]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-261"}, .name = "testNP-261", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [105262092280727309163668449514915827968], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [210129332259193493485763176358356638987]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-262"}, .name = "testNP-262", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [127258093284410874578276543482273225553], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [105262092280727309163668449514915827968]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-263"}, .name = "testNP-263", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [315436731749062220140046054035387773271], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [127258093284410874578276543482273225553]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-264"}, .name = "testNP-264", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [106595406649655788404178246914544831141], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [315436731749062220140046054035387773271]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-265"}, .name = "testNP-265", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [85782303579613378772361651334418289549], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [106595406649655788404178246914544831141]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-266"}, .name = "testNP-266", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [306298228026850752664550689649567882491], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [85782303579613378772361651334418289549]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-267"}, .name = "testNP-267", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [38547867095710278151103125597346105774], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [306298228026850752664550689649567882491]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-268"}, .name = "testNP-268", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [225728898954448707343846920380925188998], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [38547867095710278151103125597346105774]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-269"}, .name = "testNP-269", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [148654982392265016181588333582428753722], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [225728898954448707343846920380925188998]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-270"}, .name = "testNP-270", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [227701430734608610339502583555857715375], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [148654982392265016181588333582428753722]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-271"}, .name = "testNP-271", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [136453088387764345787124003034617416831], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [227701430734608610339502583555857715375]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-272"}, .name = "testNP-272", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [184731771022276550172337454322659699387], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [136453088387764345787124003034617416831]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-273"}, .name = "testNP-273", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [157985805333154754199542315854719920445], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [184731771022276550172337454322659699387]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-274"}, .name = "testNP-274", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [321547543023437848811106824117497987275], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [157985805333154754199542315854719920445]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-275"}, .name = "testNP-275", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [321369933391693023813289760771402686256], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [321547543023437848811106824117497987275]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-276"}, .name = "testNP-276", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [214865031273587251322774421605536797293], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [321369933391693023813289760771402686256]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-277"}, .name = "testNP-277", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [192812925966794127159312995671770491559], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [214865031273587251322774421605536797293]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-278"}, .name = "testNP-278", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [242301727091993075644961042592813426762], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [192812925966794127159312995671770491559]}: +1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-247", .policy = k8spolicy.UID{.uid = "testNP-247"}, .node = "testNode-24"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-248", .policy = k8spolicy.UID{.uid = "testNP-248"}, .node = "testNode-24"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-249", .policy = k8spolicy.UID{.uid = "testNP-249"}, .node = "testNode-24"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-250", .policy = k8spolicy.UID{.uid = "testNP-250"}, .node = "testNode-25"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-251", .policy = k8spolicy.UID{.uid = "testNP-251"}, .node = "testNode-25"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-252", .policy = k8spolicy.UID{.uid = "testNP-252"}, .node = "testNode-25"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-253", .policy = k8spolicy.UID{.uid = "testNP-253"}, .node = "testNode-25"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-254", .policy = k8spolicy.UID{.uid = "testNP-254"}, .node = "testNode-25"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-255", .policy = k8spolicy.UID{.uid = "testNP-255"}, .node = "testNode-25"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-256", .policy = k8spolicy.UID{.uid = "testNP-256"}, .node = "testNode-25"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-257", .policy = k8spolicy.UID{.uid = "testNP-257"}, .node = "testNode-25"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-258", .policy = k8spolicy.UID{.uid = "testNP-258"}, .node = "testNode-25"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-259", .policy = k8spolicy.UID{.uid = "testNP-259"}, .node = "testNode-25"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-260", .policy = k8spolicy.UID{.uid = "testNP-260"}, .node = "testNode-26"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-261", .policy = k8spolicy.UID{.uid = "testNP-261"}, .node = "testNode-26"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-262", .policy = k8spolicy.UID{.uid = "testNP-262"}, .node = "testNode-26"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-263", .policy = k8spolicy.UID{.uid = "testNP-263"}, .node = "testNode-26"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-264", .policy = k8spolicy.UID{.uid = "testNP-264"}, .node = "testNode-26"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-265", .policy = k8spolicy.UID{.uid = "testNP-265"}, .node = "testNode-26"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-266", .policy = k8spolicy.UID{.uid = "testNP-266"}, .node = "testNode-26"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-267", .policy = k8spolicy.UID{.uid = "testNP-267"}, .node = "testNode-26"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-268", .policy = k8spolicy.UID{.uid = "testNP-268"}, .node = "testNode-26"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-269", .policy = k8spolicy.UID{.uid = "testNP-269"}, .node = "testNode-26"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-270", .policy = k8spolicy.UID{.uid = "testNP-270"}, .node = "testNode-27"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-271", .policy = k8spolicy.UID{.uid = "testNP-271"}, .node = "testNode-27"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-272", .policy = k8spolicy.UID{.uid = "testNP-272"}, .node = "testNode-27"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-273", .policy = k8spolicy.UID{.uid = "testNP-273"}, .node = "testNode-27"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-274", .policy = k8spolicy.UID{.uid = "testNP-274"}, .node = "testNode-27"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-275", .policy = k8spolicy.UID{.uid = "testNP-275"}, .node = "testNode-27"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-276", .policy = k8spolicy.UID{.uid = "testNP-276"}, .node = "testNode-27"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-277", .policy = k8spolicy.UID{.uid = "testNP-277"}, .node = "testNode-27"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-278", .policy = k8spolicy.UID{.uid = "testNP-278"}, .node = "testNode-27"}: +1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 5994427061800226586815451421652552954, .address = "10.10.30.7"}: +1
AddressGroupAddress{.addressGroup = 13063196721853360374467798401377364568, .address = "10.10.28.0"}: +1
AddressGroupAddress{.addressGroup = 20643700476799638026552884954771120321, .address = "10.10.28.5"}: +1
AddressGroupAddress{.addressGroup = 25776838531586682461538771612068601552, .address = "10.10.30.8"}: +1
AddressGroupAddress{.addressGroup = 35762860471077499685840254348633581967, .address = "10.10.31.1"}: +1
AddressGroupAddress{.addressGroup = 41246345254696305760971905698180767005, .address = "10.10.30.3"}: +1
AddressGroupAddress{.addressGroup = 54683378670838485795879177152564505177, .address = "10.10.30.0"}: +1
AddressGroupAddress{.addressGroup = 55967920395794422184678399902202613465, .address = "10.10.29.0"}: +1
AddressGroupAddress{.addressGroup = 70163950952673858484825929710071194438, .address = "10.10.28.7"}: +1
AddressGroupAddress{.addressGroup = 105706967529134367213049721578075792899, .address = "10.10.30.9"}: +1
AddressGroupAddress{.addressGroup = 111935742023978670976159712459023821177, .address = "10.10.30.2"}: +1
AddressGroupAddress{.addressGroup = 129941259765256992675750959742667487143, .address = "10.10.29.1"}: +1
AddressGroupAddress{.addressGroup = 131224120380189425830369655115866018529, .address = "10.10.28.8"}: +1
AddressGroupAddress{.addressGroup = 131923400806131393205061476379246419448, .address = "10.10.30.4"}: +1
AddressGroupAddress{.addressGroup = 155016409356109289555387353065596389323, .address = "10.10.29.6"}: +1
AddressGroupAddress{.addressGroup = 183416497404506331845338707449675506127, .address = "10.10.28.3"}: +1
AddressGroupAddress{.addressGroup = 232438921463616447694847912040201683335, .address = "10.10.28.6"}: +1
AddressGroupAddress{.addressGroup = 238971538721812420571683522231598345024, .address = "10.10.29.3"}: +1
AddressGroupAddress{.addressGroup = 257809803475221422755912675022071734901, .address = "10.10.30.6"}: +1
AddressGroupAddress{.addressGroup = 263045864096191759121653481637612366223, .address = "10.10.29.9"}: +1
AddressGroupAddress{.addressGroup = 266084576073733227095844436111121558240, .address = "10.10.30.5"}: +1
AddressGroupAddress{.addressGroup = 269645923025042690683955849066564355999, .address = "10.10.28.2"}: +1
AddressGroupAddress{.addressGroup = 269822968468005839286651474018888465459, .address = "10.10.28.4"}: +1
AddressGroupAddress{.addressGroup = 275530979825018053405365799433013907949, .address = "10.10.29.7"}: +1
AddressGroupAddress{.addressGroup = 277425362559311821121538083049028156518, .address = "10.10.28.1"}: +1
AddressGroupAddress{.addressGroup = 280666409729736315349642645790060205967, .address = "10.10.29.2"}: +1
AddressGroupAddress{.addressGroup = 291617151236401330171057537333451467162, .address = "10.10.29.4"}: +1
AddressGroupAddress{.addressGroup = 306066549893963261806772433662375248126, .address = "10.10.29.8"}: +1
AddressGroupAddress{.addressGroup = 313900485857729066910211956941039934847, .address = "10.10.28.9"}: +1
AddressGroupAddress{.addressGroup = 320041450872885727243994532644537387750, .address = "10.10.30.1"}: +1
AddressGroupAddress{.addressGroup = 320134717592557624172086165087398377265, .address = "10.10.29.5"}: +1
AddressGroupAddress{.addressGroup = 339916988078638417455167606718262270029, .address = "10.10.31.0"}: +1
AddressGroupDescr:
AddressGroupDescr{.name = "04827c12-8834-5b78-aaf4-13a23b580cfa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-307]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-307")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "09d3e153-0eab-5d9f-b6a1-ded45eafea58", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-280]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-280")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "0f87d503-ec80-5aa3-a688-8e1d94b260c1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-285]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-285")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "13647042-d81e-5bc0-a488-6e89ffbdded0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-308]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-308")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "1ae7ad27-c08a-5897-8f8e-53b3f0bc298f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-311]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-311")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "1f07c1d4-1329-5b42-b57e-4d849cbe1d1d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-303]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-303")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "2923a2b9-94c5-58d4-9d3c-3cf29feb2a59", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-300]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-300")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "2a1b0785-8c58-523d-9f54-767680124ed9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-290]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-290")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "34c915dd-cc6d-5a19-97fb-17c1208c2346", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-287]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-287")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "4f866be1-7dc0-5f46-a7d1-08e0e2752603", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-309]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-309")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "54360a2c-7954-5bdf-8772-3a22e051a979", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-302]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-302")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "61c1c6bc-dd19-5e48-b06e-aecc4efc77a7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-291]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-291")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "62b8d8a6-3d39-5505-8060-58ec197192e1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-288]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-288")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "633f85d6-137e-59cd-8d38-78ae94c35df8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-304]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-304")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "749f1310-23ed-5f5c-94e8-1bdc3af407cb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-296]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-296")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "89fcbb82-ccbe-5bb4-b942-08bc7ca3e1cf", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-283]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-283")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "aede1b9f-e8ff-5860-9bd4-fe58d7778187", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-286]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-286")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "b3c83e85-baf8-5ec6-922e-528d510c6b40", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-293]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-293")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "c1f45caf-1be9-56e8-88f8-42b3b2a12275", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-306]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-306")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "c5e4ca67-72f4-5e68-b605-8f9396c4298f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-299]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-299")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "c82e0678-bfff-57a3-88a2-b806f1e5aae0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-305]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-305")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "cadbea6e-d3b9-5caf-a5e2-20d0dc81079f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-282]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-282")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "cafe0372-7b41-5768-93b7-a40709563c33", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-284]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-284")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "cf495622-9442-57ec-a381-7588122951ed", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-297]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-297")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "d0b62e6a-3ca5-5779-b226-f501695f7c66", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-281]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-281")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "d3266260-b666-54f8-8144-4db8db24578f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-292]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-292")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "db636b9e-6fe7-5d33-a6f8-3cccfcbea99a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-294]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-294")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "e64245f9-b730-56a4-b311-a818f36640fe", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-298]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-298")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "ec2708d6-c4c9-5490-a15c-686ece151d7f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-289]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-289")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "f0c5bdca-4d21-545a-88ff-12f1347a4ae6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-301]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-301")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "f0d7b431-cdc6-5739-ac1b-b3e4ec9bb731", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-295]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-295")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "ffb9a16e-a6c4-54f3-b569-9ed72b59d84d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-310]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-310")], .matchExpressions = []}}}}: +1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 5994427061800226586815451421652552954, .node = "testNode-30"}: +1
AddressGroupSpan{.addressGroup = 13063196721853360374467798401377364568, .node = "testNode-27"}: +1
AddressGroupSpan{.addressGroup = 20643700476799638026552884954771120321, .node = "testNode-28"}: +1
AddressGroupSpan{.addressGroup = 25776838531586682461538771612068601552, .node = "testNode-30"}: +1
AddressGroupSpan{.addressGroup = 35762860471077499685840254348633581967, .node = "testNode-31"}: +1
AddressGroupSpan{.addressGroup = 41246345254696305760971905698180767005, .node = "testNode-30"}: +1
AddressGroupSpan{.addressGroup = 54683378670838485795879177152564505177, .node = "testNode-29"}: +1
AddressGroupSpan{.addressGroup = 55967920395794422184678399902202613465, .node = "testNode-28"}: +1
AddressGroupSpan{.addressGroup = 70163950952673858484825929710071194438, .node = "testNode-28"}: +1
AddressGroupSpan{.addressGroup = 105706967529134367213049721578075792899, .node = "testNode-30"}: +1
AddressGroupSpan{.addressGroup = 111935742023978670976159712459023821177, .node = "testNode-30"}: +1
AddressGroupSpan{.addressGroup = 129941259765256992675750959742667487143, .node = "testNode-29"}: +1
AddressGroupSpan{.addressGroup = 131224120380189425830369655115866018529, .node = "testNode-28"}: +1
AddressGroupSpan{.addressGroup = 131923400806131393205061476379246419448, .node = "testNode-30"}: +1
AddressGroupSpan{.addressGroup = 155016409356109289555387353065596389323, .node = "testNode-29"}: +1
AddressGroupSpan{.addressGroup = 183416497404506331845338707449675506127, .node = "testNode-28"}: +1
AddressGroupSpan{.addressGroup = 232438921463616447694847912040201683335, .node = "testNode-28"}: +1
AddressGroupSpan{.addressGroup = 238971538721812420571683522231598345024, .node = "testNode-29"}: +1
AddressGroupSpan{.addressGroup = 257809803475221422755912675022071734901, .node = "testNode-30"}: +1
AddressGroupSpan{.addressGroup = 263045864096191759121653481637612366223, .node = "testNode-29"}: +1
AddressGroupSpan{.addressGroup = 266084576073733227095844436111121558240, .node = "testNode-30"}: +1
AddressGroupSpan{.addressGroup = 269645923025042690683955849066564355999, .node = "testNode-28"}: +1
AddressGroupSpan{.addressGroup = 269822968468005839286651474018888465459, .node = "testNode-28"}: +1
AddressGroupSpan{.addressGroup = 275530979825018053405365799433013907949, .node = "testNode-29"}: +1
AddressGroupSpan{.addressGroup = 277425362559311821121538083049028156518, .node = "testNode-28"}: +1
AddressGroupSpan{.addressGroup = 280666409729736315349642645790060205967, .node = "testNode-29"}: +1
AddressGroupSpan{.addressGroup = 291617151236401330171057537333451467162, .node = "testNode-29"}: +1
AddressGroupSpan{.addressGroup = 306066549893963261806772433662375248126, .node = "testNode-29"}: +1
AddressGroupSpan{.addressGroup = 313900485857729066910211956941039934847, .node = "testNode-28"}: +1
AddressGroupSpan{.addressGroup = 320041450872885727243994532644537387750, .node = "testNode-30"}: +1
AddressGroupSpan{.addressGroup = 320134717592557624172086165087398377265, .node = "testNode-29"}: +1
AddressGroupSpan{.addressGroup = 339916988078638417455167606718262270029, .node = "testNode-30"}: +1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "04827c12-8834-5b78-aaf4-13a23b580cfa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-307]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-307")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "09d3e153-0eab-5d9f-b6a1-ded45eafea58", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-280]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-280")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "0f87d503-ec80-5aa3-a688-8e1d94b260c1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-285]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-285")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "13647042-d81e-5bc0-a488-6e89ffbdded0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-308]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-308")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "1f07c1d4-1329-5b42-b57e-4d849cbe1d1d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-303]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-303")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "2923a2b9-94c5-58d4-9d3c-3cf29feb2a59", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-300]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-300")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "2a1b0785-8c58-523d-9f54-767680124ed9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-290]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-290")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "34c915dd-cc6d-5a19-97fb-17c1208c2346", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-287]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-287")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "4f866be1-7dc0-5f46-a7d1-08e0e2752603", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-309]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-309")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "54360a2c-7954-5bdf-8772-3a22e051a979", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-302]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-302")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "61c1c6bc-dd19-5e48-b06e-aecc4efc77a7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-291]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-291")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "62b8d8a6-3d39-5505-8060-58ec197192e1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-288]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-288")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "633f85d6-137e-59cd-8d38-78ae94c35df8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-304]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-304")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "749f1310-23ed-5f5c-94e8-1bdc3af407cb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-296]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-296")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "89fcbb82-ccbe-5bb4-b942-08bc7ca3e1cf", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-283]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-283")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "aede1b9f-e8ff-5860-9bd4-fe58d7778187", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-286]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-286")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "b3c83e85-baf8-5ec6-922e-528d510c6b40", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-293]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-293")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "b6499d7c-5393-5f94-b3e2-5b90801a284a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-279]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-279")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "c1f45caf-1be9-56e8-88f8-42b3b2a12275", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-306]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-306")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "c5e4ca67-72f4-5e68-b605-8f9396c4298f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-299]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-299")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "c82e0678-bfff-57a3-88a2-b806f1e5aae0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-305]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-305")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "cadbea6e-d3b9-5caf-a5e2-20d0dc81079f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-282]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-282")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "cafe0372-7b41-5768-93b7-a40709563c33", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-284]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-284")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "cf495622-9442-57ec-a381-7588122951ed", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-297]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-297")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "d0b62e6a-3ca5-5779-b226-f501695f7c66", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-281]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-281")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "d3266260-b666-54f8-8144-4db8db24578f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-292]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-292")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "db636b9e-6fe7-5d33-a6f8-3cccfcbea99a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-294]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-294")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "e64245f9-b730-56a4-b311-a818f36640fe", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-298]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-298")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "ec2708d6-c4c9-5490-a15c-686ece151d7f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-289]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-289")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "f0c5bdca-4d21-545a-88ff-12f1347a4ae6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-301]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-301")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "f0d7b431-cdc6-5739-ac1b-b3e4ec9bb731", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-295]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-295")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "ffb9a16e-a6c4-54f3-b569-9ed72b59d84d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-310]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-310")], .matchExpressions = []}}}}: +1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 5994427061800226586815451421652552954, .node = "testNode-30", .pods = [k8spolicy.PodReference{.name = "testPod-307", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 13063196721853360374467798401377364568, .node = "testNode-28", .pods = [k8spolicy.PodReference{.name = "testPod-280", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 20643700476799638026552884954771120321, .node = "testNode-28", .pods = [k8spolicy.PodReference{.name = "testPod-285", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 25776838531586682461538771612068601552, .node = "testNode-30", .pods = [k8spolicy.PodReference{.name = "testPod-308", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 41246345254696305760971905698180767005, .node = "testNode-30", .pods = [k8spolicy.PodReference{.name = "testPod-303", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 54683378670838485795879177152564505177, .node = "testNode-30", .pods = [k8spolicy.PodReference{.name = "testPod-300", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 55967920395794422184678399902202613465, .node = "testNode-29", .pods = [k8spolicy.PodReference{.name = "testPod-290", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 70163950952673858484825929710071194438, .node = "testNode-28", .pods = [k8spolicy.PodReference{.name = "testPod-287", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 105706967529134367213049721578075792899, .node = "testNode-30", .pods = [k8spolicy.PodReference{.name = "testPod-309", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 111935742023978670976159712459023821177, .node = "testNode-30", .pods = [k8spolicy.PodReference{.name = "testPod-302", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 129941259765256992675750959742667487143, .node = "testNode-29", .pods = [k8spolicy.PodReference{.name = "testPod-291", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 131224120380189425830369655115866018529, .node = "testNode-28", .pods = [k8spolicy.PodReference{.name = "testPod-288", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 131923400806131393205061476379246419448, .node = "testNode-30", .pods = [k8spolicy.PodReference{.name = "testPod-304", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 155016409356109289555387353065596389323, .node = "testNode-29", .pods = [k8spolicy.PodReference{.name = "testPod-296", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 183416497404506331845338707449675506127, .node = "testNode-28", .pods = [k8spolicy.PodReference{.name = "testPod-283", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 232438921463616447694847912040201683335, .node = "testNode-28", .pods = [k8spolicy.PodReference{.name = "testPod-286", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 238971538721812420571683522231598345024, .node = "testNode-29", .pods = [k8spolicy.PodReference{.name = "testPod-293", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 242301727091993075644961042592813426762, .node = "testNode-27", .pods = [k8spolicy.PodReference{.name = "testPod-279", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 257809803475221422755912675022071734901, .node = "testNode-30", .pods = [k8spolicy.PodReference{.name = "testPod-306", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 263045864096191759121653481637612366223, .node = "testNode-29", .pods = [k8spolicy.PodReference{.name = "testPod-299", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 266084576073733227095844436111121558240, .node = "testNode-30", .pods = [k8spolicy.PodReference{.name = "testPod-305", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 269645923025042690683955849066564355999, .node = "testNode-28", .pods = [k8spolicy.PodReference{.name = "testPod-282", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 269822968468005839286651474018888465459, .node = "testNode-28", .pods = [k8spolicy.PodReference{.name = "testPod-284", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 275530979825018053405365799433013907949, .node = "testNode-29", .pods = [k8spolicy.PodReference{.name = "testPod-297", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 277425362559311821121538083049028156518, .node = "testNode-28", .pods = [k8spolicy.PodReference{.name = "testPod-281", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 280666409729736315349642645790060205967, .node = "testNode-29", .pods = [k8spolicy.PodReference{.name = "testPod-292", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 291617151236401330171057537333451467162, .node = "testNode-29", .pods = [k8spolicy.PodReference{.name = "testPod-294", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 306066549893963261806772433662375248126, .node = "testNode-29", .pods = [k8spolicy.PodReference{.name = "testPod-298", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 313900485857729066910211956941039934847, .node = "testNode-28", .pods = [k8spolicy.PodReference{.name = "testPod-289", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 320041450872885727243994532644537387750, .node = "testNode-30", .pods = [k8spolicy.PodReference{.name = "testPod-301", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 320134717592557624172086165087398377265, .node = "testNode-29", .pods = [k8spolicy.PodReference{.name = "testPod-295", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 339916988078638417455167606718262270029, .node = "testNode-31", .pods = [k8spolicy.PodReference{.name = "testPod-310", .namespace = "testNamespace"}]}: +1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 5994427061800226586815451421652552954, .span = "testNode-30"}: +1
AppliedToGroupSpan{.appliedToGroup = 13063196721853360374467798401377364568, .span = "testNode-28"}: +1
AppliedToGroupSpan{.appliedToGroup = 20643700476799638026552884954771120321, .span = "testNode-28"}: +1
AppliedToGroupSpan{.appliedToGroup = 25776838531586682461538771612068601552, .span = "testNode-30"}: +1
AppliedToGroupSpan{.appliedToGroup = 41246345254696305760971905698180767005, .span = "testNode-30"}: +1
AppliedToGroupSpan{.appliedToGroup = 54683378670838485795879177152564505177, .span = "testNode-30"}: +1
AppliedToGroupSpan{.appliedToGroup = 55967920395794422184678399902202613465, .span = "testNode-29"}: +1
AppliedToGroupSpan{.appliedToGroup = 70163950952673858484825929710071194438, .span = "testNode-28"}: +1
AppliedToGroupSpan{.appliedToGroup = 105706967529134367213049721578075792899, .span = "testNode-30"}: +1
AppliedToGroupSpan{.appliedToGroup = 111935742023978670976159712459023821177, .span = "testNode-30"}: +1
AppliedToGroupSpan{.appliedToGroup = 129941259765256992675750959742667487143, .span = "testNode-29"}: +1
AppliedToGroupSpan{.appliedToGroup = 131224120380189425830369655115866018529, .span = "testNode-28"}: +1
AppliedToGroupSpan{.appliedToGroup = 131923400806131393205061476379246419448, .span = "testNode-30"}: +1
AppliedToGroupSpan{.appliedToGroup = 155016409356109289555387353065596389323, .span = "testNode-29"}: +1
AppliedToGroupSpan{.appliedToGroup = 183416497404506331845338707449675506127, .span = "testNode-28"}: +1
AppliedToGroupSpan{.appliedToGroup = 232438921463616447694847912040201683335, .span = "testNode-28"}: +1
AppliedToGroupSpan{.appliedToGroup = 238971538721812420571683522231598345024, .span = "testNode-29"}: +1
AppliedToGroupSpan{.appliedToGroup = 242301727091993075644961042592813426762, .span = "testNode-27"}: +1
AppliedToGroupSpan{.appliedToGroup = 257809803475221422755912675022071734901, .span = "testNode-30"}: +1
AppliedToGroupSpan{.appliedToGroup = 263045864096191759121653481637612366223, .span = "testNode-29"}: +1
AppliedToGroupSpan{.appliedToGroup = 266084576073733227095844436111121558240, .span = "testNode-30"}: +1
AppliedToGroupSpan{.appliedToGroup = 269645923025042690683955849066564355999, .span = "testNode-28"}: +1
AppliedToGroupSpan{.appliedToGroup = 269822968468005839286651474018888465459, .span = "testNode-28"}: +1
AppliedToGroupSpan{.appliedToGroup = 275530979825018053405365799433013907949, .span = "testNode-29"}: +1
AppliedToGroupSpan{.appliedToGroup = 277425362559311821121538083049028156518, .span = "testNode-28"}: +1
AppliedToGroupSpan{.appliedToGroup = 280666409729736315349642645790060205967, .span = "testNode-29"}: +1
AppliedToGroupSpan{.appliedToGroup = 291617151236401330171057537333451467162, .span = "testNode-29"}: +1
AppliedToGroupSpan{.appliedToGroup = 306066549893963261806772433662375248126, .span = "testNode-29"}: +1
AppliedToGroupSpan{.appliedToGroup = 313900485857729066910211956941039934847, .span = "testNode-28"}: +1
AppliedToGroupSpan{.appliedToGroup = 320041450872885727243994532644537387750, .span = "testNode-30"}: +1
AppliedToGroupSpan{.appliedToGroup = 320134717592557624172086165087398377265, .span = "testNode-29"}: +1
AppliedToGroupSpan{.appliedToGroup = 339916988078638417455167606718262270029, .span = "testNode-31"}: +1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-279"}, .name = "testNP-279", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [13063196721853360374467798401377364568], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [242301727091993075644961042592813426762]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-280"}, .name = "testNP-280", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [277425362559311821121538083049028156518], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [13063196721853360374467798401377364568]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-281"}, .name = "testNP-281", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [269645923025042690683955849066564355999], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [277425362559311821121538083049028156518]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-282"}, .name = "testNP-282", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [183416497404506331845338707449675506127], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [269645923025042690683955849066564355999]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-283"}, .name = "testNP-283", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [269822968468005839286651474018888465459], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [183416497404506331845338707449675506127]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-284"}, .name = "testNP-284", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [20643700476799638026552884954771120321], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [269822968468005839286651474018888465459]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-285"}, .name = "testNP-285", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [232438921463616447694847912040201683335], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [20643700476799638026552884954771120321]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-286"}, .name = "testNP-286", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [70163950952673858484825929710071194438], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [232438921463616447694847912040201683335]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-287"}, .name = "testNP-287", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [131224120380189425830369655115866018529], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [70163950952673858484825929710071194438]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-288"}, .name = "testNP-288", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [313900485857729066910211956941039934847], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [131224120380189425830369655115866018529]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-289"}, .name = "testNP-289", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [55967920395794422184678399902202613465], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [313900485857729066910211956941039934847]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-290"}, .name = "testNP-290", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [129941259765256992675750959742667487143], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [55967920395794422184678399902202613465]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-291"}, .name = "testNP-291", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [280666409729736315349642645790060205967], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [129941259765256992675750959742667487143]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-292"}, .name = "testNP-292", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [238971538721812420571683522231598345024], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [280666409729736315349642645790060205967]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-293"}, .name = "testNP-293", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [291617151236401330171057537333451467162], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [238971538721812420571683522231598345024]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-294"}, .name = "testNP-294", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [320134717592557624172086165087398377265], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [291617151236401330171057537333451467162]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-295"}, .name = "testNP-295", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [155016409356109289555387353065596389323], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [320134717592557624172086165087398377265]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-296"}, .name = "testNP-296", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [275530979825018053405365799433013907949], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [155016409356109289555387353065596389323]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-297"}, .name = "testNP-297", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [306066549893963261806772433662375248126], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [275530979825018053405365799433013907949]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-298"}, .name = "testNP-298", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [263045864096191759121653481637612366223], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [306066549893963261806772433662375248126]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-299"}, .name = "testNP-299", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [54683378670838485795879177152564505177], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [263045864096191759121653481637612366223]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-300"}, .name = "testNP-300", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [320041450872885727243994532644537387750], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [54683378670838485795879177152564505177]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-301"}, .name = "testNP-301", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [111935742023978670976159712459023821177], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [320041450872885727243994532644537387750]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-302"}, .name = "testNP-302", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [41246345254696305760971905698180767005], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [111935742023978670976159712459023821177]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-303"}, .name = "testNP-303", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [131923400806131393205061476379246419448], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [41246345254696305760971905698180767005]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-304"}, .name = "testNP-304", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [266084576073733227095844436111121558240], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [131923400806131393205061476379246419448]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-305"}, .name = "testNP-305", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [257809803475221422755912675022071734901], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [266084576073733227095844436111121558240]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-306"}, .name = "testNP-306", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [5994427061800226586815451421652552954], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [257809803475221422755912675022071734901]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-307"}, .name = "testNP-307", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [25776838531586682461538771612068601552], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [5994427061800226586815451421652552954]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-308"}, .name = "testNP-308", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [105706967529134367213049721578075792899], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [25776838531586682461538771612068601552]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-309"}, .name = "testNP-309", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [339916988078638417455167606718262270029], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [105706967529134367213049721578075792899]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-310"}, .name = "testNP-310", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [35762860471077499685840254348633581967], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [339916988078638417455167606718262270029]}: +1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-279", .policy = k8spolicy.UID{.uid = "testNP-279"}, .node = "testNode-27"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-280", .policy = k8spolicy.UID{.uid = "testNP-280"}, .node = "testNode-28"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-281", .policy = k8spolicy.UID{.uid = "testNP-281"}, .node = "testNode-28"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-282", .policy = k8spolicy.UID{.uid = "testNP-282"}, .node = "testNode-28"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-283", .policy = k8spolicy.UID{.uid = "testNP-283"}, .node = "testNode-28"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-284", .policy = k8spolicy.UID{.uid = "testNP-284"}, .node = "testNode-28"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-285", .policy = k8spolicy.UID{.uid = "testNP-285"}, .node = "testNode-28"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-286", .policy = k8spolicy.UID{.uid = "testNP-286"}, .node = "testNode-28"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-287", .policy = k8spolicy.UID{.uid = "testNP-287"}, .node = "testNode-28"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-288", .policy = k8spolicy.UID{.uid = "testNP-288"}, .node = "testNode-28"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-289", .policy = k8spolicy.UID{.uid = "testNP-289"}, .node = "testNode-28"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-290", .policy = k8spolicy.UID{.uid = "testNP-290"}, .node = "testNode-29"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-291", .policy = k8spolicy.UID{.uid = "testNP-291"}, .node = "testNode-29"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-292", .policy = k8spolicy.UID{.uid = "testNP-292"}, .node = "testNode-29"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-293", .policy = k8spolicy.UID{.uid = "testNP-293"}, .node = "testNode-29"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-294", .policy = k8spolicy.UID{.uid = "testNP-294"}, .node = "testNode-29"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-295", .policy = k8spolicy.UID{.uid = "testNP-295"}, .node = "testNode-29"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-296", .policy = k8spolicy.UID{.uid = "testNP-296"}, .node = "testNode-29"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-297", .policy = k8spolicy.UID{.uid = "testNP-297"}, .node = "testNode-29"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-298", .policy = k8spolicy.UID{.uid = "testNP-298"}, .node = "testNode-29"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-299", .policy = k8spolicy.UID{.uid = "testNP-299"}, .node = "testNode-29"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-300", .policy = k8spolicy.UID{.uid = "testNP-300"}, .node = "testNode-30"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-301", .policy = k8spolicy.UID{.uid = "testNP-301"}, .node = "testNode-30"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-302", .policy = k8spolicy.UID{.uid = "testNP-302"}, .node = "testNode-30"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-303", .policy = k8spolicy.UID{.uid = "testNP-303"}, .node = "testNode-30"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-304", .policy = k8spolicy.UID{.uid = "testNP-304"}, .node = "testNode-30"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-305", .policy = k8spolicy.UID{.uid = "testNP-305"}, .node = "testNode-30"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-306", .policy = k8spolicy.UID{.uid = "testNP-306"}, .node = "testNode-30"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-307", .policy = k8spolicy.UID{.uid = "testNP-307"}, .node = "testNode-30"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-308", .policy = k8spolicy.UID{.uid = "testNP-308"}, .node = "testNode-30"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-309", .policy = k8spolicy.UID{.uid = "testNP-309"}, .node = "testNode-30"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-310", .policy = k8spolicy.UID{.uid = "testNP-310"}, .node = "testNode-31"}: +1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 8156012615375273075513316480127716116, .address = "10.10.34.1"}: +1
AddressGroupAddress{.addressGroup = 27530921862935252534799180049655572714, .address = "10.10.31.7"}: +1
AddressGroupAddress{.addressGroup = 27670302582832918617839987813308859682, .address = "10.10.33.6"}: +1
AddressGroupAddress{.addressGroup = 28869601861365477063779556370943800455, .address = "10.10.32.0"}: +1
AddressGroupAddress{.addressGroup = 29962960726855158230239284836596500322, .address = "10.10.33.1"}: +1
AddressGroupAddress{.addressGroup = 37101893999110050395633579124359121831, .address = "10.10.31.8"}: +1
AddressGroupAddress{.addressGroup = 54609773851505128183449447279570162603, .address = "10.10.33.7"}: +1
AddressGroupAddress{.addressGroup = 86317366871251654292583405593724506972, .address = "10.10.32.7"}: +1
AddressGroupAddress{.addressGroup = 103224286414000793094385267666221414198, .address = "10.10.34.3"}: +1
AddressGroupAddress{.addressGroup = 109390521759681146293523854875194161876, .address = "10.10.33.9"}: +1
AddressGroupAddress{.addressGroup = 110797891148903104025131445562475916352, .address = "10.10.34.0"}: +1
AddressGroupAddress{.addressGroup = 111815955908526589360855961724276641702, .address = "10.10.32.2"}: +1
AddressGroupAddress{.addressGroup = 115377077972658836375393142367105958157, .address = "10.10.31.5"}: +1
AddressGroupAddress{.addressGroup = 122596521647577110332505315996673230654, .address = "10.10.31.4"}: +1
AddressGroupAddress{.addressGroup = 124080244502856558225174144264224848830, .address = "10.10.32.3"}: +1
AddressGroupAddress{.addressGroup = 125932286054285933888212199934725492300, .address = "10.10.33.8"}: +1
AddressGroupAddress{.addressGroup = 134443069241623646215970611445040804591, .address = "10.10.32.8"}: +1
AddressGroupAddress{.addressGroup = 147312665898295197877079302766034569060, .address = "10.10.32.6"}: +1
AddressGroupAddress{.addressGroup = 149411521092005029786865768771049376072, .address = "10.10.33.0"}: +1
AddressGroupAddress{.addressGroup = 168413022772138304027565386203917121313, .address = "10.10.31.6"}: +1
AddressGroupAddress{.addressGroup = 171181412114741709475660366741228345024, .address = "10.10.34.2"}: +1
AddressGroupAddress{.addressGroup = 175559961848579729040136805394248481608, .address = "10.10.31.9"}: +1
AddressGroupAddress{.addressGroup = 198910222485184959752366135926520783962, .address = "10.10.32.1"}: +1
AddressGroupAddress{.addressGroup = 219938126601821867630403718292135256456, .address = "10.10.31.2"}: +1
AddressGroupAddress{.addressGroup = 222413691810441544435336615076498076445, .address = "10.10.33.4"}: +1
AddressGroupAddress{.addressGroup = 224152998295236335705923032191989609966, .address = "10.10.32.4"}: +1
AddressGroupAddress{.addressGroup = 247643503923191083486514487797088079446, .address = "10.10.31.3"}: +1
AddressGroupAddress{.addressGroup = 274797038520641730978558992225041385791, .address = "10.10.32.5"}: +1
AddressGroupAddress{.addressGroup = 275281581386338180724032301588237661266, .address = "10.10.32.9"}: +1
AddressGroupAddress{.addressGroup = 317498654831788743806531447942786958999, .address = "10.10.33.3"}: +1
AddressGroupAddress{.addressGroup = 332391932983323401294324192472142279524, .address = "10.10.33.5"}: +1
AddressGroupAddress{.addressGroup = 338893346122961319960526719884915482926, .address = "10.10.33.2"}: +1
AddressGroupDescr:
AddressGroupDescr{.name = "0622ca77-ea88-56f5-9b85-5d3e1949cb14", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-341]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-341")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "14b6433f-13ec-52f2-84ad-e1ac2264a8ea", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-317]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-317")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "14d11b3f-177b-5b7f-a489-faf82db28522", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-336]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-336")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "15b81544-1fa6-52c1-8122-bf92b33b7487", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-320]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-320")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "168aa805-2746-5c72-934e-eb04f710c762", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-331]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-331")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "1be9909a-f805-5a65-a182-12dfdd134ba7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-318]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-318")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "291575ba-268e-5347-88c2-4efe6d8793ab", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-337]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-337")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "40f01ec2-a95e-5c7e-85cb-8c9543bcd35c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-327]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-327")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "4da84640-576a-5937-b204-f52f78ea3736", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-343]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-343")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "524bd920-497c-5a79-9482-4730b381fad4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-339]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-339")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "535ae5cb-5535-5a53-a721-3fb07b71ac40", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-340]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-340")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "541ef843-2371-5bba-8ee4-f7763d970fa6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-322]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-322")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "56ccd122-bd82-5f69-9650-8ba3897dc10d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-315]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-315")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "5c3b3b30-b3a1-5a0c-b052-ca65f877c73e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-314]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-314")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "5d58fc5f-fa22-552b-8d5c-fca0c86f3bbe", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-323]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-323")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "5ebdad12-c5fb-57e6-bc25-0c590fac8e4c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-338]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-338")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "6524cb14-d79b-5c8d-9d5d-9c9b5051f2ef", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-328]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-328")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "6ed3632f-896b-5527-ba9f-a78568e64764", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-326]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-326")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "70679cbc-7724-55bf-972e-7cc0262e4948", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-330]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-330")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "7eb32b19-8544-5c7c-93e4-2b34b4eef721", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-316]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-316")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "80c8573b-7c4c-51dd-b183-2619e511d6c0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-342]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-342")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "84139e66-ca7e-595e-9b8d-56a4ffc9bb48", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-319]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-319")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "95a4b722-ad92-5054-8f8a-a1e6dee7a45a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-321]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-321")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "a5768ada-4cb4-5d11-b90d-72963504a188", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-312]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-312")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "a75351a4-1505-59ff-b02a-61bc98a1731d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-334]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-334")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "a8a24c12-4a7b-5c3d-b44a-3bf6f18e75ee", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-324]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-324")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "ba4e676a-d4cb-5006-bf88-ded93f6d4e56", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-313]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-313")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "cebbfc08-f37e-5e72-bbed-09c8bf14093f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-325]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-325")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "cf194dd7-bac5-5b8f-8f0a-53b725e63452", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-329]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-329")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "eedc0444-1ce9-5021-9f14-95dce9a5c697", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-333]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-333")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "fa105b92-431e-5fed-ac1a-4021e55d7364", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-335]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-335")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "fef47bfc-bc28-5f02-9354-7ce265e5a12e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-332]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-332")], .matchExpressions = []}}}}: +1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 8156012615375273075513316480127716116, .node = "testNode-34"}: +1
AddressGroupSpan{.addressGroup = 27530921862935252534799180049655572714, .node = "testNode-31"}: +1
AddressGroupSpan{.addressGroup = 27670302582832918617839987813308859682, .node = "testNode-33"}: +1
AddressGroupSpan{.addressGroup = 28869601861365477063779556370943800455, .node = "testNode-31"}: +1
AddressGroupSpan{.addressGroup = 29962960726855158230239284836596500322, .node = "testNode-33"}: +1
AddressGroupSpan{.addressGroup = 37101893999110050395633579124359121831, .node = "testNode-31"}: +1
AddressGroupSpan{.addressGroup = 54609773851505128183449447279570162603, .node = "testNode-33"}: +1
AddressGroupSpan{.addressGroup = 86317366871251654292583405593724506972, .node = "testNode-32"}: +1
AddressGroupSpan{.addressGroup = 103224286414000793094385267666221414198, .node = "testNode-34"}: +1
AddressGroupSpan{.addressGroup = 109390521759681146293523854875194161876, .node = "testNode-33"}: +1
AddressGroupSpan{.addressGroup = 110797891148903104025131445562475916352, .node = "testNode-33"}: +1
AddressGroupSpan{.addressGroup = 111815955908526589360855961724276641702, .node = "testNode-32"}: +1
AddressGroupSpan{.addressGroup = 115377077972658836375393142367105958157, .node = "testNode-31"}: +1
AddressGroupSpan{.addressGroup = 122596521647577110332505315996673230654, .node = "testNode-31"}: +1
AddressGroupSpan{.addressGroup = 124080244502856558225174144264224848830, .node = "testNode-32"}: +1
AddressGroupSpan{.addressGroup = 125932286054285933888212199934725492300, .node = "testNode-33"}: +1
AddressGroupSpan{.addressGroup = 134443069241623646215970611445040804591, .node = "testNode-32"}: +1
AddressGroupSpan{.addressGroup = 147312665898295197877079302766034569060, .node = "testNode-32"}: +1
AddressGroupSpan{.addressGroup = 149411521092005029786865768771049376072, .node = "testNode-32"}: +1
AddressGroupSpan{.addressGroup = 168413022772138304027565386203917121313, .node = "testNode-31"}: +1
AddressGroupSpan{.addressGroup = 171181412114741709475660366741228345024, .node = "testNode-34"}: +1
AddressGroupSpan{.addressGroup = 175559961848579729040136805394248481608, .node = "testNode-31"}: +1
AddressGroupSpan{.addressGroup = 198910222485184959752366135926520783962, .node = "testNode-32"}: +1
AddressGroupSpan{.addressGroup = 219938126601821867630403718292135256456, .node = "testNode-31"}: +1
AddressGroupSpan{.addressGroup = 222413691810441544435336615076498076445, .node = "testNode-33"}: +1
AddressGroupSpan{.addressGroup = 224152998295236335705923032191989609966, .node = "testNode-32"}: +1
AddressGroupSpan{.addressGroup = 247643503923191083486514487797088079446, .node = "testNode-31"}: +1
AddressGroupSpan{.addressGroup = 274797038520641730978558992225041385791, .node = "testNode-32"}: +1
AddressGroupSpan{.addressGroup = 275281581386338180724032301588237661266, .node = "testNode-32"}: +1
AddressGroupSpan{.addressGroup = 317498654831788743806531447942786958999, .node = "testNode-33"}: +1
AddressGroupSpan{.addressGroup = 332391932983323401294324192472142279524, .node = "testNode-33"}: +1
AddressGroupSpan{.addressGroup = 338893346122961319960526719884915482926, .node = "testNode-33"}: +1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "0622ca77-ea88-56f5-9b85-5d3e1949cb14", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-341]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-341")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "14b6433f-13ec-52f2-84ad-e1ac2264a8ea", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-317]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-317")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "14d11b3f-177b-5b7f-a489-faf82db28522", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-336]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-336")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "15b81544-1fa6-52c1-8122-bf92b33b7487", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-320]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-320")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "168aa805-2746-5c72-934e-eb04f710c762", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-331]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-331")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "1ae7ad27-c08a-5897-8f8e-53b3f0bc298f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-311]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-311")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "1be9909a-f805-5a65-a182-12dfdd134ba7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-318]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-318")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "291575ba-268e-5347-88c2-4efe6d8793ab", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-337]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-337")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "40f01ec2-a95e-5c7e-85cb-8c9543bcd35c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-327]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-327")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "524bd920-497c-5a79-9482-4730b381fad4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-339]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-339")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "535ae5cb-5535-5a53-a721-3fb07b71ac40", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-340]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-340")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "541ef843-2371-5bba-8ee4-f7763d970fa6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-322]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-322")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "56ccd122-bd82-5f69-9650-8ba3897dc10d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-315]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-315")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "5c3b3b30-b3a1-5a0c-b052-ca65f877c73e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-314]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-314")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "5d58fc5f-fa22-552b-8d5c-fca0c86f3bbe", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-323]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-323")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "5ebdad12-c5fb-57e6-bc25-0c590fac8e4c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-338]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-338")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "6524cb14-d79b-5c8d-9d5d-9c9b5051f2ef", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-328]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-328")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "6ed3632f-896b-5527-ba9f-a78568e64764", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-326]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-326")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "70679cbc-7724-55bf-972e-7cc0262e4948", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-330]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-330")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "7eb32b19-8544-5c7c-93e4-2b34b4eef721", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-316]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-316")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "80c8573b-7c4c-51dd-b183-2619e511d6c0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-342]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-342")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "84139e66-ca7e-595e-9b8d-56a4ffc9bb48", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-319]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-319")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "95a4b722-ad92-5054-8f8a-a1e6dee7a45a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-321]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-321")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "a5768ada-4cb4-5d11-b90d-72963504a188", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-312]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-312")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "a75351a4-1505-59ff-b02a-61bc98a1731d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-334]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-334")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "a8a24c12-4a7b-5c3d-b44a-3bf6f18e75ee", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-324]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-324")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "ba4e676a-d4cb-5006-bf88-ded93f6d4e56", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-313]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-313")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "cebbfc08-f37e-5e72-bbed-09c8bf14093f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-325]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-325")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "cf194dd7-bac5-5b8f-8f0a-53b725e63452", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-329]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-329")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "eedc0444-1ce9-5021-9f14-95dce9a5c697", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-333]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-333")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "fa105b92-431e-5fed-ac1a-4021e55d7364", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-335]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-335")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "fef47bfc-bc28-5f02-9354-7ce265e5a12e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-332]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-332")], .matchExpressions = []}}}}: +1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 8156012615375273075513316480127716116, .node = "testNode-34", .pods = [k8spolicy.PodReference{.name = "testPod-341", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 27530921862935252534799180049655572714, .node = "testNode-31", .pods = [k8spolicy.PodReference{.name = "testPod-317", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 27670302582832918617839987813308859682, .node = "testNode-33", .pods = [k8spolicy.PodReference{.name = "testPod-336", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 28869601861365477063779556370943800455, .node = "testNode-32", .pods = [k8spolicy.PodReference{.name = "testPod-320", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 29962960726855158230239284836596500322, .node = "testNode-33", .pods = [k8spolicy.PodReference{.name = "testPod-331", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 35762860471077499685840254348633581967, .node = "testNode-31", .pods = [k8spolicy.PodReference{.name = "testPod-311", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 37101893999110050395633579124359121831, .node = "testNode-31", .pods = [k8spolicy.PodReference{.name = "testPod-318", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 54609773851505128183449447279570162603, .node = "testNode-33", .pods = [k8spolicy.PodReference{.name = "testPod-337", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 86317366871251654292583405593724506972, .node = "testNode-32", .pods = [k8spolicy.PodReference{.name = "testPod-327", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 109390521759681146293523854875194161876, .node = "testNode-33", .pods = [k8spolicy.PodReference{.name = "testPod-339", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 110797891148903104025131445562475916352, .node = "testNode-34", .pods = [k8spolicy.PodReference{.name = "testPod-340", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 111815955908526589360855961724276641702, .node = "testNode-32", .pods = [k8spolicy.PodReference{.name = "testPod-322", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 115377077972658836375393142367105958157, .node = "testNode-31", .pods = [k8spolicy.PodReference{.name = "testPod-315", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 122596521647577110332505315996673230654, .node = "testNode-31", .pods = [k8spolicy.PodReference{.name = "testPod-314", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 124080244502856558225174144264224848830, .node = "testNode-32", .pods = [k8spolicy.PodReference{.name = "testPod-323", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 125932286054285933888212199934725492300, .node = "testNode-33", .pods = [k8spolicy.PodReference{.name = "testPod-338", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 134443069241623646215970611445040804591, .node = "testNode-32", .pods = [k8spolicy.PodReference{.name = "testPod-328", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 147312665898295197877079302766034569060, .node = "testNode-32", .pods = [k8spolicy.PodReference{.name = "testPod-326", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 149411521092005029786865768771049376072, .node = "testNode-33", .pods = [k8spolicy.PodReference{.name = "testPod-330", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 168413022772138304027565386203917121313, .node = "testNode-31", .pods = [k8spolicy.PodReference{.name = "testPod-316", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 171181412114741709475660366741228345024, .node = "testNode-34", .pods = [k8spolicy.PodReference{.name = "testPod-342", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 175559961848579729040136805394248481608, .node = "testNode-31", .pods = [k8spolicy.PodReference{.name = "testPod-319", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 198910222485184959752366135926520783962, .node = "testNode-32", .pods = [k8spolicy.PodReference{.name = "testPod-321", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 219938126601821867630403718292135256456, .node = "testNode-31", .pods = [k8spolicy.PodReference{.name = "testPod-312", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 222413691810441544435336615076498076445, .node = "testNode-33", .pods = [k8spolicy.PodReference{.name = "testPod-334", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 224152998295236335705923032191989609966, .node = "testNode-32", .pods = [k8spolicy.PodReference{.name = "testPod-324", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 247643503923191083486514487797088079446, .node = "testNode-31", .pods = [k8spolicy.PodReference{.name = "testPod-313", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 274797038520641730978558992225041385791, .node = "testNode-32", .pods = [k8spolicy.PodReference{.name = "testPod-325", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 275281581386338180724032301588237661266, .node = "testNode-32", .pods = [k8spolicy.PodReference{.name = "testPod-329", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 317498654831788743806531447942786958999, .node = "testNode-33", .pods = [k8spolicy.PodReference{.name = "testPod-333", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 332391932983323401294324192472142279524, .node = "testNode-33", .pods = [k8spolicy.PodReference{.name = "testPod-335", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 338893346122961319960526719884915482926, .node = "testNode-33", .pods = [k8spolicy.PodReference{.name = "testPod-332", .namespace = "testNamespace"}]}: +1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 8156012615375273075513316480127716116, .span = "testNode-34"}: +1
AppliedToGroupSpan{.appliedToGroup = 27530921862935252534799180049655572714, .span = "testNode-31"}: +1
AppliedToGroupSpan{.appliedToGroup = 27670302582832918617839987813308859682, .span = "testNode-33"}: +1
AppliedToGroupSpan{.appliedToGroup = 28869601861365477063779556370943800455, .span = "testNode-32"}: +1
AppliedToGroupSpan{.appliedToGroup = 29962960726855158230239284836596500322, .span = "testNode-33"}: +1
AppliedToGroupSpan{.appliedToGroup = 35762860471077499685840254348633581967, .span = "testNode-31"}: +1
AppliedToGroupSpan{.appliedToGroup = 37101893999110050395633579124359121831, .span = "testNode-31"}: +1
AppliedToGroupSpan{.appliedToGroup = 54609773851505128183449447279570162603, .span = "testNode-33"}: +1
AppliedToGroupSpan{.appliedToGroup = 86317366871251654292583405593724506972, .span = "testNode-32"}: +1
AppliedToGroupSpan{.appliedToGroup = 109390521759681146293523854875194161876, .span = "testNode-33"}: +1
AppliedToGroupSpan{.appliedToGroup = 110797891148903104025131445562475916352, .span = "testNode-34"}: +1
AppliedToGroupSpan{.appliedToGroup = 111815955908526589360855961724276641702, .span = "testNode-32"}: +1
AppliedToGroupSpan{.appliedToGroup = 115377077972658836375393142367105958157, .span = "testNode-31"}: +1
AppliedToGroupSpan{.appliedToGroup = 122596521647577110332505315996673230654, .span = "testNode-31"}: +1
AppliedToGroupSpan{.appliedToGroup = 124080244502856558225174144264224848830, .span = "testNode-32"}: +1
AppliedToGroupSpan{.appliedToGroup = 125932286054285933888212199934725492300, .span = "testNode-33"}: +1
AppliedToGroupSpan{.appliedToGroup = 134443069241623646215970611445040804591, .span = "testNode-32"}: +1
AppliedToGroupSpan{.appliedToGroup = 147312665898295197877079302766034569060, .span = "testNode-32"}: +1
AppliedToGroupSpan{.appliedToGroup = 149411521092005029786865768771049376072, .span = "testNode-33"}: +1
AppliedToGroupSpan{.appliedToGroup = 168413022772138304027565386203917121313, .span = "testNode-31"}: +1
AppliedToGroupSpan{.appliedToGroup = 171181412114741709475660366741228345024, .span = "testNode-34"}: +1
AppliedToGroupSpan{.appliedToGroup = 175559961848579729040136805394248481608, .span = "testNode-31"}: +1
AppliedToGroupSpan{.appliedToGroup = 198910222485184959752366135926520783962, .span = "testNode-32"}: +1
AppliedToGroupSpan{.appliedToGroup = 219938126601821867630403718292135256456, .span = "testNode-31"}: +1
AppliedToGroupSpan{.appliedToGroup = 222413691810441544435336615076498076445, .span = "testNode-33"}: +1
AppliedToGroupSpan{.appliedToGroup = 224152998295236335705923032191989609966, .span = "testNode-32"}: +1
AppliedToGroupSpan{.appliedToGroup = 247643503923191083486514487797088079446, .span = "testNode-31"}: +1
AppliedToGroupSpan{.appliedToGroup = 274797038520641730978558992225041385791, .span = "testNode-32"}: +1
AppliedToGroupSpan{.appliedToGroup = 275281581386338180724032301588237661266, .span = "testNode-32"}: +1
AppliedToGroupSpan{.appliedToGroup = 317498654831788743806531447942786958999, .span = "testNode-33"}: +1
AppliedToGroupSpan{.appliedToGroup = 332391932983323401294324192472142279524, .span = "testNode-33"}: +1
AppliedToGroupSpan{.appliedToGroup = 338893346122961319960526719884915482926, .span = "testNode-33"}: +1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-311"}, .name = "testNP-311", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [219938126601821867630403718292135256456], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [35762860471077499685840254348633581967]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-312"}, .name = "testNP-312", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [247643503923191083486514487797088079446], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [219938126601821867630403718292135256456]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-313"}, .name = "testNP-313", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [122596521647577110332505315996673230654], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [247643503923191083486514487797088079446]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-314"}, .name = "testNP-314", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [115377077972658836375393142367105958157], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [122596521647577110332505315996673230654]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-315"}, .name = "testNP-315", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [168413022772138304027565386203917121313], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [115377077972658836375393142367105958157]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-316"}, .name = "testNP-316", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [27530921862935252534799180049655572714], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [168413022772138304027565386203917121313]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-317"}, .name = "testNP-317", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [37101893999110050395633579124359121831], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [27530921862935252534799180049655572714]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-318"}, .name = "testNP-318", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [175559961848579729040136805394248481608], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [37101893999110050395633579124359121831]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-319"}, .name = "testNP-319", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [28869601861365477063779556370943800455], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [175559961848579729040136805394248481608]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-320"}, .name = "testNP-320", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [198910222485184959752366135926520783962], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [28869601861365477063779556370943800455]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-321"}, .name = "testNP-321", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [111815955908526589360855961724276641702], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [198910222485184959752366135926520783962]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-322"}, .name = "testNP-322", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [124080244502856558225174144264224848830], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [111815955908526589360855961724276641702]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-323"}, .name = "testNP-323", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [224152998295236335705923032191989609966], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [124080244502856558225174144264224848830]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-324"}, .name = "testNP-324", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [274797038520641730978558992225041385791], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [224152998295236335705923032191989609966]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-325"}, .name = "testNP-325", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [147312665898295197877079302766034569060], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [274797038520641730978558992225041385791]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-326"}, .name = "testNP-326", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [86317366871251654292583405593724506972], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [147312665898295197877079302766034569060]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-327"}, .name = "testNP-327", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [134443069241623646215970611445040804591], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [86317366871251654292583405593724506972]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-328"}, .name = "testNP-328", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [275281581386338180724032301588237661266], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [134443069241623646215970611445040804591]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-329"}, .name = "testNP-329", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [149411521092005029786865768771049376072], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [275281581386338180724032301588237661266]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-330"}, .name = "testNP-330", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [29962960726855158230239284836596500322], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [149411521092005029786865768771049376072]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-331"}, .name = "testNP-331", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [338893346122961319960526719884915482926], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [29962960726855158230239284836596500322]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-332"}, .name = "testNP-332", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [317498654831788743806531447942786958999], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [338893346122961319960526719884915482926]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-333"}, .name = "testNP-333", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [222413691810441544435336615076498076445], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [317498654831788743806531447942786958999]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-334"}, .name = "testNP-334", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [332391932983323401294324192472142279524], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [222413691810441544435336615076498076445]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-335"}, .name = "testNP-335", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [27670302582832918617839987813308859682], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [332391932983323401294324192472142279524]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-336"}, .name = "testNP-336", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [54609773851505128183449447279570162603], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [27670302582832918617839987813308859682]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-337"}, .name = "testNP-337", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [125932286054285933888212199934725492300], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [54609773851505128183449447279570162603]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-338"}, .name = "testNP-338", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [109390521759681146293523854875194161876], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [125932286054285933888212199934725492300]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-339"}, .name = "testNP-339", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [110797891148903104025131445562475916352], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [109390521759681146293523854875194161876]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-340"}, .name = "testNP-340", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [8156012615375273075513316480127716116], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [110797891148903104025131445562475916352]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-341"}, .name = "testNP-341", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [171181412114741709475660366741228345024], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [8156012615375273075513316480127716116]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-342"}, .name = "testNP-342", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [103224286414000793094385267666221414198], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [171181412114741709475660366741228345024]}: +1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-311", .policy = k8spolicy.UID{.uid = "testNP-311"}, .node = "testNode-31"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-312", .policy = k8spolicy.UID{.uid = "testNP-312"}, .node = "testNode-31"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-313", .policy = k8spolicy.UID{.uid = "testNP-313"}, .node = "testNode-31"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-314", .policy = k8spolicy.UID{.uid = "testNP-314"}, .node = "testNode-31"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-315", .policy = k8spolicy.UID{.uid = "testNP-315"}, .node = "testNode-31"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-316", .policy = k8spolicy.UID{.uid = "testNP-316"}, .node = "testNode-31"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-317", .policy = k8spolicy.UID{.uid = "testNP-317"}, .node = "testNode-31"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-318", .policy = k8spolicy.UID{.uid = "testNP-318"}, .node = "testNode-31"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-319", .policy = k8spolicy.UID{.uid = "testNP-319"}, .node = "testNode-31"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-320", .policy = k8spolicy.UID{.uid = "testNP-320"}, .node = "testNode-32"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-321", .policy = k8spolicy.UID{.uid = "testNP-321"}, .node = "testNode-32"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-322", .policy = k8spolicy.UID{.uid = "testNP-322"}, .node = "testNode-32"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-323", .policy = k8spolicy.UID{.uid = "testNP-323"}, .node = "testNode-32"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-324", .policy = k8spolicy.UID{.uid = "testNP-324"}, .node = "testNode-32"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-325", .policy = k8spolicy.UID{.uid = "testNP-325"}, .node = "testNode-32"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-326", .policy = k8spolicy.UID{.uid = "testNP-326"}, .node = "testNode-32"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-327", .policy = k8spolicy.UID{.uid = "testNP-327"}, .node = "testNode-32"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-328", .policy = k8spolicy.UID{.uid = "testNP-328"}, .node = "testNode-32"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-329", .policy = k8spolicy.UID{.uid = "testNP-329"}, .node = "testNode-32"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-330", .policy = k8spolicy.UID{.uid = "testNP-330"}, .node = "testNode-33"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-331", .policy = k8spolicy.UID{.uid = "testNP-331"}, .node = "testNode-33"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-332", .policy = k8spolicy.UID{.uid = "testNP-332"}, .node = "testNode-33"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-333", .policy = k8spolicy.UID{.uid = "testNP-333"}, .node = "testNode-33"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-334", .policy = k8spolicy.UID{.uid = "testNP-334"}, .node = "testNode-33"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-335", .policy = k8spolicy.UID{.uid = "testNP-335"}, .node = "testNode-33"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-336", .policy = k8spolicy.UID{.uid = "testNP-336"}, .node = "testNode-33"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-337", .policy = k8spolicy.UID{.uid = "testNP-337"}, .node = "testNode-33"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-338", .policy = k8spolicy.UID{.uid = "testNP-338"}, .node = "testNode-33"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-339", .policy = k8spolicy.UID{.uid = "testNP-339"}, .node = "testNode-33"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-340", .policy = k8spolicy.UID{.uid = "testNP-340"}, .node = "testNode-34"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-341", .policy = k8spolicy.UID{.uid = "testNP-341"}, .node = "testNode-34"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-342", .policy = k8spolicy.UID{.uid = "testNP-342"}, .node = "testNode-34"}: +1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 23289236440490671008988671773537245769, .address = "10.10.34.5"}: +1
AddressGroupAddress{.addressGroup = 39563579425363251010021501183360136453, .address = "10.10.36.4"}: +1
AddressGroupAddress{.addressGroup = 42824286947216686958637470650615346814, .address = "10.10.35.0"}: +1
AddressGroupAddress{.addressGroup = 43807059977161073289472890775806665241, .address = "10.10.37.2"}: +1
AddressGroupAddress{.addressGroup = 72437780108526313005058184720248204368, .address = "10.10.34.6"}: +1
AddressGroupAddress{.addressGroup = 104446872545109095715253227764781230865, .address = "10.10.34.8"}: +1
AddressGroupAddress{.addressGroup = 106187498583969152475652717203950076016, .address = "10.10.37.5"}: +1
AddressGroupAddress{.addressGroup = 109371540700279225899571308895405664759, .address = "10.10.35.3"}: +1
AddressGroupAddress{.addressGroup = 127540519359533634018201691059152237407, .address = "10.10.36.1"}: +1
AddressGroupAddress{.addressGroup = 133745256079059968015248566816374212979, .address = "10.10.34.4"}: +1
AddressGroupAddress{.addressGroup = 136232272814920806987539799605696569121, .address = "10.10.34.7"}: +1
AddressGroupAddress{.addressGroup = 142109813633545012082195008673714637464, .address = "10.10.35.1"}: +1
AddressGroupAddress{.addressGroup = 150807549167585680368715919476962427228, .address = "10.10.36.0"}: +1
AddressGroupAddress{.addressGroup = 154257931395130954044404164861273830672, .address = "10.10.37.4"}: +1
AddressGroupAddress{.addressGroup = 161502882177064113748800817414401677268, .address = "10.10.35.8"}: +1
AddressGroupAddress{.addressGroup = 174517760590703030369221808418215095444, .address = "10.10.34.9"}: +1
AddressGroupAddress{.addressGroup = 178256877441172842406234072943247700416, .address = "10.10.35.4"}: +1
AddressGroupAddress{.addressGroup = 199487636299424221536221472704617864021, .address = "10.10.35.7"}: +1
AddressGroupAddress{.addressGroup = 216995137289808744638771175156270837472, .address = "10.10.36.6"}: +1
AddressGroupAddress{.addressGroup = 222912033200703017039023335860053126690, .address = "10.10.35.5"}: +1
AddressGroupAddress{.addressGroup = 235984494721957284391273911870943692802, .address = "10.10.35.6"}: +1
AddressGroupAddress{.addressGroup = 241675646095052571155624669839169783330, .address = "10.10.36.3"}: +1
AddressGroupAddress{.addressGroup = 279759141478477705901889363286752079720, .address = "10.10.36.8"}: +1
AddressGroupAddress{.addressGroup = 289604564939442756424628922785112151181, .address = "10.10.36.2"}: +1
AddressGroupAddress{.addressGroup = 291779966422723611698741003262163667558, .address = "10.10.36.9"}: +1
AddressGroupAddress{.addressGroup = 294777063325130814998857042997978698093, .address = "10.10.35.2"}: +1
AddressGroupAddress{.addressGroup = 319097179162881233309057408459821988975, .address = "10.10.37.0"}: +1
AddressGroupAddress{.addressGroup = 323613082206982824230896362683386657137, .address = "10.10.37.3"}: +1
AddressGroupAddress{.addressGroup = 324113510679508754845290643165218141943, .address = "10.10.35.9"}: +1
AddressGroupAddress{.addressGroup = 326741712428026666998935812082432165208, .address = "10.10.36.7"}: +1
AddressGroupAddress{.addressGroup = 333978821761015600771410415190035118242, .address = "10.10.36.5"}: +1
AddressGroupAddress{.addressGroup = 336365034612928243870868949808197599767, .address = "10.10.37.1"}: +1
AddressGroupDescr:
AddressGroupDescr{.name = "11855802-3ee1-5dfa-826b-b32f0fa49a49", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-345]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-345")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "1dc3ab11-44b6-562d-8368-ec8960367505", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-364]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-364")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "2037a85c-4419-539f-9062-53066da2367e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-350]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-350")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "20f4eecf-d187-51b3-b3b5-acfa9207e219", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-372]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-372")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "367f024c-9e28-51b1-9440-f3610253ec50", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-346]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-346")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "4e93bc66-c667-59b8-83c7-4c2f0db92b11", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-348]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-348")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "4fe2f7e4-1901-5cc4-b05f-0073bec70070", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-375]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-375")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "52483149-a2c5-5e14-8ce0-87292d78e9f7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-353]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-353")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "5ff36918-de7e-50f8-b674-89b7896c335f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-361]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-361")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "649e663c-7902-5f6a-b621-2a2627cb4973", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-344]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-344")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "667d61a0-d979-5f78-85a3-469b35bc9f21", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-347]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-347")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "6ae95ac3-9478-5ddb-b790-65b9bb698a98", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-351]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-351")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "71747a3c-0210-5ca6-b9d9-06d219e1015c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-360]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-360")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "740cff36-5dbb-576d-a05e-1a43aa5bf510", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-374]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-374")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "798052dd-47af-5971-9527-c1b7902bd7d4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-358]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-358")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "834ae5e9-8c30-5d93-a80f-5024f4caec94", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-349]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-349")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "861b069b-33ab-550d-b698-2d04d0a731c0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-354]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-354")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "9613ebd5-a001-5394-99d1-785aa7b15b55", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-357]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-357")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "a33fbe46-e55c-55c1-b5da-11027d592ee0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-366]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-366")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "a7b34bc4-b9ce-5d27-a937-262e38daae22", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-355]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-355")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "b188f5e1-fde5-5a4e-a352-41509f988802", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-356]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-356")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "b5d1094f-2cb6-510d-9805-da70ee098622", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-363]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-363")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "d277a699-72f4-5235-b75b-d30225b5af68", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-368]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-368")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "d9dfcf74-1179-5764-9b7f-de3f7de2548d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-362]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-362")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "db82c707-005a-5d3e-9ca4-37b2dc33ca66", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-369]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-369")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "ddc3ff50-3578-5622-b267-07f75659916d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-352]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-352")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "f00fe199-b9f7-513a-ba79-1777f31ebc6f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-370]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-370")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "f3759ccf-89e1-5a87-9b66-2d1e42057971", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-373]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-373")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "f3d5fdd6-dd2c-5432-a528-b3a0c78cf6f7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-359]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-359")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "f5d02a30-a188-5059-a878-fd0f73fb4558", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-367]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-367")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "fb41fb3a-8b6f-5569-971d-88811ca3b8a2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-365]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-365")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "fd0d8c9b-07fe-5743-babc-94fd14fb0217", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-371]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-371")], .matchExpressions = []}}}}: +1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 23289236440490671008988671773537245769, .node = "testNode-34"}: +1
AddressGroupSpan{.addressGroup = 39563579425363251010021501183360136453, .node = "testNode-36"}: +1
AddressGroupSpan{.addressGroup = 42824286947216686958637470650615346814, .node = "testNode-34"}: +1
AddressGroupSpan{.addressGroup = 43807059977161073289472890775806665241, .node = "testNode-37"}: +1
AddressGroupSpan{.addressGroup = 72437780108526313005058184720248204368, .node = "testNode-34"}: +1
AddressGroupSpan{.addressGroup = 104446872545109095715253227764781230865, .node = "testNode-34"}: +1
AddressGroupSpan{.addressGroup = 106187498583969152475652717203950076016, .node = "testNode-37"}: +1
AddressGroupSpan{.addressGroup = 109371540700279225899571308895405664759, .node = "testNode-35"}: +1
AddressGroupSpan{.addressGroup = 127540519359533634018201691059152237407, .node = "testNode-36"}: +1
AddressGroupSpan{.addressGroup = 133745256079059968015248566816374212979, .node = "testNode-34"}: +1
AddressGroupSpan{.addressGroup = 136232272814920806987539799605696569121, .node = "testNode-34"}: +1
AddressGroupSpan{.addressGroup = 142109813633545012082195008673714637464, .node = "testNode-35"}: +1
AddressGroupSpan{.addressGroup = 150807549167585680368715919476962427228, .node = "testNode-35"}: +1
AddressGroupSpan{.addressGroup = 154257931395130954044404164861273830672, .node = "testNode-37"}: +1
AddressGroupSpan{.addressGroup = 161502882177064113748800817414401677268, .node = "testNode-35"}: +1
AddressGroupSpan{.addressGroup = 174517760590703030369221808418215095444, .node = "testNode-34"}: +1
AddressGroupSpan{.addressGroup = 178256877441172842406234072943247700416, .node = "testNode-35"}: +1
AddressGroupSpan{.addressGroup = 199487636299424221536221472704617864021, .node = "testNode-35"}: +1
AddressGroupSpan{.addressGroup = 216995137289808744638771175156270837472, .node = "testNode-36"}: +1
AddressGroupSpan{.addressGroup = 222912033200703017039023335860053126690, .node = "testNode-35"}: +1
AddressGroupSpan{.addressGroup = 235984494721957284391273911870943692802, .node = "testNode-35"}: +1
AddressGroupSpan{.addressGroup = 241675646095052571155624669839169783330, .node = "testNode-36"}: +1
AddressGroupSpan{.addressGroup = 279759141478477705901889363286752079720, .node = "testNode-36"}: +1
AddressGroupSpan{.addressGroup = 289604564939442756424628922785112151181, .node = "testNode-36"}: +1
AddressGroupSpan{.addressGroup = 291779966422723611698741003262163667558, .node = "testNode-36"}: +1
AddressGroupSpan{.addressGroup = 294777063325130814998857042997978698093, .node = "testNode-35"}: +1
AddressGroupSpan{.addressGroup = 319097179162881233309057408459821988975, .node = "testNode-36"}: +1
AddressGroupSpan{.addressGroup = 323613082206982824230896362683386657137, .node = "testNode-37"}: +1
AddressGroupSpan{.addressGroup = 324113510679508754845290643165218141943, .node = "testNode-35"}: +1
AddressGroupSpan{.addressGroup = 326741712428026666998935812082432165208, .node = "testNode-36"}: +1
AddressGroupSpan{.addressGroup = 333978821761015600771410415190035118242, .node = "testNode-36"}: +1
AddressGroupSpan{.addressGroup = 336365034612928243870868949808197599767, .node = "testNode-37"}: +1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "11855802-3ee1-5dfa-826b-b32f0fa49a49", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-345]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-345")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "1dc3ab11-44b6-562d-8368-ec8960367505", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-364]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-364")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "2037a85c-4419-539f-9062-53066da2367e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-350]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-350")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "20f4eecf-d187-51b3-b3b5-acfa9207e219", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-372]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-372")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "367f024c-9e28-51b1-9440-f3610253ec50", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-346]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-346")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "4da84640-576a-5937-b204-f52f78ea3736", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-343]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-343")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "4e93bc66-c667-59b8-83c7-4c2f0db92b11", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-348]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-348")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "52483149-a2c5-5e14-8ce0-87292d78e9f7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-353]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-353")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "5ff36918-de7e-50f8-b674-89b7896c335f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-361]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-361")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "649e663c-7902-5f6a-b621-2a2627cb4973", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-344]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-344")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "667d61a0-d979-5f78-85a3-469b35bc9f21", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-347]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-347")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "6ae95ac3-9478-5ddb-b790-65b9bb698a98", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-351]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-351")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "71747a3c-0210-5ca6-b9d9-06d219e1015c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-360]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-360")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "740cff36-5dbb-576d-a05e-1a43aa5bf510", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-374]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-374")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "798052dd-47af-5971-9527-c1b7902bd7d4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-358]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-358")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "834ae5e9-8c30-5d93-a80f-5024f4caec94", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-349]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-349")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "861b069b-33ab-550d-b698-2d04d0a731c0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-354]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-354")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "9613ebd5-a001-5394-99d1-785aa7b15b55", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-357]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-357")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "a33fbe46-e55c-55c1-b5da-11027d592ee0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-366]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-366")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "a7b34bc4-b9ce-5d27-a937-262e38daae22", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-355]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-355")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "b188f5e1-fde5-5a4e-a352-41509f988802", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-356]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-356")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "b5d1094f-2cb6-510d-9805-da70ee098622", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-363]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-363")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "d277a699-72f4-5235-b75b-d30225b5af68", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-368]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-368")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "d9dfcf74-1179-5764-9b7f-de3f7de2548d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-362]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-362")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "db82c707-005a-5d3e-9ca4-37b2dc33ca66", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-369]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-369")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "ddc3ff50-3578-5622-b267-07f75659916d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-352]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-352")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "f00fe199-b9f7-513a-ba79-1777f31ebc6f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-370]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-370")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "f3759ccf-89e1-5a87-9b66-2d1e42057971", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-373]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-373")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "f3d5fdd6-dd2c-5432-a528-b3a0c78cf6f7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-359]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-359")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "f5d02a30-a188-5059-a878-fd0f73fb4558", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-367]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-367")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "fb41fb3a-8b6f-5569-971d-88811ca3b8a2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-365]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-365")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "fd0d8c9b-07fe-5743-babc-94fd14fb0217", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-371]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-371")], .matchExpressions = []}}}}: +1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 23289236440490671008988671773537245769, .node = "testNode-34", .pods = [k8spolicy.PodReference{.name = "testPod-345", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 39563579425363251010021501183360136453, .node = "testNode-36", .pods = [k8spolicy.PodReference{.name = "testPod-364", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 42824286947216686958637470650615346814, .node = "testNode-35", .pods = [k8spolicy.PodReference{.name = "testPod-350", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 43807059977161073289472890775806665241, .node = "testNode-37", .pods = [k8spolicy.PodReference{.name = "testPod-372", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 72437780108526313005058184720248204368, .node = "testNode-34", .pods = [k8spolicy.PodReference{.name = "testPod-346", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 103224286414000793094385267666221414198, .node = "testNode-34", .pods = [k8spolicy.PodReference{.name = "testPod-343", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 104446872545109095715253227764781230865, .node = "testNode-34", .pods = [k8spolicy.PodReference{.name = "testPod-348", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 109371540700279225899571308895405664759, .node = "testNode-35", .pods = [k8spolicy.PodReference{.name = "testPod-353", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 127540519359533634018201691059152237407, .node = "testNode-36", .pods = [k8spolicy.PodReference{.name = "testPod-361", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 133745256079059968015248566816374212979, .node = "testNode-34", .pods = [k8spolicy.PodReference{.name = "testPod-344", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 136232272814920806987539799605696569121, .node = "testNode-34", .pods = [k8spolicy.PodReference{.name = "testPod-347", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 142109813633545012082195008673714637464, .node = "testNode-35", .pods = [k8spolicy.PodReference{.name = "testPod-351", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 150807549167585680368715919476962427228, .node = "testNode-36", .pods = [k8spolicy.PodReference{.name = "testPod-360", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 154257931395130954044404164861273830672, .node = "testNode-37", .pods = [k8spolicy.PodReference{.name = "testPod-374", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 161502882177064113748800817414401677268, .node = "testNode-35", .pods = [k8spolicy.PodReference{.name = "testPod-358", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 174517760590703030369221808418215095444, .node = "testNode-34", .pods = [k8spolicy.PodReference{.name = "testPod-349", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 178256877441172842406234072943247700416, .node = "testNode-35", .pods = [k8spolicy.PodReference{.name = "testPod-354", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 199487636299424221536221472704617864021, .node = "testNode-35", .pods = [k8spolicy.PodReference{.name = "testPod-357", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 216995137289808744638771175156270837472, .node = "testNode-36", .pods = [k8spolicy.PodReference{.name = "testPod-366", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 222912033200703017039023335860053126690, .node = "testNode-35", .pods = [k8spolicy.PodReference{.name = "testPod-355", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 235984494721957284391273911870943692802, .node = "testNode-35", .pods = [k8spolicy.PodReference{.name = "testPod-356", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 241675646095052571155624669839169783330, .node = "testNode-36", .pods = [k8spolicy.PodReference{.name = "testPod-363", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 279759141478477705901889363286752079720, .node = "testNode-36", .pods = [k8spolicy.PodReference{.name = "testPod-368", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 289604564939442756424628922785112151181, .node = "testNode-36", .pods = [k8spolicy.PodReference{.name = "testPod-362", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 291779966422723611698741003262163667558, .node = "testNode-36", .pods = [k8spolicy.PodReference{.name = "testPod-369", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 294777063325130814998857042997978698093, .node = "testNode-35", .pods = [k8spolicy.PodReference{.name = "testPod-352", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 319097179162881233309057408459821988975, .node = "testNode-37", .pods = [k8spolicy.PodReference{.name = "testPod-370", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 323613082206982824230896362683386657137, .node = "testNode-37", .pods = [k8spolicy.PodReference{.name = "testPod-373", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 324113510679508754845290643165218141943, .node = "testNode-35", .pods = [k8spolicy.PodReference{.name = "testPod-359", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 326741712428026666998935812082432165208, .node = "testNode-36", .pods = [k8spolicy.PodReference{.name = "testPod-367", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 333978821761015600771410415190035118242, .node = "testNode-36", .pods = [k8spolicy.PodReference{.name = "testPod-365", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 336365034612928243870868949808197599767, .node = "testNode-37", .pods = [k8spolicy.PodReference{.name = "testPod-371", .namespace = "testNamespace"}]}: +1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 23289236440490671008988671773537245769, .span = "testNode-34"}: +1
AppliedToGroupSpan{.appliedToGroup = 39563579425363251010021501183360136453, .span = "testNode-36"}: +1
AppliedToGroupSpan{.appliedToGroup = 42824286947216686958637470650615346814, .span = "testNode-35"}: +1
AppliedToGroupSpan{.appliedToGroup = 43807059977161073289472890775806665241, .span = "testNode-37"}: +1
AppliedToGroupSpan{.appliedToGroup = 72437780108526313005058184720248204368, .span = "testNode-34"}: +1
AppliedToGroupSpan{.appliedToGroup = 103224286414000793094385267666221414198, .span = "testNode-34"}: +1
AppliedToGroupSpan{.appliedToGroup = 104446872545109095715253227764781230865, .span = "testNode-34"}: +1
AppliedToGroupSpan{.appliedToGroup = 109371540700279225899571308895405664759, .span = "testNode-35"}: +1
AppliedToGroupSpan{.appliedToGroup = 127540519359533634018201691059152237407, .span = "testNode-36"}: +1
AppliedToGroupSpan{.appliedToGroup = 133745256079059968015248566816374212979, .span = "testNode-34"}: +1
AppliedToGroupSpan{.appliedToGroup = 136232272814920806987539799605696569121, .span = "testNode-34"}: +1
AppliedToGroupSpan{.appliedToGroup = 142109813633545012082195008673714637464, .span = "testNode-35"}: +1
AppliedToGroupSpan{.appliedToGroup = 150807549167585680368715919476962427228, .span = "testNode-36"}: +1
AppliedToGroupSpan{.appliedToGroup = 154257931395130954044404164861273830672, .span = "testNode-37"}: +1
AppliedToGroupSpan{.appliedToGroup = 161502882177064113748800817414401677268, .span = "testNode-35"}: +1
AppliedToGroupSpan{.appliedToGroup = 174517760590703030369221808418215095444, .span = "testNode-34"}: +1
AppliedToGroupSpan{.appliedToGroup = 178256877441172842406234072943247700416, .span = "testNode-35"}: +1
AppliedToGroupSpan{.appliedToGroup = 199487636299424221536221472704617864021, .span = "testNode-35"}: +1
AppliedToGroupSpan{.appliedToGroup = 216995137289808744638771175156270837472, .span = "testNode-36"}: +1
AppliedToGroupSpan{.appliedToGroup = 222912033200703017039023335860053126690, .span = "testNode-35"}: +1
AppliedToGroupSpan{.appliedToGroup = 235984494721957284391273911870943692802, .span = "testNode-35"}: +1
AppliedToGroupSpan{.appliedToGroup = 241675646095052571155624669839169783330, .span = "testNode-36"}: +1
AppliedToGroupSpan{.appliedToGroup = 279759141478477705901889363286752079720, .span = "testNode-36"}: +1
AppliedToGroupSpan{.appliedToGroup = 289604564939442756424628922785112151181, .span = "testNode-36"}: +1
AppliedToGroupSpan{.appliedToGroup = 291779966422723611698741003262163667558, .span = "testNode-36"}: +1
AppliedToGroupSpan{.appliedToGroup = 294777063325130814998857042997978698093, .span = "testNode-35"}: +1
AppliedToGroupSpan{.appliedToGroup = 319097179162881233309057408459821988975, .span = "testNode-37"}: +1
AppliedToGroupSpan{.appliedToGroup = 323613082206982824230896362683386657137, .span = "testNode-37"}: +1
AppliedToGroupSpan{.appliedToGroup = 324113510679508754845290643165218141943, .span = "testNode-35"}: +1
AppliedToGroupSpan{.appliedToGroup = 326741712428026666998935812082432165208, .span = "testNode-36"}: +1
AppliedToGroupSpan{.appliedToGroup = 333978821761015600771410415190035118242, .span = "testNode-36"}: +1
AppliedToGroupSpan{.appliedToGroup = 336365034612928243870868949808197599767, .span = "testNode-37"}: +1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-343"}, .name = "testNP-343", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [133745256079059968015248566816374212979], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [103224286414000793094385267666221414198]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-344"}, .name = "testNP-344", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [23289236440490671008988671773537245769], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [133745256079059968015248566816374212979]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-345"}, .name = "testNP-345", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [72437780108526313005058184720248204368], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [23289236440490671008988671773537245769]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-346"}, .name = "testNP-346", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [136232272814920806987539799605696569121], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [72437780108526313005058184720248204368]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-347"}, .name = "testNP-347", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [104446872545109095715253227764781230865], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [136232272814920806987539799605696569121]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-348"}, .name = "testNP-348", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [174517760590703030369221808418215095444], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [104446872545109095715253227764781230865]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-349"}, .name = "testNP-349", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [42824286947216686958637470650615346814], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [174517760590703030369221808418215095444]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-350"}, .name = "testNP-350", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [142109813633545012082195008673714637464], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [42824286947216686958637470650615346814]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-351"}, .name = "testNP-351", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [294777063325130814998857042997978698093], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [142109813633545012082195008673714637464]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-352"}, .name = "testNP-352", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [109371540700279225899571308895405664759], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [294777063325130814998857042997978698093]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-353"}, .name = "testNP-353", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [178256877441172842406234072943247700416], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [109371540700279225899571308895405664759]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-354"}, .name = "testNP-354", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [222912033200703017039023335860053126690], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [178256877441172842406234072943247700416]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-355"}, .name = "testNP-355", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [235984494721957284391273911870943692802], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [222912033200703017039023335860053126690]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-356"}, .name = "testNP-356", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [199487636299424221536221472704617864021], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [235984494721957284391273911870943692802]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-357"}, .name = "testNP-357", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [161502882177064113748800817414401677268], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [199487636299424221536221472704617864021]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-358"}, .name = "testNP-358", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [324113510679508754845290643165218141943], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [161502882177064113748800817414401677268]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-359"}, .name = "testNP-359", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [150807549167585680368715919476962427228], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [324113510679508754845290643165218141943]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-360"}, .name = "testNP-360", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [127540519359533634018201691059152237407], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [150807549167585680368715919476962427228]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-361"}, .name = "testNP-361", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [289604564939442756424628922785112151181], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [127540519359533634018201691059152237407]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-362"}, .name = "testNP-362", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [241675646095052571155624669839169783330], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [289604564939442756424628922785112151181]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-363"}, .name = "testNP-363", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [39563579425363251010021501183360136453], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [241675646095052571155624669839169783330]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-364"}, .name = "testNP-364", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [333978821761015600771410415190035118242], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [39563579425363251010021501183360136453]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-365"}, .name = "testNP-365", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [216995137289808744638771175156270837472], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [333978821761015600771410415190035118242]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-366"}, .name = "testNP-366", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [326741712428026666998935812082432165208], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [216995137289808744638771175156270837472]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-367"}, .name = "testNP-367", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [279759141478477705901889363286752079720], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [326741712428026666998935812082432165208]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-368"}, .name = "testNP-368", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [291779966422723611698741003262163667558], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [279759141478477705901889363286752079720]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-369"}, .name = "testNP-369", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [319097179162881233309057408459821988975], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [291779966422723611698741003262163667558]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-370"}, .name = "testNP-370", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [336365034612928243870868949808197599767], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [319097179162881233309057408459821988975]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-371"}, .name = "testNP-371", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [43807059977161073289472890775806665241], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [336365034612928243870868949808197599767]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-372"}, .name = "testNP-372", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [323613082206982824230896362683386657137], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [43807059977161073289472890775806665241]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-373"}, .name = "testNP-373", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [154257931395130954044404164861273830672], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [323613082206982824230896362683386657137]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-374"}, .name = "testNP-374", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [106187498583969152475652717203950076016], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [154257931395130954044404164861273830672]}: +1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-343", .policy = k8spolicy.UID{.uid = "testNP-343"}, .node = "testNode-34"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-344", .policy = k8spolicy.UID{.uid = "testNP-344"}, .node = "testNode-34"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-345", .policy = k8spolicy.UID{.uid = "testNP-345"}, .node = "testNode-34"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-346", .policy = k8spolicy.UID{.uid = "testNP-346"}, .node = "testNode-34"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-347", .policy = k8spolicy.UID{.uid = "testNP-347"}, .node = "testNode-34"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-348", .policy = k8spolicy.UID{.uid = "testNP-348"}, .node = "testNode-34"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-349", .policy = k8spolicy.UID{.uid = "testNP-349"}, .node = "testNode-34"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-350", .policy = k8spolicy.UID{.uid = "testNP-350"}, .node = "testNode-35"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-351", .policy = k8spolicy.UID{.uid = "testNP-351"}, .node = "testNode-35"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-352", .policy = k8spolicy.UID{.uid = "testNP-352"}, .node = "testNode-35"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-353", .policy = k8spolicy.UID{.uid = "testNP-353"}, .node = "testNode-35"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-354", .policy = k8spolicy.UID{.uid = "testNP-354"}, .node = "testNode-35"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-355", .policy = k8spolicy.UID{.uid = "testNP-355"}, .node = "testNode-35"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-356", .policy = k8spolicy.UID{.uid = "testNP-356"}, .node = "testNode-35"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-357", .policy = k8spolicy.UID{.uid = "testNP-357"}, .node = "testNode-35"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-358", .policy = k8spolicy.UID{.uid = "testNP-358"}, .node = "testNode-35"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-359", .policy = k8spolicy.UID{.uid = "testNP-359"}, .node = "testNode-35"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-360", .policy = k8spolicy.UID{.uid = "testNP-360"}, .node = "testNode-36"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-361", .policy = k8spolicy.UID{.uid = "testNP-361"}, .node = "testNode-36"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-362", .policy = k8spolicy.UID{.uid = "testNP-362"}, .node = "testNode-36"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-363", .policy = k8spolicy.UID{.uid = "testNP-363"}, .node = "testNode-36"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-364", .policy = k8spolicy.UID{.uid = "testNP-364"}, .node = "testNode-36"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-365", .policy = k8spolicy.UID{.uid = "testNP-365"}, .node = "testNode-36"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-366", .policy = k8spolicy.UID{.uid = "testNP-366"}, .node = "testNode-36"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-367", .policy = k8spolicy.UID{.uid = "testNP-367"}, .node = "testNode-36"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-368", .policy = k8spolicy.UID{.uid = "testNP-368"}, .node = "testNode-36"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-369", .policy = k8spolicy.UID{.uid = "testNP-369"}, .node = "testNode-36"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-370", .policy = k8spolicy.UID{.uid = "testNP-370"}, .node = "testNode-37"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-371", .policy = k8spolicy.UID{.uid = "testNP-371"}, .node = "testNode-37"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-372", .policy = k8spolicy.UID{.uid = "testNP-372"}, .node = "testNode-37"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-373", .policy = k8spolicy.UID{.uid = "testNP-373"}, .node = "testNode-37"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-374", .policy = k8spolicy.UID{.uid = "testNP-374"}, .node = "testNode-37"}: +1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 6366398203500886159015268287054267487, .address = "10.10.37.9"}: +1
AddressGroupAddress{.addressGroup = 25728096772803730530097819510715318440, .address = "10.10.38.2"}: +1
AddressGroupAddress{.addressGroup = 70240193878856971722972774221044145240, .address = "10.10.38.1"}: +1
AddressGroupAddress{.addressGroup = 81192145682176396156133841162111391927, .address = "10.10.37.6"}: +1
AddressGroupAddress{.addressGroup = 88959728975593031522836386477491532536, .address = "10.10.37.7"}: +1
AddressGroupAddress{.addressGroup = 96455934073274139366776967175508708290, .address = "10.10.39.9"}: +1
AddressGroupAddress{.addressGroup = 102472280474829765366675501330267830253, .address = "10.10.38.6"}: +1
AddressGroupAddress{.addressGroup = 113151575205202429271836850776786938272, .address = "10.10.39.8"}: +1
AddressGroupAddress{.addressGroup = 135758365032620222546791899774945341289, .address = "10.10.40.7"}: +1
AddressGroupAddress{.addressGroup = 150804780325762926378875021364202129550, .address = "10.10.39.2"}: +1
AddressGroupAddress{.addressGroup = 158825345343546986895349479192097929976, .address = "10.10.38.5"}: +1
AddressGroupAddress{.addressGroup = 160888049551821204096036415576342894872, .address = "10.10.38.9"}: +1
AddressGroupAddress{.addressGroup = 167088586504501757807210819165564476052, .address = "10.10.38.8"}: +1
AddressGroupAddress{.addressGroup = 167691916116213392765788931806582582797, .address = "10.10.40.6"}: +1
AddressGroupAddress{.addressGroup = 187746292700066864965007536522164918112, .address = "10.10.39.3"}: +1
AddressGroupAddress{.addressGroup = 196714686800858753802624815818181209830, .address = "10.10.40.1"}: +1
AddressGroupAddress{.addressGroup = 208109524417309464812876171939933000687, .address = "10.10.40.0"}: +1
AddressGroupAddress{.addressGroup = 218515741281349171285900608511266032437, .address = "10.10.39.5"}: +1
AddressGroupAddress{.addressGroup = 224312264982048958246471268310097507188, .address = "10.10.40.3"}: +1
AddressGroupAddress{.addressGroup = 225614594314563370653787779745805398577, .address = "10.10.38.0"}: +1
AddressGroupAddress{.addressGroup = 249084012687177156949461076716756822526, .address = "10.10.37.8"}: +1
AddressGroupAddress{.addressGroup = 261110794643404729047482385275926030618, .address = "10.10.38.7"}: +1
AddressGroupAddress{.addressGroup = 261647544234304440906914305731756822470, .address = "10.10.40.5"}: +1
AddressGroupAddress{.addressGroup = 275640580799196130534836568800585547003, .address = "10.10.39.0"}: +1
AddressGroupAddress{.addressGroup = 277403914975466460882108524976094143994, .address = "10.10.40.2"}: +1
AddressGroupAddress{.addressGroup = 279423969213825284781734573277686487578, .address = "10.10.38.3"}: +1
AddressGroupAddress{.addressGroup = 280418311285806928660563498291319384854, .address = "10.10.38.4"}: +1
AddressGroupAddress{.addressGroup = 286622438269697018265238984085970045668, .address = "10.10.39.4"}: +1
AddressGroupAddress{.addressGroup = 292284333795275210980546581304906260779, .address = "10.10.39.1"}: +1
AddressGroupAddress{.addressGroup = 308924855250818400825520085660849173270, .address = "10.10.40.4"}: +1
AddressGroupAddress{.addressGroup = 318705169350241701572696863870947720484, .address = "10.10.39.7"}: +1
AddressGroupAddress{.addressGroup = 331638862245046014393250665630441823458, .address = "10.10.39.6"}: +1
AddressGroupDescr:
AddressGroupDescr{.name = "04ca1faa-65a0-5ba2-b304-d8187b0ec45f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-379]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-379")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "135b0d1b-5b5f-5d43-9c35-7664a89200a8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-382]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-382")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "34d7c4ee-d19c-55b7-a7e8-a201cce65c58", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-381]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-381")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "3d1509d8-a285-5518-be92-86414c6998b7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-376]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-376")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "42ed0545-3f16-5e73-8b34-6ae0b61ab2f8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-377]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-377")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "4890bcb7-78c1-5b3c-96fb-47f0be2dcbc2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-399]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-399")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "4d17717e-f78b-57c9-b591-db530602f7ed", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-386]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-386")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "55203360-b26b-52d5-a9ab-627fd76129a0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-398]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-398")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "66221c2b-b200-541f-aa2b-c0908d5c2f69", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-407]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-407")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "7173f1b8-4f9d-5a94-bc8b-d772a28d488e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-392]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-392")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "777ca61b-322d-5bba-a70b-b7e1623f3af8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-385]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-385")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "7909e946-8a01-5551-a3d0-54852e359918", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-389]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-389")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "7db41759-a1f5-5138-9e53-f36553ac9a94", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-388]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-388")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "7e2849cb-ee50-53eb-b072-4e0f8330ae0d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-406]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-406")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "8d3e9ee6-9489-5667-bb55-4c45886f5760", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-393]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-393")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "93fddede-665f-54fa-b60f-1b2172a46ee6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-401]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-401")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "9c906fbd-123d-501a-80d1-7bfd6a0f13ef", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-400]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-400")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "a46499d7-8e51-52f2-8e00-7670cfe88b35", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-395]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-395")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "a8c0f886-7ea0-510f-9c2b-f5140e1ab374", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-403]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-403")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "a9bbca51-a207-5d2c-8caf-1ba1264e7231", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-380]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-380")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "bb63d5fb-9781-514f-ab4f-cff5d4b269fe", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-378]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-378")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "c4701c1d-34bb-5757-bf28-dc70456f291a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-387]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-387")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "c4d77be9-7f17-5a12-ac01-ed5650600fc6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-405]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-405")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "cf5e71e1-5bbf-5fb5-8363-120ee0eb7cfb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-390]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-390")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "d0b20cf7-ab9e-5aac-a853-9153f16165fa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-402]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-402")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "d2371954-b622-588e-81e9-5434d4935a1a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-383]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-383")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "d2f69a2e-1a7f-5e6c-a0f0-86875d71ab16", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-384]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-384")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "d7a17941-c2ea-575a-8d95-0a951dfb4ae4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-394]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-394")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "dbe3ea42-3c0d-5b74-91c2-14501cdea12b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-391]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-391")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "e868c34f-55bb-5f69-9952-a0c438f47316", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-404]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-404")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "efc46206-46a5-5a11-895f-6d443d347d24", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-397]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-397")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "f97f5251-3bc6-5335-b68e-ba0aaf265ce2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-396]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-396")], .matchExpressions = []}}}}: +1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 6366398203500886159015268287054267487, .node = "testNode-37"}: +1
AddressGroupSpan{.addressGroup = 25728096772803730530097819510715318440, .node = "testNode-38"}: +1
AddressGroupSpan{.addressGroup = 70240193878856971722972774221044145240, .node = "testNode-38"}: +1
AddressGroupSpan{.addressGroup = 81192145682176396156133841162111391927, .node = "testNode-37"}: +1
AddressGroupSpan{.addressGroup = 88959728975593031522836386477491532536, .node = "testNode-37"}: +1
AddressGroupSpan{.addressGroup = 96455934073274139366776967175508708290, .node = "testNode-39"}: +1
AddressGroupSpan{.addressGroup = 102472280474829765366675501330267830253, .node = "testNode-38"}: +1
AddressGroupSpan{.addressGroup = 113151575205202429271836850776786938272, .node = "testNode-39"}: +1
AddressGroupSpan{.addressGroup = 135758365032620222546791899774945341289, .node = "testNode-40"}: +1
AddressGroupSpan{.addressGroup = 150804780325762926378875021364202129550, .node = "testNode-39"}: +1
AddressGroupSpan{.addressGroup = 158825345343546986895349479192097929976, .node = "testNode-38"}: +1
AddressGroupSpan{.addressGroup = 160888049551821204096036415576342894872, .node = "testNode-38"}: +1
AddressGroupSpan{.addressGroup = 167088586504501757807210819165564476052, .node = "testNode-38"}: +1
AddressGroupSpan{.addressGroup = 167691916116213392765788931806582582797, .node = "testNode-40"}: +1
AddressGroupSpan{.addressGroup = 187746292700066864965007536522164918112, .node = "testNode-39"}: +1
AddressGroupSpan{.addressGroup = 196714686800858753802624815818181209830, .node = "testNode-40"}: +1
AddressGroupSpan{.addressGroup = 208109524417309464812876171939933000687, .node = "testNode-39"}: +1
AddressGroupSpan{.addressGroup = 218515741281349171285900608511266032437, .node = "testNode-39"}: +1
AddressGroupSpan{.addressGroup = 224312264982048958246471268310097507188, .node = "testNode-40"}: +1
AddressGroupSpan{.addressGroup = 225614594314563370653787779745805398577, .node = "testNode-37"}: +1
AddressGroupSpan{.addressGroup = 249084012687177156949461076716756822526, .node = "testNode-37"}: +1
AddressGroupSpan{.addressGroup = 261110794643404729047482385275926030618, .node = "testNode-38"}: +1
AddressGroupSpan{.addressGroup = 261647544234304440906914305731756822470, .node = "testNode-40"}: +1
AddressGroupSpan{.addressGroup = 275640580799196130534836568800585547003, .node = "testNode-38"}: +1
AddressGroupSpan{.addressGroup = 277403914975466460882108524976094143994, .node = "testNode-40"}: +1
AddressGroupSpan{.addressGroup = 279423969213825284781734573277686487578, .node = "testNode-38"}: +1
AddressGroupSpan{.addressGroup = 280418311285806928660563498291319384854, .node = "testNode-38"}: +1
AddressGroupSpan{.addressGroup = 286622438269697018265238984085970045668, .node = "testNode-39"}: +1
AddressGroupSpan{.addressGroup = 292284333795275210980546581304906260779, .node = "testNode-39"}: +1
AddressGroupSpan{.addressGroup = 308924855250818400825520085660849173270, .node = "testNode-40"}: +1
AddressGroupSpan{.addressGroup = 318705169350241701572696863870947720484, .node = "testNode-39"}: +1
AddressGroupSpan{.addressGroup = 331638862245046014393250665630441823458, .node = "testNode-39"}: +1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "04ca1faa-65a0-5ba2-b304-d8187b0ec45f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-379]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-379")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "135b0d1b-5b5f-5d43-9c35-7664a89200a8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-382]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-382")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "34d7c4ee-d19c-55b7-a7e8-a201cce65c58", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-381]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-381")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "3d1509d8-a285-5518-be92-86414c6998b7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-376]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-376")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "42ed0545-3f16-5e73-8b34-6ae0b61ab2f8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-377]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-377")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "4890bcb7-78c1-5b3c-96fb-47f0be2dcbc2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-399]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-399")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "4d17717e-f78b-57c9-b591-db530602f7ed", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-386]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-386")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "4fe2f7e4-1901-5cc4-b05f-0073bec70070", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-375]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-375")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "55203360-b26b-52d5-a9ab-627fd76129a0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-398]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-398")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "7173f1b8-4f9d-5a94-bc8b-d772a28d488e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-392]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-392")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "777ca61b-322d-5bba-a70b-b7e1623f3af8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-385]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-385")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "7909e946-8a01-5551-a3d0-54852e359918", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-389]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-389")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "7db41759-a1f5-5138-9e53-f36553ac9a94", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-388]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-388")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "7e2849cb-ee50-53eb-b072-4e0f8330ae0d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-406]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-406")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "8d3e9ee6-9489-5667-bb55-4c45886f5760", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-393]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-393")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "93fddede-665f-54fa-b60f-1b2172a46ee6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-401]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-401")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "9c906fbd-123d-501a-80d1-7bfd6a0f13ef", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-400]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-400")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "a46499d7-8e51-52f2-8e00-7670cfe88b35", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-395]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-395")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "a8c0f886-7ea0-510f-9c2b-f5140e1ab374", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-403]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-403")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "a9bbca51-a207-5d2c-8caf-1ba1264e7231", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-380]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-380")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "bb63d5fb-9781-514f-ab4f-cff5d4b269fe", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-378]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-378")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "c4701c1d-34bb-5757-bf28-dc70456f291a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-387]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-387")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "c4d77be9-7f17-5a12-ac01-ed5650600fc6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-405]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-405")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "cf5e71e1-5bbf-5fb5-8363-120ee0eb7cfb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-390]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-390")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "d0b20cf7-ab9e-5aac-a853-9153f16165fa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-402]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-402")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "d2371954-b622-588e-81e9-5434d4935a1a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-383]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-383")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "d2f69a2e-1a7f-5e6c-a0f0-86875d71ab16", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-384]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-384")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "d7a17941-c2ea-575a-8d95-0a951dfb4ae4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-394]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-394")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "dbe3ea42-3c0d-5b74-91c2-14501cdea12b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-391]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-391")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "e868c34f-55bb-5f69-9952-a0c438f47316", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-404]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-404")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "efc46206-46a5-5a11-895f-6d443d347d24", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-397]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-397")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "f97f5251-3bc6-5335-b68e-ba0aaf265ce2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-396]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-396")], .matchExpressions = []}}}}: +1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 6366398203500886159015268287054267487, .node = "testNode-37", .pods = [k8spolicy.PodReference{.name = "testPod-379", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 25728096772803730530097819510715318440, .node = "testNode-38", .pods = [k8spolicy.PodReference{.name = "testPod-382", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 70240193878856971722972774221044145240, .node = "testNode-38", .pods = [k8spolicy.PodReference{.name = "testPod-381", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 81192145682176396156133841162111391927, .node = "testNode-37", .pods = [k8spolicy.PodReference{.name = "testPod-376", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 88959728975593031522836386477491532536, .node = "testNode-37", .pods = [k8spolicy.PodReference{.name = "testPod-377", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 96455934073274139366776967175508708290, .node = "testNode-39", .pods = [k8spolicy.PodReference{.name = "testPod-399", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 102472280474829765366675501330267830253, .node = "testNode-38", .pods = [k8spolicy.PodReference{.name = "testPod-386", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 106187498583969152475652717203950076016, .node = "testNode-37", .pods = [k8spolicy.PodReference{.name = "testPod-375", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 113151575205202429271836850776786938272, .node = "testNode-39", .pods = [k8spolicy.PodReference{.name = "testPod-398", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 150804780325762926378875021364202129550, .node = "testNode-39", .pods = [k8spolicy.PodReference{.name = "testPod-392", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 158825345343546986895349479192097929976, .node = "testNode-38", .pods = [k8spolicy.PodReference{.name = "testPod-385", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 160888049551821204096036415576342894872, .node = "testNode-38", .pods = [k8spolicy.PodReference{.name = "testPod-389", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 167088586504501757807210819165564476052, .node = "testNode-38", .pods = [k8spolicy.PodReference{.name = "testPod-388", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 167691916116213392765788931806582582797, .node = "testNode-40", .pods = [k8spolicy.PodReference{.name = "testPod-406", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 187746292700066864965007536522164918112, .node = "testNode-39", .pods = [k8spolicy.PodReference{.name = "testPod-393", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 196714686800858753802624815818181209830, .node = "testNode-40", .pods = [k8spolicy.PodReference{.name = "testPod-401", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 208109524417309464812876171939933000687, .node = "testNode-40", .pods = [k8spolicy.PodReference{.name = "testPod-400", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 218515741281349171285900608511266032437, .node = "testNode-39", .pods = [k8spolicy.PodReference{.name = "testPod-395", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 224312264982048958246471268310097507188, .node = "testNode-40", .pods = [k8spolicy.PodReference{.name = "testPod-403", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 225614594314563370653787779745805398577, .node = "testNode-38", .pods = [k8spolicy.PodReference{.name = "testPod-380", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 249084012687177156949461076716756822526, .node = "testNode-37", .pods = [k8spolicy.PodReference{.name = "testPod-378", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 261110794643404729047482385275926030618, .node = "testNode-38", .pods = [k8spolicy.PodReference{.name = "testPod-387", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 261647544234304440906914305731756822470, .node = "testNode-40", .pods = [k8spolicy.PodReference{.name = "testPod-405", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 275640580799196130534836568800585547003, .node = "testNode-39", .pods = [k8spolicy.PodReference{.name = "testPod-390", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 277403914975466460882108524976094143994, .node = "testNode-40", .pods = [k8spolicy.PodReference{.name = "testPod-402", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 279423969213825284781734573277686487578, .node = "testNode-38", .pods = [k8spolicy.PodReference{.name = "testPod-383", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 280418311285806928660563498291319384854, .node = "testNode-38", .pods = [k8spolicy.PodReference{.name = "testPod-384", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 286622438269697018265238984085970045668, .node = "testNode-39", .pods = [k8spolicy.PodReference{.name = "testPod-394", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 292284333795275210980546581304906260779, .node = "testNode-39", .pods = [k8spolicy.PodReference{.name = "testPod-391", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 308924855250818400825520085660849173270, .node = "testNode-40", .pods = [k8spolicy.PodReference{.name = "testPod-404", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 318705169350241701572696863870947720484, .node = "testNode-39", .pods = [k8spolicy.PodReference{.name = "testPod-397", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 331638862245046014393250665630441823458, .node = "testNode-39", .pods = [k8spolicy.PodReference{.name = "testPod-396", .namespace = "testNamespace"}]}: +1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 6366398203500886159015268287054267487, .span = "testNode-37"}: +1
AppliedToGroupSpan{.appliedToGroup = 25728096772803730530097819510715318440, .span = "testNode-38"}: +1
AppliedToGroupSpan{.appliedToGroup = 70240193878856971722972774221044145240, .span = "testNode-38"}: +1
AppliedToGroupSpan{.appliedToGroup = 81192145682176396156133841162111391927, .span = "testNode-37"}: +1
AppliedToGroupSpan{.appliedToGroup = 88959728975593031522836386477491532536, .span = "testNode-37"}: +1
AppliedToGroupSpan{.appliedToGroup = 96455934073274139366776967175508708290, .span = "testNode-39"}: +1
AppliedToGroupSpan{.appliedToGroup = 102472280474829765366675501330267830253, .span = "testNode-38"}: +1
AppliedToGroupSpan{.appliedToGroup = 106187498583969152475652717203950076016, .span = "testNode-37"}: +1
AppliedToGroupSpan{.appliedToGroup = 113151575205202429271836850776786938272, .span = "testNode-39"}: +1
AppliedToGroupSpan{.appliedToGroup = 150804780325762926378875021364202129550, .span = "testNode-39"}: +1
AppliedToGroupSpan{.appliedToGroup = 158825345343546986895349479192097929976, .span = "testNode-38"}: +1
AppliedToGroupSpan{.appliedToGroup = 160888049551821204096036415576342894872, .span = "testNode-38"}: +1
AppliedToGroupSpan{.appliedToGroup = 167088586504501757807210819165564476052, .span = "testNode-38"}: +1
AppliedToGroupSpan{.appliedToGroup = 167691916116213392765788931806582582797, .span = "testNode-40"}: +1
AppliedToGroupSpan{.appliedToGroup = 187746292700066864965007536522164918112, .span = "testNode-39"}: +1
AppliedToGroupSpan{.appliedToGroup = 196714686800858753802624815818181209830, .span = "testNode-40"}: +1
AppliedToGroupSpan{.appliedToGroup = 208109524417309464812876171939933000687, .span = "testNode-40"}: +1
AppliedToGroupSpan{.appliedToGroup = 218515741281349171285900608511266032437, .span = "testNode-39"}: +1
AppliedToGroupSpan{.appliedToGroup = 224312264982048958246471268310097507188, .span = "testNode-40"}: +1
AppliedToGroupSpan{.appliedToGroup = 225614594314563370653787779745805398577, .span = "testNode-38"}: +1
AppliedToGroupSpan{.appliedToGroup = 249084012687177156949461076716756822526, .span = "testNode-37"}: +1
AppliedToGroupSpan{.appliedToGroup = 261110794643404729047482385275926030618, .span = "testNode-38"}: +1
AppliedToGroupSpan{.appliedToGroup = 261647544234304440906914305731756822470, .span = "testNode-40"}: +1
AppliedToGroupSpan{.appliedToGroup = 275640580799196130534836568800585547003, .span = "testNode-39"}: +1
AppliedToGroupSpan{.appliedToGroup = 277403914975466460882108524976094143994, .span = "testNode-40"}: +1
AppliedToGroupSpan{.appliedToGroup = 279423969213825284781734573277686487578, .span = "testNode-38"}: +1
AppliedToGroupSpan{.appliedToGroup = 280418311285806928660563498291319384854, .span = "testNode-38"}: +1
AppliedToGroupSpan{.appliedToGroup = 286622438269697018265238984085970045668, .span = "testNode-39"}: +1
AppliedToGroupSpan{.appliedToGroup = 292284333795275210980546581304906260779, .span = "testNode-39"}: +1
AppliedToGroupSpan{.appliedToGroup = 308924855250818400825520085660849173270, .span = "testNode-40"}: +1
AppliedToGroupSpan{.appliedToGroup = 318705169350241701572696863870947720484, .span = "testNode-39"}: +1
AppliedToGroupSpan{.appliedToGroup = 331638862245046014393250665630441823458, .span = "testNode-39"}: +1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-375"}, .name = "testNP-375", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [81192145682176396156133841162111391927], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [106187498583969152475652717203950076016]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-376"}, .name = "testNP-376", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [88959728975593031522836386477491532536], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [81192145682176396156133841162111391927]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-377"}, .name = "testNP-377", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [249084012687177156949461076716756822526], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [88959728975593031522836386477491532536]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-378"}, .name = "testNP-378", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [6366398203500886159015268287054267487], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [249084012687177156949461076716756822526]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-379"}, .name = "testNP-379", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [225614594314563370653787779745805398577], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [6366398203500886159015268287054267487]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-380"}, .name = "testNP-380", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [70240193878856971722972774221044145240], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [225614594314563370653787779745805398577]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-381"}, .name = "testNP-381", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [25728096772803730530097819510715318440], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [70240193878856971722972774221044145240]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-382"}, .name = "testNP-382", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [279423969213825284781734573277686487578], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [25728096772803730530097819510715318440]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-383"}, .name = "testNP-383", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [280418311285806928660563498291319384854], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [279423969213825284781734573277686487578]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-384"}, .name = "testNP-384", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [158825345343546986895349479192097929976], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [280418311285806928660563498291319384854]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-385"}, .name = "testNP-385", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [102472280474829765366675501330267830253], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [158825345343546986895349479192097929976]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-386"}, .name = "testNP-386", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [261110794643404729047482385275926030618], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [102472280474829765366675501330267830253]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-387"}, .name = "testNP-387", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [167088586504501757807210819165564476052], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [261110794643404729047482385275926030618]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-388"}, .name = "testNP-388", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [160888049551821204096036415576342894872], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [167088586504501757807210819165564476052]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-389"}, .name = "testNP-389", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [275640580799196130534836568800585547003], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [160888049551821204096036415576342894872]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-390"}, .name = "testNP-390", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [292284333795275210980546581304906260779], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [275640580799196130534836568800585547003]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-391"}, .name = "testNP-391", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [150804780325762926378875021364202129550], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [292284333795275210980546581304906260779]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-392"}, .name = "testNP-392", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [187746292700066864965007536522164918112], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [150804780325762926378875021364202129550]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-393"}, .name = "testNP-393", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [286622438269697018265238984085970045668], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [187746292700066864965007536522164918112]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-394"}, .name = "testNP-394", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [218515741281349171285900608511266032437], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [286622438269697018265238984085970045668]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-395"}, .name = "testNP-395", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [331638862245046014393250665630441823458], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [218515741281349171285900608511266032437]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-396"}, .name = "testNP-396", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [318705169350241701572696863870947720484], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [331638862245046014393250665630441823458]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-397"}, .name = "testNP-397", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [113151575205202429271836850776786938272], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [318705169350241701572696863870947720484]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-398"}, .name = "testNP-398", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [96455934073274139366776967175508708290], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [113151575205202429271836850776786938272]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-399"}, .name = "testNP-399", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [208109524417309464812876171939933000687], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [96455934073274139366776967175508708290]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-400"}, .name = "testNP-400", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [196714686800858753802624815818181209830], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [208109524417309464812876171939933000687]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-401"}, .name = "testNP-401", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [277403914975466460882108524976094143994], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [196714686800858753802624815818181209830]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-402"}, .name = "testNP-402", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [224312264982048958246471268310097507188], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [277403914975466460882108524976094143994]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-403"}, .name = "testNP-403", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [308924855250818400825520085660849173270], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [224312264982048958246471268310097507188]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-404"}, .name = "testNP-404", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [261647544234304440906914305731756822470], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [308924855250818400825520085660849173270]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-405"}, .name = "testNP-405", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [167691916116213392765788931806582582797], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [261647544234304440906914305731756822470]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-406"}, .name = "testNP-406", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [135758365032620222546791899774945341289], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [167691916116213392765788931806582582797]}: +1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-375", .policy = k8spolicy.UID{.uid = "testNP-375"}, .node = "testNode-37"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-376", .policy = k8spolicy.UID{.uid = "testNP-376"}, .node = "testNode-37"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-377", .policy = k8spolicy.UID{.uid = "testNP-377"}, .node = "testNode-37"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-378", .policy = k8spolicy.UID{.uid = "testNP-378"}, .node = "testNode-37"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-379", .policy = k8spolicy.UID{.uid = "testNP-379"}, .node = "testNode-37"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-380", .policy = k8spolicy.UID{.uid = "testNP-380"}, .node = "testNode-38"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-381", .policy = k8spolicy.UID{.uid = "testNP-381"}, .node = "testNode-38"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-382", .policy = k8spolicy.UID{.uid = "testNP-382"}, .node = "testNode-38"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-383", .policy = k8spolicy.UID{.uid = "testNP-383"}, .node = "testNode-38"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-384", .policy = k8spolicy.UID{.uid = "testNP-384"}, .node = "testNode-38"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-385", .policy = k8spolicy.UID{.uid = "testNP-385"}, .node = "testNode-38"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-386", .policy = k8spolicy.UID{.uid = "testNP-386"}, .node = "testNode-38"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-387", .policy = k8spolicy.UID{.uid = "testNP-387"}, .node = "testNode-38"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-388", .policy = k8spolicy.UID{.uid = "testNP-388"}, .node = "testNode-38"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-389", .policy = k8spolicy.UID{.uid = "testNP-389"}, .node = "testNode-38"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-390", .policy = k8spolicy.UID{.uid = "testNP-390"}, .node = "testNode-39"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-391", .policy = k8spolicy.UID{.uid = "testNP-391"}, .node = "testNode-39"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-392", .policy = k8spolicy.UID{.uid = "testNP-392"}, .node = "testNode-39"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-393", .policy = k8spolicy.UID{.uid = "testNP-393"}, .node = "testNode-39"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-394", .policy = k8spolicy.UID{.uid = "testNP-394"}, .node = "testNode-39"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-395", .policy = k8spolicy.UID{.uid = "testNP-395"}, .node = "testNode-39"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-396", .policy = k8spolicy.UID{.uid = "testNP-396"}, .node = "testNode-39"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-397", .policy = k8spolicy.UID{.uid = "testNP-397"}, .node = "testNode-39"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-398", .policy = k8spolicy.UID{.uid = "testNP-398"}, .node = "testNode-39"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-399", .policy = k8spolicy.UID{.uid = "testNP-399"}, .node = "testNode-39"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-400", .policy = k8spolicy.UID{.uid = "testNP-400"}, .node = "testNode-40"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-401", .policy = k8spolicy.UID{.uid = "testNP-401"}, .node = "testNode-40"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-402", .policy = k8spolicy.UID{.uid = "testNP-402"}, .node = "testNode-40"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-403", .policy = k8spolicy.UID{.uid = "testNP-403"}, .node = "testNode-40"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-404", .policy = k8spolicy.UID{.uid = "testNP-404"}, .node = "testNode-40"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-405", .policy = k8spolicy.UID{.uid = "testNP-405"}, .node = "testNode-40"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-406", .policy = k8spolicy.UID{.uid = "testNP-406"}, .node = "testNode-40"}: +1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 8392899131139043348355500919486284324, .address = "10.10.41.8"}: +1
AddressGroupAddress{.addressGroup = 25351671292287421659159263303895047133, .address = "10.10.41.0"}: +1
AddressGroupAddress{.addressGroup = 31814857325643986342771264956990453613, .address = "10.10.42.5"}: +1
AddressGroupAddress{.addressGroup = 35179552136046811557645183480294644329, .address = "10.10.41.5"}: +1
AddressGroupAddress{.addressGroup = 40521318839038397523258580630990502412, .address = "10.10.42.9"}: +1
AddressGroupAddress{.addressGroup = 44173417569196170139233651473572539223, .address = "10.10.43.0"}: +1
AddressGroupAddress{.addressGroup = 51141368371469705363359893984678817184, .address = "10.10.42.2"}: +1
AddressGroupAddress{.addressGroup = 68655119736190326377350002205809670214, .address = "10.10.43.1"}: +1
AddressGroupAddress{.addressGroup = 89966599569391683095747004305785034790, .address = "10.10.41.9"}: +1
AddressGroupAddress{.addressGroup = 93558576737193692548196584403547756583, .address = "10.10.43.4"}: +1
AddressGroupAddress{.addressGroup = 94880436684849212255742222845112811648, .address = "10.10.41.3"}: +1
AddressGroupAddress{.addressGroup = 98233426316474802142212382121144761325, .address = "10.10.43.8"}: +1
AddressGroupAddress{.addressGroup = 100675962110545384859717753829972156072, .address = "10.10.43.9"}: +1
AddressGroupAddress{.addressGroup = 104470958124797069264185854966208394446, .address = "10.10.42.4"}: +1
AddressGroupAddress{.addressGroup = 109766766913591882001478462461559678736, .address = "10.10.43.7"}: +1
AddressGroupAddress{.addressGroup = 110848293340619485159525724483314232002, .address = "10.10.41.7"}: +1
AddressGroupAddress{.addressGroup = 114365328651691316916108387575310070430, .address = "10.10.40.8"}: +1
AddressGroupAddress{.addressGroup = 118458407959584270580530677874245536867, .address = "10.10.43.5"}: +1
AddressGroupAddress{.addressGroup = 119485370430696960609980679788983442772, .address = "10.10.41.6"}: +1
AddressGroupAddress{.addressGroup = 122056988029455207163504540648586940143, .address = "10.10.42.7"}: +1
AddressGroupAddress{.addressGroup = 141567980840173912161294641659076747449, .address = "10.10.42.1"}: +1
AddressGroupAddress{.addressGroup = 187562125794245904875109112557074340532, .address = "10.10.40.9"}: +1
AddressGroupAddress{.addressGroup = 200192873178445774821574365696760845361, .address = "10.10.41.4"}: +1
AddressGroupAddress{.addressGroup = 211620089346190531603012196332160099661, .address = "10.10.43.2"}: +1
AddressGroupAddress{.addressGroup = 217256471936766674945257828889501121014, .address = "10.10.42.0"}: +1
AddressGroupAddress{.addressGroup = 229916692294792363993166726025910188662, .address = "10.10.42.6"}: +1
AddressGroupAddress{.addressGroup = 250135802605338744757556750747350467130, .address = "10.10.42.3"}: +1
AddressGroupAddress{.addressGroup = 263121567407985637932272979133791258611, .address = "10.10.43.3"}: +1
AddressGroupAddress{.addressGroup = 269349424788233111048069344507915423385, .address = "10.10.42.8"}: +1
AddressGroupAddress{.addressGroup = 291030460754200400425402328634757153201, .address = "10.10.41.2"}: +1
AddressGroupAddress{.addressGroup = 318160501126163702843576787236219041122, .address = "10.10.41.1"}: +1
AddressGroupAddress{.addressGroup = 330183365161104381859084212366870728800, .address = "10.10.43.6"}: +1
AddressGroupDescr:
AddressGroupDescr{.name = "065069e0-18a7-5e1c-bb52-4c47bb1e0224", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-418]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-418")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "13128de5-d4fd-50ef-a6fa-e02470f75bdd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-410]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-410")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "17ef5192-63e1-5f5b-8637-2d9b9bf7776d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-425]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-425")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "1a7755d5-7e34-5ff0-a562-8906a55d9a69", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-415]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-415")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "1e7c1f44-296c-5267-b707-c44fb5683a0c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-429]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-429")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "213b7da2-b9b8-5cde-b512-061be115ab57", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-430]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-430")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "26797822-5d38-58a4-a2b6-555eb800ada0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-422]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-422")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "33a67ebe-734b-5fbb-a5b1-5be41be77846", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-431]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-431")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "43aeefd2-d0c2-5e46-bb9c-d9c1b5fd1826", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-419]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-419")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "4662b9f8-93d5-52ec-8a19-721399689827", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-434]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-434")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "47614eb2-bc50-546e-8fa5-9c92ad3d0080", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-413]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-413")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "49e711d9-b62c-55fb-8332-a9273c323bed", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-438]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-438")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "4bbd7c29-ac1e-561a-9b1c-46e0c5369ea8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-439]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-439")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "4e985fe9-87b7-57db-80c6-bc7b25d7f4ce", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-424]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-424")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "52944f71-c52e-580d-8a02-b7f52543a710", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-437]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-437")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "53649ad0-6e1f-52f9-b9b7-7ba93ce7aac2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-417]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-417")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "5609f60a-fa26-59a3-8e17-03ce36bc329e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-408]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-408")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "591e426e-f1d1-5dba-83b2-e15f33e08c63", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-435]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-435")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "59e40b97-a875-5501-8367-2dc471a75d54", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-416]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-416")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "5bd35221-0c26-5317-a9f1-018cfcd10eef", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-427]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-427")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "6a810058-4116-5795-b850-070e8e3120b9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-421]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-421")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "8d1b26c5-6d78-5c28-a228-d46a11bf5ab4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-409]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-409")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "969bbeb2-7831-5c43-87b1-2434370d9431", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-414]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-414")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "9f348bf3-e9d4-546b-9f59-d69f3a63254d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-432]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-432")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "a3721311-dfe4-5333-bfc6-946712f039f6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-420]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-420")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "acf85820-253c-5368-97bd-d6486cf47a76", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-426]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-426")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "bc2e673a-be2f-5194-8a42-939931f6023a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-423]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-423")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "c5f35edd-9402-5282-86f6-1e9ed9e8c7f3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-433]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-433")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "caa2cff0-f280-5241-a247-831efc8c4e99", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-428]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-428")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "daf26d8b-7aa9-5e29-9827-f97fd4af01b1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-412]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-412")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "ef5b7bce-c886-57d5-aaee-fff719dcb562", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-411]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-411")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "f86700c5-474e-5703-93e6-179d25b25060", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-436]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-436")], .matchExpressions = []}}}}: +1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 8392899131139043348355500919486284324, .node = "testNode-41"}: +1
AddressGroupSpan{.addressGroup = 25351671292287421659159263303895047133, .node = "testNode-40"}: +1
AddressGroupSpan{.addressGroup = 31814857325643986342771264956990453613, .node = "testNode-42"}: +1
AddressGroupSpan{.addressGroup = 35179552136046811557645183480294644329, .node = "testNode-41"}: +1
AddressGroupSpan{.addressGroup = 40521318839038397523258580630990502412, .node = "testNode-42"}: +1
AddressGroupSpan{.addressGroup = 44173417569196170139233651473572539223, .node = "testNode-42"}: +1
AddressGroupSpan{.addressGroup = 51141368371469705363359893984678817184, .node = "testNode-42"}: +1
AddressGroupSpan{.addressGroup = 68655119736190326377350002205809670214, .node = "testNode-43"}: +1
AddressGroupSpan{.addressGroup = 89966599569391683095747004305785034790, .node = "testNode-41"}: +1
AddressGroupSpan{.addressGroup = 93558576737193692548196584403547756583, .node = "testNode-43"}: +1
AddressGroupSpan{.addressGroup = 94880436684849212255742222845112811648, .node = "testNode-41"}: +1
AddressGroupSpan{.addressGroup = 98233426316474802142212382121144761325, .node = "testNode-43"}: +1
AddressGroupSpan{.addressGroup = 100675962110545384859717753829972156072, .node = "testNode-43"}: +1
AddressGroupSpan{.addressGroup = 104470958124797069264185854966208394446, .node = "testNode-42"}: +1
AddressGroupSpan{.addressGroup = 109766766913591882001478462461559678736, .node = "testNode-43"}: +1
AddressGroupSpan{.addressGroup = 110848293340619485159525724483314232002, .node = "testNode-41"}: +1
AddressGroupSpan{.addressGroup = 114365328651691316916108387575310070430, .node = "testNode-40"}: +1
AddressGroupSpan{.addressGroup = 118458407959584270580530677874245536867, .node = "testNode-43"}: +1
AddressGroupSpan{.addressGroup = 119485370430696960609980679788983442772, .node = "testNode-41"}: +1
AddressGroupSpan{.addressGroup = 122056988029455207163504540648586940143, .node = "testNode-42"}: +1
AddressGroupSpan{.addressGroup = 141567980840173912161294641659076747449, .node = "testNode-42"}: +1
AddressGroupSpan{.addressGroup = 187562125794245904875109112557074340532, .node = "testNode-40"}: +1
AddressGroupSpan{.addressGroup = 200192873178445774821574365696760845361, .node = "testNode-41"}: +1
AddressGroupSpan{.addressGroup = 211620089346190531603012196332160099661, .node = "testNode-43"}: +1
AddressGroupSpan{.addressGroup = 217256471936766674945257828889501121014, .node = "testNode-41"}: +1
AddressGroupSpan{.addressGroup = 229916692294792363993166726025910188662, .node = "testNode-42"}: +1
AddressGroupSpan{.addressGroup = 250135802605338744757556750747350467130, .node = "testNode-42"}: +1
AddressGroupSpan{.addressGroup = 263121567407985637932272979133791258611, .node = "testNode-43"}: +1
AddressGroupSpan{.addressGroup = 269349424788233111048069344507915423385, .node = "testNode-42"}: +1
AddressGroupSpan{.addressGroup = 291030460754200400425402328634757153201, .node = "testNode-41"}: +1
AddressGroupSpan{.addressGroup = 318160501126163702843576787236219041122, .node = "testNode-41"}: +1
AddressGroupSpan{.addressGroup = 330183365161104381859084212366870728800, .node = "testNode-43"}: +1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "065069e0-18a7-5e1c-bb52-4c47bb1e0224", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-418]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-418")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "13128de5-d4fd-50ef-a6fa-e02470f75bdd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-410]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-410")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "17ef5192-63e1-5f5b-8637-2d9b9bf7776d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-425]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-425")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "1a7755d5-7e34-5ff0-a562-8906a55d9a69", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-415]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-415")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "1e7c1f44-296c-5267-b707-c44fb5683a0c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-429]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-429")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "213b7da2-b9b8-5cde-b512-061be115ab57", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-430]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-430")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "26797822-5d38-58a4-a2b6-555eb800ada0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-422]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-422")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "33a67ebe-734b-5fbb-a5b1-5be41be77846", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-431]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-431")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "43aeefd2-d0c2-5e46-bb9c-d9c1b5fd1826", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-419]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-419")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "4662b9f8-93d5-52ec-8a19-721399689827", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-434]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-434")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "47614eb2-bc50-546e-8fa5-9c92ad3d0080", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-413]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-413")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "49e711d9-b62c-55fb-8332-a9273c323bed", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-438]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-438")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "4e985fe9-87b7-57db-80c6-bc7b25d7f4ce", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-424]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-424")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "52944f71-c52e-580d-8a02-b7f52543a710", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-437]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-437")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "53649ad0-6e1f-52f9-b9b7-7ba93ce7aac2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-417]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-417")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "5609f60a-fa26-59a3-8e17-03ce36bc329e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-408]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-408")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "591e426e-f1d1-5dba-83b2-e15f33e08c63", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-435]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-435")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "59e40b97-a875-5501-8367-2dc471a75d54", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-416]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-416")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "5bd35221-0c26-5317-a9f1-018cfcd10eef", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-427]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-427")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "66221c2b-b200-541f-aa2b-c0908d5c2f69", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-407]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-407")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "6a810058-4116-5795-b850-070e8e3120b9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-421]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-421")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "8d1b26c5-6d78-5c28-a228-d46a11bf5ab4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-409]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-409")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "969bbeb2-7831-5c43-87b1-2434370d9431", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-414]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-414")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "9f348bf3-e9d4-546b-9f59-d69f3a63254d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-432]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-432")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "a3721311-dfe4-5333-bfc6-946712f039f6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-420]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-420")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "acf85820-253c-5368-97bd-d6486cf47a76", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-426]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-426")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "bc2e673a-be2f-5194-8a42-939931f6023a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-423]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-423")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "c5f35edd-9402-5282-86f6-1e9ed9e8c7f3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-433]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-433")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "caa2cff0-f280-5241-a247-831efc8c4e99", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-428]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-428")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "daf26d8b-7aa9-5e29-9827-f97fd4af01b1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-412]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-412")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "ef5b7bce-c886-57d5-aaee-fff719dcb562", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-411]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-411")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "f86700c5-474e-5703-93e6-179d25b25060", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-436]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-436")], .matchExpressions = []}}}}: +1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 8392899131139043348355500919486284324, .node = "testNode-41", .pods = [k8spolicy.PodReference{.name = "testPod-418", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 25351671292287421659159263303895047133, .node = "testNode-41", .pods = [k8spolicy.PodReference{.name = "testPod-410", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 31814857325643986342771264956990453613, .node = "testNode-42", .pods = [k8spolicy.PodReference{.name = "testPod-425", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 35179552136046811557645183480294644329, .node = "testNode-41", .pods = [k8spolicy.PodReference{.name = "testPod-415", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 40521318839038397523258580630990502412, .node = "testNode-42", .pods = [k8spolicy.PodReference{.name = "testPod-429", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 44173417569196170139233651473572539223, .node = "testNode-43", .pods = [k8spolicy.PodReference{.name = "testPod-430", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 51141368371469705363359893984678817184, .node = "testNode-42", .pods = [k8spolicy.PodReference{.name = "testPod-422", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 68655119736190326377350002205809670214, .node = "testNode-43", .pods = [k8spolicy.PodReference{.name = "testPod-431", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 89966599569391683095747004305785034790, .node = "testNode-41", .pods = [k8spolicy.PodReference{.name = "testPod-419", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 93558576737193692548196584403547756583, .node = "testNode-43", .pods = [k8spolicy.PodReference{.name = "testPod-434", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 94880436684849212255742222845112811648, .node = "testNode-41", .pods = [k8spolicy.PodReference{.name = "testPod-413", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 98233426316474802142212382121144761325, .node = "testNode-43", .pods = [k8spolicy.PodReference{.name = "testPod-438", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 104470958124797069264185854966208394446, .node = "testNode-42", .pods = [k8spolicy.PodReference{.name = "testPod-424", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 109766766913591882001478462461559678736, .node = "testNode-43", .pods = [k8spolicy.PodReference{.name = "testPod-437", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 110848293340619485159525724483314232002, .node = "testNode-41", .pods = [k8spolicy.PodReference{.name = "testPod-417", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 114365328651691316916108387575310070430, .node = "testNode-40", .pods = [k8spolicy.PodReference{.name = "testPod-408", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 118458407959584270580530677874245536867, .node = "testNode-43", .pods = [k8spolicy.PodReference{.name = "testPod-435", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 119485370430696960609980679788983442772, .node = "testNode-41", .pods = [k8spolicy.PodReference{.name = "testPod-416", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 122056988029455207163504540648586940143, .node = "testNode-42", .pods = [k8spolicy.PodReference{.name = "testPod-427", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 135758365032620222546791899774945341289, .node = "testNode-40", .pods = [k8spolicy.PodReference{.name = "testPod-407", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 141567980840173912161294641659076747449, .node = "testNode-42", .pods = [k8spolicy.PodReference{.name = "testPod-421", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 187562125794245904875109112557074340532, .node = "testNode-40", .pods = [k8spolicy.PodReference{.name = "testPod-409", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 200192873178445774821574365696760845361, .node = "testNode-41", .pods = [k8spolicy.PodReference{.name = "testPod-414", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 211620089346190531603012196332160099661, .node = "testNode-43", .pods = [k8spolicy.PodReference{.name = "testPod-432", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 217256471936766674945257828889501121014, .node = "testNode-42", .pods = [k8spolicy.PodReference{.name = "testPod-420", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 229916692294792363993166726025910188662, .node = "testNode-42", .pods = [k8spolicy.PodReference{.name = "testPod-426", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 250135802605338744757556750747350467130, .node = "testNode-42", .pods = [k8spolicy.PodReference{.name = "testPod-423", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 263121567407985637932272979133791258611, .node = "testNode-43", .pods = [k8spolicy.PodReference{.name = "testPod-433", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 269349424788233111048069344507915423385, .node = "testNode-42", .pods = [k8spolicy.PodReference{.name = "testPod-428", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 291030460754200400425402328634757153201, .node = "testNode-41", .pods = [k8spolicy.PodReference{.name = "testPod-412", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 318160501126163702843576787236219041122, .node = "testNode-41", .pods = [k8spolicy.PodReference{.name = "testPod-411", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 330183365161104381859084212366870728800, .node = "testNode-43", .pods = [k8spolicy.PodReference{.name = "testPod-436", .namespace = "testNamespace"}]}: +1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 8392899131139043348355500919486284324, .span = "testNode-41"}: +1
AppliedToGroupSpan{.appliedToGroup = 25351671292287421659159263303895047133, .span = "testNode-41"}: +1
AppliedToGroupSpan{.appliedToGroup = 31814857325643986342771264956990453613, .span = "testNode-42"}: +1
AppliedToGroupSpan{.appliedToGroup = 35179552136046811557645183480294644329, .span = "testNode-41"}: +1
AppliedToGroupSpan{.appliedToGroup = 40521318839038397523258580630990502412, .span = "testNode-42"}: +1
AppliedToGroupSpan{.appliedToGroup = 44173417569196170139233651473572539223, .span = "testNode-43"}: +1
AppliedToGroupSpan{.appliedToGroup = 51141368371469705363359893984678817184, .span = "testNode-42"}: +1
AppliedToGroupSpan{.appliedToGroup = 68655119736190326377350002205809670214, .span = "testNode-43"}: +1
AppliedToGroupSpan{.appliedToGroup = 89966599569391683095747004305785034790, .span = "testNode-41"}: +1
AppliedToGroupSpan{.appliedToGroup = 93558576737193692548196584403547756583, .span = "testNode-43"}: +1
AppliedToGroupSpan{.appliedToGroup = 94880436684849212255742222845112811648, .span = "testNode-41"}: +1
AppliedToGroupSpan{.appliedToGroup = 98233426316474802142212382121144761325, .span = "testNode-43"}: +1
AppliedToGroupSpan{.appliedToGroup = 104470958124797069264185854966208394446, .span = "testNode-42"}: +1
AppliedToGroupSpan{.appliedToGroup = 109766766913591882001478462461559678736, .span = "testNode-43"}: +1
AppliedToGroupSpan{.appliedToGroup = 110848293340619485159525724483314232002, .span = "testNode-41"}: +1
AppliedToGroupSpan{.appliedToGroup = 114365328651691316916108387575310070430, .span = "testNode-40"}: +1
AppliedToGroupSpan{.appliedToGroup = 118458407959584270580530677874245536867, .span = "testNode-43"}: +1
AppliedToGroupSpan{.appliedToGroup = 119485370430696960609980679788983442772, .span = "testNode-41"}: +1
AppliedToGroupSpan{.appliedToGroup = 122056988029455207163504540648586940143, .span = "testNode-42"}: +1
AppliedToGroupSpan{.appliedToGroup = 135758365032620222546791899774945341289, .span = "testNode-40"}: +1
AppliedToGroupSpan{.appliedToGroup = 141567980840173912161294641659076747449, .span = "testNode-42"}: +1
AppliedToGroupSpan{.appliedToGroup = 187562125794245904875109112557074340532, .span = "testNode-40"}: +1
AppliedToGroupSpan{.appliedToGroup = 200192873178445774821574365696760845361, .span = "testNode-41"}: +1
AppliedToGroupSpan{.appliedToGroup = 211620089346190531603012196332160099661, .span = "testNode-43"}: +1
AppliedToGroupSpan{.appliedToGroup = 217256471936766674945257828889501121014, .span = "testNode-42"}: +1
AppliedToGroupSpan{.appliedToGroup = 229916692294792363993166726025910188662, .span = "testNode-42"}: +1
AppliedToGroupSpan{.appliedToGroup = 250135802605338744757556750747350467130, .span = "testNode-42"}: +1
AppliedToGroupSpan{.appliedToGroup = 263121567407985637932272979133791258611, .span = "testNode-43"}: +1
AppliedToGroupSpan{.appliedToGroup = 269349424788233111048069344507915423385, .span = "testNode-42"}: +1
AppliedToGroupSpan{.appliedToGroup = 291030460754200400425402328634757153201, .span = "testNode-41"}: +1
AppliedToGroupSpan{.appliedToGroup = 318160501126163702843576787236219041122, .span = "testNode-41"}: +1
AppliedToGroupSpan{.appliedToGroup = 330183365161104381859084212366870728800, .span = "testNode-43"}: +1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-407"}, .name = "testNP-407", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [114365328651691316916108387575310070430], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [135758365032620222546791899774945341289]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-408"}, .name = "testNP-408", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [187562125794245904875109112557074340532], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [114365328651691316916108387575310070430]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-409"}, .name = "testNP-409", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [25351671292287421659159263303895047133], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [187562125794245904875109112557074340532]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-410"}, .name = "testNP-410", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [318160501126163702843576787236219041122], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [25351671292287421659159263303895047133]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-411"}, .name = "testNP-411", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [291030460754200400425402328634757153201], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [318160501126163702843576787236219041122]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-412"}, .name = "testNP-412", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [94880436684849212255742222845112811648], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [291030460754200400425402328634757153201]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-413"}, .name = "testNP-413", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [200192873178445774821574365696760845361], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [94880436684849212255742222845112811648]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-414"}, .name = "testNP-414", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [35179552136046811557645183480294644329], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [200192873178445774821574365696760845361]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-415"}, .name = "testNP-415", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [119485370430696960609980679788983442772], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [35179552136046811557645183480294644329]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-416"}, .name = "testNP-416", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [110848293340619485159525724483314232002], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [119485370430696960609980679788983442772]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-417"}, .name = "testNP-417", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [8392899131139043348355500919486284324], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [110848293340619485159525724483314232002]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-418"}, .name = "testNP-418", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [89966599569391683095747004305785034790], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [8392899131139043348355500919486284324]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-419"}, .name = "testNP-419", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [217256471936766674945257828889501121014], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [89966599569391683095747004305785034790]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-420"}, .name = "testNP-420", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [141567980840173912161294641659076747449], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [217256471936766674945257828889501121014]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-421"}, .name = "testNP-421", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [51141368371469705363359893984678817184], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [141567980840173912161294641659076747449]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-422"}, .name = "testNP-422", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [250135802605338744757556750747350467130], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [51141368371469705363359893984678817184]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-423"}, .name = "testNP-423", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [104470958124797069264185854966208394446], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [250135802605338744757556750747350467130]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-424"}, .name = "testNP-424", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [31814857325643986342771264956990453613], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [104470958124797069264185854966208394446]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-425"}, .name = "testNP-425", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [229916692294792363993166726025910188662], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [31814857325643986342771264956990453613]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-426"}, .name = "testNP-426", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [122056988029455207163504540648586940143], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [229916692294792363993166726025910188662]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-427"}, .name = "testNP-427", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [269349424788233111048069344507915423385], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [122056988029455207163504540648586940143]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-428"}, .name = "testNP-428", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [40521318839038397523258580630990502412], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [269349424788233111048069344507915423385]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-429"}, .name = "testNP-429", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [44173417569196170139233651473572539223], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [40521318839038397523258580630990502412]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-430"}, .name = "testNP-430", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [68655119736190326377350002205809670214], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [44173417569196170139233651473572539223]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-431"}, .name = "testNP-431", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [211620089346190531603012196332160099661], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [68655119736190326377350002205809670214]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-432"}, .name = "testNP-432", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [263121567407985637932272979133791258611], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [211620089346190531603012196332160099661]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-433"}, .name = "testNP-433", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [93558576737193692548196584403547756583], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [263121567407985637932272979133791258611]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-434"}, .name = "testNP-434", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [118458407959584270580530677874245536867], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [93558576737193692548196584403547756583]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-435"}, .name = "testNP-435", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [330183365161104381859084212366870728800], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [118458407959584270580530677874245536867]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-436"}, .name = "testNP-436", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [109766766913591882001478462461559678736], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [330183365161104381859084212366870728800]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-437"}, .name = "testNP-437", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [98233426316474802142212382121144761325], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [109766766913591882001478462461559678736]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-438"}, .name = "testNP-438", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [100675962110545384859717753829972156072], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [98233426316474802142212382121144761325]}: +1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-407", .policy = k8spolicy.UID{.uid = "testNP-407"}, .node = "testNode-40"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-408", .policy = k8spolicy.UID{.uid = "testNP-408"}, .node = "testNode-40"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-409", .policy = k8spolicy.UID{.uid = "testNP-409"}, .node = "testNode-40"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-410", .policy = k8spolicy.UID{.uid = "testNP-410"}, .node = "testNode-41"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-411", .policy = k8spolicy.UID{.uid = "testNP-411"}, .node = "testNode-41"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-412", .policy = k8spolicy.UID{.uid = "testNP-412"}, .node = "testNode-41"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-413", .policy = k8spolicy.UID{.uid = "testNP-413"}, .node = "testNode-41"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-414", .policy = k8spolicy.UID{.uid = "testNP-414"}, .node = "testNode-41"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-415", .policy = k8spolicy.UID{.uid = "testNP-415"}, .node = "testNode-41"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-416", .policy = k8spolicy.UID{.uid = "testNP-416"}, .node = "testNode-41"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-417", .policy = k8spolicy.UID{.uid = "testNP-417"}, .node = "testNode-41"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-418", .policy = k8spolicy.UID{.uid = "testNP-418"}, .node = "testNode-41"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-419", .policy = k8spolicy.UID{.uid = "testNP-419"}, .node = "testNode-41"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-420", .policy = k8spolicy.UID{.uid = "testNP-420"}, .node = "testNode-42"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-421", .policy = k8spolicy.UID{.uid = "testNP-421"}, .node = "testNode-42"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-422", .policy = k8spolicy.UID{.uid = "testNP-422"}, .node = "testNode-42"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-423", .policy = k8spolicy.UID{.uid = "testNP-423"}, .node = "testNode-42"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-424", .policy = k8spolicy.UID{.uid = "testNP-424"}, .node = "testNode-42"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-425", .policy = k8spolicy.UID{.uid = "testNP-425"}, .node = "testNode-42"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-426", .policy = k8spolicy.UID{.uid = "testNP-426"}, .node = "testNode-42"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-427", .policy = k8spolicy.UID{.uid = "testNP-427"}, .node = "testNode-42"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-428", .policy = k8spolicy.UID{.uid = "testNP-428"}, .node = "testNode-42"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-429", .policy = k8spolicy.UID{.uid = "testNP-429"}, .node = "testNode-42"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-430", .policy = k8spolicy.UID{.uid = "testNP-430"}, .node = "testNode-43"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-431", .policy = k8spolicy.UID{.uid = "testNP-431"}, .node = "testNode-43"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-432", .policy = k8spolicy.UID{.uid = "testNP-432"}, .node = "testNode-43"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-433", .policy = k8spolicy.UID{.uid = "testNP-433"}, .node = "testNode-43"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-434", .policy = k8spolicy.UID{.uid = "testNP-434"}, .node = "testNode-43"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-435", .policy = k8spolicy.UID{.uid = "testNP-435"}, .node = "testNode-43"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-436", .policy = k8spolicy.UID{.uid = "testNP-436"}, .node = "testNode-43"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-437", .policy = k8spolicy.UID{.uid = "testNP-437"}, .node = "testNode-43"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-438", .policy = k8spolicy.UID{.uid = "testNP-438"}, .node = "testNode-43"}: +1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 38375966268241481767006751780948444872, .address = "10.10.45.5"}: +1
AddressGroupAddress{.addressGroup = 45349213787551863913945602237432171161, .address = "10.10.44.4"}: +1
AddressGroupAddress{.addressGroup = 56336623149793606332188757477805102850, .address = "10.10.46.2"}: +1
AddressGroupAddress{.addressGroup = 58469796950497130529538370291876307573, .address = "10.10.46.6"}: +1
AddressGroupAddress{.addressGroup = 61728385544145040418177698843719512097, .address = "10.10.44.3"}: +1
AddressGroupAddress{.addressGroup = 76391205487177098321212878075574806639, .address = "10.10.46.3"}: +1
AddressGroupAddress{.addressGroup = 91691608888291201794127747460254066432, .address = "10.10.45.7"}: +1
AddressGroupAddress{.addressGroup = 91984765255250255059535198568016548246, .address = "10.10.46.7"}: +1
AddressGroupAddress{.addressGroup = 117827446475839878486084874479850248172, .address = "10.10.44.8"}: +1
AddressGroupAddress{.addressGroup = 120182677709371850876551659521020384282, .address = "10.10.44.9"}: +1
AddressGroupAddress{.addressGroup = 125040544397884692449282467374989187239, .address = "10.10.46.9"}: +1
AddressGroupAddress{.addressGroup = 133259005093568862604505780749227270994, .address = "10.10.44.5"}: +1
AddressGroupAddress{.addressGroup = 153230030309926901947333102261066015619, .address = "10.10.44.7"}: +1
AddressGroupAddress{.addressGroup = 155543750420087640908644874525367673188, .address = "10.10.45.4"}: +1
AddressGroupAddress{.addressGroup = 156294920451355972805306528055678722450, .address = "10.10.46.5"}: +1
AddressGroupAddress{.addressGroup = 205196007965576302795668046715118011338, .address = "10.10.46.1"}: +1
AddressGroupAddress{.addressGroup = 206285954147957614071135240477338500187, .address = "10.10.44.2"}: +1
AddressGroupAddress{.addressGroup = 208200981325991774672117057795451966950, .address = "10.10.44.1"}: +1
AddressGroupAddress{.addressGroup = 217531119462777736934189280790313345837, .address = "10.10.46.4"}: +1
AddressGroupAddress{.addressGroup = 227469615519532210782975223061687836636, .address = "10.10.47.0"}: +1
AddressGroupAddress{.addressGroup = 227866099958799700876732017397099310818, .address = "10.10.46.0"}: +1
AddressGroupAddress{.addressGroup = 246945657588344890085307602799380473640, .address = "10.10.44.6"}: +1
AddressGroupAddress{.addressGroup = 269997189792379274017344001964798849203, .address = "10.10.47.1"}: +1
AddressGroupAddress{.addressGroup = 274045377450439623966059517873767519101, .address = "10.10.45.6"}: +1
AddressGroupAddress{.addressGroup = 279847031786431905870342764360009201452, .address = "10.10.45.2"}: +1
AddressGroupAddress{.addressGroup = 280360108893987796589645554088970129686, .address = "10.10.45.3"}: +1
AddressGroupAddress{.addressGroup = 287737120192732147553967459408904233043, .address = "10.10.45.0"}: +1
AddressGroupAddress{.addressGroup = 288362176878031203257646282110720347129, .address = "10.10.45.9"}: +1
AddressGroupAddress{.addressGroup = 298859621386881247921788046968805647912, .address = "10.10.44.0"}: +1
AddressGroupAddress{.addressGroup = 304065407044425188152218116774106395755, .address = "10.10.45.8"}: +1
AddressGroupAddress{.addressGroup = 306997748721037595890290579831172821562, .address = "10.10.45.1"}: +1
AddressGroupAddress{.addressGroup = 334974904332289858500896498438411491849, .address = "10.10.46.8"}: +1
AddressGroupDescr:
AddressGroupDescr{.name = "1cdef137-d356-5102-bdef-c72a414486c8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-455]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-455")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "221df0dd-6ea1-5be9-89af-2e070cf98a99", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-444]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-444")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "2a6209f8-8f87-5acb-aa49-9a8ba2b59702", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-462]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-462")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "2bfcdf8f-3513-5db1-be65-c75108cd2275", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-466]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-466")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "2e707461-922b-5a63-82d0-f4f9b42e3021", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-443]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-443")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "39786938-2f43-5c70-95f5-564461bee86f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-463]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-463")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "44fb2959-6bad-5a6b-82e5-0b9d202ee700", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-457]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-457")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "45339f12-f908-5cf0-9541-e69efa589196", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-467]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-467")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "58a4bda1-6394-500a-8801-381bb59057ec", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-448]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-448")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "5a6a577e-e00d-5003-bd84-a74d6fd1d41a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-449]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-449")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "5e11eed0-b04e-501c-bf44-abb6d5c218a7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-469]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-469")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "6440c036-3101-53a7-9611-be6ab29c2352", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-445]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-445")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "734707c6-ad64-54f1-8e05-a8ca7ec42383", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-447]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-447")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "7504a2fc-2033-59bc-bb01-f7b4eeed2164", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-454]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-454")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "75954e86-dbf7-5dc3-a211-e5c0205fe192", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-465]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-465")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "9a5f5049-76a1-5a2d-8912-d168a845c3ca", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-461]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-461")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "9b313ac8-6069-5bfd-9b92-9827587ffc5b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-442]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-442")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "9ca20ce9-8c2f-5a2f-9b15-03f4615ad5e6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-441]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-441")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "a3a6f83d-02a6-5430-8dc6-4f8f1946a32d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-464]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-464")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "ab210dec-f1b8-583a-940e-90ddc7641fdc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-470]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-470")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "ab6d6a1e-1f75-5eec-ac9e-7fefb232aee2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-460]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-460")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "b9c800ef-c4c5-5a63-ae54-0959c9712728", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-446]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-446")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "cb1f9138-bf78-5be1-8e95-bb9ba1c330b3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-471]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-471")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "ce2b3848-6f5c-5362-83d5-360c6d6b137d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-456]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-456")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "d28893ed-1867-59ba-8b0a-145f907b372c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-452]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-452")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "d2eb6494-a3ba-5e2b-8aa3-f1a269f19116", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-453]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-453")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "d8782751-9d64-5389-b796-a396ab3ca053", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-450]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-450")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "d8f088fe-22d6-5d40-8080-254495710bf9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-459]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-459")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "e0d644f7-6156-5c67-9981-08d21e1fe628", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-440]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-440")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "e4c0de03-f599-52c9-b982-80f5b20a746b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-458]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-458")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "e6f59d9f-4f6c-58d5-9d32-09b02c7af23a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-451]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-451")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "fc01d1e4-2053-5e76-bd5b-f20127c59a09", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-468]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-468")], .matchExpressions = []}}}}: +1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 38375966268241481767006751780948444872, .node = "testNode-45"}: +1
AddressGroupSpan{.addressGroup = 45349213787551863913945602237432171161, .node = "testNode-44"}: +1
AddressGroupSpan{.addressGroup = 56336623149793606332188757477805102850, .node = "testNode-46"}: +1
AddressGroupSpan{.addressGroup = 58469796950497130529538370291876307573, .node = "testNode-46"}: +1
AddressGroupSpan{.addressGroup = 61728385544145040418177698843719512097, .node = "testNode-44"}: +1
AddressGroupSpan{.addressGroup = 76391205487177098321212878075574806639, .node = "testNode-46"}: +1
AddressGroupSpan{.addressGroup = 91691608888291201794127747460254066432, .node = "testNode-45"}: +1
AddressGroupSpan{.addressGroup = 91984765255250255059535198568016548246, .node = "testNode-46"}: +1
AddressGroupSpan{.addressGroup = 117827446475839878486084874479850248172, .node = "testNode-44"}: +1
AddressGroupSpan{.addressGroup = 120182677709371850876551659521020384282, .node = "testNode-44"}: +1
AddressGroupSpan{.addressGroup = 125040544397884692449282467374989187239, .node = "testNode-46"}: +1
AddressGroupSpan{.addressGroup = 133259005093568862604505780749227270994, .node = "testNode-44"}: +1
AddressGroupSpan{.addressGroup = 153230030309926901947333102261066015619, .node = "testNode-44"}: +1
AddressGroupSpan{.addressGroup = 155543750420087640908644874525367673188, .node = "testNode-45"}: +1
AddressGroupSpan{.addressGroup = 156294920451355972805306528055678722450, .node = "testNode-46"}: +1
AddressGroupSpan{.addressGroup = 205196007965576302795668046715118011338, .node = "testNode-46"}: +1
AddressGroupSpan{.addressGroup = 206285954147957614071135240477338500187, .node = "testNode-44"}: +1
AddressGroupSpan{.addressGroup = 208200981325991774672117057795451966950, .node = "testNode-44"}: +1
AddressGroupSpan{.addressGroup = 217531119462777736934189280790313345837, .node = "testNode-46"}: +1
AddressGroupSpan{.addressGroup = 227469615519532210782975223061687836636, .node = "testNode-46"}: +1
AddressGroupSpan{.addressGroup = 227866099958799700876732017397099310818, .node = "testNode-45"}: +1
AddressGroupSpan{.addressGroup = 246945657588344890085307602799380473640, .node = "testNode-44"}: +1
AddressGroupSpan{.addressGroup = 269997189792379274017344001964798849203, .node = "testNode-47"}: +1
AddressGroupSpan{.addressGroup = 274045377450439623966059517873767519101, .node = "testNode-45"}: +1
AddressGroupSpan{.addressGroup = 279847031786431905870342764360009201452, .node = "testNode-45"}: +1
AddressGroupSpan{.addressGroup = 280360108893987796589645554088970129686, .node = "testNode-45"}: +1
AddressGroupSpan{.addressGroup = 287737120192732147553967459408904233043, .node = "testNode-44"}: +1
AddressGroupSpan{.addressGroup = 288362176878031203257646282110720347129, .node = "testNode-45"}: +1
AddressGroupSpan{.addressGroup = 298859621386881247921788046968805647912, .node = "testNode-43"}: +1
AddressGroupSpan{.addressGroup = 304065407044425188152218116774106395755, .node = "testNode-45"}: +1
AddressGroupSpan{.addressGroup = 306997748721037595890290579831172821562, .node = "testNode-45"}: +1
AddressGroupSpan{.addressGroup = 334974904332289858500896498438411491849, .node = "testNode-46"}: +1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "1cdef137-d356-5102-bdef-c72a414486c8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-455]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-455")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "221df0dd-6ea1-5be9-89af-2e070cf98a99", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-444]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-444")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "2a6209f8-8f87-5acb-aa49-9a8ba2b59702", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-462]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-462")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "2bfcdf8f-3513-5db1-be65-c75108cd2275", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-466]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-466")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "2e707461-922b-5a63-82d0-f4f9b42e3021", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-443]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-443")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "39786938-2f43-5c70-95f5-564461bee86f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-463]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-463")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "44fb2959-6bad-5a6b-82e5-0b9d202ee700", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-457]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-457")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "45339f12-f908-5cf0-9541-e69efa589196", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-467]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-467")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "4bbd7c29-ac1e-561a-9b1c-46e0c5369ea8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-439]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-439")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "58a4bda1-6394-500a-8801-381bb59057ec", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-448]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-448")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "5a6a577e-e00d-5003-bd84-a74d6fd1d41a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-449]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-449")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "5e11eed0-b04e-501c-bf44-abb6d5c218a7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-469]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-469")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "6440c036-3101-53a7-9611-be6ab29c2352", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-445]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-445")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "734707c6-ad64-54f1-8e05-a8ca7ec42383", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-447]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-447")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "7504a2fc-2033-59bc-bb01-f7b4eeed2164", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-454]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-454")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "75954e86-dbf7-5dc3-a211-e5c0205fe192", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-465]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-465")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "9a5f5049-76a1-5a2d-8912-d168a845c3ca", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-461]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-461")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "9b313ac8-6069-5bfd-9b92-9827587ffc5b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-442]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-442")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "9ca20ce9-8c2f-5a2f-9b15-03f4615ad5e6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-441]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-441")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "a3a6f83d-02a6-5430-8dc6-4f8f1946a32d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-464]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-464")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "ab210dec-f1b8-583a-940e-90ddc7641fdc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-470]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-470")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "ab6d6a1e-1f75-5eec-ac9e-7fefb232aee2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-460]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-460")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "b9c800ef-c4c5-5a63-ae54-0959c9712728", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-446]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-446")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "ce2b3848-6f5c-5362-83d5-360c6d6b137d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-456]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-456")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "d28893ed-1867-59ba-8b0a-145f907b372c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-452]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-452")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "d2eb6494-a3ba-5e2b-8aa3-f1a269f19116", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-453]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-453")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "d8782751-9d64-5389-b796-a396ab3ca053", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-450]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-450")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "d8f088fe-22d6-5d40-8080-254495710bf9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-459]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-459")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "e0d644f7-6156-5c67-9981-08d21e1fe628", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-440]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-440")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "e4c0de03-f599-52c9-b982-80f5b20a746b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-458]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-458")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "e6f59d9f-4f6c-58d5-9d32-09b02c7af23a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-451]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-451")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "fc01d1e4-2053-5e76-bd5b-f20127c59a09", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-468]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-468")], .matchExpressions = []}}}}: +1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 38375966268241481767006751780948444872, .node = "testNode-45", .pods = [k8spolicy.PodReference{.name = "testPod-455", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 45349213787551863913945602237432171161, .node = "testNode-44", .pods = [k8spolicy.PodReference{.name = "testPod-444", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 56336623149793606332188757477805102850, .node = "testNode-46", .pods = [k8spolicy.PodReference{.name = "testPod-462", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 58469796950497130529538370291876307573, .node = "testNode-46", .pods = [k8spolicy.PodReference{.name = "testPod-466", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 61728385544145040418177698843719512097, .node = "testNode-44", .pods = [k8spolicy.PodReference{.name = "testPod-443", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 76391205487177098321212878075574806639, .node = "testNode-46", .pods = [k8spolicy.PodReference{.name = "testPod-463", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 91691608888291201794127747460254066432, .node = "testNode-45", .pods = [k8spolicy.PodReference{.name = "testPod-457", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 91984765255250255059535198568016548246, .node = "testNode-46", .pods = [k8spolicy.PodReference{.name = "testPod-467", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 100675962110545384859717753829972156072, .node = "testNode-43", .pods = [k8spolicy.PodReference{.name = "testPod-439", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 117827446475839878486084874479850248172, .node = "testNode-44", .pods = [k8spolicy.PodReference{.name = "testPod-448", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 120182677709371850876551659521020384282, .node = "testNode-44", .pods = [k8spolicy.PodReference{.name = "testPod-449", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 125040544397884692449282467374989187239, .node = "testNode-46", .pods = [k8spolicy.PodReference{.name = "testPod-469", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 133259005093568862604505780749227270994, .node = "testNode-44", .pods = [k8spolicy.PodReference{.name = "testPod-445", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 153230030309926901947333102261066015619, .node = "testNode-44", .pods = [k8spolicy.PodReference{.name = "testPod-447", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 155543750420087640908644874525367673188, .node = "testNode-45", .pods = [k8spolicy.PodReference{.name = "testPod-454", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 156294920451355972805306528055678722450, .node = "testNode-46", .pods = [k8spolicy.PodReference{.name = "testPod-465", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 205196007965576302795668046715118011338, .node = "testNode-46", .pods = [k8spolicy.PodReference{.name = "testPod-461", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 206285954147957614071135240477338500187, .node = "testNode-44", .pods = [k8spolicy.PodReference{.name = "testPod-442", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 208200981325991774672117057795451966950, .node = "testNode-44", .pods = [k8spolicy.PodReference{.name = "testPod-441", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 217531119462777736934189280790313345837, .node = "testNode-46", .pods = [k8spolicy.PodReference{.name = "testPod-464", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 227469615519532210782975223061687836636, .node = "testNode-47", .pods = [k8spolicy.PodReference{.name = "testPod-470", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 227866099958799700876732017397099310818, .node = "testNode-46", .pods = [k8spolicy.PodReference{.name = "testPod-460", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 246945657588344890085307602799380473640, .node = "testNode-44", .pods = [k8spolicy.PodReference{.name = "testPod-446", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 274045377450439623966059517873767519101, .node = "testNode-45", .pods = [k8spolicy.PodReference{.name = "testPod-456", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 279847031786431905870342764360009201452, .node = "testNode-45", .pods = [k8spolicy.PodReference{.name = "testPod-452", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 280360108893987796589645554088970129686, .node = "testNode-45", .pods = [k8spolicy.PodReference{.name = "testPod-453", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 287737120192732147553967459408904233043, .node = "testNode-45", .pods = [k8spolicy.PodReference{.name = "testPod-450", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 288362176878031203257646282110720347129, .node = "testNode-45", .pods = [k8spolicy.PodReference{.name = "testPod-459", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 298859621386881247921788046968805647912, .node = "testNode-44", .pods = [k8spolicy.PodReference{.name = "testPod-440", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 304065407044425188152218116774106395755, .node = "testNode-45", .pods = [k8spolicy.PodReference{.name = "testPod-458", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 306997748721037595890290579831172821562, .node = "testNode-45", .pods = [k8spolicy.PodReference{.name = "testPod-451", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 334974904332289858500896498438411491849, .node = "testNode-46", .pods = [k8spolicy.PodReference{.name = "testPod-468", .namespace = "testNamespace"}]}: +1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 38375966268241481767006751780948444872, .span = "testNode-45"}: +1
AppliedToGroupSpan{.appliedToGroup = 45349213787551863913945602237432171161, .span = "testNode-44"}: +1
AppliedToGroupSpan{.appliedToGroup = 56336623149793606332188757477805102850, .span = "testNode-46"}: +1
AppliedToGroupSpan{.appliedToGroup = 58469796950497130529538370291876307573, .span = "testNode-46"}: +1
AppliedToGroupSpan{.appliedToGroup = 61728385544145040418177698843719512097, .span = "testNode-44"}: +1
AppliedToGroupSpan{.appliedToGroup = 76391205487177098321212878075574806639, .span = "testNode-46"}: +1
AppliedToGroupSpan{.appliedToGroup = 91691608888291201794127747460254066432, .span = "testNode-45"}: +1
AppliedToGroupSpan{.appliedToGroup = 91984765255250255059535198568016548246, .span = "testNode-46"}: +1
AppliedToGroupSpan{.appliedToGroup = 100675962110545384859717753829972156072, .span = "testNode-43"}: +1
AppliedToGroupSpan{.appliedToGroup = 117827446475839878486084874479850248172, .span = "testNode-44"}: +1
AppliedToGroupSpan{.appliedToGroup = 120182677709371850876551659521020384282, .span = "testNode-44"}: +1
AppliedToGroupSpan{.appliedToGroup = 125040544397884692449282467374989187239, .span = "testNode-46"}: +1
AppliedToGroupSpan{.appliedToGroup = 133259005093568862604505780749227270994, .span = "testNode-44"}: +1
AppliedToGroupSpan{.appliedToGroup = 153230030309926901947333102261066015619, .span = "testNode-44"}: +1
AppliedToGroupSpan{.appliedToGroup = 155543750420087640908644874525367673188, .span = "testNode-45"}: +1
AppliedToGroupSpan{.appliedToGroup = 156294920451355972805306528055678722450, .span = "testNode-46"}: +1
AppliedToGroupSpan{.appliedToGroup = 205196007965576302795668046715118011338, .span = "testNode-46"}: +1
AppliedToGroupSpan{.appliedToGroup = 206285954147957614071135240477338500187, .span = "testNode-44"}: +1
AppliedToGroupSpan{.appliedToGroup = 208200981325991774672117057795451966950, .span = "testNode-44"}: +1
AppliedToGroupSpan{.appliedToGroup = 217531119462777736934189280790313345837, .span = "testNode-46"}: +1
AppliedToGroupSpan{.appliedToGroup = 227469615519532210782975223061687836636, .span = "testNode-47"}: +1
AppliedToGroupSpan{.appliedToGroup = 227866099958799700876732017397099310818, .span = "testNode-46"}: +1
AppliedToGroupSpan{.appliedToGroup = 246945657588344890085307602799380473640, .span = "testNode-44"}: +1
AppliedToGroupSpan{.appliedToGroup = 274045377450439623966059517873767519101, .span = "testNode-45"}: +1
AppliedToGroupSpan{.appliedToGroup = 279847031786431905870342764360009201452, .span = "testNode-45"}: +1
AppliedToGroupSpan{.appliedToGroup = 280360108893987796589645554088970129686, .span = "testNode-45"}: +1
AppliedToGroupSpan{.appliedToGroup = 287737120192732147553967459408904233043, .span = "testNode-45"}: +1
AppliedToGroupSpan{.appliedToGroup = 288362176878031203257646282110720347129, .span = "testNode-45"}: +1
AppliedToGroupSpan{.appliedToGroup = 298859621386881247921788046968805647912, .span = "testNode-44"}: +1
AppliedToGroupSpan{.appliedToGroup = 304065407044425188152218116774106395755, .span = "testNode-45"}: +1
AppliedToGroupSpan{.appliedToGroup = 306997748721037595890290579831172821562, .span = "testNode-45"}: +1
AppliedToGroupSpan{.appliedToGroup = 334974904332289858500896498438411491849, .span = "testNode-46"}: +1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-439"}, .name = "testNP-439", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [298859621386881247921788046968805647912], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [100675962110545384859717753829972156072]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-440"}, .name = "testNP-440", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [208200981325991774672117057795451966950], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [298859621386881247921788046968805647912]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-441"}, .name = "testNP-441", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [206285954147957614071135240477338500187], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [208200981325991774672117057795451966950]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-442"}, .name = "testNP-442", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [61728385544145040418177698843719512097], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [206285954147957614071135240477338500187]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-443"}, .name = "testNP-443", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [45349213787551863913945602237432171161], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [61728385544145040418177698843719512097]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-444"}, .name = "testNP-444", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [133259005093568862604505780749227270994], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [45349213787551863913945602237432171161]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-445"}, .name = "testNP-445", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [246945657588344890085307602799380473640], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [133259005093568862604505780749227270994]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-446"}, .name = "testNP-446", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [153230030309926901947333102261066015619], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [246945657588344890085307602799380473640]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-447"}, .name = "testNP-447", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [117827446475839878486084874479850248172], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [153230030309926901947333102261066015619]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-448"}, .name = "testNP-448", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [120182677709371850876551659521020384282], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [117827446475839878486084874479850248172]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-449"}, .name = "testNP-449", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [287737120192732147553967459408904233043], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [120182677709371850876551659521020384282]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-450"}, .name = "testNP-450", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [306997748721037595890290579831172821562], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [287737120192732147553967459408904233043]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-451"}, .name = "testNP-451", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [279847031786431905870342764360009201452], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [306997748721037595890290579831172821562]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-452"}, .name = "testNP-452", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [280360108893987796589645554088970129686], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [279847031786431905870342764360009201452]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-453"}, .name = "testNP-453", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [155543750420087640908644874525367673188], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [280360108893987796589645554088970129686]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-454"}, .name = "testNP-454", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [38375966268241481767006751780948444872], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [155543750420087640908644874525367673188]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-455"}, .name = "testNP-455", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [274045377450439623966059517873767519101], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [38375966268241481767006751780948444872]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-456"}, .name = "testNP-456", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [91691608888291201794127747460254066432], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [274045377450439623966059517873767519101]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-457"}, .name = "testNP-457", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [304065407044425188152218116774106395755], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [91691608888291201794127747460254066432]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-458"}, .name = "testNP-458", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [288362176878031203257646282110720347129], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [304065407044425188152218116774106395755]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-459"}, .name = "testNP-459", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [227866099958799700876732017397099310818], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [288362176878031203257646282110720347129]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-460"}, .name = "testNP-460", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [205196007965576302795668046715118011338], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [227866099958799700876732017397099310818]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-461"}, .name = "testNP-461", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [56336623149793606332188757477805102850], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [205196007965576302795668046715118011338]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-462"}, .name = "testNP-462", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [76391205487177098321212878075574806639], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [56336623149793606332188757477805102850]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-463"}, .name = "testNP-463", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [217531119462777736934189280790313345837], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [76391205487177098321212878075574806639]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-464"}, .name = "testNP-464", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [156294920451355972805306528055678722450], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [217531119462777736934189280790313345837]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-465"}, .name = "testNP-465", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [58469796950497130529538370291876307573], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [156294920451355972805306528055678722450]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-466"}, .name = "testNP-466", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [91984765255250255059535198568016548246], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [58469796950497130529538370291876307573]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-467"}, .name = "testNP-467", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [334974904332289858500896498438411491849], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [91984765255250255059535198568016548246]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-468"}, .name = "testNP-468", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [125040544397884692449282467374989187239], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [334974904332289858500896498438411491849]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-469"}, .name = "testNP-469", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [227469615519532210782975223061687836636], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [125040544397884692449282467374989187239]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-470"}, .name = "testNP-470", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [269997189792379274017344001964798849203], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [227469615519532210782975223061687836636]}: +1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-439", .policy = k8spolicy.UID{.uid = "testNP-439"}, .node = "testNode-43"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-440", .policy = k8spolicy.UID{.uid = "testNP-440"}, .node = "testNode-44"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-441", .policy = k8spolicy.UID{.uid = "testNP-441"}, .node = "testNode-44"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-442", .policy = k8spolicy.UID{.uid = "testNP-442"}, .node = "testNode-44"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-443", .policy = k8spolicy.UID{.uid = "testNP-443"}, .node = "testNode-44"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-444", .policy = k8spolicy.UID{.uid = "testNP-444"}, .node = "testNode-44"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-445", .policy = k8spolicy.UID{.uid = "testNP-445"}, .node = "testNode-44"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-446", .policy = k8spolicy.UID{.uid = "testNP-446"}, .node = "testNode-44"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-447", .policy = k8spolicy.UID{.uid = "testNP-447"}, .node = "testNode-44"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-448", .policy = k8spolicy.UID{.uid = "testNP-448"}, .node = "testNode-44"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-449", .policy = k8spolicy.UID{.uid = "testNP-449"}, .node = "testNode-44"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-450", .policy = k8spolicy.UID{.uid = "testNP-450"}, .node = "testNode-45"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-451", .policy = k8spolicy.UID{.uid = "testNP-451"}, .node = "testNode-45"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-452", .policy = k8spolicy.UID{.uid = "testNP-452"}, .node = "testNode-45"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-453", .policy = k8spolicy.UID{.uid = "testNP-453"}, .node = "testNode-45"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-454", .policy = k8spolicy.UID{.uid = "testNP-454"}, .node = "testNode-45"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-455", .policy = k8spolicy.UID{.uid = "testNP-455"}, .node = "testNode-45"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-456", .policy = k8spolicy.UID{.uid = "testNP-456"}, .node = "testNode-45"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-457", .policy = k8spolicy.UID{.uid = "testNP-457"}, .node = "testNode-45"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-458", .policy = k8spolicy.UID{.uid = "testNP-458"}, .node = "testNode-45"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-459", .policy = k8spolicy.UID{.uid = "testNP-459"}, .node = "testNode-45"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-460", .policy = k8spolicy.UID{.uid = "testNP-460"}, .node = "testNode-46"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-461", .policy = k8spolicy.UID{.uid = "testNP-461"}, .node = "testNode-46"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-462", .policy = k8spolicy.UID{.uid = "testNP-462"}, .node = "testNode-46"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-463", .policy = k8spolicy.UID{.uid = "testNP-463"}, .node = "testNode-46"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-464", .policy = k8spolicy.UID{.uid = "testNP-464"}, .node = "testNode-46"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-465", .policy = k8spolicy.UID{.uid = "testNP-465"}, .node = "testNode-46"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-466", .policy = k8spolicy.UID{.uid = "testNP-466"}, .node = "testNode-46"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-467", .policy = k8spolicy.UID{.uid = "testNP-467"}, .node = "testNode-46"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-468", .policy = k8spolicy.UID{.uid = "testNP-468"}, .node = "testNode-46"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-469", .policy = k8spolicy.UID{.uid = "testNP-469"}, .node = "testNode-46"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-470", .policy = k8spolicy.UID{.uid = "testNP-470"}, .node = "testNode-47"}: +1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 10398742538421044264815556624684022683, .address = "10.10.47.9"}: +1
AddressGroupAddress{.addressGroup = 15285939464778960935441106852144703836, .address = "10.10.48.9"}: +1
AddressGroupAddress{.addressGroup = 17528774242580328029912038629490225240, .address = "10.10.47.8"}: +1
AddressGroupAddress{.addressGroup = 20765226908120027851174659223444490835, .address = "10.10.49.5"}: +1
AddressGroupAddress{.addressGroup = 27058181730611473933030209998052762202, .address = "10.10.47.7"}: +1
AddressGroupAddress{.addressGroup = 32467039824443061879633881427199357722, .address = "10.10.49.2"}: +1
AddressGroupAddress{.addressGroup = 43594847321568024972030832253467524147, .address = "10.10.50.0"}: +1
AddressGroupAddress{.addressGroup = 62600887137200392690002037255951829310, .address = "10.10.47.3"}: +1
AddressGroupAddress{.addressGroup = 90544106058764733507855193994038428218, .address = "10.10.47.5"}: +1
AddressGroupAddress{.addressGroup = 101095752346530535164915651636984381570, .address = "10.10.47.6"}: +1
AddressGroupAddress{.addressGroup = 112672880072235221701653286541383835910, .address = "10.10.49.7"}: +1
AddressGroupAddress{.addressGroup = 116031467470099154839321687713899067637, .address = "10.10.49.9"}: +1
AddressGroupAddress{.addressGroup = 124264996953399756515883770719624033599, .address = "10.10.49.3"}: +1
AddressGroupAddress{.addressGroup = 131397115533833478951658092594978071468, .address = "10.10.48.1"}: +1
AddressGroupAddress{.addressGroup = 139404679717645147853029719067887386584, .address = "10.10.48.6"}: +1
AddressGroupAddress{.addressGroup = 145049859127643291158427056828983572457, .address = "10.10.48.4"}: +1
AddressGroupAddress{.addressGroup = 170814458879235919546793320233963616342, .address = "10.10.50.1"}: +1
AddressGroupAddress{.addressGroup = 191237941306182904637223214367089033722, .address = "10.10.49.1"}: +1
AddressGroupAddress{.addressGroup = 192997154846823932430444027486549664749, .address = "10.10.48.5"}: +1
AddressGroupAddress{.addressGroup = 193512303236577385511766869180978382881, .address = "10.10.49.6"}: +1
AddressGroupAddress{.addressGroup = 196410774068037176278392170910557362834, .address = "10.10.48.7"}: +1
AddressGroupAddress{.addressGroup = 199908900147595800825852814881020681811, .address = "10.10.50.3"}: +1
AddressGroupAddress{.addressGroup = 204719468512002355151148736197610861336, .address = "10.10.49.8"}: +1
AddressGroupAddress{.addressGroup = 223214646752105529115657412587042174882, .address = "10.10.48.0"}: +1
AddressGroupAddress{.addressGroup = 230618493681980695464795362108935057042, .address = "10.10.47.2"}: +1
AddressGroupAddress{.addressGroup = 260936513634779486466878529184415766280, .address = "10.10.47.4"}: +1
AddressGroupAddress{.addressGroup = 261573942032461131498792619653509043863, .address = "10.10.48.8"}: +1
AddressGroupAddress{.addressGroup = 283949543804316592665011763622762819468, .address = "10.10.50.2"}: +1
AddressGroupAddress{.addressGroup = 289230956037387926968456551129169380093, .address = "10.10.48.3"}: +1
AddressGroupAddress{.addressGroup = 293943541870597479161044488294921897506, .address = "10.10.48.2"}: +1
AddressGroupAddress{.addressGroup = 305238393628597377001513190946135696686, .address = "10.10.49.4"}: +1
AddressGroupAddress{.addressGroup = 308594811633025638703266067092239201868, .address = "10.10.49.0"}: +1
AddressGroupDescr:
AddressGroupDescr{.name = "07d2b997-3b78-5866-a575-8f9f9421fb9b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-479]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-479")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "0b7ff700-b184-5c64-b61e-9f5e0e4f695c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-489]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-489")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "0d2feb4b-7671-5457-997d-b90deb86f058", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-478]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-478")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "0f9f3cbb-223d-566a-8017-99102e738a53", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-495]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-495")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "145b375b-bd02-576a-a29c-a996c2ada25a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-477]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-477")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "186ceca6-cfe6-5b24-b464-51fc996b731a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-492]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-492")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "20cc0feb-897a-5b53-bf0b-20fbba3e7c33", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-500]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-500")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "2f187e07-ea40-5f31-954c-ba475ddb493e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-473]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-473")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "441e2917-7cb3-5111-8ca9-2e9a93e1423a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-475]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-475")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "4c0e556b-5c80-5021-af27-40565ee58082", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-476]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-476")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "54c401e2-aea9-5b14-9090-d42883ae2106", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-497]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-497")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "574ad907-66bf-52c1-aa00-f896f38bb8f5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-499]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-499")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "5d7c915f-be3d-5412-945b-db1343c0f53f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-493]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-493")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "62da29f8-0e21-533a-a892-7487a537a3ac", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-481]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-481")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "68e05d5d-5880-58b3-9750-b1a5778fbfd8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-486]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-486")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "6d1f9632-c71e-599b-b0ec-adcaf91077e9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-484]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-484")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "8081ab0a-8040-5336-933e-1bcfc92ff856", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-501]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-501")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "8fdf1677-dcc4-5416-93e7-b90771ef01fa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-491]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-491")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "9131e664-70d3-5abf-94cb-98daedc563ed", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-485]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-485")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "91951d2b-3de3-5257-b6f0-31b371a54821", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-496]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-496")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "93c356d0-6c6d-5097-bb7d-bb85c09b5a92", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-487]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-487")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "96650dbe-ea2a-56ce-a24d-89a33aab9e53", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-503]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-503")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "9a038913-f2a8-5e80-b5fa-9de255b27318", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-498]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-498")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "a7ed93c4-ba2e-5748-b2ae-88a30d10f7a2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-480]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-480")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "ad7f819a-fc9d-559a-960e-15c148812e92", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-472]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-472")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "c44e8b65-9e4c-5a80-a0d7-fb788cb25708", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-474]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-474")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "c4c94f0b-1a71-5a01-b4f3-bd4e12ce5697", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-488]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-488")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "d59eb162-99df-5d04-b8c1-e86f9cd0af8c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-502]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-502")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "d997db1c-c2f0-5d09-b50c-8ebc67d1c2fd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-483]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-483")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "dd237788-61ef-5c72-820a-fe6a4fbf8622", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-482]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-482")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "e5a2c6b8-18d5-5bad-ba1b-b514a461652e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-494]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-494")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "e82932e7-38ac-56a0-aa33-7870f6b2b64c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-490]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-490")], .matchExpressions = []}}}}: +1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 10398742538421044264815556624684022683, .node = "testNode-47"}: +1
AddressGroupSpan{.addressGroup = 15285939464778960935441106852144703836, .node = "testNode-48"}: +1
AddressGroupSpan{.addressGroup = 17528774242580328029912038629490225240, .node = "testNode-47"}: +1
AddressGroupSpan{.addressGroup = 20765226908120027851174659223444490835, .node = "testNode-49"}: +1
AddressGroupSpan{.addressGroup = 27058181730611473933030209998052762202, .node = "testNode-47"}: +1
AddressGroupSpan{.addressGroup = 32467039824443061879633881427199357722, .node = "testNode-49"}: +1
AddressGroupSpan{.addressGroup = 43594847321568024972030832253467524147, .node = "testNode-49"}: +1
AddressGroupSpan{.addressGroup = 62600887137200392690002037255951829310, .node = "testNode-47"}: +1
AddressGroupSpan{.addressGroup = 90544106058764733507855193994038428218, .node = "testNode-47"}: +1
AddressGroupSpan{.addressGroup = 101095752346530535164915651636984381570, .node = "testNode-47"}: +1
AddressGroupSpan{.addressGroup = 112672880072235221701653286541383835910, .node = "testNode-49"}: +1
AddressGroupSpan{.addressGroup = 116031467470099154839321687713899067637, .node = "testNode-49"}: +1
AddressGroupSpan{.addressGroup = 124264996953399756515883770719624033599, .node = "testNode-49"}: +1
AddressGroupSpan{.addressGroup = 131397115533833478951658092594978071468, .node = "testNode-48"}: +1
AddressGroupSpan{.addressGroup = 139404679717645147853029719067887386584, .node = "testNode-48"}: +1
AddressGroupSpan{.addressGroup = 145049859127643291158427056828983572457, .node = "testNode-48"}: +1
AddressGroupSpan{.addressGroup = 170814458879235919546793320233963616342, .node = "testNode-50"}: +1
AddressGroupSpan{.addressGroup = 191237941306182904637223214367089033722, .node = "testNode-49"}: +1
AddressGroupSpan{.addressGroup = 192997154846823932430444027486549664749, .node = "testNode-48"}: +1
AddressGroupSpan{.addressGroup = 193512303236577385511766869180978382881, .node = "testNode-49"}: +1
AddressGroupSpan{.addressGroup = 196410774068037176278392170910557362834, .node = "testNode-48"}: +1
AddressGroupSpan{.addressGroup = 199908900147595800825852814881020681811, .node = "testNode-50"}: +1
AddressGroupSpan{.addressGroup = 204719468512002355151148736197610861336, .node = "testNode-49"}: +1
AddressGroupSpan{.addressGroup = 223214646752105529115657412587042174882, .node = "testNode-47"}: +1
AddressGroupSpan{.addressGroup = 230618493681980695464795362108935057042, .node = "testNode-47"}: +1
AddressGroupSpan{.addressGroup = 260936513634779486466878529184415766280, .node = "testNode-47"}: +1
AddressGroupSpan{.addressGroup = 261573942032461131498792619653509043863, .node = "testNode-48"}: +1
AddressGroupSpan{.addressGroup = 283949543804316592665011763622762819468, .node = "testNode-50"}: +1
AddressGroupSpan{.addressGroup = 289230956037387926968456551129169380093, .node = "testNode-48"}: +1
AddressGroupSpan{.addressGroup = 293943541870597479161044488294921897506, .node = "testNode-48"}: +1
AddressGroupSpan{.addressGroup = 305238393628597377001513190946135696686, .node = "testNode-49"}: +1
AddressGroupSpan{.addressGroup = 308594811633025638703266067092239201868, .node = "testNode-48"}: +1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "07d2b997-3b78-5866-a575-8f9f9421fb9b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-479]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-479")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "0b7ff700-b184-5c64-b61e-9f5e0e4f695c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-489]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-489")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "0d2feb4b-7671-5457-997d-b90deb86f058", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-478]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-478")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "0f9f3cbb-223d-566a-8017-99102e738a53", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-495]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-495")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "145b375b-bd02-576a-a29c-a996c2ada25a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-477]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-477")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "186ceca6-cfe6-5b24-b464-51fc996b731a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-492]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-492")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "20cc0feb-897a-5b53-bf0b-20fbba3e7c33", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-500]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-500")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "2f187e07-ea40-5f31-954c-ba475ddb493e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-473]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-473")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "441e2917-7cb3-5111-8ca9-2e9a93e1423a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-475]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-475")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "4c0e556b-5c80-5021-af27-40565ee58082", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-476]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-476")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "54c401e2-aea9-5b14-9090-d42883ae2106", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-497]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-497")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "574ad907-66bf-52c1-aa00-f896f38bb8f5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-499]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-499")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "5d7c915f-be3d-5412-945b-db1343c0f53f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-493]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-493")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "62da29f8-0e21-533a-a892-7487a537a3ac", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-481]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-481")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "68e05d5d-5880-58b3-9750-b1a5778fbfd8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-486]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-486")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "6d1f9632-c71e-599b-b0ec-adcaf91077e9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-484]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-484")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "8081ab0a-8040-5336-933e-1bcfc92ff856", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-501]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-501")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "8fdf1677-dcc4-5416-93e7-b90771ef01fa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-491]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-491")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "9131e664-70d3-5abf-94cb-98daedc563ed", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-485]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-485")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "91951d2b-3de3-5257-b6f0-31b371a54821", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-496]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-496")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "93c356d0-6c6d-5097-bb7d-bb85c09b5a92", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-487]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-487")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "9a038913-f2a8-5e80-b5fa-9de255b27318", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-498]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-498")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "a7ed93c4-ba2e-5748-b2ae-88a30d10f7a2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-480]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-480")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "ad7f819a-fc9d-559a-960e-15c148812e92", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-472]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-472")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "c44e8b65-9e4c-5a80-a0d7-fb788cb25708", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-474]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-474")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "c4c94f0b-1a71-5a01-b4f3-bd4e12ce5697", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-488]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-488")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "cb1f9138-bf78-5be1-8e95-bb9ba1c330b3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-471]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-471")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "d59eb162-99df-5d04-b8c1-e86f9cd0af8c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-502]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-502")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "d997db1c-c2f0-5d09-b50c-8ebc67d1c2fd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-483]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-483")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "dd237788-61ef-5c72-820a-fe6a4fbf8622", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-482]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-482")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "e5a2c6b8-18d5-5bad-ba1b-b514a461652e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-494]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-494")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "e82932e7-38ac-56a0-aa33-7870f6b2b64c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-490]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-490")], .matchExpressions = []}}}}: +1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 10398742538421044264815556624684022683, .node = "testNode-47", .pods = [k8spolicy.PodReference{.name = "testPod-479", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 15285939464778960935441106852144703836, .node = "testNode-48", .pods = [k8spolicy.PodReference{.name = "testPod-489", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 17528774242580328029912038629490225240, .node = "testNode-47", .pods = [k8spolicy.PodReference{.name = "testPod-478", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 20765226908120027851174659223444490835, .node = "testNode-49", .pods = [k8spolicy.PodReference{.name = "testPod-495", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 27058181730611473933030209998052762202, .node = "testNode-47", .pods = [k8spolicy.PodReference{.name = "testPod-477", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 32467039824443061879633881427199357722, .node = "testNode-49", .pods = [k8spolicy.PodReference{.name = "testPod-492", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 43594847321568024972030832253467524147, .node = "testNode-50", .pods = [k8spolicy.PodReference{.name = "testPod-500", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 62600887137200392690002037255951829310, .node = "testNode-47", .pods = [k8spolicy.PodReference{.name = "testPod-473", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 90544106058764733507855193994038428218, .node = "testNode-47", .pods = [k8spolicy.PodReference{.name = "testPod-475", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 101095752346530535164915651636984381570, .node = "testNode-47", .pods = [k8spolicy.PodReference{.name = "testPod-476", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 112672880072235221701653286541383835910, .node = "testNode-49", .pods = [k8spolicy.PodReference{.name = "testPod-497", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 116031467470099154839321687713899067637, .node = "testNode-49", .pods = [k8spolicy.PodReference{.name = "testPod-499", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 124264996953399756515883770719624033599, .node = "testNode-49", .pods = [k8spolicy.PodReference{.name = "testPod-493", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 131397115533833478951658092594978071468, .node = "testNode-48", .pods = [k8spolicy.PodReference{.name = "testPod-481", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 139404679717645147853029719067887386584, .node = "testNode-48", .pods = [k8spolicy.PodReference{.name = "testPod-486", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 145049859127643291158427056828983572457, .node = "testNode-48", .pods = [k8spolicy.PodReference{.name = "testPod-484", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 170814458879235919546793320233963616342, .node = "testNode-50", .pods = [k8spolicy.PodReference{.name = "testPod-501", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 191237941306182904637223214367089033722, .node = "testNode-49", .pods = [k8spolicy.PodReference{.name = "testPod-491", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 192997154846823932430444027486549664749, .node = "testNode-48", .pods = [k8spolicy.PodReference{.name = "testPod-485", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 193512303236577385511766869180978382881, .node = "testNode-49", .pods = [k8spolicy.PodReference{.name = "testPod-496", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 196410774068037176278392170910557362834, .node = "testNode-48", .pods = [k8spolicy.PodReference{.name = "testPod-487", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 204719468512002355151148736197610861336, .node = "testNode-49", .pods = [k8spolicy.PodReference{.name = "testPod-498", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 223214646752105529115657412587042174882, .node = "testNode-48", .pods = [k8spolicy.PodReference{.name = "testPod-480", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 230618493681980695464795362108935057042, .node = "testNode-47", .pods = [k8spolicy.PodReference{.name = "testPod-472", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 260936513634779486466878529184415766280, .node = "testNode-47", .pods = [k8spolicy.PodReference{.name = "testPod-474", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 261573942032461131498792619653509043863, .node = "testNode-48", .pods = [k8spolicy.PodReference{.name = "testPod-488", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 269997189792379274017344001964798849203, .node = "testNode-47", .pods = [k8spolicy.PodReference{.name = "testPod-471", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 283949543804316592665011763622762819468, .node = "testNode-50", .pods = [k8spolicy.PodReference{.name = "testPod-502", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 289230956037387926968456551129169380093, .node = "testNode-48", .pods = [k8spolicy.PodReference{.name = "testPod-483", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 293943541870597479161044488294921897506, .node = "testNode-48", .pods = [k8spolicy.PodReference{.name = "testPod-482", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 305238393628597377001513190946135696686, .node = "testNode-49", .pods = [k8spolicy.PodReference{.name = "testPod-494", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 308594811633025638703266067092239201868, .node = "testNode-49", .pods = [k8spolicy.PodReference{.name = "testPod-490", .namespace = "testNamespace"}]}: +1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 10398742538421044264815556624684022683, .span = "testNode-47"}: +1
AppliedToGroupSpan{.appliedToGroup = 15285939464778960935441106852144703836, .span = "testNode-48"}: +1
AppliedToGroupSpan{.appliedToGroup = 17528774242580328029912038629490225240, .span = "testNode-47"}: +1
AppliedToGroupSpan{.appliedToGroup = 20765226908120027851174659223444490835, .span = "testNode-49"}: +1
AppliedToGroupSpan{.appliedToGroup = 27058181730611473933030209998052762202, .span = "testNode-47"}: +1
AppliedToGroupSpan{.appliedToGroup = 32467039824443061879633881427199357722, .span = "testNode-49"}: +1
AppliedToGroupSpan{.appliedToGroup = 43594847321568024972030832253467524147, .span = "testNode-50"}: +1
AppliedToGroupSpan{.appliedToGroup = 62600887137200392690002037255951829310, .span = "testNode-47"}: +1
AppliedToGroupSpan{.appliedToGroup = 90544106058764733507855193994038428218, .span = "testNode-47"}: +1
AppliedToGroupSpan{.appliedToGroup = 101095752346530535164915651636984381570, .span = "testNode-47"}: +1
AppliedToGroupSpan{.appliedToGroup = 112672880072235221701653286541383835910, .span = "testNode-49"}: +1
AppliedToGroupSpan{.appliedToGroup = 116031467470099154839321687713899067637, .span = "testNode-49"}: +1
AppliedToGroupSpan{.appliedToGroup = 124264996953399756515883770719624033599, .span = "testNode-49"}: +1
AppliedToGroupSpan{.appliedToGroup = 131397115533833478951658092594978071468, .span = "testNode-48"}: +1
AppliedToGroupSpan{.appliedToGroup = 139404679717645147853029719067887386584, .span = "testNode-48"}: +1
AppliedToGroupSpan{.appliedToGroup = 145049859127643291158427056828983572457, .span = "testNode-48"}: +1
AppliedToGroupSpan{.appliedToGroup = 170814458879235919546793320233963616342, .span = "testNode-50"}: +1
AppliedToGroupSpan{.appliedToGroup = 191237941306182904637223214367089033722, .span = "testNode-49"}: +1
AppliedToGroupSpan{.appliedToGroup = 192997154846823932430444027486549664749, .span = "testNode-48"}: +1
AppliedToGroupSpan{.appliedToGroup = 193512303236577385511766869180978382881, .span = "testNode-49"}: +1
AppliedToGroupSpan{.appliedToGroup = 196410774068037176278392170910557362834, .span = "testNode-48"}: +1
AppliedToGroupSpan{.appliedToGroup = 204719468512002355151148736197610861336, .span = "testNode-49"}: +1
AppliedToGroupSpan{.appliedToGroup = 223214646752105529115657412587042174882, .span = "testNode-48"}: +1
AppliedToGroupSpan{.appliedToGroup = 230618493681980695464795362108935057042, .span = "testNode-47"}: +1
AppliedToGroupSpan{.appliedToGroup = 260936513634779486466878529184415766280, .span = "testNode-47"}: +1
AppliedToGroupSpan{.appliedToGroup = 261573942032461131498792619653509043863, .span = "testNode-48"}: +1
AppliedToGroupSpan{.appliedToGroup = 269997189792379274017344001964798849203, .span = "testNode-47"}: +1
AppliedToGroupSpan{.appliedToGroup = 283949543804316592665011763622762819468, .span = "testNode-50"}: +1
AppliedToGroupSpan{.appliedToGroup = 289230956037387926968456551129169380093, .span = "testNode-48"}: +1
AppliedToGroupSpan{.appliedToGroup = 293943541870597479161044488294921897506, .span = "testNode-48"}: +1
AppliedToGroupSpan{.appliedToGroup = 305238393628597377001513190946135696686, .span = "testNode-49"}: +1
AppliedToGroupSpan{.appliedToGroup = 308594811633025638703266067092239201868, .span = "testNode-49"}: +1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-471"}, .name = "testNP-471", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [230618493681980695464795362108935057042], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [269997189792379274017344001964798849203]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-472"}, .name = "testNP-472", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [62600887137200392690002037255951829310], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [230618493681980695464795362108935057042]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-473"}, .name = "testNP-473", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [260936513634779486466878529184415766280], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [62600887137200392690002037255951829310]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-474"}, .name = "testNP-474", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [90544106058764733507855193994038428218], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [260936513634779486466878529184415766280]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-475"}, .name = "testNP-475", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [101095752346530535164915651636984381570], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [90544106058764733507855193994038428218]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-476"}, .name = "testNP-476", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [27058181730611473933030209998052762202], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [101095752346530535164915651636984381570]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-477"}, .name = "testNP-477", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [17528774242580328029912038629490225240], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [27058181730611473933030209998052762202]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-478"}, .name = "testNP-478", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [10398742538421044264815556624684022683], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [17528774242580328029912038629490225240]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-479"}, .name = "testNP-479", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [223214646752105529115657412587042174882], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [10398742538421044264815556624684022683]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-480"}, .name = "testNP-480", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [131397115533833478951658092594978071468], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [223214646752105529115657412587042174882]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-481"}, .name = "testNP-481", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [293943541870597479161044488294921897506], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [131397115533833478951658092594978071468]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-482"}, .name = "testNP-482", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [289230956037387926968456551129169380093], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [293943541870597479161044488294921897506]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-483"}, .name = "testNP-483", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [145049859127643291158427056828983572457], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [289230956037387926968456551129169380093]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-484"}, .name = "testNP-484", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [192997154846823932430444027486549664749], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [145049859127643291158427056828983572457]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-485"}, .name = "testNP-485", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [139404679717645147853029719067887386584], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [192997154846823932430444027486549664749]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-486"}, .name = "testNP-486", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [196410774068037176278392170910557362834], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [139404679717645147853029719067887386584]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-487"}, .name = "testNP-487", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [261573942032461131498792619653509043863], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [196410774068037176278392170910557362834]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-488"}, .name = "testNP-488", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [15285939464778960935441106852144703836], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [261573942032461131498792619653509043863]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-489"}, .name = "testNP-489", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [308594811633025638703266067092239201868], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [15285939464778960935441106852144703836]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-490"}, .name = "testNP-490", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [191237941306182904637223214367089033722], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [308594811633025638703266067092239201868]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-491"}, .name = "testNP-491", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [32467039824443061879633881427199357722], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [191237941306182904637223214367089033722]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-492"}, .name = "testNP-492", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [124264996953399756515883770719624033599], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [32467039824443061879633881427199357722]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-493"}, .name = "testNP-493", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [305238393628597377001513190946135696686], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [124264996953399756515883770719624033599]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-494"}, .name = "testNP-494", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [20765226908120027851174659223444490835], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [305238393628597377001513190946135696686]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-495"}, .name = "testNP-495", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [193512303236577385511766869180978382881], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [20765226908120027851174659223444490835]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-496"}, .name = "testNP-496", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [112672880072235221701653286541383835910], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [193512303236577385511766869180978382881]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-497"}, .name = "testNP-497", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [204719468512002355151148736197610861336], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [112672880072235221701653286541383835910]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-498"}, .name = "testNP-498", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [116031467470099154839321687713899067637], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [204719468512002355151148736197610861336]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-499"}, .name = "testNP-499", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [43594847321568024972030832253467524147], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [116031467470099154839321687713899067637]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-500"}, .name = "testNP-500", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [170814458879235919546793320233963616342], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [43594847321568024972030832253467524147]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-501"}, .name = "testNP-501", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [283949543804316592665011763622762819468], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [170814458879235919546793320233963616342]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-502"}, .name = "testNP-502", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [199908900147595800825852814881020681811], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [283949543804316592665011763622762819468]}: +1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-471", .policy = k8spolicy.UID{.uid = "testNP-471"}, .node = "testNode-47"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-472", .policy = k8spolicy.UID{.uid = "testNP-472"}, .node = "testNode-47"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-473", .policy = k8spolicy.UID{.uid = "testNP-473"}, .node = "testNode-47"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-474", .policy = k8spolicy.UID{.uid = "testNP-474"}, .node = "testNode-47"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-475", .policy = k8spolicy.UID{.uid = "testNP-475"}, .node = "testNode-47"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-476", .policy = k8spolicy.UID{.uid = "testNP-476"}, .node = "testNode-47"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-477", .policy = k8spolicy.UID{.uid = "testNP-477"}, .node = "testNode-47"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-478", .policy = k8spolicy.UID{.uid = "testNP-478"}, .node = "testNode-47"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-479", .policy = k8spolicy.UID{.uid = "testNP-479"}, .node = "testNode-47"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-480", .policy = k8spolicy.UID{.uid = "testNP-480"}, .node = "testNode-48"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-481", .policy = k8spolicy.UID{.uid = "testNP-481"}, .node = "testNode-48"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-482", .policy = k8spolicy.UID{.uid = "testNP-482"}, .node = "testNode-48"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-483", .policy = k8spolicy.UID{.uid = "testNP-483"}, .node = "testNode-48"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-484", .policy = k8spolicy.UID{.uid = "testNP-484"}, .node = "testNode-48"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-485", .policy = k8spolicy.UID{.uid = "testNP-485"}, .node = "testNode-48"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-486", .policy = k8spolicy.UID{.uid = "testNP-486"}, .node = "testNode-48"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-487", .policy = k8spolicy.UID{.uid = "testNP-487"}, .node = "testNode-48"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-488", .policy = k8spolicy.UID{.uid = "testNP-488"}, .node = "testNode-48"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-489", .policy = k8spolicy.UID{.uid = "testNP-489"}, .node = "testNode-48"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-490", .policy = k8spolicy.UID{.uid = "testNP-490"}, .node = "testNode-49"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-491", .policy = k8spolicy.UID{.uid = "testNP-491"}, .node = "testNode-49"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-492", .policy = k8spolicy.UID{.uid = "testNP-492"}, .node = "testNode-49"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-493", .policy = k8spolicy.UID{.uid = "testNP-493"}, .node = "testNode-49"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-494", .policy = k8spolicy.UID{.uid = "testNP-494"}, .node = "testNode-49"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-495", .policy = k8spolicy.UID{.uid = "testNP-495"}, .node = "testNode-49"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-496", .policy = k8spolicy.UID{.uid = "testNP-496"}, .node = "testNode-49"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-497", .policy = k8spolicy.UID{.uid = "testNP-497"}, .node = "testNode-49"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-498", .policy = k8spolicy.UID{.uid = "testNP-498"}, .node = "testNode-49"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-499", .policy = k8spolicy.UID{.uid = "testNP-499"}, .node = "testNode-49"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-500", .policy = k8spolicy.UID{.uid = "testNP-500"}, .node = "testNode-50"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-501", .policy = k8spolicy.UID{.uid = "testNP-501"}, .node = "testNode-50"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-502", .policy = k8spolicy.UID{.uid = "testNP-502"}, .node = "testNode-50"}: +1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 8229634560702391052776241933250494386, .address = "10.10.51.3"}: +1
AddressGroupAddress{.addressGroup = 29435536122020052906747503909488473132, .address = "10.10.51.5"}: +1
AddressGroupAddress{.addressGroup = 29644515621417994721099823014874944300, .address = "10.10.51.6"}: +1
AddressGroupAddress{.addressGroup = 30436074364170848456919083761972781581, .address = "10.10.51.7"}: +1
AddressGroupAddress{.addressGroup = 36809573850335376007923764512144127569, .address = "10.10.50.6"}: +1
AddressGroupAddress{.addressGroup = 62341031866340521150147631079796698722, .address = "10.10.51.2"}: +1
AddressGroupAddress{.addressGroup = 65686884614282637257819458160059442230, .address = "10.10.53.5"}: +1
AddressGroupAddress{.addressGroup = 66927369159555061421903542969454638567, .address = "10.10.50.7"}: +1
AddressGroupAddress{.addressGroup = 68271250420901333888645536827117596867, .address = "10.10.50.9"}: +1
AddressGroupAddress{.addressGroup = 76658063762570752824355365434268741433, .address = "10.10.52.9"}: +1
AddressGroupAddress{.addressGroup = 105144560902369795861541564827746555151, .address = "10.10.53.0"}: +1
AddressGroupAddress{.addressGroup = 105656523857835973839951521763213982718, .address = "10.10.52.8"}: +1
AddressGroupAddress{.addressGroup = 108380654399831200078489882286633731861, .address = "10.10.52.1"}: +1
AddressGroupAddress{.addressGroup = 116492568212039708824803804426363964310, .address = "10.10.51.1"}: +1
AddressGroupAddress{.addressGroup = 131038245757410914016332923977725876785, .address = "10.10.53.2"}: +1
AddressGroupAddress{.addressGroup = 135810808942849378079330740019976198836, .address = "10.10.52.4"}: +1
AddressGroupAddress{.addressGroup = 158133749367560097904430833580574841052, .address = "10.10.51.9"}: +1
AddressGroupAddress{.addressGroup = 159379537364512178039209337464128590911, .address = "10.10.50.5"}: +1
AddressGroupAddress{.addressGroup = 176222550332599395914515466248412980097, .address = "10.10.50.4"}: +1
AddressGroupAddress{.addressGroup = 180866885775410243234165659278417624984, .address = "10.10.53.4"}: +1
AddressGroupAddress{.addressGroup = 184940591344517749211680088744131752436, .address = "10.10.52.7"}: +1
AddressGroupAddress{.addressGroup = 191666996465132554203310298692592636053, .address = "10.10.51.0"}: +1
AddressGroupAddress{.addressGroup = 202989777748868913166239784758271932177, .address = "10.10.52.3"}: +1
AddressGroupAddress{.addressGroup = 203581441134047263832995090408603302366, .address = "10.10.51.4"}: +1
AddressGroupAddress{.addressGroup = 268347418753327609134490422488782959401, .address = "10.10.52.0"}: +1
AddressGroupAddress{.addressGroup = 275747909460525591475300468029188304250, .address = "10.10.52.2"}: +1
AddressGroupAddress{.addressGroup = 284549977203716569020171603229041009923, .address = "10.10.52.5"}: +1
AddressGroupAddress{.addressGroup = 304827560790700988838046432387498807779, .address = "10.10.53.1"}: +1
AddressGroupAddress{.addressGroup = 311121656649555847997742035748626697827, .address = "10.10.53.3"}: +1
AddressGroupAddress{.addressGroup = 324097894006209167139251399443933610346, .address = "10.10.50.8"}: +1
AddressGroupAddress{.addressGroup = 325262480681412789558031267748123539468, .address = "10.10.52.6"}: +1
AddressGroupAddress{.addressGroup = 325904340575242165169053829298169979284, .address = "10.10.51.8"}: +1
AddressGroupDescr:
AddressGroupDescr{.name = "0630f84f-81d1-5ee2-b98a-611177d87fb2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-513]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-513")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "162513fa-bbef-51f4-af13-87b325aeb42c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-515]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-515")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "164d5376-d8e2-55b0-bc31-79ce70eb932c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-516]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-516")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "16e5c652-c9e8-5840-aed9-3048c557a20d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-517]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-517")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "1bb1441b-f958-5365-b979-a3d1c0327651", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-506]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-506")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "2ee6722d-49b3-5ed1-b72b-c5d7e14eee62", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-512]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-512")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "316ad574-20a6-5c63-a8c8-5129a4276436", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-535]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-535")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "3259be10-4eeb-5e63-882d-6c1fdc3935e7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-507]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-507")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "335c9086-858a-5057-b7a5-ccbef3c6f0c3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-509]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-509")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "39abce59-27dc-542a-bff0-cdf854ea6f39", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-529]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-529")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "4f1a1b17-e151-5f3d-81e2-42c643e1d50f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-530]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-530")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "4f7cb4d0-d914-57f3-9718-0792de483bfe", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-528]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-528")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "51895ad2-3676-5db7-82b8-f6fdc1074715", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-521]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-521")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "57a3a70c-faf6-5dc2-b2b2-ae3619af8b96", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-511]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-511")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "62950c52-ab11-56fa-a3c5-a2d0750f9a31", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-532]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-532")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "662c35da-e73c-5b83-8481-5885bccbdab4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-524]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-524")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "76f773ca-c0dd-5080-a26f-50cc5b3918dc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-519]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-519")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "77e761e1-e7bb-5871-8def-353def0cd43f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-505]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-505")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "84933a89-3630-51b2-bfcb-fd7ea143e381", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-504]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-504")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "8811b1f3-cbf6-5535-bb08-341f311c7f98", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-534]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-534")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "8b224324-cd65-5c1f-adce-34db0042f1f4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-527]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-527")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "9031b885-51d3-5614-97ac-172b40cc9095", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-510]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-510")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "98b668bd-3598-55af-ab42-f60f22d1f711", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-523]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-523")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "99285bff-06f9-5c5b-87a5-eb084e92b9de", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-514]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-514")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "c9e1d53a-be59-5b99-84d2-b4e181bd7329", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-520]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-520")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "cf731d97-846e-5fb2-8618-a320790d6d7a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-522]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-522")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "d6125509-8f88-551f-a8ba-b129aebca503", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-525]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-525")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "e553a718-aaa9-5335-9db0-3031f9c891e3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-531]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-531")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "ea0fd9fb-2cc4-5cbc-ad89-06eda65d0e63", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-533]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-533")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "f3d2fbe0-bc42-55de-8f18-ac99d710c16a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-508]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-508")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "f4b3466f-1dc8-5c98-b96b-07802eec780c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-526]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-526")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "f52ee491-f23f-5dad-b0f9-01c46c122194", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-518]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-518")], .matchExpressions = []}}}}: +1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 8229634560702391052776241933250494386, .node = "testNode-51"}: +1
AddressGroupSpan{.addressGroup = 29435536122020052906747503909488473132, .node = "testNode-51"}: +1
AddressGroupSpan{.addressGroup = 29644515621417994721099823014874944300, .node = "testNode-51"}: +1
AddressGroupSpan{.addressGroup = 30436074364170848456919083761972781581, .node = "testNode-51"}: +1
AddressGroupSpan{.addressGroup = 36809573850335376007923764512144127569, .node = "testNode-50"}: +1
AddressGroupSpan{.addressGroup = 62341031866340521150147631079796698722, .node = "testNode-51"}: +1
AddressGroupSpan{.addressGroup = 65686884614282637257819458160059442230, .node = "testNode-53"}: +1
AddressGroupSpan{.addressGroup = 66927369159555061421903542969454638567, .node = "testNode-50"}: +1
AddressGroupSpan{.addressGroup = 68271250420901333888645536827117596867, .node = "testNode-50"}: +1
AddressGroupSpan{.addressGroup = 76658063762570752824355365434268741433, .node = "testNode-52"}: +1
AddressGroupSpan{.addressGroup = 105144560902369795861541564827746555151, .node = "testNode-52"}: +1
AddressGroupSpan{.addressGroup = 105656523857835973839951521763213982718, .node = "testNode-52"}: +1
AddressGroupSpan{.addressGroup = 108380654399831200078489882286633731861, .node = "testNode-52"}: +1
AddressGroupSpan{.addressGroup = 116492568212039708824803804426363964310, .node = "testNode-51"}: +1
AddressGroupSpan{.addressGroup = 131038245757410914016332923977725876785, .node = "testNode-53"}: +1
AddressGroupSpan{.addressGroup = 135810808942849378079330740019976198836, .node = "testNode-52"}: +1
AddressGroupSpan{.addressGroup = 158133749367560097904430833580574841052, .node = "testNode-51"}: +1
AddressGroupSpan{.addressGroup = 159379537364512178039209337464128590911, .node = "testNode-50"}: +1
AddressGroupSpan{.addressGroup = 176222550332599395914515466248412980097, .node = "testNode-50"}: +1
AddressGroupSpan{.addressGroup = 180866885775410243234165659278417624984, .node = "testNode-53"}: +1
AddressGroupSpan{.addressGroup = 184940591344517749211680088744131752436, .node = "testNode-52"}: +1
AddressGroupSpan{.addressGroup = 191666996465132554203310298692592636053, .node = "testNode-50"}: +1
AddressGroupSpan{.addressGroup = 202989777748868913166239784758271932177, .node = "testNode-52"}: +1
AddressGroupSpan{.addressGroup = 203581441134047263832995090408603302366, .node = "testNode-51"}: +1
AddressGroupSpan{.addressGroup = 268347418753327609134490422488782959401, .node = "testNode-51"}: +1
AddressGroupSpan{.addressGroup = 275747909460525591475300468029188304250, .node = "testNode-52"}: +1
AddressGroupSpan{.addressGroup = 284549977203716569020171603229041009923, .node = "testNode-52"}: +1
AddressGroupSpan{.addressGroup = 304827560790700988838046432387498807779, .node = "testNode-53"}: +1
AddressGroupSpan{.addressGroup = 311121656649555847997742035748626697827, .node = "testNode-53"}: +1
AddressGroupSpan{.addressGroup = 324097894006209167139251399443933610346, .node = "testNode-50"}: +1
AddressGroupSpan{.addressGroup = 325262480681412789558031267748123539468, .node = "testNode-52"}: +1
AddressGroupSpan{.addressGroup = 325904340575242165169053829298169979284, .node = "testNode-51"}: +1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "0630f84f-81d1-5ee2-b98a-611177d87fb2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-513]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-513")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "162513fa-bbef-51f4-af13-87b325aeb42c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-515]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-515")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "164d5376-d8e2-55b0-bc31-79ce70eb932c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-516]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-516")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "16e5c652-c9e8-5840-aed9-3048c557a20d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-517]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-517")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "1bb1441b-f958-5365-b979-a3d1c0327651", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-506]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-506")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "2ee6722d-49b3-5ed1-b72b-c5d7e14eee62", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-512]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-512")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "3259be10-4eeb-5e63-882d-6c1fdc3935e7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-507]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-507")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "335c9086-858a-5057-b7a5-ccbef3c6f0c3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-509]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-509")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "39abce59-27dc-542a-bff0-cdf854ea6f39", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-529]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-529")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "4f1a1b17-e151-5f3d-81e2-42c643e1d50f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-530]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-530")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "4f7cb4d0-d914-57f3-9718-0792de483bfe", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-528]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-528")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "51895ad2-3676-5db7-82b8-f6fdc1074715", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-521]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-521")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "57a3a70c-faf6-5dc2-b2b2-ae3619af8b96", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-511]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-511")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "62950c52-ab11-56fa-a3c5-a2d0750f9a31", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-532]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-532")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "662c35da-e73c-5b83-8481-5885bccbdab4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-524]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-524")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "76f773ca-c0dd-5080-a26f-50cc5b3918dc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-519]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-519")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "77e761e1-e7bb-5871-8def-353def0cd43f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-505]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-505")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "84933a89-3630-51b2-bfcb-fd7ea143e381", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-504]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-504")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "8811b1f3-cbf6-5535-bb08-341f311c7f98", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-534]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-534")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "8b224324-cd65-5c1f-adce-34db0042f1f4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-527]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-527")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "9031b885-51d3-5614-97ac-172b40cc9095", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-510]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-510")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "96650dbe-ea2a-56ce-a24d-89a33aab9e53", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-503]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-503")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "98b668bd-3598-55af-ab42-f60f22d1f711", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-523]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-523")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "99285bff-06f9-5c5b-87a5-eb084e92b9de", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-514]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-514")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "c9e1d53a-be59-5b99-84d2-b4e181bd7329", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-520]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-520")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "cf731d97-846e-5fb2-8618-a320790d6d7a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-522]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-522")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "d6125509-8f88-551f-a8ba-b129aebca503", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-525]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-525")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "e553a718-aaa9-5335-9db0-3031f9c891e3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-531]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-531")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "ea0fd9fb-2cc4-5cbc-ad89-06eda65d0e63", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-533]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-533")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "f3d2fbe0-bc42-55de-8f18-ac99d710c16a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-508]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-508")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "f4b3466f-1dc8-5c98-b96b-07802eec780c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-526]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-526")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "f52ee491-f23f-5dad-b0f9-01c46c122194", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-518]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-518")], .matchExpressions = []}}}}: +1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 8229634560702391052776241933250494386, .node = "testNode-51", .pods = [k8spolicy.PodReference{.name = "testPod-513", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 29435536122020052906747503909488473132, .node = "testNode-51", .pods = [k8spolicy.PodReference{.name = "testPod-515", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 29644515621417994721099823014874944300, .node = "testNode-51", .pods = [k8spolicy.PodReference{.name = "testPod-516", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 30436074364170848456919083761972781581, .node = "testNode-51", .pods = [k8spolicy.PodReference{.name = "testPod-517", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 36809573850335376007923764512144127569, .node = "testNode-50", .pods = [k8spolicy.PodReference{.name = "testPod-506", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 62341031866340521150147631079796698722, .node = "testNode-51", .pods = [k8spolicy.PodReference{.name = "testPod-512", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 66927369159555061421903542969454638567, .node = "testNode-50", .pods = [k8spolicy.PodReference{.name = "testPod-507", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 68271250420901333888645536827117596867, .node = "testNode-50", .pods = [k8spolicy.PodReference{.name = "testPod-509", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 76658063762570752824355365434268741433, .node = "testNode-52", .pods = [k8spolicy.PodReference{.name = "testPod-529", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 105144560902369795861541564827746555151, .node = "testNode-53", .pods = [k8spolicy.PodReference{.name = "testPod-530", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 105656523857835973839951521763213982718, .node = "testNode-52", .pods = [k8spolicy.PodReference{.name = "testPod-528", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 108380654399831200078489882286633731861, .node = "testNode-52", .pods = [k8spolicy.PodReference{.name = "testPod-521", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 116492568212039708824803804426363964310, .node = "testNode-51", .pods = [k8spolicy.PodReference{.name = "testPod-511", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 131038245757410914016332923977725876785, .node = "testNode-53", .pods = [k8spolicy.PodReference{.name = "testPod-532", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 135810808942849378079330740019976198836, .node = "testNode-52", .pods = [k8spolicy.PodReference{.name = "testPod-524", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 158133749367560097904430833580574841052, .node = "testNode-51", .pods = [k8spolicy.PodReference{.name = "testPod-519", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 159379537364512178039209337464128590911, .node = "testNode-50", .pods = [k8spolicy.PodReference{.name = "testPod-505", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 176222550332599395914515466248412980097, .node = "testNode-50", .pods = [k8spolicy.PodReference{.name = "testPod-504", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 180866885775410243234165659278417624984, .node = "testNode-53", .pods = [k8spolicy.PodReference{.name = "testPod-534", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 184940591344517749211680088744131752436, .node = "testNode-52", .pods = [k8spolicy.PodReference{.name = "testPod-527", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 191666996465132554203310298692592636053, .node = "testNode-51", .pods = [k8spolicy.PodReference{.name = "testPod-510", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 199908900147595800825852814881020681811, .node = "testNode-50", .pods = [k8spolicy.PodReference{.name = "testPod-503", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 202989777748868913166239784758271932177, .node = "testNode-52", .pods = [k8spolicy.PodReference{.name = "testPod-523", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 203581441134047263832995090408603302366, .node = "testNode-51", .pods = [k8spolicy.PodReference{.name = "testPod-514", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 268347418753327609134490422488782959401, .node = "testNode-52", .pods = [k8spolicy.PodReference{.name = "testPod-520", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 275747909460525591475300468029188304250, .node = "testNode-52", .pods = [k8spolicy.PodReference{.name = "testPod-522", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 284549977203716569020171603229041009923, .node = "testNode-52", .pods = [k8spolicy.PodReference{.name = "testPod-525", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 304827560790700988838046432387498807779, .node = "testNode-53", .pods = [k8spolicy.PodReference{.name = "testPod-531", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 311121656649555847997742035748626697827, .node = "testNode-53", .pods = [k8spolicy.PodReference{.name = "testPod-533", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 324097894006209167139251399443933610346, .node = "testNode-50", .pods = [k8spolicy.PodReference{.name = "testPod-508", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 325262480681412789558031267748123539468, .node = "testNode-52", .pods = [k8spolicy.PodReference{.name = "testPod-526", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 325904340575242165169053829298169979284, .node = "testNode-51", .pods = [k8spolicy.PodReference{.name = "testPod-518", .namespace = "testNamespace"}]}: +1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 8229634560702391052776241933250494386, .span = "testNode-51"}: +1
AppliedToGroupSpan{.appliedToGroup = 29435536122020052906747503909488473132, .span = "testNode-51"}: +1
AppliedToGroupSpan{.appliedToGroup = 29644515621417994721099823014874944300, .span = "testNode-51"}: +1
AppliedToGroupSpan{.appliedToGroup = 30436074364170848456919083761972781581, .span = "testNode-51"}: +1
AppliedToGroupSpan{.appliedToGroup = 36809573850335376007923764512144127569, .span = "testNode-50"}: +1
AppliedToGroupSpan{.appliedToGroup = 62341031866340521150147631079796698722, .span = "testNode-51"}: +1
AppliedToGroupSpan{.appliedToGroup = 66927369159555061421903542969454638567, .span = "testNode-50"}: +1
AppliedToGroupSpan{.appliedToGroup = 68271250420901333888645536827117596867, .span = "testNode-50"}: +1
AppliedToGroupSpan{.appliedToGroup = 76658063762570752824355365434268741433, .span = "testNode-52"}: +1
AppliedToGroupSpan{.appliedToGroup = 105144560902369795861541564827746555151, .span = "testNode-53"}: +1
AppliedToGroupSpan{.appliedToGroup = 105656523857835973839951521763213982718, .span = "testNode-52"}: +1
AppliedToGroupSpan{.appliedToGroup = 108380654399831200078489882286633731861, .span = "testNode-52"}: +1
AppliedToGroupSpan{.appliedToGroup = 116492568212039708824803804426363964310, .span = "testNode-51"}: +1
AppliedToGroupSpan{.appliedToGroup = 131038245757410914016332923977725876785, .span = "testNode-53"}: +1
AppliedToGroupSpan{.appliedToGroup = 135810808942849378079330740019976198836, .span = "testNode-52"}: +1
AppliedToGroupSpan{.appliedToGroup = 158133749367560097904430833580574841052, .span = "testNode-51"}: +1
AppliedToGroupSpan{.appliedToGroup = 159379537364512178039209337464128590911, .span = "testNode-50"}: +1
AppliedToGroupSpan{.appliedToGroup = 176222550332599395914515466248412980097, .span = "testNode-50"}: +1
AppliedToGroupSpan{.appliedToGroup = 180866885775410243234165659278417624984, .span = "testNode-53"}: +1
AppliedToGroupSpan{.appliedToGroup = 184940591344517749211680088744131752436, .span = "testNode-52"}: +1
AppliedToGroupSpan{.appliedToGroup = 191666996465132554203310298692592636053, .span = "testNode-51"}: +1
AppliedToGroupSpan{.appliedToGroup = 199908900147595800825852814881020681811, .span = "testNode-50"}: +1
AppliedToGroupSpan{.appliedToGroup = 202989777748868913166239784758271932177, .span = "testNode-52"}: +1
AppliedToGroupSpan{.appliedToGroup = 203581441134047263832995090408603302366, .span = "testNode-51"}: +1
AppliedToGroupSpan{.appliedToGroup = 268347418753327609134490422488782959401, .span = "testNode-52"}: +1
AppliedToGroupSpan{.appliedToGroup = 275747909460525591475300468029188304250, .span = "testNode-52"}: +1
AppliedToGroupSpan{.appliedToGroup = 284549977203716569020171603229041009923, .span = "testNode-52"}: +1
AppliedToGroupSpan{.appliedToGroup = 304827560790700988838046432387498807779, .span = "testNode-53"}: +1
AppliedToGroupSpan{.appliedToGroup = 311121656649555847997742035748626697827, .span = "testNode-53"}: +1
AppliedToGroupSpan{.appliedToGroup = 324097894006209167139251399443933610346, .span = "testNode-50"}: +1
AppliedToGroupSpan{.appliedToGroup = 325262480681412789558031267748123539468, .span = "testNode-52"}: +1
AppliedToGroupSpan{.appliedToGroup = 325904340575242165169053829298169979284, .span = "testNode-51"}: +1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-503"}, .name = "testNP-503", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [176222550332599395914515466248412980097], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [199908900147595800825852814881020681811]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-504"}, .name = "testNP-504", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [159379537364512178039209337464128590911], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [176222550332599395914515466248412980097]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-505"}, .name = "testNP-505", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [36809573850335376007923764512144127569], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [159379537364512178039209337464128590911]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-506"}, .name = "testNP-506", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [66927369159555061421903542969454638567], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [36809573850335376007923764512144127569]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-507"}, .name = "testNP-507", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [324097894006209167139251399443933610346], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [66927369159555061421903542969454638567]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-508"}, .name = "testNP-508", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [68271250420901333888645536827117596867], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [324097894006209167139251399443933610346]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-509"}, .name = "testNP-509", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [191666996465132554203310298692592636053], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [68271250420901333888645536827117596867]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-510"}, .name = "testNP-510", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [116492568212039708824803804426363964310], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [191666996465132554203310298692592636053]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-511"}, .name = "testNP-511", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [62341031866340521150147631079796698722], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [116492568212039708824803804426363964310]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-512"}, .name = "testNP-512", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [8229634560702391052776241933250494386], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [62341031866340521150147631079796698722]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-513"}, .name = "testNP-513", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [203581441134047263832995090408603302366], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [8229634560702391052776241933250494386]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-514"}, .name = "testNP-514", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [29435536122020052906747503909488473132], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [203581441134047263832995090408603302366]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-515"}, .name = "testNP-515", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [29644515621417994721099823014874944300], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [29435536122020052906747503909488473132]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-516"}, .name = "testNP-516", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [30436074364170848456919083761972781581], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [29644515621417994721099823014874944300]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-517"}, .name = "testNP-517", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [325904340575242165169053829298169979284], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [30436074364170848456919083761972781581]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-518"}, .name = "testNP-518", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [158133749367560097904430833580574841052], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [325904340575242165169053829298169979284]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-519"}, .name = "testNP-519", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [268347418753327609134490422488782959401], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [158133749367560097904430833580574841052]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-520"}, .name = "testNP-520", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [108380654399831200078489882286633731861], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [268347418753327609134490422488782959401]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-521"}, .name = "testNP-521", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [275747909460525591475300468029188304250], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [108380654399831200078489882286633731861]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-522"}, .name = "testNP-522", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [202989777748868913166239784758271932177], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [275747909460525591475300468029188304250]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-523"}, .name = "testNP-523", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [135810808942849378079330740019976198836], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [202989777748868913166239784758271932177]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-524"}, .name = "testNP-524", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [284549977203716569020171603229041009923], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [135810808942849378079330740019976198836]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-525"}, .name = "testNP-525", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [325262480681412789558031267748123539468], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [284549977203716569020171603229041009923]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-526"}, .name = "testNP-526", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [184940591344517749211680088744131752436], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [325262480681412789558031267748123539468]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-527"}, .name = "testNP-527", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [105656523857835973839951521763213982718], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [184940591344517749211680088744131752436]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-528"}, .name = "testNP-528", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [76658063762570752824355365434268741433], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [105656523857835973839951521763213982718]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-529"}, .name = "testNP-529", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [105144560902369795861541564827746555151], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [76658063762570752824355365434268741433]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-530"}, .name = "testNP-530", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [304827560790700988838046432387498807779], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [105144560902369795861541564827746555151]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-531"}, .name = "testNP-531", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [131038245757410914016332923977725876785], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [304827560790700988838046432387498807779]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-532"}, .name = "testNP-532", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [311121656649555847997742035748626697827], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [131038245757410914016332923977725876785]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-533"}, .name = "testNP-533", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [180866885775410243234165659278417624984], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [311121656649555847997742035748626697827]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-534"}, .name = "testNP-534", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [65686884614282637257819458160059442230], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [180866885775410243234165659278417624984]}: +1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-503", .policy = k8spolicy.UID{.uid = "testNP-503"}, .node = "testNode-50"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-504", .policy = k8spolicy.UID{.uid = "testNP-504"}, .node = "testNode-50"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-505", .policy = k8spolicy.UID{.uid = "testNP-505"}, .node = "testNode-50"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-506", .policy = k8spolicy.UID{.uid = "testNP-506"}, .node = "testNode-50"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-507", .policy = k8spolicy.UID{.uid = "testNP-507"}, .node = "testNode-50"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-508", .policy = k8spolicy.UID{.uid = "testNP-508"}, .node = "testNode-50"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-509", .policy = k8spolicy.UID{.uid = "testNP-509"}, .node = "testNode-50"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-510", .policy = k8spolicy.UID{.uid = "testNP-510"}, .node = "testNode-51"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-511", .policy = k8spolicy.UID{.uid = "testNP-511"}, .node = "testNode-51"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-512", .policy = k8spolicy.UID{.uid = "testNP-512"}, .node = "testNode-51"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-513", .policy = k8spolicy.UID{.uid = "testNP-513"}, .node = "testNode-51"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-514", .policy = k8spolicy.UID{.uid = "testNP-514"}, .node = "testNode-51"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-515", .policy = k8spolicy.UID{.uid = "testNP-515"}, .node = "testNode-51"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-516", .policy = k8spolicy.UID{.uid = "testNP-516"}, .node = "testNode-51"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-517", .policy = k8spolicy.UID{.uid = "testNP-517"}, .node = "testNode-51"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-518", .policy = k8spolicy.UID{.uid = "testNP-518"}, .node = "testNode-51"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-519", .policy = k8spolicy.UID{.uid = "testNP-519"}, .node = "testNode-51"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-520", .policy = k8spolicy.UID{.uid = "testNP-520"}, .node = "testNode-52"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-521", .policy = k8spolicy.UID{.uid = "testNP-521"}, .node = "testNode-52"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-522", .policy = k8spolicy.UID{.uid = "testNP-522"}, .node = "testNode-52"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-523", .policy = k8spolicy.UID{.uid = "testNP-523"}, .node = "testNode-52"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-524", .policy = k8spolicy.UID{.uid = "testNP-524"}, .node = "testNode-52"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-525", .policy = k8spolicy.UID{.uid = "testNP-525"}, .node = "testNode-52"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-526", .policy = k8spolicy.UID{.uid = "testNP-526"}, .node = "testNode-52"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-527", .policy = k8spolicy.UID{.uid = "testNP-527"}, .node = "testNode-52"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-528", .policy = k8spolicy.UID{.uid = "testNP-528"}, .node = "testNode-52"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-529", .policy = k8spolicy.UID{.uid = "testNP-529"}, .node = "testNode-52"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-530", .policy = k8spolicy.UID{.uid = "testNP-530"}, .node = "testNode-53"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-531", .policy = k8spolicy.UID{.uid = "testNP-531"}, .node = "testNode-53"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-532", .policy = k8spolicy.UID{.uid = "testNP-532"}, .node = "testNode-53"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-533", .policy = k8spolicy.UID{.uid = "testNP-533"}, .node = "testNode-53"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-534", .policy = k8spolicy.UID{.uid = "testNP-534"}, .node = "testNode-53"}: +1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 3698565567761284773674183133768389876, .address = "10.10.55.0"}: +1
AddressGroupAddress{.addressGroup = 14232468071222614535348801982135914749, .address = "10.10.54.3"}: +1
AddressGroupAddress{.addressGroup = 61049404469723358743205219098306072777, .address = "10.10.56.0"}: +1
AddressGroupAddress{.addressGroup = 85130877478412951017863325290158019161, .address = "10.10.54.5"}: +1
AddressGroupAddress{.addressGroup = 97087136540025041047262336400861675664, .address = "10.10.55.8"}: +1
AddressGroupAddress{.addressGroup = 115673809356679543076475782246467850655, .address = "10.10.55.4"}: +1
AddressGroupAddress{.addressGroup = 117676483127412805788601290616644530698, .address = "10.10.53.9"}: +1
AddressGroupAddress{.addressGroup = 118191558916946867538941719763234107815, .address = "10.10.55.7"}: +1
AddressGroupAddress{.addressGroup = 133493702797897068806724389960223829245, .address = "10.10.56.5"}: +1
AddressGroupAddress{.addressGroup = 144416684887245579966085852599866746411, .address = "10.10.56.4"}: +1
AddressGroupAddress{.addressGroup = 146901809052678293612234659248706662050, .address = "10.10.54.6"}: +1
AddressGroupAddress{.addressGroup = 147119339619296210999174965238639137849, .address = "10.10.55.6"}: +1
AddressGroupAddress{.addressGroup = 173584275962899884541534295319853893338, .address = "10.10.55.5"}: +1
AddressGroupAddress{.addressGroup = 204617623759565531733154411673712046107, .address = "10.10.56.2"}: +1
AddressGroupAddress{.addressGroup = 206404755120438934982652359893890714737, .address = "10.10.53.8"}: +1
AddressGroupAddress{.addressGroup = 207733574824023921290409144557354584257, .address = "10.10.55.2"}: +1
AddressGroupAddress{.addressGroup = 213850926142716301545939105494148269956, .address = "10.10.54.8"}: +1
AddressGroupAddress{.addressGroup = 216721347533732403703816859549927070651, .address = "10.10.56.3"}: +1
AddressGroupAddress{.addressGroup = 218579834805490671634088408900231169156, .address = "10.10.54.4"}: +1
AddressGroupAddress{.addressGroup = 231211642914871539184945702446472729908, .address = "10.10.55.3"}: +1
AddressGroupAddress{.addressGroup = 259339577732754410428427643600155990530, .address = "10.10.56.1"}: +1
AddressGroupAddress{.addressGroup = 259572815831806965443620879555306339820, .address = "10.10.55.9"}: +1
AddressGroupAddress{.addressGroup = 265577046745515205117160323215846862496, .address = "10.10.54.1"}: +1
AddressGroupAddress{.addressGroup = 274415759412709511005621901501881015976, .address = "10.10.54.0"}: +1
AddressGroupAddress{.addressGroup = 284379885600608561712312307129480906026, .address = "10.10.54.9"}: +1
AddressGroupAddress{.addressGroup = 291721609273874322207010668059989651630, .address = "10.10.54.7"}: +1
AddressGroupAddress{.addressGroup = 298227549455423226500089697378161435076, .address = "10.10.53.7"}: +1
AddressGroupAddress{.addressGroup = 298227591142740907393074763131413360810, .address = "10.10.55.1"}: +1
AddressGroupAddress{.addressGroup = 309275296280010695383732444637918130861, .address = "10.10.56.7"}: +1
AddressGroupAddress{.addressGroup = 314967130113970593020714715183317001607, .address = "10.10.53.6"}: +1
AddressGroupAddress{.addressGroup = 328941688096963611315068354625204495198, .address = "10.10.54.2"}: +1
AddressGroupAddress{.addressGroup = 332792167385303851766172650950764032961, .address = "10.10.56.6"}: +1
AddressGroupDescr:
AddressGroupDescr{.name = "02c8515c-8244-50ed-9651-03b5154714f4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-550]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-550")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "0ab512da-56cf-54a2-8275-36b7bde5d0fd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-543]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-543")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "2dedb007-922f-5045-9aaa-d7e8a1a4d0c9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-560]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-560")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "400b9c51-1e3a-5f72-a91c-28ccab7ed259", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-545]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-545")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "490a4d66-a915-596d-a7ae-7ed38cffc090", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-558]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-558")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "5705f71f-5a00-541c-a258-a72e7d37519f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-554]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-554")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "5887aa90-0cc3-59bb-ab3c-6d2a8ccf720a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-539]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-539")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "58eaddc2-81dd-5ebd-8992-1649ef90b1a7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-557]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-557")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "646df3b3-aff0-525e-a824-9731c2582cfd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-565]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-565")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "6ca5a44c-4e85-5f8f-b3c5-fc822a51e62b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-564]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-564")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "6e844261-161e-5648-8581-1a99a89baea2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-546]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-546")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "6eae2776-d76e-5a67-812e-d867d79c9439", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-556]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-556")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "82971d91-1775-5306-9f41-a64faadf86da", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-555]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-555")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "99efebbe-7346-5db8-a34f-cc605cfbb01b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-562]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-562")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "9b481c1f-75ae-5a8f-a340-8a8d48694c71", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-538]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-538")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "9c4807fe-166e-50bd-9d74-a161e6cf88c1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-552]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-552")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "a0e230b2-de64-59a0-bd7b-24d543574784", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-548]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-548")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "a30b0366-56be-5cfe-b533-66bb0e45dbbb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-563]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-563")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "a470f1e5-9041-5f5e-b479-f8ba6a4b0484", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-544]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-544")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "adf1be1e-d6e3-5749-bb20-4c2ef2f99534", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-553]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-553")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "c31afc60-cc5f-544f-9901-094ce7345a02", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-561]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-561")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "c347e7e7-7c4c-5356-a46a-409517823dec", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-559]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-559")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "c7cc4758-0683-5510-a151-4927dba0eea0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-541]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-541")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "ce728d86-0919-52c1-aff3-0596a43a5ea8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-540]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-540")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "d5f192df-b467-5316-987b-776fc448052a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-549]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-549")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "db7789cc-3aa6-5c59-8197-c988f73c30ae", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-547]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-547")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "e05c896a-0105-56e7-b8b4-8d9a6228a1c4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-537]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-537")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "e05c8b78-2c02-507f-9968-65798f9470aa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-551]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-551")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "e8ac4162-f9a2-5e4d-8f31-6a4959bbf2ad", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-567]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-567")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "ecf47676-066f-5d50-b4c2-dfaedfa02587", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-536]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-536")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "f777dd5d-64c1-5510-afc9-350654fda35e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-542]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-542")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "fa5d70a6-9fe1-5bc3-ab15-43cc208473c1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-566]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-566")], .matchExpressions = []}}}}: +1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 3698565567761284773674183133768389876, .node = "testNode-54"}: +1
AddressGroupSpan{.addressGroup = 14232468071222614535348801982135914749, .node = "testNode-54"}: +1
AddressGroupSpan{.addressGroup = 61049404469723358743205219098306072777, .node = "testNode-55"}: +1
AddressGroupSpan{.addressGroup = 85130877478412951017863325290158019161, .node = "testNode-54"}: +1
AddressGroupSpan{.addressGroup = 97087136540025041047262336400861675664, .node = "testNode-55"}: +1
AddressGroupSpan{.addressGroup = 115673809356679543076475782246467850655, .node = "testNode-55"}: +1
AddressGroupSpan{.addressGroup = 117676483127412805788601290616644530698, .node = "testNode-53"}: +1
AddressGroupSpan{.addressGroup = 118191558916946867538941719763234107815, .node = "testNode-55"}: +1
AddressGroupSpan{.addressGroup = 133493702797897068806724389960223829245, .node = "testNode-56"}: +1
AddressGroupSpan{.addressGroup = 144416684887245579966085852599866746411, .node = "testNode-56"}: +1
AddressGroupSpan{.addressGroup = 146901809052678293612234659248706662050, .node = "testNode-54"}: +1
AddressGroupSpan{.addressGroup = 147119339619296210999174965238639137849, .node = "testNode-55"}: +1
AddressGroupSpan{.addressGroup = 173584275962899884541534295319853893338, .node = "testNode-55"}: +1
AddressGroupSpan{.addressGroup = 204617623759565531733154411673712046107, .node = "testNode-56"}: +1
AddressGroupSpan{.addressGroup = 206404755120438934982652359893890714737, .node = "testNode-53"}: +1
AddressGroupSpan{.addressGroup = 207733574824023921290409144557354584257, .node = "testNode-55"}: +1
AddressGroupSpan{.addressGroup = 213850926142716301545939105494148269956, .node = "testNode-54"}: +1
AddressGroupSpan{.addressGroup = 216721347533732403703816859549927070651, .node = "testNode-56"}: +1
AddressGroupSpan{.addressGroup = 218579834805490671634088408900231169156, .node = "testNode-54"}: +1
AddressGroupSpan{.addressGroup = 231211642914871539184945702446472729908, .node = "testNode-55"}: +1
AddressGroupSpan{.addressGroup = 259339577732754410428427643600155990530, .node = "testNode-56"}: +1
AddressGroupSpan{.addressGroup = 259572815831806965443620879555306339820, .node = "testNode-55"}: +1
AddressGroupSpan{.addressGroup = 265577046745515205117160323215846862496, .node = "testNode-54"}: +1
AddressGroupSpan{.addressGroup = 274415759412709511005621901501881015976, .node = "testNode-53"}: +1
AddressGroupSpan{.addressGroup = 284379885600608561712312307129480906026, .node = "testNode-54"}: +1
AddressGroupSpan{.addressGroup = 291721609273874322207010668059989651630, .node = "testNode-54"}: +1
AddressGroupSpan{.addressGroup = 298227549455423226500089697378161435076, .node = "testNode-53"}: +1
AddressGroupSpan{.addressGroup = 298227591142740907393074763131413360810, .node = "testNode-55"}: +1
AddressGroupSpan{.addressGroup = 309275296280010695383732444637918130861, .node = "testNode-56"}: +1
AddressGroupSpan{.addressGroup = 314967130113970593020714715183317001607, .node = "testNode-53"}: +1
AddressGroupSpan{.addressGroup = 328941688096963611315068354625204495198, .node = "testNode-54"}: +1
AddressGroupSpan{.addressGroup = 332792167385303851766172650950764032961, .node = "testNode-56"}: +1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "02c8515c-8244-50ed-9651-03b5154714f4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-550]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-550")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "0ab512da-56cf-54a2-8275-36b7bde5d0fd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-543]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-543")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "2dedb007-922f-5045-9aaa-d7e8a1a4d0c9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-560]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-560")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "316ad574-20a6-5c63-a8c8-5129a4276436", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-535]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-535")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "400b9c51-1e3a-5f72-a91c-28ccab7ed259", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-545]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-545")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "490a4d66-a915-596d-a7ae-7ed38cffc090", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-558]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-558")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "5705f71f-5a00-541c-a258-a72e7d37519f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-554]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-554")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "5887aa90-0cc3-59bb-ab3c-6d2a8ccf720a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-539]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-539")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "58eaddc2-81dd-5ebd-8992-1649ef90b1a7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-557]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-557")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "646df3b3-aff0-525e-a824-9731c2582cfd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-565]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-565")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "6ca5a44c-4e85-5f8f-b3c5-fc822a51e62b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-564]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-564")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "6e844261-161e-5648-8581-1a99a89baea2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-546]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-546")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "6eae2776-d76e-5a67-812e-d867d79c9439", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-556]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-556")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "82971d91-1775-5306-9f41-a64faadf86da", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-555]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-555")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "99efebbe-7346-5db8-a34f-cc605cfbb01b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-562]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-562")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "9b481c1f-75ae-5a8f-a340-8a8d48694c71", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-538]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-538")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "9c4807fe-166e-50bd-9d74-a161e6cf88c1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-552]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-552")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "a0e230b2-de64-59a0-bd7b-24d543574784", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-548]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-548")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "a30b0366-56be-5cfe-b533-66bb0e45dbbb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-563]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-563")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "a470f1e5-9041-5f5e-b479-f8ba6a4b0484", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-544]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-544")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "adf1be1e-d6e3-5749-bb20-4c2ef2f99534", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-553]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-553")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "c31afc60-cc5f-544f-9901-094ce7345a02", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-561]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-561")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "c347e7e7-7c4c-5356-a46a-409517823dec", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-559]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-559")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "c7cc4758-0683-5510-a151-4927dba0eea0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-541]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-541")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "ce728d86-0919-52c1-aff3-0596a43a5ea8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-540]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-540")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "d5f192df-b467-5316-987b-776fc448052a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-549]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-549")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "db7789cc-3aa6-5c59-8197-c988f73c30ae", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-547]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-547")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "e05c896a-0105-56e7-b8b4-8d9a6228a1c4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-537]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-537")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "e05c8b78-2c02-507f-9968-65798f9470aa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-551]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-551")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "ecf47676-066f-5d50-b4c2-dfaedfa02587", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-536]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-536")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "f777dd5d-64c1-5510-afc9-350654fda35e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-542]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-542")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "fa5d70a6-9fe1-5bc3-ab15-43cc208473c1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-566]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-566")], .matchExpressions = []}}}}: +1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 3698565567761284773674183133768389876, .node = "testNode-55", .pods = [k8spolicy.PodReference{.name = "testPod-550", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 14232468071222614535348801982135914749, .node = "testNode-54", .pods = [k8spolicy.PodReference{.name = "testPod-543", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 61049404469723358743205219098306072777, .node = "testNode-56", .pods = [k8spolicy.PodReference{.name = "testPod-560", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 65686884614282637257819458160059442230, .node = "testNode-53", .pods = [k8spolicy.PodReference{.name = "testPod-535", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 85130877478412951017863325290158019161, .node = "testNode-54", .pods = [k8spolicy.PodReference{.name = "testPod-545", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 97087136540025041047262336400861675664, .node = "testNode-55", .pods = [k8spolicy.PodReference{.name = "testPod-558", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 115673809356679543076475782246467850655, .node = "testNode-55", .pods = [k8spolicy.PodReference{.name = "testPod-554", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 117676483127412805788601290616644530698, .node = "testNode-53", .pods = [k8spolicy.PodReference{.name = "testPod-539", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 118191558916946867538941719763234107815, .node = "testNode-55", .pods = [k8spolicy.PodReference{.name = "testPod-557", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 133493702797897068806724389960223829245, .node = "testNode-56", .pods = [k8spolicy.PodReference{.name = "testPod-565", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 144416684887245579966085852599866746411, .node = "testNode-56", .pods = [k8spolicy.PodReference{.name = "testPod-564", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 146901809052678293612234659248706662050, .node = "testNode-54", .pods = [k8spolicy.PodReference{.name = "testPod-546", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 147119339619296210999174965238639137849, .node = "testNode-55", .pods = [k8spolicy.PodReference{.name = "testPod-556", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 173584275962899884541534295319853893338, .node = "testNode-55", .pods = [k8spolicy.PodReference{.name = "testPod-555", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 204617623759565531733154411673712046107, .node = "testNode-56", .pods = [k8spolicy.PodReference{.name = "testPod-562", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 206404755120438934982652359893890714737, .node = "testNode-53", .pods = [k8spolicy.PodReference{.name = "testPod-538", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 207733574824023921290409144557354584257, .node = "testNode-55", .pods = [k8spolicy.PodReference{.name = "testPod-552", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 213850926142716301545939105494148269956, .node = "testNode-54", .pods = [k8spolicy.PodReference{.name = "testPod-548", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 216721347533732403703816859549927070651, .node = "testNode-56", .pods = [k8spolicy.PodReference{.name = "testPod-563", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 218579834805490671634088408900231169156, .node = "testNode-54", .pods = [k8spolicy.PodReference{.name = "testPod-544", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 231211642914871539184945702446472729908, .node = "testNode-55", .pods = [k8spolicy.PodReference{.name = "testPod-553", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 259339577732754410428427643600155990530, .node = "testNode-56", .pods = [k8spolicy.PodReference{.name = "testPod-561", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 259572815831806965443620879555306339820, .node = "testNode-55", .pods = [k8spolicy.PodReference{.name = "testPod-559", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 265577046745515205117160323215846862496, .node = "testNode-54", .pods = [k8spolicy.PodReference{.name = "testPod-541", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 274415759412709511005621901501881015976, .node = "testNode-54", .pods = [k8spolicy.PodReference{.name = "testPod-540", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 284379885600608561712312307129480906026, .node = "testNode-54", .pods = [k8spolicy.PodReference{.name = "testPod-549", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 291721609273874322207010668059989651630, .node = "testNode-54", .pods = [k8spolicy.PodReference{.name = "testPod-547", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 298227549455423226500089697378161435076, .node = "testNode-53", .pods = [k8spolicy.PodReference{.name = "testPod-537", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 298227591142740907393074763131413360810, .node = "testNode-55", .pods = [k8spolicy.PodReference{.name = "testPod-551", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 314967130113970593020714715183317001607, .node = "testNode-53", .pods = [k8spolicy.PodReference{.name = "testPod-536", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 328941688096963611315068354625204495198, .node = "testNode-54", .pods = [k8spolicy.PodReference{.name = "testPod-542", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 332792167385303851766172650950764032961, .node = "testNode-56", .pods = [k8spolicy.PodReference{.name = "testPod-566", .namespace = "testNamespace"}]}: +1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 3698565567761284773674183133768389876, .span = "testNode-55"}: +1
AppliedToGroupSpan{.appliedToGroup = 14232468071222614535348801982135914749, .span = "testNode-54"}: +1
AppliedToGroupSpan{.appliedToGroup = 61049404469723358743205219098306072777, .span = "testNode-56"}: +1
AppliedToGroupSpan{.appliedToGroup = 65686884614282637257819458160059442230, .span = "testNode-53"}: +1
AppliedToGroupSpan{.appliedToGroup = 85130877478412951017863325290158019161, .span = "testNode-54"}: +1
AppliedToGroupSpan{.appliedToGroup = 97087136540025041047262336400861675664, .span = "testNode-55"}: +1
AppliedToGroupSpan{.appliedToGroup = 115673809356679543076475782246467850655, .span = "testNode-55"}: +1
AppliedToGroupSpan{.appliedToGroup = 117676483127412805788601290616644530698, .span = "testNode-53"}: +1
AppliedToGroupSpan{.appliedToGroup = 118191558916946867538941719763234107815, .span = "testNode-55"}: +1
AppliedToGroupSpan{.appliedToGroup = 133493702797897068806724389960223829245, .span = "testNode-56"}: +1
AppliedToGroupSpan{.appliedToGroup = 144416684887245579966085852599866746411, .span = "testNode-56"}: +1
AppliedToGroupSpan{.appliedToGroup = 146901809052678293612234659248706662050, .span = "testNode-54"}: +1
AppliedToGroupSpan{.appliedToGroup = 147119339619296210999174965238639137849, .span = "testNode-55"}: +1
AppliedToGroupSpan{.appliedToGroup = 173584275962899884541534295319853893338, .span = "testNode-55"}: +1
AppliedToGroupSpan{.appliedToGroup = 204617623759565531733154411673712046107, .span = "testNode-56"}: +1
AppliedToGroupSpan{.appliedToGroup = 206404755120438934982652359893890714737, .span = "testNode-53"}: +1
AppliedToGroupSpan{.appliedToGroup = 207733574824023921290409144557354584257, .span = "testNode-55"}: +1
AppliedToGroupSpan{.appliedToGroup = 213850926142716301545939105494148269956, .span = "testNode-54"}: +1
AppliedToGroupSpan{.appliedToGroup = 216721347533732403703816859549927070651, .span = "testNode-56"}: +1
AppliedToGroupSpan{.appliedToGroup = 218579834805490671634088408900231169156, .span = "testNode-54"}: +1
AppliedToGroupSpan{.appliedToGroup = 231211642914871539184945702446472729908, .span = "testNode-55"}: +1
AppliedToGroupSpan{.appliedToGroup = 259339577732754410428427643600155990530, .span = "testNode-56"}: +1
AppliedToGroupSpan{.appliedToGroup = 259572815831806965443620879555306339820, .span = "testNode-55"}: +1
AppliedToGroupSpan{.appliedToGroup = 265577046745515205117160323215846862496, .span = "testNode-54"}: +1
AppliedToGroupSpan{.appliedToGroup = 274415759412709511005621901501881015976, .span = "testNode-54"}: +1
AppliedToGroupSpan{.appliedToGroup = 284379885600608561712312307129480906026, .span = "testNode-54"}: +1
AppliedToGroupSpan{.appliedToGroup = 291721609273874322207010668059989651630, .span = "testNode-54"}: +1
AppliedToGroupSpan{.appliedToGroup = 298227549455423226500089697378161435076, .span = "testNode-53"}: +1
AppliedToGroupSpan{.appliedToGroup = 298227591142740907393074763131413360810, .span = "testNode-55"}: +1
AppliedToGroupSpan{.appliedToGroup = 314967130113970593020714715183317001607, .span = "testNode-53"}: +1
AppliedToGroupSpan{.appliedToGroup = 328941688096963611315068354625204495198, .span = "testNode-54"}: +1
AppliedToGroupSpan{.appliedToGroup = 332792167385303851766172650950764032961, .span = "testNode-56"}: +1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-535"}, .name = "testNP-535", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [314967130113970593020714715183317001607], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [65686884614282637257819458160059442230]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-536"}, .name = "testNP-536", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [298227549455423226500089697378161435076], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [314967130113970593020714715183317001607]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-537"}, .name = "testNP-537", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [206404755120438934982652359893890714737], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [298227549455423226500089697378161435076]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-538"}, .name = "testNP-538", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [117676483127412805788601290616644530698], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [206404755120438934982652359893890714737]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-539"}, .name = "testNP-539", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [274415759412709511005621901501881015976], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [117676483127412805788601290616644530698]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-540"}, .name = "testNP-540", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [265577046745515205117160323215846862496], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [274415759412709511005621901501881015976]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-541"}, .name = "testNP-541", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [328941688096963611315068354625204495198], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [265577046745515205117160323215846862496]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-542"}, .name = "testNP-542", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [14232468071222614535348801982135914749], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [328941688096963611315068354625204495198]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-543"}, .name = "testNP-543", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [218579834805490671634088408900231169156], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [14232468071222614535348801982135914749]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-544"}, .name = "testNP-544", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [85130877478412951017863325290158019161], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [218579834805490671634088408900231169156]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-545"}, .name = "testNP-545", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [146901809052678293612234659248706662050], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [85130877478412951017863325290158019161]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-546"}, .name = "testNP-546", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [291721609273874322207010668059989651630], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [146901809052678293612234659248706662050]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-547"}, .name = "testNP-547", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [213850926142716301545939105494148269956], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [291721609273874322207010668059989651630]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-548"}, .name = "testNP-548", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [284379885600608561712312307129480906026], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [213850926142716301545939105494148269956]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-549"}, .name = "testNP-549", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [3698565567761284773674183133768389876], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [284379885600608561712312307129480906026]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-550"}, .name = "testNP-550", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [298227591142740907393074763131413360810], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [3698565567761284773674183133768389876]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-551"}, .name = "testNP-551", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [207733574824023921290409144557354584257], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [298227591142740907393074763131413360810]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-552"}, .name = "testNP-552", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [231211642914871539184945702446472729908], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [207733574824023921290409144557354584257]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-553"}, .name = "testNP-553", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [115673809356679543076475782246467850655], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [231211642914871539184945702446472729908]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-554"}, .name = "testNP-554", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [173584275962899884541534295319853893338], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [115673809356679543076475782246467850655]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-555"}, .name = "testNP-555", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [147119339619296210999174965238639137849], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [173584275962899884541534295319853893338]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-556"}, .name = "testNP-556", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [118191558916946867538941719763234107815], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [147119339619296210999174965238639137849]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-557"}, .name = "testNP-557", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [97087136540025041047262336400861675664], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [118191558916946867538941719763234107815]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-558"}, .name = "testNP-558", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [259572815831806965443620879555306339820], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [97087136540025041047262336400861675664]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-559"}, .name = "testNP-559", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [61049404469723358743205219098306072777], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [259572815831806965443620879555306339820]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-560"}, .name = "testNP-560", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [259339577732754410428427643600155990530], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [61049404469723358743205219098306072777]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-561"}, .name = "testNP-561", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [204617623759565531733154411673712046107], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [259339577732754410428427643600155990530]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-562"}, .name = "testNP-562", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [216721347533732403703816859549927070651], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [204617623759565531733154411673712046107]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-563"}, .name = "testNP-563", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [144416684887245579966085852599866746411], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [216721347533732403703816859549927070651]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-564"}, .name = "testNP-564", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [133493702797897068806724389960223829245], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [144416684887245579966085852599866746411]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-565"}, .name = "testNP-565", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [332792167385303851766172650950764032961], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [133493702797897068806724389960223829245]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-566"}, .name = "testNP-566", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [309275296280010695383732444637918130861], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [332792167385303851766172650950764032961]}: +1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-535", .policy = k8spolicy.UID{.uid = "testNP-535"}, .node = "testNode-53"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-536", .policy = k8spolicy.UID{.uid = "testNP-536"}, .node = "testNode-53"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-537", .policy = k8spolicy.UID{.uid = "testNP-537"}, .node = "testNode-53"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-538", .policy = k8spolicy.UID{.uid = "testNP-538"}, .node = "testNode-53"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-539", .policy = k8spolicy.UID{.uid = "testNP-539"}, .node = "testNode-53"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-540", .policy = k8spolicy.UID{.uid = "testNP-540"}, .node = "testNode-54"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-541", .policy = k8spolicy.UID{.uid = "testNP-541"}, .node = "testNode-54"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-542", .policy = k8spolicy.UID{.uid = "testNP-542"}, .node = "testNode-54"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-543", .policy = k8spolicy.UID{.uid = "testNP-543"}, .node = "testNode-54"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-544", .policy = k8spolicy.UID{.uid = "testNP-544"}, .node = "testNode-54"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-545", .policy = k8spolicy.UID{.uid = "testNP-545"}, .node = "testNode-54"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-546", .policy = k8spolicy.UID{.uid = "testNP-546"}, .node = "testNode-54"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-547", .policy = k8spolicy.UID{.uid = "testNP-547"}, .node = "testNode-54"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-548", .policy = k8spolicy.UID{.uid = "testNP-548"}, .node = "testNode-54"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-549", .policy = k8spolicy.UID{.uid = "testNP-549"}, .node = "testNode-54"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-550", .policy = k8spolicy.UID{.uid = "testNP-550"}, .node = "testNode-55"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-551", .policy = k8spolicy.UID{.uid = "testNP-551"}, .node = "testNode-55"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-552", .policy = k8spolicy.UID{.uid = "testNP-552"}, .node = "testNode-55"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-553", .policy = k8spolicy.UID{.uid = "testNP-553"}, .node = "testNode-55"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-554", .policy = k8spolicy.UID{.uid = "testNP-554"}, .node = "testNode-55"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-555", .policy = k8spolicy.UID{.uid = "testNP-555"}, .node = "testNode-55"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-556", .policy = k8spolicy.UID{.uid = "testNP-556"}, .node = "testNode-55"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-557", .policy = k8spolicy.UID{.uid = "testNP-557"}, .node = "testNode-55"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-558", .policy = k8spolicy.UID{.uid = "testNP-558"}, .node = "testNode-55"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-559", .policy = k8spolicy.UID{.uid = "testNP-559"}, .node = "testNode-55"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-560", .policy = k8spolicy.UID{.uid = "testNP-560"}, .node = "testNode-56"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-561", .policy = k8spolicy.UID{.uid = "testNP-561"}, .node = "testNode-56"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-562", .policy = k8spolicy.UID{.uid = "testNP-562"}, .node = "testNode-56"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-563", .policy = k8spolicy.UID{.uid = "testNP-563"}, .node = "testNode-56"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-564", .policy = k8spolicy.UID{.uid = "testNP-564"}, .node = "testNode-56"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-565", .policy = k8spolicy.UID{.uid = "testNP-565"}, .node = "testNode-56"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-566", .policy = k8spolicy.UID{.uid = "testNP-566"}, .node = "testNode-56"}: +1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 12791504691467936263389417148610920787, .address = "10.10.58.5"}: +1
AddressGroupAddress{.addressGroup = 38469004411742596765300615610796630611, .address = "10.10.57.3"}: +1
AddressGroupAddress{.addressGroup = 48288457754810703184815458934363451759, .address = "10.10.57.2"}: +1
AddressGroupAddress{.addressGroup = 57875646562199068558487178099819616336, .address = "10.10.59.9"}: +1
AddressGroupAddress{.addressGroup = 68944121478893345804268938221271004530, .address = "10.10.59.0"}: +1
AddressGroupAddress{.addressGroup = 69753286150199147065099986090344341179, .address = "10.10.59.6"}: +1
AddressGroupAddress{.addressGroup = 81193186571776496792201558375523927837, .address = "10.10.58.3"}: +1
AddressGroupAddress{.addressGroup = 89402438667876199577589705354300003756, .address = "10.10.57.0"}: +1
AddressGroupAddress{.addressGroup = 103622678699253785592437683363358421290, .address = "10.10.58.7"}: +1
AddressGroupAddress{.addressGroup = 110420812475561930447158039425581031197, .address = "10.10.58.9"}: +1
AddressGroupAddress{.addressGroup = 115449962705465729037036177698274240459, .address = "10.10.58.6"}: +1
AddressGroupAddress{.addressGroup = 117494586774893557619044181878424668743, .address = "10.10.59.1"}: +1
AddressGroupAddress{.addressGroup = 144299328393238279984330777740365105476, .address = "10.10.57.9"}: +1
AddressGroupAddress{.addressGroup = 147744343738083911001336650139134750691, .address = "10.10.56.8"}: +1
AddressGroupAddress{.addressGroup = 153137959399057820267901792604995796340, .address = "10.10.59.2"}: +1
AddressGroupAddress{.addressGroup = 163164323868919365753358312216295799005, .address = "10.10.58.4"}: +1
AddressGroupAddress{.addressGroup = 175424471273885196936244096542887709237, .address = "10.10.59.7"}: +1
AddressGroupAddress{.addressGroup = 189356164967106526155292404123997127642, .address = "10.10.58.2"}: +1
AddressGroupAddress{.addressGroup = 226281334169583360363853237381768750119, .address = "10.10.56.9"}: +1
AddressGroupAddress{.addressGroup = 237152546013506461620485219695948720115, .address = "10.10.58.0"}: +1
AddressGroupAddress{.addressGroup = 240109283439544937470332372584537965216, .address = "10.10.59.5"}: +1
AddressGroupAddress{.addressGroup = 243834848577258421488380798719830024495, .address = "10.10.57.5"}: +1
AddressGroupAddress{.addressGroup = 280278323948838701533831038434406539922, .address = "10.10.57.1"}: +1
AddressGroupAddress{.addressGroup = 292336821592849406897066488967270617647, .address = "10.10.58.8"}: +1
AddressGroupAddress{.addressGroup = 301626676905446416517450411453233771227, .address = "10.10.59.4"}: +1
AddressGroupAddress{.addressGroup = 304480194326508651283616562422405952690, .address = "10.10.58.1"}: +1
AddressGroupAddress{.addressGroup = 310923700248101265954465341767773783714, .address = "10.10.57.7"}: +1
AddressGroupAddress{.addressGroup = 313541184459285165546301762215360962218, .address = "10.10.59.8"}: +1
AddressGroupAddress{.addressGroup = 319594364914317938725671956605897902261, .address = "10.10.59.3"}: +1
AddressGroupAddress{.addressGroup = 320408731308420040012354350458098051903, .address = "10.10.57.6"}: +1
AddressGroupAddress{.addressGroup = 328324532222090837284175417000548888940, .address = "10.10.57.4"}: +1
AddressGroupAddress{.addressGroup = 338491935369446168954265554014553498639, .address = "10.10.57.8"}: +1
AddressGroupDescr:
AddressGroupDescr{.name = "099f8ddf-8553-5ff2-85e0-aa9338224153", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-585]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-585")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "1cf0dc5a-4a8a-5d80-94a3-7fb7c7cc6253", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-573]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-573")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "245404c7-f061-5121-a887-abc232e6f16f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-572]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-572")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "2b8a71ae-ff36-5b18-b966-f75583911850", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-599]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-599")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "33de27a1-45a9-599d-b44f-2541f2123572", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-590]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-590")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "3479fe87-45fc-5a1f-a6ed-48e3b2b85ebb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-596]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-596")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "3d153d2a-8236-57fe-9f55-0a6981fbc71d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-583]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-583")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "4342488b-24e4-5281-ac4e-9a826ff695ac", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-570]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-570")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "4df50081-ec02-51c2-89bc-4b2d09f3b12a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-587]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-587")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "53124661-5afa-515e-bee1-2294801f9f1d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-589]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-589")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "56dadaa1-66ab-5788-a69d-5635c68167cb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-586]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-586")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "5864a261-4f19-513e-85e0-5dfcdeef0a47", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-591]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-591")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "6c8f0a2d-1aed-56d3-96a8-d20710d18944", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-579]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-579")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "6f26868b-e151-53fe-8363-f0173a7a6fe3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-568]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-568")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "73354c54-6761-5461-8e99-840b88a53d74", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-592]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-592")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "7ac04e43-a1d5-50bd-a460-6454114278dd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-584]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-584")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "83f98633-5003-5d41-b0bd-b1ca66d90a35", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-597]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-597")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "8e74abbb-4837-55f7-8e55-32942e0143da", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-582]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-582")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "aa3c3321-b8e0-50df-b33d-d8f884352427", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-569]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-569")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "b269eb41-fa9a-5b36-88af-8f4ded5be7f3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-580]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-580")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "b4a35daa-fa37-533a-a8d4-8fcaabaec2a0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-595]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-595")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "b770e235-f827-5ea6-a3b2-26c46824612f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-575]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-575")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "d2dba445-8178-52d9-b2ea-643e9ad3a292", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-571]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-571")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "dbee061b-60f2-5706-af2c-133453c9d22f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-588]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-588")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "e2eb2f56-1e75-552f-84a8-c95307b832db", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-594]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-594")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "e510c09b-7e12-53f1-92ab-2d6841c874b2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-581]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-581")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "e9e9b9fa-1e3e-5e36-9ca6-70e6d29706a2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-577]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-577")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "ebe1d5e9-8bc1-5833-94a0-afa68aa19eaa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-598]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-598")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "f06fa2c0-2851-5e5f-bb4f-bdaf807988b5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-593]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-593")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "f10c7a1d-217d-585a-bbac-662be29e6b3f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-576]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-576")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "f701013b-1ea7-5f11-9a3b-bc648357f16c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-574]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-574")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "fea72ce8-ba96-560b-bf06-c2f6abcbe40f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-578]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-578")], .matchExpressions = []}}}}: +1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 12791504691467936263389417148610920787, .node = "testNode-58"}: +1
AddressGroupSpan{.addressGroup = 38469004411742596765300615610796630611, .node = "testNode-57"}: +1
AddressGroupSpan{.addressGroup = 48288457754810703184815458934363451759, .node = "testNode-57"}: +1
AddressGroupSpan{.addressGroup = 57875646562199068558487178099819616336, .node = "testNode-59"}: +1
AddressGroupSpan{.addressGroup = 68944121478893345804268938221271004530, .node = "testNode-58"}: +1
AddressGroupSpan{.addressGroup = 69753286150199147065099986090344341179, .node = "testNode-59"}: +1
AddressGroupSpan{.addressGroup = 81193186571776496792201558375523927837, .node = "testNode-58"}: +1
AddressGroupSpan{.addressGroup = 89402438667876199577589705354300003756, .node = "testNode-56"}: +1
AddressGroupSpan{.addressGroup = 103622678699253785592437683363358421290, .node = "testNode-58"}: +1
AddressGroupSpan{.addressGroup = 110420812475561930447158039425581031197, .node = "testNode-58"}: +1
AddressGroupSpan{.addressGroup = 115449962705465729037036177698274240459, .node = "testNode-58"}: +1
AddressGroupSpan{.addressGroup = 117494586774893557619044181878424668743, .node = "testNode-59"}: +1
AddressGroupSpan{.addressGroup = 144299328393238279984330777740365105476, .node = "testNode-57"}: +1
AddressGroupSpan{.addressGroup = 147744343738083911001336650139134750691, .node = "testNode-56"}: +1
AddressGroupSpan{.addressGroup = 153137959399057820267901792604995796340, .node = "testNode-59"}: +1
AddressGroupSpan{.addressGroup = 163164323868919365753358312216295799005, .node = "testNode-58"}: +1
AddressGroupSpan{.addressGroup = 175424471273885196936244096542887709237, .node = "testNode-59"}: +1
AddressGroupSpan{.addressGroup = 189356164967106526155292404123997127642, .node = "testNode-58"}: +1
AddressGroupSpan{.addressGroup = 226281334169583360363853237381768750119, .node = "testNode-56"}: +1
AddressGroupSpan{.addressGroup = 237152546013506461620485219695948720115, .node = "testNode-57"}: +1
AddressGroupSpan{.addressGroup = 240109283439544937470332372584537965216, .node = "testNode-59"}: +1
AddressGroupSpan{.addressGroup = 243834848577258421488380798719830024495, .node = "testNode-57"}: +1
AddressGroupSpan{.addressGroup = 280278323948838701533831038434406539922, .node = "testNode-57"}: +1
AddressGroupSpan{.addressGroup = 292336821592849406897066488967270617647, .node = "testNode-58"}: +1
AddressGroupSpan{.addressGroup = 301626676905446416517450411453233771227, .node = "testNode-59"}: +1
AddressGroupSpan{.addressGroup = 304480194326508651283616562422405952690, .node = "testNode-58"}: +1
AddressGroupSpan{.addressGroup = 310923700248101265954465341767773783714, .node = "testNode-57"}: +1
AddressGroupSpan{.addressGroup = 313541184459285165546301762215360962218, .node = "testNode-59"}: +1
AddressGroupSpan{.addressGroup = 319594364914317938725671956605897902261, .node = "testNode-59"}: +1
AddressGroupSpan{.addressGroup = 320408731308420040012354350458098051903, .node = "testNode-57"}: +1
AddressGroupSpan{.addressGroup = 328324532222090837284175417000548888940, .node = "testNode-57"}: +1
AddressGroupSpan{.addressGroup = 338491935369446168954265554014553498639, .node = "testNode-57"}: +1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "099f8ddf-8553-5ff2-85e0-aa9338224153", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-585]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-585")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "1cf0dc5a-4a8a-5d80-94a3-7fb7c7cc6253", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-573]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-573")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "245404c7-f061-5121-a887-abc232e6f16f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-572]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-572")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "33de27a1-45a9-599d-b44f-2541f2123572", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-590]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-590")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "3479fe87-45fc-5a1f-a6ed-48e3b2b85ebb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-596]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-596")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "3d153d2a-8236-57fe-9f55-0a6981fbc71d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-583]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-583")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "4342488b-24e4-5281-ac4e-9a826ff695ac", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-570]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-570")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "4df50081-ec02-51c2-89bc-4b2d09f3b12a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-587]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-587")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "53124661-5afa-515e-bee1-2294801f9f1d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-589]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-589")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "56dadaa1-66ab-5788-a69d-5635c68167cb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-586]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-586")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "5864a261-4f19-513e-85e0-5dfcdeef0a47", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-591]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-591")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "6c8f0a2d-1aed-56d3-96a8-d20710d18944", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-579]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-579")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "6f26868b-e151-53fe-8363-f0173a7a6fe3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-568]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-568")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "73354c54-6761-5461-8e99-840b88a53d74", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-592]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-592")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "7ac04e43-a1d5-50bd-a460-6454114278dd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-584]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-584")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "83f98633-5003-5d41-b0bd-b1ca66d90a35", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-597]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-597")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "8e74abbb-4837-55f7-8e55-32942e0143da", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-582]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-582")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "aa3c3321-b8e0-50df-b33d-d8f884352427", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-569]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-569")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "b269eb41-fa9a-5b36-88af-8f4ded5be7f3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-580]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-580")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "b4a35daa-fa37-533a-a8d4-8fcaabaec2a0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-595]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-595")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "b770e235-f827-5ea6-a3b2-26c46824612f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-575]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-575")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "d2dba445-8178-52d9-b2ea-643e9ad3a292", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-571]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-571")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "dbee061b-60f2-5706-af2c-133453c9d22f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-588]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-588")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "e2eb2f56-1e75-552f-84a8-c95307b832db", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-594]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-594")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "e510c09b-7e12-53f1-92ab-2d6841c874b2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-581]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-581")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "e8ac4162-f9a2-5e4d-8f31-6a4959bbf2ad", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-567]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-567")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "e9e9b9fa-1e3e-5e36-9ca6-70e6d29706a2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-577]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-577")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "ebe1d5e9-8bc1-5833-94a0-afa68aa19eaa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-598]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-598")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "f06fa2c0-2851-5e5f-bb4f-bdaf807988b5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-593]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-593")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "f10c7a1d-217d-585a-bbac-662be29e6b3f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-576]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-576")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "f701013b-1ea7-5f11-9a3b-bc648357f16c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-574]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-574")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "fea72ce8-ba96-560b-bf06-c2f6abcbe40f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-578]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-578")], .matchExpressions = []}}}}: +1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 12791504691467936263389417148610920787, .node = "testNode-58", .pods = [k8spolicy.PodReference{.name = "testPod-585", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 38469004411742596765300615610796630611, .node = "testNode-57", .pods = [k8spolicy.PodReference{.name = "testPod-573", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 48288457754810703184815458934363451759, .node = "testNode-57", .pods = [k8spolicy.PodReference{.name = "testPod-572", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 68944121478893345804268938221271004530, .node = "testNode-59", .pods = [k8spolicy.PodReference{.name = "testPod-590", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 69753286150199147065099986090344341179, .node = "testNode-59", .pods = [k8spolicy.PodReference{.name = "testPod-596", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 81193186571776496792201558375523927837, .node = "testNode-58", .pods = [k8spolicy.PodReference{.name = "testPod-583", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 89402438667876199577589705354300003756, .node = "testNode-57", .pods = [k8spolicy.PodReference{.name = "testPod-570", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 103622678699253785592437683363358421290, .node = "testNode-58", .pods = [k8spolicy.PodReference{.name = "testPod-587", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 110420812475561930447158039425581031197, .node = "testNode-58", .pods = [k8spolicy.PodReference{.name = "testPod-589", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 115449962705465729037036177698274240459, .node = "testNode-58", .pods = [k8spolicy.PodReference{.name = "testPod-586", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 117494586774893557619044181878424668743, .node = "testNode-59", .pods = [k8spolicy.PodReference{.name = "testPod-591", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 144299328393238279984330777740365105476, .node = "testNode-57", .pods = [k8spolicy.PodReference{.name = "testPod-579", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 147744343738083911001336650139134750691, .node = "testNode-56", .pods = [k8spolicy.PodReference{.name = "testPod-568", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 153137959399057820267901792604995796340, .node = "testNode-59", .pods = [k8spolicy.PodReference{.name = "testPod-592", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 163164323868919365753358312216295799005, .node = "testNode-58", .pods = [k8spolicy.PodReference{.name = "testPod-584", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 175424471273885196936244096542887709237, .node = "testNode-59", .pods = [k8spolicy.PodReference{.name = "testPod-597", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 189356164967106526155292404123997127642, .node = "testNode-58", .pods = [k8spolicy.PodReference{.name = "testPod-582", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 226281334169583360363853237381768750119, .node = "testNode-56", .pods = [k8spolicy.PodReference{.name = "testPod-569", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 237152546013506461620485219695948720115, .node = "testNode-58", .pods = [k8spolicy.PodReference{.name = "testPod-580", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 240109283439544937470332372584537965216, .node = "testNode-59", .pods = [k8spolicy.PodReference{.name = "testPod-595", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 243834848577258421488380798719830024495, .node = "testNode-57", .pods = [k8spolicy.PodReference{.name = "testPod-575", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 280278323948838701533831038434406539922, .node = "testNode-57", .pods = [k8spolicy.PodReference{.name = "testPod-571", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 292336821592849406897066488967270617647, .node = "testNode-58", .pods = [k8spolicy.PodReference{.name = "testPod-588", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 301626676905446416517450411453233771227, .node = "testNode-59", .pods = [k8spolicy.PodReference{.name = "testPod-594", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 304480194326508651283616562422405952690, .node = "testNode-58", .pods = [k8spolicy.PodReference{.name = "testPod-581", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 309275296280010695383732444637918130861, .node = "testNode-56", .pods = [k8spolicy.PodReference{.name = "testPod-567", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 310923700248101265954465341767773783714, .node = "testNode-57", .pods = [k8spolicy.PodReference{.name = "testPod-577", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 313541184459285165546301762215360962218, .node = "testNode-59", .pods = [k8spolicy.PodReference{.name = "testPod-598", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 319594364914317938725671956605897902261, .node = "testNode-59", .pods = [k8spolicy.PodReference{.name = "testPod-593", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 320408731308420040012354350458098051903, .node = "testNode-57", .pods = [k8spolicy.PodReference{.name = "testPod-576", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 328324532222090837284175417000548888940, .node = "testNode-57", .pods = [k8spolicy.PodReference{.name = "testPod-574", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 338491935369446168954265554014553498639, .node = "testNode-57", .pods = [k8spolicy.PodReference{.name = "testPod-578", .namespace = "testNamespace"}]}: +1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 12791504691467936263389417148610920787, .span = "testNode-58"}: +1
AppliedToGroupSpan{.appliedToGroup = 38469004411742596765300615610796630611, .span = "testNode-57"}: +1
AppliedToGroupSpan{.appliedToGroup = 48288457754810703184815458934363451759, .span = "testNode-57"}: +1
AppliedToGroupSpan{.appliedToGroup = 68944121478893345804268938221271004530, .span = "testNode-59"}: +1
AppliedToGroupSpan{.appliedToGroup = 69753286150199147065099986090344341179, .span = "testNode-59"}: +1
AppliedToGroupSpan{.appliedToGroup = 81193186571776496792201558375523927837, .span = "testNode-58"}: +1
AppliedToGroupSpan{.appliedToGroup = 89402438667876199577589705354300003756, .span = "testNode-57"}: +1
AppliedToGroupSpan{.appliedToGroup = 103622678699253785592437683363358421290, .span = "testNode-58"}: +1
AppliedToGroupSpan{.appliedToGroup = 110420812475561930447158039425581031197, .span = "testNode-58"}: +1
AppliedToGroupSpan{.appliedToGroup = 115449962705465729037036177698274240459, .span = "testNode-58"}: +1
AppliedToGroupSpan{.appliedToGroup = 117494586774893557619044181878424668743, .span = "testNode-59"}: +1
AppliedToGroupSpan{.appliedToGroup = 144299328393238279984330777740365105476, .span = "testNode-57"}: +1
AppliedToGroupSpan{.appliedToGroup = 147744343738083911001336650139134750691, .span = "testNode-56"}: +1
AppliedToGroupSpan{.appliedToGroup = 153137959399057820267901792604995796340, .span = "testNode-59"}: +1
AppliedToGroupSpan{.appliedToGroup = 163164323868919365753358312216295799005, .span = "testNode-58"}: +1
AppliedToGroupSpan{.appliedToGroup = 175424471273885196936244096542887709237, .span = "testNode-59"}: +1
AppliedToGroupSpan{.appliedToGroup = 189356164967106526155292404123997127642, .span = "testNode-58"}: +1
AppliedToGroupSpan{.appliedToGroup = 226281334169583360363853237381768750119, .span = "testNode-56"}: +1
AppliedToGroupSpan{.appliedToGroup = 237152546013506461620485219695948720115, .span = "testNode-58"}: +1
AppliedToGroupSpan{.appliedToGroup = 240109283439544937470332372584537965216, .span = "testNode-59"}: +1
AppliedToGroupSpan{.appliedToGroup = 243834848577258421488380798719830024495, .span = "testNode-57"}: +1
AppliedToGroupSpan{.appliedToGroup = 280278323948838701533831038434406539922, .span = "testNode-57"}: +1
AppliedToGroupSpan{.appliedToGroup = 292336821592849406897066488967270617647, .span = "testNode-58"}: +1
AppliedToGroupSpan{.appliedToGroup = 301626676905446416517450411453233771227, .span = "testNode-59"}: +1
AppliedToGroupSpan{.appliedToGroup = 304480194326508651283616562422405952690, .span = "testNode-58"}: +1
AppliedToGroupSpan{.appliedToGroup = 309275296280010695383732444637918130861, .span = "testNode-56"}: +1
AppliedToGroupSpan{.appliedToGroup = 310923700248101265954465341767773783714, .span = "testNode-57"}: +1
AppliedToGroupSpan{.appliedToGroup = 313541184459285165546301762215360962218, .span = "testNode-59"}: +1
AppliedToGroupSpan{.appliedToGroup = 319594364914317938725671956605897902261, .span = "testNode-59"}: +1
AppliedToGroupSpan{.appliedToGroup = 320408731308420040012354350458098051903, .span = "testNode-57"}: +1
AppliedToGroupSpan{.appliedToGroup = 328324532222090837284175417000548888940, .span = "testNode-57"}: +1
AppliedToGroupSpan{.appliedToGroup = 338491935369446168954265554014553498639, .span = "testNode-57"}: +1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-567"}, .name = "testNP-567", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [147744343738083911001336650139134750691], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [309275296280010695383732444637918130861]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-568"}, .name = "testNP-568", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [226281334169583360363853237381768750119], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [147744343738083911001336650139134750691]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-569"}, .name = "testNP-569", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [89402438667876199577589705354300003756], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [226281334169583360363853237381768750119]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-570"}, .name = "testNP-570", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [280278323948838701533831038434406539922], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [89402438667876199577589705354300003756]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-571"}, .name = "testNP-571", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [48288457754810703184815458934363451759], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [280278323948838701533831038434406539922]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-572"}, .name = "testNP-572", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [38469004411742596765300615610796630611], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [48288457754810703184815458934363451759]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-573"}, .name = "testNP-573", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [328324532222090837284175417000548888940], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [38469004411742596765300615610796630611]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-574"}, .name = "testNP-574", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [243834848577258421488380798719830024495], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [328324532222090837284175417000548888940]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-575"}, .name = "testNP-575", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [320408731308420040012354350458098051903], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [243834848577258421488380798719830024495]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-576"}, .name = "testNP-576", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [310923700248101265954465341767773783714], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [320408731308420040012354350458098051903]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-577"}, .name = "testNP-577", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [338491935369446168954265554014553498639], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [310923700248101265954465341767773783714]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-578"}, .name = "testNP-578", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [144299328393238279984330777740365105476], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [338491935369446168954265554014553498639]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-579"}, .name = "testNP-579", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [237152546013506461620485219695948720115], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [144299328393238279984330777740365105476]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-580"}, .name = "testNP-580", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [304480194326508651283616562422405952690], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [237152546013506461620485219695948720115]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-581"}, .name = "testNP-581", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [189356164967106526155292404123997127642], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [304480194326508651283616562422405952690]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-582"}, .name = "testNP-582", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [81193186571776496792201558375523927837], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [189356164967106526155292404123997127642]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-583"}, .name = "testNP-583", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [163164323868919365753358312216295799005], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [81193186571776496792201558375523927837]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-584"}, .name = "testNP-584", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [12791504691467936263389417148610920787], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [163164323868919365753358312216295799005]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-585"}, .name = "testNP-585", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [115449962705465729037036177698274240459], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [12791504691467936263389417148610920787]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-586"}, .name = "testNP-586", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [103622678699253785592437683363358421290], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [115449962705465729037036177698274240459]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-587"}, .name = "testNP-587", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [292336821592849406897066488967270617647], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [103622678699253785592437683363358421290]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-588"}, .name = "testNP-588", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [110420812475561930447158039425581031197], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [292336821592849406897066488967270617647]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-589"}, .name = "testNP-589", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [68944121478893345804268938221271004530], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [110420812475561930447158039425581031197]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-590"}, .name = "testNP-590", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [117494586774893557619044181878424668743], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [68944121478893345804268938221271004530]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-591"}, .name = "testNP-591", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [153137959399057820267901792604995796340], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [117494586774893557619044181878424668743]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-592"}, .name = "testNP-592", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [319594364914317938725671956605897902261], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [153137959399057820267901792604995796340]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-593"}, .name = "testNP-593", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [301626676905446416517450411453233771227], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [319594364914317938725671956605897902261]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-594"}, .name = "testNP-594", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [240109283439544937470332372584537965216], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [301626676905446416517450411453233771227]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-595"}, .name = "testNP-595", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [69753286150199147065099986090344341179], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [240109283439544937470332372584537965216]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-596"}, .name = "testNP-596", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [175424471273885196936244096542887709237], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [69753286150199147065099986090344341179]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-597"}, .name = "testNP-597", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [313541184459285165546301762215360962218], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [175424471273885196936244096542887709237]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-598"}, .name = "testNP-598", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [57875646562199068558487178099819616336], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [313541184459285165546301762215360962218]}: +1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-567", .policy = k8spolicy.UID{.uid = "testNP-567"}, .node = "testNode-56"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-568", .policy = k8spolicy.UID{.uid = "testNP-568"}, .node = "testNode-56"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-569", .policy = k8spolicy.UID{.uid = "testNP-569"}, .node = "testNode-56"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-570", .policy = k8spolicy.UID{.uid = "testNP-570"}, .node = "testNode-57"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-571", .policy = k8spolicy.UID{.uid = "testNP-571"}, .node = "testNode-57"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-572", .policy = k8spolicy.UID{.uid = "testNP-572"}, .node = "testNode-57"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-573", .policy = k8spolicy.UID{.uid = "testNP-573"}, .node = "testNode-57"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-574", .policy = k8spolicy.UID{.uid = "testNP-574"}, .node = "testNode-57"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-575", .policy = k8spolicy.UID{.uid = "testNP-575"}, .node = "testNode-57"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-576", .policy = k8spolicy.UID{.uid = "testNP-576"}, .node = "testNode-57"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-577", .policy = k8spolicy.UID{.uid = "testNP-577"}, .node = "testNode-57"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-578", .policy = k8spolicy.UID{.uid = "testNP-578"}, .node = "testNode-57"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-579", .policy = k8spolicy.UID{.uid = "testNP-579"}, .node = "testNode-57"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-580", .policy = k8spolicy.UID{.uid = "testNP-580"}, .node = "testNode-58"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-581", .policy = k8spolicy.UID{.uid = "testNP-581"}, .node = "testNode-58"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-582", .policy = k8spolicy.UID{.uid = "testNP-582"}, .node = "testNode-58"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-583", .policy = k8spolicy.UID{.uid = "testNP-583"}, .node = "testNode-58"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-584", .policy = k8spolicy.UID{.uid = "testNP-584"}, .node = "testNode-58"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-585", .policy = k8spolicy.UID{.uid = "testNP-585"}, .node = "testNode-58"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-586", .policy = k8spolicy.UID{.uid = "testNP-586"}, .node = "testNode-58"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-587", .policy = k8spolicy.UID{.uid = "testNP-587"}, .node = "testNode-58"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-588", .policy = k8spolicy.UID{.uid = "testNP-588"}, .node = "testNode-58"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-589", .policy = k8spolicy.UID{.uid = "testNP-589"}, .node = "testNode-58"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-590", .policy = k8spolicy.UID{.uid = "testNP-590"}, .node = "testNode-59"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-591", .policy = k8spolicy.UID{.uid = "testNP-591"}, .node = "testNode-59"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-592", .policy = k8spolicy.UID{.uid = "testNP-592"}, .node = "testNode-59"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-593", .policy = k8spolicy.UID{.uid = "testNP-593"}, .node = "testNode-59"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-594", .policy = k8spolicy.UID{.uid = "testNP-594"}, .node = "testNode-59"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-595", .policy = k8spolicy.UID{.uid = "testNP-595"}, .node = "testNode-59"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-596", .policy = k8spolicy.UID{.uid = "testNP-596"}, .node = "testNode-59"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-597", .policy = k8spolicy.UID{.uid = "testNP-597"}, .node = "testNode-59"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-598", .policy = k8spolicy.UID{.uid = "testNP-598"}, .node = "testNode-59"}: +1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 3716464263243677870556622475737383443, .address = "10.10.60.9"}: +1
AddressGroupAddress{.addressGroup = 9663145268869478633448107855661856068, .address = "10.10.62.4"}: +1
AddressGroupAddress{.addressGroup = 13056345226351649193613166612021781604, .address = "10.10.62.1"}: +1
AddressGroupAddress{.addressGroup = 20410984638251524353250984514670141381, .address = "10.10.62.3"}: +1
AddressGroupAddress{.addressGroup = 29454646625329881124953280547726788403, .address = "10.10.63.1"}: +1
AddressGroupAddress{.addressGroup = 44481766542918776411588932534483097483, .address = "10.10.61.3"}: +1
AddressGroupAddress{.addressGroup = 48309349432861181167947417457980733463, .address = "10.10.60.6"}: +1
AddressGroupAddress{.addressGroup = 62039266921959583878146638597778698451, .address = "10.10.62.2"}: +1
AddressGroupAddress{.addressGroup = 73249166270127153923312010831970725047, .address = "10.10.62.0"}: +1
AddressGroupAddress{.addressGroup = 80151096006657336496841627720522046415, .address = "10.10.60.1"}: +1
AddressGroupAddress{.addressGroup = 103667067060352667355214945142441620522, .address = "10.10.61.0"}: +1
AddressGroupAddress{.addressGroup = 109595952875776271881629169264627301236, .address = "10.10.61.2"}: +1
AddressGroupAddress{.addressGroup = 113579145843466544150223959520925482777, .address = "10.10.61.6"}: +1
AddressGroupAddress{.addressGroup = 120533616110235788555806058770320580981, .address = "10.10.62.9"}: +1
AddressGroupAddress{.addressGroup = 136677443506820200208943639420534968877, .address = "10.10.61.4"}: +1
AddressGroupAddress{.addressGroup = 137491205310995470111280456616495553705, .address = "10.10.60.3"}: +1
AddressGroupAddress{.addressGroup = 154045869066992464186289003948736002224, .address = "10.10.60.5"}: +1
AddressGroupAddress{.addressGroup = 160940163208804731987974609808421201535, .address = "10.10.62.8"}: +1
AddressGroupAddress{.addressGroup = 165069763045347105976351217057869520086, .address = "10.10.60.4"}: +1
AddressGroupAddress{.addressGroup = 183283729794610317838342070133256178594, .address = "10.10.61.1"}: +1
AddressGroupAddress{.addressGroup = 222563440313352744501332668929241581375, .address = "10.10.61.8"}: +1
AddressGroupAddress{.addressGroup = 229024273500495890788903593305812329540, .address = "10.10.61.7"}: +1
AddressGroupAddress{.addressGroup = 233147737046392678223862196895414800792, .address = "10.10.62.5"}: +1
AddressGroupAddress{.addressGroup = 234752831608620362815805000034219514155, .address = "10.10.60.7"}: +1
AddressGroupAddress{.addressGroup = 253768601933530702925143752015546438066, .address = "10.10.60.8"}: +1
AddressGroupAddress{.addressGroup = 257315562249696113097234276718894783725, .address = "10.10.63.0"}: +1
AddressGroupAddress{.addressGroup = 268562897540829458479725559689622339224, .address = "10.10.61.9"}: +1
AddressGroupAddress{.addressGroup = 294495005277112873334855387561644829062, .address = "10.10.60.0"}: +1
AddressGroupAddress{.addressGroup = 306558184631798652484173260905393680569, .address = "10.10.60.2"}: +1
AddressGroupAddress{.addressGroup = 318821428688056883498017451075008150497, .address = "10.10.62.7"}: +1
AddressGroupAddress{.addressGroup = 330130238032115757858869958978536200216, .address = "10.10.62.6"}: +1
AddressGroupAddress{.addressGroup = 337455536338842635447440504577022314364, .address = "10.10.61.5"}: +1
AddressGroupDescr:
AddressGroupDescr{.name = "02cbc3d5-ce89-5797-8edb-f1e0124b4213", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-609]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-609")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "07450dd8-62a4-58bd-ab58-3bf1afcd7544", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-624]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-624")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "09d28f85-06b5-5b1f-8a89-7e2056b42464", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-621]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-621")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "0f5b033d-1747-557a-8590-8844a46d9fc5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-623]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-623")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "1628c233-3279-572b-8b79-88538c9b8733", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-631]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-631")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "2176e069-ef1c-535e-b476-05c5ab15178b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-613]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-613")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "24580ad1-fce8-5f37-85ad-a3aa634df817", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-606]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-606")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "2eac5404-367f-50fd-8119-f3e6794df0d3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-622]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-622")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "371b46b9-c4c2-5a44-9103-298077dc6cb7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-620]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-620")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "3c4c8a22-677f-588f-91ea-aec207969bcf", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-601]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-601")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "4dfd8d05-ce2e-513f-8b18-0cf487f9b42a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-610]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-610")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "527369a9-819d-5f1d-8780-887f94383b74", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-612]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-612")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "55728c3c-de70-52b8-bd4c-2c37db6c7f19", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-616]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-616")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "5aadee18-3a80-5312-a3f5-7e05f657e175", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-629]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-629")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "66d31e3c-ede9-5e40-919c-87749b4ad22d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-614]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-614")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "676fd7ca-e7ab-532b-9dce-aca7ca3c1ca9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-603]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-603")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "73e427bb-7be2-5306-8c53-e9cb77c038b0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-605]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-605")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "7913f2ad-5d73-58a3-a65f-17c6f6faa67f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-628]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-628")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "7c2f47ab-3589-59a1-a0a3-1220e53edcd6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-604]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-604")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "89e3298f-f80d-5f37-884b-68c35c794ba2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-611]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-611")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "a77028cf-ea44-563d-8793-17f78af5073f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-618]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-618")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "ac4c787b-6104-55af-82f2-f7b7e56d6444", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-617]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-617")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "af669eee-58ab-51a2-8075-568d0180d198", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-625]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-625")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "b09bc033-ef80-594c-8175-4c917d70d92b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-607]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-607")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "beea0e10-9b77-5ebb-8954-df1fb77851b2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-608]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-608")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "c1952cb5-d1ea-5ad0-90fd-21c2d2621ced", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-630]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-630")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "ca0b5527-67c7-523c-902e-935206a43e98", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-619]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-619")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "dd8dacc7-22b1-581c-b1e3-acc3d938a986", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-600]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-600")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "e6a0f570-813b-5d34-8059-ffa14e03f0b9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-602]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-602")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "efdac60d-6b62-52c9-a31f-92e341373be1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-627]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-627")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "f85cc566-a332-589f-86ec-73271417d818", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-626]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-626")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "fddf927d-e3be-5758-8f3c-b55e8bd5477c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-615]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-615")], .matchExpressions = []}}}}: +1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 3716464263243677870556622475737383443, .node = "testNode-60"}: +1
AddressGroupSpan{.addressGroup = 9663145268869478633448107855661856068, .node = "testNode-62"}: +1
AddressGroupSpan{.addressGroup = 13056345226351649193613166612021781604, .node = "testNode-62"}: +1
AddressGroupSpan{.addressGroup = 20410984638251524353250984514670141381, .node = "testNode-62"}: +1
AddressGroupSpan{.addressGroup = 29454646625329881124953280547726788403, .node = "testNode-63"}: +1
AddressGroupSpan{.addressGroup = 44481766542918776411588932534483097483, .node = "testNode-61"}: +1
AddressGroupSpan{.addressGroup = 48309349432861181167947417457980733463, .node = "testNode-60"}: +1
AddressGroupSpan{.addressGroup = 62039266921959583878146638597778698451, .node = "testNode-62"}: +1
AddressGroupSpan{.addressGroup = 73249166270127153923312010831970725047, .node = "testNode-61"}: +1
AddressGroupSpan{.addressGroup = 80151096006657336496841627720522046415, .node = "testNode-60"}: +1
AddressGroupSpan{.addressGroup = 103667067060352667355214945142441620522, .node = "testNode-60"}: +1
AddressGroupSpan{.addressGroup = 109595952875776271881629169264627301236, .node = "testNode-61"}: +1
AddressGroupSpan{.addressGroup = 113579145843466544150223959520925482777, .node = "testNode-61"}: +1
AddressGroupSpan{.addressGroup = 120533616110235788555806058770320580981, .node = "testNode-62"}: +1
AddressGroupSpan{.addressGroup = 136677443506820200208943639420534968877, .node = "testNode-61"}: +1
AddressGroupSpan{.addressGroup = 137491205310995470111280456616495553705, .node = "testNode-60"}: +1
AddressGroupSpan{.addressGroup = 154045869066992464186289003948736002224, .node = "testNode-60"}: +1
AddressGroupSpan{.addressGroup = 160940163208804731987974609808421201535, .node = "testNode-62"}: +1
AddressGroupSpan{.addressGroup = 165069763045347105976351217057869520086, .node = "testNode-60"}: +1
AddressGroupSpan{.addressGroup = 183283729794610317838342070133256178594, .node = "testNode-61"}: +1
AddressGroupSpan{.addressGroup = 222563440313352744501332668929241581375, .node = "testNode-61"}: +1
AddressGroupSpan{.addressGroup = 229024273500495890788903593305812329540, .node = "testNode-61"}: +1
AddressGroupSpan{.addressGroup = 233147737046392678223862196895414800792, .node = "testNode-62"}: +1
AddressGroupSpan{.addressGroup = 234752831608620362815805000034219514155, .node = "testNode-60"}: +1
AddressGroupSpan{.addressGroup = 253768601933530702925143752015546438066, .node = "testNode-60"}: +1
AddressGroupSpan{.addressGroup = 257315562249696113097234276718894783725, .node = "testNode-62"}: +1
AddressGroupSpan{.addressGroup = 268562897540829458479725559689622339224, .node = "testNode-61"}: +1
AddressGroupSpan{.addressGroup = 294495005277112873334855387561644829062, .node = "testNode-59"}: +1
AddressGroupSpan{.addressGroup = 306558184631798652484173260905393680569, .node = "testNode-60"}: +1
AddressGroupSpan{.addressGroup = 318821428688056883498017451075008150497, .node = "testNode-62"}: +1
AddressGroupSpan{.addressGroup = 330130238032115757858869958978536200216, .node = "testNode-62"}: +1
AddressGroupSpan{.addressGroup = 337455536338842635447440504577022314364, .node = "testNode-61"}: +1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "02cbc3d5-ce89-5797-8edb-f1e0124b4213", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-609]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-609")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "07450dd8-62a4-58bd-ab58-3bf1afcd7544", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-624]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-624")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "09d28f85-06b5-5b1f-8a89-7e2056b42464", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-621]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-621")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "0f5b033d-1747-557a-8590-8844a46d9fc5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-623]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-623")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "2176e069-ef1c-535e-b476-05c5ab15178b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-613]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-613")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "24580ad1-fce8-5f37-85ad-a3aa634df817", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-606]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-606")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "2b8a71ae-ff36-5b18-b966-f75583911850", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-599]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-599")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "2eac5404-367f-50fd-8119-f3e6794df0d3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-622]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-622")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "371b46b9-c4c2-5a44-9103-298077dc6cb7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-620]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-620")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "3c4c8a22-677f-588f-91ea-aec207969bcf", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-601]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-601")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "4dfd8d05-ce2e-513f-8b18-0cf487f9b42a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-610]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-610")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "527369a9-819d-5f1d-8780-887f94383b74", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-612]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-612")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "55728c3c-de70-52b8-bd4c-2c37db6c7f19", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-616]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-616")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "5aadee18-3a80-5312-a3f5-7e05f657e175", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-629]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-629")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "66d31e3c-ede9-5e40-919c-87749b4ad22d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-614]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-614")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "676fd7ca-e7ab-532b-9dce-aca7ca3c1ca9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-603]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-603")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "73e427bb-7be2-5306-8c53-e9cb77c038b0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-605]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-605")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "7913f2ad-5d73-58a3-a65f-17c6f6faa67f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-628]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-628")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "7c2f47ab-3589-59a1-a0a3-1220e53edcd6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-604]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-604")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "89e3298f-f80d-5f37-884b-68c35c794ba2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-611]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-611")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "a77028cf-ea44-563d-8793-17f78af5073f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-618]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-618")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "ac4c787b-6104-55af-82f2-f7b7e56d6444", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-617]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-617")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "af669eee-58ab-51a2-8075-568d0180d198", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-625]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-625")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "b09bc033-ef80-594c-8175-4c917d70d92b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-607]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-607")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "beea0e10-9b77-5ebb-8954-df1fb77851b2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-608]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-608")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "c1952cb5-d1ea-5ad0-90fd-21c2d2621ced", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-630]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-630")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "ca0b5527-67c7-523c-902e-935206a43e98", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-619]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-619")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "dd8dacc7-22b1-581c-b1e3-acc3d938a986", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-600]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-600")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "e6a0f570-813b-5d34-8059-ffa14e03f0b9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-602]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-602")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "efdac60d-6b62-52c9-a31f-92e341373be1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-627]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-627")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "f85cc566-a332-589f-86ec-73271417d818", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-626]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-626")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "fddf927d-e3be-5758-8f3c-b55e8bd5477c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-615]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-615")], .matchExpressions = []}}}}: +1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 3716464263243677870556622475737383443, .node = "testNode-60", .pods = [k8spolicy.PodReference{.name = "testPod-609", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 9663145268869478633448107855661856068, .node = "testNode-62", .pods = [k8spolicy.PodReference{.name = "testPod-624", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 13056345226351649193613166612021781604, .node = "testNode-62", .pods = [k8spolicy.PodReference{.name = "testPod-621", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 20410984638251524353250984514670141381, .node = "testNode-62", .pods = [k8spolicy.PodReference{.name = "testPod-623", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 44481766542918776411588932534483097483, .node = "testNode-61", .pods = [k8spolicy.PodReference{.name = "testPod-613", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 48309349432861181167947417457980733463, .node = "testNode-60", .pods = [k8spolicy.PodReference{.name = "testPod-606", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 57875646562199068558487178099819616336, .node = "testNode-59", .pods = [k8spolicy.PodReference{.name = "testPod-599", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 62039266921959583878146638597778698451, .node = "testNode-62", .pods = [k8spolicy.PodReference{.name = "testPod-622", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 73249166270127153923312010831970725047, .node = "testNode-62", .pods = [k8spolicy.PodReference{.name = "testPod-620", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 80151096006657336496841627720522046415, .node = "testNode-60", .pods = [k8spolicy.PodReference{.name = "testPod-601", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 103667067060352667355214945142441620522, .node = "testNode-61", .pods = [k8spolicy.PodReference{.name = "testPod-610", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 109595952875776271881629169264627301236, .node = "testNode-61", .pods = [k8spolicy.PodReference{.name = "testPod-612", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 113579145843466544150223959520925482777, .node = "testNode-61", .pods = [k8spolicy.PodReference{.name = "testPod-616", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 120533616110235788555806058770320580981, .node = "testNode-62", .pods = [k8spolicy.PodReference{.name = "testPod-629", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 136677443506820200208943639420534968877, .node = "testNode-61", .pods = [k8spolicy.PodReference{.name = "testPod-614", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 137491205310995470111280456616495553705, .node = "testNode-60", .pods = [k8spolicy.PodReference{.name = "testPod-603", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 154045869066992464186289003948736002224, .node = "testNode-60", .pods = [k8spolicy.PodReference{.name = "testPod-605", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 160940163208804731987974609808421201535, .node = "testNode-62", .pods = [k8spolicy.PodReference{.name = "testPod-628", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 165069763045347105976351217057869520086, .node = "testNode-60", .pods = [k8spolicy.PodReference{.name = "testPod-604", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 183283729794610317838342070133256178594, .node = "testNode-61", .pods = [k8spolicy.PodReference{.name = "testPod-611", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 222563440313352744501332668929241581375, .node = "testNode-61", .pods = [k8spolicy.PodReference{.name = "testPod-618", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 229024273500495890788903593305812329540, .node = "testNode-61", .pods = [k8spolicy.PodReference{.name = "testPod-617", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 233147737046392678223862196895414800792, .node = "testNode-62", .pods = [k8spolicy.PodReference{.name = "testPod-625", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 234752831608620362815805000034219514155, .node = "testNode-60", .pods = [k8spolicy.PodReference{.name = "testPod-607", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 253768601933530702925143752015546438066, .node = "testNode-60", .pods = [k8spolicy.PodReference{.name = "testPod-608", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 257315562249696113097234276718894783725, .node = "testNode-63", .pods = [k8spolicy.PodReference{.name = "testPod-630", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 268562897540829458479725559689622339224, .node = "testNode-61", .pods = [k8spolicy.PodReference{.name = "testPod-619", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 294495005277112873334855387561644829062, .node = "testNode-60", .pods = [k8spolicy.PodReference{.name = "testPod-600", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 306558184631798652484173260905393680569, .node = "testNode-60", .pods = [k8spolicy.PodReference{.name = "testPod-602", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 318821428688056883498017451075008150497, .node = "testNode-62", .pods = [k8spolicy.PodReference{.name = "testPod-627", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 330130238032115757858869958978536200216, .node = "testNode-62", .pods = [k8spolicy.PodReference{.name = "testPod-626", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 337455536338842635447440504577022314364, .node = "testNode-61", .pods = [k8spolicy.PodReference{.name = "testPod-615", .namespace = "testNamespace"}]}: +1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 3716464263243677870556622475737383443, .span = "testNode-60"}: +1
AppliedToGroupSpan{.appliedToGroup = 9663145268869478633448107855661856068, .span = "testNode-62"}: +1
AppliedToGroupSpan{.appliedToGroup = 13056345226351649193613166612021781604, .span = "testNode-62"}: +1
AppliedToGroupSpan{.appliedToGroup = 20410984638251524353250984514670141381, .span = "testNode-62"}: +1
AppliedToGroupSpan{.appliedToGroup = 44481766542918776411588932534483097483, .span = "testNode-61"}: +1
AppliedToGroupSpan{.appliedToGroup = 48309349432861181167947417457980733463, .span = "testNode-60"}: +1
AppliedToGroupSpan{.appliedToGroup = 57875646562199068558487178099819616336, .span = "testNode-59"}: +1
AppliedToGroupSpan{.appliedToGroup = 62039266921959583878146638597778698451, .span = "testNode-62"}: +1
AppliedToGroupSpan{.appliedToGroup = 73249166270127153923312010831970725047, .span = "testNode-62"}: +1
AppliedToGroupSpan{.appliedToGroup = 80151096006657336496841627720522046415, .span = "testNode-60"}: +1
AppliedToGroupSpan{.appliedToGroup = 103667067060352667355214945142441620522, .span = "testNode-61"}: +1
AppliedToGroupSpan{.appliedToGroup = 109595952875776271881629169264627301236, .span = "testNode-61"}: +1
AppliedToGroupSpan{.appliedToGroup = 113579145843466544150223959520925482777, .span = "testNode-61"}: +1
AppliedToGroupSpan{.appliedToGroup = 120533616110235788555806058770320580981, .span = "testNode-62"}: +1
AppliedToGroupSpan{.appliedToGroup = 136677443506820200208943639420534968877, .span = "testNode-61"}: +1
AppliedToGroupSpan{.appliedToGroup = 137491205310995470111280456616495553705, .span = "testNode-60"}: +1
AppliedToGroupSpan{.appliedToGroup = 154045869066992464186289003948736002224, .span = "testNode-60"}: +1
AppliedToGroupSpan{.appliedToGroup = 160940163208804731987974609808421201535, .span = "testNode-62"}: +1
AppliedToGroupSpan{.appliedToGroup = 165069763045347105976351217057869520086, .span = "testNode-60"}: +1
AppliedToGroupSpan{.appliedToGroup = 183283729794610317838342070133256178594, .span = "testNode-61"}: +1
AppliedToGroupSpan{.appliedToGroup = 222563440313352744501332668929241581375, .span = "testNode-61"}: +1
AppliedToGroupSpan{.appliedToGroup = 229024273500495890788903593305812329540, .span = "testNode-61"}: +1
AppliedToGroupSpan{.appliedToGroup = 233147737046392678223862196895414800792, .span = "testNode-62"}: +1
AppliedToGroupSpan{.appliedToGroup = 234752831608620362815805000034219514155, .span = "testNode-60"}: +1
AppliedToGroupSpan{.appliedToGroup = 253768601933530702925143752015546438066, .span = "testNode-60"}: +1
AppliedToGroupSpan{.appliedToGroup = 257315562249696113097234276718894783725, .span = "testNode-63"}: +1
AppliedToGroupSpan{.appliedToGroup = 268562897540829458479725559689622339224, .span = "testNode-61"}: +1
AppliedToGroupSpan{.appliedToGroup = 294495005277112873334855387561644829062, .span = "testNode-60"}: +1
AppliedToGroupSpan{.appliedToGroup = 306558184631798652484173260905393680569, .span = "testNode-60"}: +1
AppliedToGroupSpan{.appliedToGroup = 318821428688056883498017451075008150497, .span = "testNode-62"}: +1
AppliedToGroupSpan{.appliedToGroup = 330130238032115757858869958978536200216, .span = "testNode-62"}: +1
AppliedToGroupSpan{.appliedToGroup = 337455536338842635447440504577022314364, .span = "testNode-61"}: +1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-599"}, .name = "testNP-599", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [294495005277112873334855387561644829062], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [57875646562199068558487178099819616336]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-600"}, .name = "testNP-600", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [80151096006657336496841627720522046415], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [294495005277112873334855387561644829062]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-601"}, .name = "testNP-601", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [306558184631798652484173260905393680569], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [80151096006657336496841627720522046415]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-602"}, .name = "testNP-602", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [137491205310995470111280456616495553705], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [306558184631798652484173260905393680569]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-603"}, .name = "testNP-603", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [165069763045347105976351217057869520086], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [137491205310995470111280456616495553705]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-604"}, .name = "testNP-604", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [154045869066992464186289003948736002224], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [165069763045347105976351217057869520086]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-605"}, .name = "testNP-605", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [48309349432861181167947417457980733463], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [154045869066992464186289003948736002224]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-606"}, .name = "testNP-606", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [234752831608620362815805000034219514155], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [48309349432861181167947417457980733463]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-607"}, .name = "testNP-607", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [253768601933530702925143752015546438066], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [234752831608620362815805000034219514155]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-608"}, .name = "testNP-608", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [3716464263243677870556622475737383443], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [253768601933530702925143752015546438066]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-609"}, .name = "testNP-609", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [103667067060352667355214945142441620522], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [3716464263243677870556622475737383443]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-610"}, .name = "testNP-610", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [183283729794610317838342070133256178594], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [103667067060352667355214945142441620522]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-611"}, .name = "testNP-611", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [109595952875776271881629169264627301236], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [183283729794610317838342070133256178594]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-612"}, .name = "testNP-612", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [44481766542918776411588932534483097483], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [109595952875776271881629169264627301236]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-613"}, .name = "testNP-613", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [136677443506820200208943639420534968877], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [44481766542918776411588932534483097483]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-614"}, .name = "testNP-614", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [337455536338842635447440504577022314364], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [136677443506820200208943639420534968877]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-615"}, .name = "testNP-615", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [113579145843466544150223959520925482777], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [337455536338842635447440504577022314364]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-616"}, .name = "testNP-616", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [229024273500495890788903593305812329540], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [113579145843466544150223959520925482777]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-617"}, .name = "testNP-617", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [222563440313352744501332668929241581375], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [229024273500495890788903593305812329540]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-618"}, .name = "testNP-618", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [268562897540829458479725559689622339224], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [222563440313352744501332668929241581375]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-619"}, .name = "testNP-619", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [73249166270127153923312010831970725047], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [268562897540829458479725559689622339224]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-620"}, .name = "testNP-620", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [13056345226351649193613166612021781604], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [73249166270127153923312010831970725047]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-621"}, .name = "testNP-621", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [62039266921959583878146638597778698451], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [13056345226351649193613166612021781604]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-622"}, .name = "testNP-622", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [20410984638251524353250984514670141381], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [62039266921959583878146638597778698451]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-623"}, .name = "testNP-623", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [9663145268869478633448107855661856068], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [20410984638251524353250984514670141381]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-624"}, .name = "testNP-624", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [233147737046392678223862196895414800792], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [9663145268869478633448107855661856068]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-625"}, .name = "testNP-625", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [330130238032115757858869958978536200216], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [233147737046392678223862196895414800792]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-626"}, .name = "testNP-626", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [318821428688056883498017451075008150497], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [330130238032115757858869958978536200216]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-627"}, .name = "testNP-627", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [160940163208804731987974609808421201535], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [318821428688056883498017451075008150497]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-628"}, .name = "testNP-628", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [120533616110235788555806058770320580981], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [160940163208804731987974609808421201535]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-629"}, .name = "testNP-629", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [257315562249696113097234276718894783725], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [120533616110235788555806058770320580981]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-630"}, .name = "testNP-630", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [29454646625329881124953280547726788403], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [257315562249696113097234276718894783725]}: +1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-599", .policy = k8spolicy.UID{.uid = "testNP-599"}, .node = "testNode-59"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-600", .policy = k8spolicy.UID{.uid = "testNP-600"}, .node = "testNode-60"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-601", .policy = k8spolicy.UID{.uid = "testNP-601"}, .node = "testNode-60"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-602", .policy = k8spolicy.UID{.uid = "testNP-602"}, .node = "testNode-60"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-603", .policy = k8spolicy.UID{.uid = "testNP-603"}, .node = "testNode-60"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-604", .policy = k8spolicy.UID{.uid = "testNP-604"}, .node = "testNode-60"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-605", .policy = k8spolicy.UID{.uid = "testNP-605"}, .node = "testNode-60"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-606", .policy = k8spolicy.UID{.uid = "testNP-606"}, .node = "testNode-60"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-607", .policy = k8spolicy.UID{.uid = "testNP-607"}, .node = "testNode-60"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-608", .policy = k8spolicy.UID{.uid = "testNP-608"}, .node = "testNode-60"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-609", .policy = k8spolicy.UID{.uid = "testNP-609"}, .node = "testNode-60"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-610", .policy = k8spolicy.UID{.uid = "testNP-610"}, .node = "testNode-61"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-611", .policy = k8spolicy.UID{.uid = "testNP-611"}, .node = "testNode-61"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-612", .policy = k8spolicy.UID{.uid = "testNP-612"}, .node = "testNode-61"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-613", .policy = k8spolicy.UID{.uid = "testNP-613"}, .node = "testNode-61"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-614", .policy = k8spolicy.UID{.uid = "testNP-614"}, .node = "testNode-61"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-615", .policy = k8spolicy.UID{.uid = "testNP-615"}, .node = "testNode-61"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-616", .policy = k8spolicy.UID{.uid = "testNP-616"}, .node = "testNode-61"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-617", .policy = k8spolicy.UID{.uid = "testNP-617"}, .node = "testNode-61"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-618", .policy = k8spolicy.UID{.uid = "testNP-618"}, .node = "testNode-61"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-619", .policy = k8spolicy.UID{.uid = "testNP-619"}, .node = "testNode-61"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-620", .policy = k8spolicy.UID{.uid = "testNP-620"}, .node = "testNode-62"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-621", .policy = k8spolicy.UID{.uid = "testNP-621"}, .node = "testNode-62"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-622", .policy = k8spolicy.UID{.uid = "testNP-622"}, .node = "testNode-62"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-623", .policy = k8spolicy.UID{.uid = "testNP-623"}, .node = "testNode-62"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-624", .policy = k8spolicy.UID{.uid = "testNP-624"}, .node = "testNode-62"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-625", .policy = k8spolicy.UID{.uid = "testNP-625"}, .node = "testNode-62"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-626", .policy = k8spolicy.UID{.uid = "testNP-626"}, .node = "testNode-62"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-627", .policy = k8spolicy.UID{.uid = "testNP-627"}, .node = "testNode-62"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-628", .policy = k8spolicy.UID{.uid = "testNP-628"}, .node = "testNode-62"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-629", .policy = k8spolicy.UID{.uid = "testNP-629"}, .node = "testNode-62"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-630", .policy = k8spolicy.UID{.uid = "testNP-630"}, .node = "testNode-63"}: +1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 8131214440267313105633271916923414045, .address = "10.10.65.8"}: +1
AddressGroupAddress{.addressGroup = 25576374316170353970235385035027072704, .address = "10.10.64.2"}: +1
AddressGroupAddress{.addressGroup = 27778378293976698695285799872679130468, .address = "10.10.63.2"}: +1
AddressGroupAddress{.addressGroup = 47686272756041710353304424550071589232, .address = "10.10.64.1"}: +1
AddressGroupAddress{.addressGroup = 82126703144166505475564181059577305506, .address = "10.10.65.0"}: +1
AddressGroupAddress{.addressGroup = 90941428715328976020837649719702683016, .address = "10.10.65.1"}: +1
AddressGroupAddress{.addressGroup = 111861943731925372747751947018425918532, .address = "10.10.65.9"}: +1
AddressGroupAddress{.addressGroup = 114926762308622209795245423381446101159, .address = "10.10.64.6"}: +1
AddressGroupAddress{.addressGroup = 119585048549478709141804874227314016055, .address = "10.10.64.7"}: +1
AddressGroupAddress{.addressGroup = 123872733178261764728939611809282555396, .address = "10.10.63.9"}: +1
AddressGroupAddress{.addressGroup = 143624621217769766541427656420503794060, .address = "10.10.64.0"}: +1
AddressGroupAddress{.addressGroup = 149198337302295902157096844862379398176, .address = "10.10.65.7"}: +1
AddressGroupAddress{.addressGroup = 157821311043971614604033670900713152983, .address = "10.10.66.0"}: +1
AddressGroupAddress{.addressGroup = 162027978527484395043948221888101317069, .address = "10.10.64.3"}: +1
AddressGroupAddress{.addressGroup = 162097615997677536494549499493944303757, .address = "10.10.63.3"}: +1
AddressGroupAddress{.addressGroup = 180381230749274994342143216432048200554, .address = "10.10.65.2"}: +1
AddressGroupAddress{.addressGroup = 187199851011668350524320507339974314060, .address = "10.10.66.1"}: +1
AddressGroupAddress{.addressGroup = 190646259806768426496430375940959373915, .address = "10.10.65.6"}: +1
AddressGroupAddress{.addressGroup = 193896006359918741529054448688555368778, .address = "10.10.65.3"}: +1
AddressGroupAddress{.addressGroup = 199501287784320821062320213627481535371, .address = "10.10.66.3"}: +1
AddressGroupAddress{.addressGroup = 201618307305294847332593367405043490113, .address = "10.10.65.5"}: +1
AddressGroupAddress{.addressGroup = 207268880073424509968974014928922274045, .address = "10.10.63.7"}: +1
AddressGroupAddress{.addressGroup = 209975073300597752477875721328218052150, .address = "10.10.63.5"}: +1
AddressGroupAddress{.addressGroup = 213010257229229844040819633218190417389, .address = "10.10.65.4"}: +1
AddressGroupAddress{.addressGroup = 214420099612653998753006163641196535258, .address = "10.10.63.6"}: +1
AddressGroupAddress{.addressGroup = 231200103265209604778267915842215542501, .address = "10.10.66.2"}: +1
AddressGroupAddress{.addressGroup = 256895205621744170114084304659165241526, .address = "10.10.64.8"}: +1
AddressGroupAddress{.addressGroup = 268315365323184724272355617861231568293, .address = "10.10.64.4"}: +1
AddressGroupAddress{.addressGroup = 270365376391811312469077999304473262339, .address = "10.10.63.4"}: +1
AddressGroupAddress{.addressGroup = 274204072696099270881317343592984087740, .address = "10.10.63.8"}: +1
AddressGroupAddress{.addressGroup = 291268439441382665442527760983129607061, .address = "10.10.64.5"}: +1
AddressGroupAddress{.addressGroup = 333622881539232253481917888105744819040, .address = "10.10.64.9"}: +1
AddressGroupDescr:
AddressGroupDescr{.name = "061e03d2-f13c-5711-b7a3-d1060b17661d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-658]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-658")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "133dd49c-b9a7-5155-a4c6-78463bc346c0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-642]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-642")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "14e5ebca-584d-5f9d-b43a-fb5698a03564", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-632]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-632")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "23e00ac4-afe9-5653-9987-e0911990d970", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-641]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-641")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "3dc90716-2978-505c-a87d-4705a347d9a2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-650]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-650")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "446aae9c-7499-52b2-a130-c3fc7ae57d88", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-651]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-651")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "5427d3a3-130a-582b-ad9f-4492317ce444", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-659]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-659")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "567616db-fb7e-551f-b856-aaea40d788a7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-646]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-646")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "59f73e1a-64ed-5a2d-8db0-9f53511f3f37", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-647]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-647")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "5d310546-d5d4-523d-b785-2c7675ec7e04", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-639]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-639")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "6c0d188b-4b43-5eff-b36a-93f7101f318c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-640]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-640")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "703e8df6-bf86-5ce8-9c85-00582b861420", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-657]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-657")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "76bb4764-b16a-5a0d-a34c-d6f6c2f661d7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-660]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-660")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "79e5741c-ff45-5b60-8e3e-2d00a33379cd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-643]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-643")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "79f2dd81-7108-5ce6-9871-ae200bc6a08d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-633]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-633")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "87b4294f-947e-522d-93a2-3b02b1135b6a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-652]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-652")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "8cd5613e-d223-57fa-b0f6-4dd21683084c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-661]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-661")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "8f6d2251-6922-5dd6-9429-2dbc50c20a5b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-656]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-656")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "91df0331-887f-559e-ab54-cadbac98214a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-653]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-653")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "96168ce7-96b8-5aa5-80f7-98ddff9eb38b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-663]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-663")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "97ae4606-8f4a-5dc9-9c36-0e418df99d41", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-655]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-655")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "9bee88c5-bdeb-5162-b0b0-7bbc3a96e8fd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-637]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-637")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "9df7ba66-5d37-55de-aa62-ae5ff2ff9636", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-635]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-635")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "a0404885-6d68-557e-81c1-2668ac799ded", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-654]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-654")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "a14fcf1e-0c5c-58c5-bce6-5ebad9eeddda", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-636]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-636")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "adef852b-fbd7-55b0-b47a-7e6a4d5cfee5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-662]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-662")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "c1443787-4262-5765-8833-c6f05f3c60b6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-648]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-648")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "c9dba8df-93ad-5733-8092-d3baad3de5a5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-644]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-644")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "cb667a38-f94c-5e63-ac54-ae40a40f3903", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-634]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-634")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "ce49c890-098e-535e-b32f-0fbae2740cbc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-638]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-638")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "db2042cc-ccf7-5bf1-8eda-a2dd5c084b95", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-645]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-645")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "fafd6e05-55f0-52eb-8f3c-97519d7de360", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-649]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-649")], .matchExpressions = []}}}}: +1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 8131214440267313105633271916923414045, .node = "testNode-65"}: +1
AddressGroupSpan{.addressGroup = 25576374316170353970235385035027072704, .node = "testNode-64"}: +1
AddressGroupSpan{.addressGroup = 27778378293976698695285799872679130468, .node = "testNode-63"}: +1
AddressGroupSpan{.addressGroup = 47686272756041710353304424550071589232, .node = "testNode-64"}: +1
AddressGroupSpan{.addressGroup = 82126703144166505475564181059577305506, .node = "testNode-64"}: +1
AddressGroupSpan{.addressGroup = 90941428715328976020837649719702683016, .node = "testNode-65"}: +1
AddressGroupSpan{.addressGroup = 111861943731925372747751947018425918532, .node = "testNode-65"}: +1
AddressGroupSpan{.addressGroup = 114926762308622209795245423381446101159, .node = "testNode-64"}: +1
AddressGroupSpan{.addressGroup = 119585048549478709141804874227314016055, .node = "testNode-64"}: +1
AddressGroupSpan{.addressGroup = 123872733178261764728939611809282555396, .node = "testNode-63"}: +1
AddressGroupSpan{.addressGroup = 143624621217769766541427656420503794060, .node = "testNode-63"}: +1
AddressGroupSpan{.addressGroup = 149198337302295902157096844862379398176, .node = "testNode-65"}: +1
AddressGroupSpan{.addressGroup = 157821311043971614604033670900713152983, .node = "testNode-65"}: +1
AddressGroupSpan{.addressGroup = 162027978527484395043948221888101317069, .node = "testNode-64"}: +1
AddressGroupSpan{.addressGroup = 162097615997677536494549499493944303757, .node = "testNode-63"}: +1
AddressGroupSpan{.addressGroup = 180381230749274994342143216432048200554, .node = "testNode-65"}: +1
AddressGroupSpan{.addressGroup = 187199851011668350524320507339974314060, .node = "testNode-66"}: +1
AddressGroupSpan{.addressGroup = 190646259806768426496430375940959373915, .node = "testNode-65"}: +1
AddressGroupSpan{.addressGroup = 193896006359918741529054448688555368778, .node = "testNode-65"}: +1
AddressGroupSpan{.addressGroup = 199501287784320821062320213627481535371, .node = "testNode-66"}: +1
AddressGroupSpan{.addressGroup = 201618307305294847332593367405043490113, .node = "testNode-65"}: +1
AddressGroupSpan{.addressGroup = 207268880073424509968974014928922274045, .node = "testNode-63"}: +1
AddressGroupSpan{.addressGroup = 209975073300597752477875721328218052150, .node = "testNode-63"}: +1
AddressGroupSpan{.addressGroup = 213010257229229844040819633218190417389, .node = "testNode-65"}: +1
AddressGroupSpan{.addressGroup = 214420099612653998753006163641196535258, .node = "testNode-63"}: +1
AddressGroupSpan{.addressGroup = 231200103265209604778267915842215542501, .node = "testNode-66"}: +1
AddressGroupSpan{.addressGroup = 256895205621744170114084304659165241526, .node = "testNode-64"}: +1
AddressGroupSpan{.addressGroup = 268315365323184724272355617861231568293, .node = "testNode-64"}: +1
AddressGroupSpan{.addressGroup = 270365376391811312469077999304473262339, .node = "testNode-63"}: +1
AddressGroupSpan{.addressGroup = 274204072696099270881317343592984087740, .node = "testNode-63"}: +1
AddressGroupSpan{.addressGroup = 291268439441382665442527760983129607061, .node = "testNode-64"}: +1
AddressGroupSpan{.addressGroup = 333622881539232253481917888105744819040, .node = "testNode-64"}: +1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "061e03d2-f13c-5711-b7a3-d1060b17661d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-658]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-658")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "133dd49c-b9a7-5155-a4c6-78463bc346c0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-642]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-642")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "14e5ebca-584d-5f9d-b43a-fb5698a03564", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-632]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-632")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "1628c233-3279-572b-8b79-88538c9b8733", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-631]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-631")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "23e00ac4-afe9-5653-9987-e0911990d970", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-641]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-641")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "3dc90716-2978-505c-a87d-4705a347d9a2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-650]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-650")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "446aae9c-7499-52b2-a130-c3fc7ae57d88", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-651]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-651")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "5427d3a3-130a-582b-ad9f-4492317ce444", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-659]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-659")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "567616db-fb7e-551f-b856-aaea40d788a7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-646]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-646")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "59f73e1a-64ed-5a2d-8db0-9f53511f3f37", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-647]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-647")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "5d310546-d5d4-523d-b785-2c7675ec7e04", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-639]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-639")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "6c0d188b-4b43-5eff-b36a-93f7101f318c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-640]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-640")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "703e8df6-bf86-5ce8-9c85-00582b861420", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-657]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-657")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "76bb4764-b16a-5a0d-a34c-d6f6c2f661d7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-660]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-660")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "79e5741c-ff45-5b60-8e3e-2d00a33379cd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-643]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-643")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "79f2dd81-7108-5ce6-9871-ae200bc6a08d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-633]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-633")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "87b4294f-947e-522d-93a2-3b02b1135b6a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-652]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-652")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "8cd5613e-d223-57fa-b0f6-4dd21683084c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-661]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-661")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "8f6d2251-6922-5dd6-9429-2dbc50c20a5b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-656]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-656")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "91df0331-887f-559e-ab54-cadbac98214a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-653]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-653")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "97ae4606-8f4a-5dc9-9c36-0e418df99d41", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-655]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-655")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "9bee88c5-bdeb-5162-b0b0-7bbc3a96e8fd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-637]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-637")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "9df7ba66-5d37-55de-aa62-ae5ff2ff9636", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-635]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-635")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "a0404885-6d68-557e-81c1-2668ac799ded", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-654]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-654")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "a14fcf1e-0c5c-58c5-bce6-5ebad9eeddda", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-636]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-636")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "adef852b-fbd7-55b0-b47a-7e6a4d5cfee5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-662]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-662")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "c1443787-4262-5765-8833-c6f05f3c60b6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-648]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-648")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "c9dba8df-93ad-5733-8092-d3baad3de5a5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-644]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-644")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "cb667a38-f94c-5e63-ac54-ae40a40f3903", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-634]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-634")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "ce49c890-098e-535e-b32f-0fbae2740cbc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-638]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-638")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "db2042cc-ccf7-5bf1-8eda-a2dd5c084b95", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-645]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-645")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "fafd6e05-55f0-52eb-8f3c-97519d7de360", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-649]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-649")], .matchExpressions = []}}}}: +1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 8131214440267313105633271916923414045, .node = "testNode-65", .pods = [k8spolicy.PodReference{.name = "testPod-658", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 25576374316170353970235385035027072704, .node = "testNode-64", .pods = [k8spolicy.PodReference{.name = "testPod-642", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 27778378293976698695285799872679130468, .node = "testNode-63", .pods = [k8spolicy.PodReference{.name = "testPod-632", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 29454646625329881124953280547726788403, .node = "testNode-63", .pods = [k8spolicy.PodReference{.name = "testPod-631", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 47686272756041710353304424550071589232, .node = "testNode-64", .pods = [k8spolicy.PodReference{.name = "testPod-641", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 82126703144166505475564181059577305506, .node = "testNode-65", .pods = [k8spolicy.PodReference{.name = "testPod-650", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 90941428715328976020837649719702683016, .node = "testNode-65", .pods = [k8spolicy.PodReference{.name = "testPod-651", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 111861943731925372747751947018425918532, .node = "testNode-65", .pods = [k8spolicy.PodReference{.name = "testPod-659", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 114926762308622209795245423381446101159, .node = "testNode-64", .pods = [k8spolicy.PodReference{.name = "testPod-646", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 119585048549478709141804874227314016055, .node = "testNode-64", .pods = [k8spolicy.PodReference{.name = "testPod-647", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 123872733178261764728939611809282555396, .node = "testNode-63", .pods = [k8spolicy.PodReference{.name = "testPod-639", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 143624621217769766541427656420503794060, .node = "testNode-64", .pods = [k8spolicy.PodReference{.name = "testPod-640", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 149198337302295902157096844862379398176, .node = "testNode-65", .pods = [k8spolicy.PodReference{.name = "testPod-657", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 157821311043971614604033670900713152983, .node = "testNode-66", .pods = [k8spolicy.PodReference{.name = "testPod-660", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 162027978527484395043948221888101317069, .node = "testNode-64", .pods = [k8spolicy.PodReference{.name = "testPod-643", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 162097615997677536494549499493944303757, .node = "testNode-63", .pods = [k8spolicy.PodReference{.name = "testPod-633", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 180381230749274994342143216432048200554, .node = "testNode-65", .pods = [k8spolicy.PodReference{.name = "testPod-652", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 187199851011668350524320507339974314060, .node = "testNode-66", .pods = [k8spolicy.PodReference{.name = "testPod-661", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 190646259806768426496430375940959373915, .node = "testNode-65", .pods = [k8spolicy.PodReference{.name = "testPod-656", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 193896006359918741529054448688555368778, .node = "testNode-65", .pods = [k8spolicy.PodReference{.name = "testPod-653", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 201618307305294847332593367405043490113, .node = "testNode-65", .pods = [k8spolicy.PodReference{.name = "testPod-655", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 207268880073424509968974014928922274045, .node = "testNode-63", .pods = [k8spolicy.PodReference{.name = "testPod-637", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 209975073300597752477875721328218052150, .node = "testNode-63", .pods = [k8spolicy.PodReference{.name = "testPod-635", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 213010257229229844040819633218190417389, .node = "testNode-65", .pods = [k8spolicy.PodReference{.name = "testPod-654", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 214420099612653998753006163641196535258, .node = "testNode-63", .pods = [k8spolicy.PodReference{.name = "testPod-636", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 231200103265209604778267915842215542501, .node = "testNode-66", .pods = [k8spolicy.PodReference{.name = "testPod-662", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 256895205621744170114084304659165241526, .node = "testNode-64", .pods = [k8spolicy.PodReference{.name = "testPod-648", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 268315365323184724272355617861231568293, .node = "testNode-64", .pods = [k8spolicy.PodReference{.name = "testPod-644", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 270365376391811312469077999304473262339, .node = "testNode-63", .pods = [k8spolicy.PodReference{.name = "testPod-634", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 274204072696099270881317343592984087740, .node = "testNode-63", .pods = [k8spolicy.PodReference{.name = "testPod-638", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 291268439441382665442527760983129607061, .node = "testNode-64", .pods = [k8spolicy.PodReference{.name = "testPod-645", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 333622881539232253481917888105744819040, .node = "testNode-64", .pods = [k8spolicy.PodReference{.name = "testPod-649", .namespace = "testNamespace"}]}: +1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 8131214440267313105633271916923414045, .span = "testNode-65"}: +1
AppliedToGroupSpan{.appliedToGroup = 25576374316170353970235385035027072704, .span = "testNode-64"}: +1
AppliedToGroupSpan{.appliedToGroup = 27778378293976698695285799872679130468, .span = "testNode-63"}: +1
AppliedToGroupSpan{.appliedToGroup = 29454646625329881124953280547726788403, .span = "testNode-63"}: +1
AppliedToGroupSpan{.appliedToGroup = 47686272756041710353304424550071589232, .span = "testNode-64"}: +1
AppliedToGroupSpan{.appliedToGroup = 82126703144166505475564181059577305506, .span = "testNode-65"}: +1
AppliedToGroupSpan{.appliedToGroup = 90941428715328976020837649719702683016, .span = "testNode-65"}: +1
AppliedToGroupSpan{.appliedToGroup = 111861943731925372747751947018425918532, .span = "testNode-65"}: +1
AppliedToGroupSpan{.appliedToGroup = 114926762308622209795245423381446101159, .span = "testNode-64"}: +1
AppliedToGroupSpan{.appliedToGroup = 119585048549478709141804874227314016055, .span = "testNode-64"}: +1
AppliedToGroupSpan{.appliedToGroup = 123872733178261764728939611809282555396, .span = "testNode-63"}: +1
AppliedToGroupSpan{.appliedToGroup = 143624621217769766541427656420503794060, .span = "testNode-64"}: +1
AppliedToGroupSpan{.appliedToGroup = 149198337302295902157096844862379398176, .span = "testNode-65"}: +1
AppliedToGroupSpan{.appliedToGroup = 157821311043971614604033670900713152983, .span = "testNode-66"}: +1
AppliedToGroupSpan{.appliedToGroup = 162027978527484395043948221888101317069, .span = "testNode-64"}: +1
AppliedToGroupSpan{.appliedToGroup = 162097615997677536494549499493944303757, .span = "testNode-63"}: +1
AppliedToGroupSpan{.appliedToGroup = 180381230749274994342143216432048200554, .span = "testNode-65"}: +1
AppliedToGroupSpan{.appliedToGroup = 187199851011668350524320507339974314060, .span = "testNode-66"}: +1
AppliedToGroupSpan{.appliedToGroup = 190646259806768426496430375940959373915, .span = "testNode-65"}: +1
AppliedToGroupSpan{.appliedToGroup = 193896006359918741529054448688555368778, .span = "testNode-65"}: +1
AppliedToGroupSpan{.appliedToGroup = 201618307305294847332593367405043490113, .span = "testNode-65"}: +1
AppliedToGroupSpan{.appliedToGroup = 207268880073424509968974014928922274045, .span = "testNode-63"}: +1
AppliedToGroupSpan{.appliedToGroup = 209975073300597752477875721328218052150, .span = "testNode-63"}: +1
AppliedToGroupSpan{.appliedToGroup = 213010257229229844040819633218190417389, .span = "testNode-65"}: +1
AppliedToGroupSpan{.appliedToGroup = 214420099612653998753006163641196535258, .span = "testNode-63"}: +1
AppliedToGroupSpan{.appliedToGroup = 231200103265209604778267915842215542501, .span = "testNode-66"}: +1
AppliedToGroupSpan{.appliedToGroup = 256895205621744170114084304659165241526, .span = "testNode-64"}: +1
AppliedToGroupSpan{.appliedToGroup = 268315365323184724272355617861231568293, .span = "testNode-64"}: +1
AppliedToGroupSpan{.appliedToGroup = 270365376391811312469077999304473262339, .span = "testNode-63"}: +1
AppliedToGroupSpan{.appliedToGroup = 274204072696099270881317343592984087740, .span = "testNode-63"}: +1
AppliedToGroupSpan{.appliedToGroup = 291268439441382665442527760983129607061, .span = "testNode-64"}: +1
AppliedToGroupSpan{.appliedToGroup = 333622881539232253481917888105744819040, .span = "testNode-64"}: +1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-631"}, .name = "testNP-631", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [27778378293976698695285799872679130468], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [29454646625329881124953280547726788403]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-632"}, .name = "testNP-632", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [162097615997677536494549499493944303757], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [27778378293976698695285799872679130468]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-633"}, .name = "testNP-633", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [270365376391811312469077999304473262339], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [162097615997677536494549499493944303757]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-634"}, .name = "testNP-634", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [209975073300597752477875721328218052150], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [270365376391811312469077999304473262339]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-635"}, .name = "testNP-635", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [214420099612653998753006163641196535258], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [209975073300597752477875721328218052150]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-636"}, .name = "testNP-636", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [207268880073424509968974014928922274045], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [214420099612653998753006163641196535258]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-637"}, .name = "testNP-637", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [274204072696099270881317343592984087740], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [207268880073424509968974014928922274045]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-638"}, .name = "testNP-638", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [123872733178261764728939611809282555396], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [274204072696099270881317343592984087740]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-639"}, .name = "testNP-639", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [143624621217769766541427656420503794060], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [123872733178261764728939611809282555396]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-640"}, .name = "testNP-640", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [47686272756041710353304424550071589232], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [143624621217769766541427656420503794060]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-641"}, .name = "testNP-641", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [25576374316170353970235385035027072704], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [47686272756041710353304424550071589232]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-642"}, .name = "testNP-642", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [162027978527484395043948221888101317069], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [25576374316170353970235385035027072704]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-643"}, .name = "testNP-643", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [268315365323184724272355617861231568293], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [162027978527484395043948221888101317069]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-644"}, .name = "testNP-644", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [291268439441382665442527760983129607061], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [268315365323184724272355617861231568293]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-645"}, .name = "testNP-645", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [114926762308622209795245423381446101159], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [291268439441382665442527760983129607061]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-646"}, .name = "testNP-646", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [119585048549478709141804874227314016055], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [114926762308622209795245423381446101159]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-647"}, .name = "testNP-647", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [256895205621744170114084304659165241526], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [119585048549478709141804874227314016055]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-648"}, .name = "testNP-648", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [333622881539232253481917888105744819040], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [256895205621744170114084304659165241526]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-649"}, .name = "testNP-649", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [82126703144166505475564181059577305506], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [333622881539232253481917888105744819040]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-650"}, .name = "testNP-650", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [90941428715328976020837649719702683016], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [82126703144166505475564181059577305506]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-651"}, .name = "testNP-651", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [180381230749274994342143216432048200554], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [90941428715328976020837649719702683016]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-652"}, .name = "testNP-652", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [193896006359918741529054448688555368778], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [180381230749274994342143216432048200554]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-653"}, .name = "testNP-653", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [213010257229229844040819633218190417389], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [193896006359918741529054448688555368778]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-654"}, .name = "testNP-654", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [201618307305294847332593367405043490113], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [213010257229229844040819633218190417389]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-655"}, .name = "testNP-655", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [190646259806768426496430375940959373915], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [201618307305294847332593367405043490113]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-656"}, .name = "testNP-656", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [149198337302295902157096844862379398176], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [190646259806768426496430375940959373915]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-657"}, .name = "testNP-657", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [8131214440267313105633271916923414045], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [149198337302295902157096844862379398176]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-658"}, .name = "testNP-658", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [111861943731925372747751947018425918532], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [8131214440267313105633271916923414045]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-659"}, .name = "testNP-659", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [157821311043971614604033670900713152983], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [111861943731925372747751947018425918532]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-660"}, .name = "testNP-660", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [187199851011668350524320507339974314060], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [157821311043971614604033670900713152983]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-661"}, .name = "testNP-661", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [231200103265209604778267915842215542501], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [187199851011668350524320507339974314060]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-662"}, .name = "testNP-662", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [199501287784320821062320213627481535371], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [231200103265209604778267915842215542501]}: +1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-631", .policy = k8spolicy.UID{.uid = "testNP-631"}, .node = "testNode-63"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-632", .policy = k8spolicy.UID{.uid = "testNP-632"}, .node = "testNode-63"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-633", .policy = k8spolicy.UID{.uid = "testNP-633"}, .node = "testNode-63"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-634", .policy = k8spolicy.UID{.uid = "testNP-634"}, .node = "testNode-63"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-635", .policy = k8spolicy.UID{.uid = "testNP-635"}, .node = "testNode-63"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-636", .policy = k8spolicy.UID{.uid = "testNP-636"}, .node = "testNode-63"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-637", .policy = k8spolicy.UID{.uid = "testNP-637"}, .node = "testNode-63"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-638", .policy = k8spolicy.UID{.uid = "testNP-638"}, .node = "testNode-63"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-639", .policy = k8spolicy.UID{.uid = "testNP-639"}, .node = "testNode-63"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-640", .policy = k8spolicy.UID{.uid = "testNP-640"}, .node = "testNode-64"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-641", .policy = k8spolicy.UID{.uid = "testNP-641"}, .node = "testNode-64"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-642", .policy = k8spolicy.UID{.uid = "testNP-642"}, .node = "testNode-64"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-643", .policy = k8spolicy.UID{.uid = "testNP-643"}, .node = "testNode-64"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-644", .policy = k8spolicy.UID{.uid = "testNP-644"}, .node = "testNode-64"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-645", .policy = k8spolicy.UID{.uid = "testNP-645"}, .node = "testNode-64"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-646", .policy = k8spolicy.UID{.uid = "testNP-646"}, .node = "testNode-64"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-647", .policy = k8spolicy.UID{.uid = "testNP-647"}, .node = "testNode-64"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-648", .policy = k8spolicy.UID{.uid = "testNP-648"}, .node = "testNode-64"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-649", .policy = k8spolicy.UID{.uid = "testNP-649"}, .node = "testNode-64"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-650", .policy = k8spolicy.UID{.uid = "testNP-650"}, .node = "testNode-65"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-651", .policy = k8spolicy.UID{.uid = "testNP-651"}, .node = "testNode-65"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-652", .policy = k8spolicy.UID{.uid = "testNP-652"}, .node = "testNode-65"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-653", .policy = k8spolicy.UID{.uid = "testNP-653"}, .node = "testNode-65"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-654", .policy = k8spolicy.UID{.uid = "testNP-654"}, .node = "testNode-65"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-655", .policy = k8spolicy.UID{.uid = "testNP-655"}, .node = "testNode-65"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-656", .policy = k8spolicy.UID{.uid = "testNP-656"}, .node = "testNode-65"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-657", .policy = k8spolicy.UID{.uid = "testNP-657"}, .node = "testNode-65"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-658", .policy = k8spolicy.UID{.uid = "testNP-658"}, .node = "testNode-65"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-659", .policy = k8spolicy.UID{.uid = "testNP-659"}, .node = "testNode-65"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-660", .policy = k8spolicy.UID{.uid = "testNP-660"}, .node = "testNode-66"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-661", .policy = k8spolicy.UID{.uid = "testNP-661"}, .node = "testNode-66"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-662", .policy = k8spolicy.UID{.uid = "testNP-662"}, .node = "testNode-66"}: +1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 6724822347028538184698449350057771513, .address = "10.10.67.2"}: +1
AddressGroupAddress{.addressGroup = 7351990186483557552444463781679904809, .address = "10.10.67.3"}: +1
AddressGroupAddress{.addressGroup = 24461730381542499610093051750066866265, .address = "10.10.68.5"}: +1
AddressGroupAddress{.addressGroup = 33349030135388836164731705051064410840, .address = "10.10.69.1"}: +1
AddressGroupAddress{.addressGroup = 62143987467383965424135080433797142978, .address = "10.10.69.4"}: +1
AddressGroupAddress{.addressGroup = 64580122586708728978132711878962153800, .address = "10.10.67.5"}: +1
AddressGroupAddress{.addressGroup = 85242953011492514034490306673927868452, .address = "10.10.68.7"}: +1
AddressGroupAddress{.addressGroup = 86486775776071724534880055643199948636, .address = "10.10.68.0"}: +1
AddressGroupAddress{.addressGroup = 86991615347597860023055905913112263037, .address = "10.10.69.2"}: +1
AddressGroupAddress{.addressGroup = 88683067973595289524317345464658190592, .address = "10.10.67.9"}: +1
AddressGroupAddress{.addressGroup = 120377797935223020323205290684099919383, .address = "10.10.68.1"}: +1
AddressGroupAddress{.addressGroup = 121108580630303683178705582888559181729, .address = "10.10.67.6"}: +1
AddressGroupAddress{.addressGroup = 134146252471949571977668474355948013527, .address = "10.10.68.9"}: +1
AddressGroupAddress{.addressGroup = 138086993536514857553090980018792399275, .address = "10.10.69.5"}: +1
AddressGroupAddress{.addressGroup = 168044091946758906090084828360503245716, .address = "10.10.69.0"}: +1
AddressGroupAddress{.addressGroup = 168667235084540050994202206607357889604, .address = "10.10.68.6"}: +1
AddressGroupAddress{.addressGroup = 180393454471334722579112570754050299799, .address = "10.10.68.8"}: +1
AddressGroupAddress{.addressGroup = 191216104771784158951842041944479914006, .address = "10.10.67.1"}: +1
AddressGroupAddress{.addressGroup = 201285752053047080602264562070774159818, .address = "10.10.67.4"}: +1
AddressGroupAddress{.addressGroup = 207778375529858467154367561208456585304, .address = "10.10.68.2"}: +1
AddressGroupAddress{.addressGroup = 212880699457879012319962995556026543041, .address = "10.10.68.4"}: +1
AddressGroupAddress{.addressGroup = 213716062725403220537860765893155039759, .address = "10.10.66.7"}: +1
AddressGroupAddress{.addressGroup = 214482833123729423733379005998105489644, .address = "10.10.67.7"}: +1
AddressGroupAddress{.addressGroup = 246779300450021411524970511128637645902, .address = "10.10.67.0"}: +1
AddressGroupAddress{.addressGroup = 258942052616446291897134980905455208001, .address = "10.10.69.3"}: +1
AddressGroupAddress{.addressGroup = 280153774932455238337123305715107600925, .address = "10.10.66.6"}: +1
AddressGroupAddress{.addressGroup = 282613042918141428597609262376610454098, .address = "10.10.66.9"}: +1
AddressGroupAddress{.addressGroup = 284023515744587474499613737136262848133, .address = "10.10.66.5"}: +1
AddressGroupAddress{.addressGroup = 293688677984215587141034871616936075800, .address = "10.10.68.3"}: +1
AddressGroupAddress{.addressGroup = 300606577088930369054413836550902541202, .address = "10.10.66.8"}: +1
AddressGroupAddress{.addressGroup = 322006876878864341276134893659865091836, .address = "10.10.67.8"}: +1
AddressGroupAddress{.addressGroup = 325588234872383664713869627785424654009, .address = "10.10.66.4"}: +1
AddressGroupDescr:
AddressGroupDescr{.name = "050f2757-1b25-5aff-a957-444f7bebc1f9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-672]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-672")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "0587f11a-2393-513a-bf8b-24fb834eb829", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-673]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-673")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "1267286c-5a57-550b-90b6-a915509ec859", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-685]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-685")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "1916ca21-9d10-5123-bf26-c68c1b9da2d8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-691]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-691")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "2ec07f23-522e-57ec-a82c-b8979e5599c2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-694]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-694")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "3095addf-6897-5833-b3bf-56ad9a0b8948", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-675]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-675")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "40213211-38c3-5538-a529-fe9357015024", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-687]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-687")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "4110bf43-a75b-5d54-8a29-3755499ac75c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-680]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-680")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "4171f9c6-e03b-5c81-9d2a-ee8a5462797d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-692]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-692")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "42b7bcd4-7888-57a1-b09f-1d677a586100", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-679]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-679")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "5a8febaa-5cf2-5e35-9f04-a3e18c24fe17", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-681]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-681")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "5b1caa08-bca2-57d8-b738-245eef91ffa1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-676]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-676")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "64eba0e2-8330-5991-a9e5-bf7ba04147d7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-689]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-689")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "67e2966b-8704-554b-80df-c194746b81ab", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-695]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-695")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "7e6c1d67-d7b5-5638-9b27-db894814bb94", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-690]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-690")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "7ee420bb-ffa7-5c26-b619-0cde7455cc44", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-686]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-686")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "87b683fc-a4ab-5d6e-8d63-1400fbb01797", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-688]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-688")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "8fdae1d8-0cb8-56b8-8e46-71e7edf05816", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-671]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-671")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "976e39c9-299c-5500-935f-242503b119ca", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-674]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-674")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "9c50a8d6-7e4d-57d1-9930-5dc1514ca058", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-682]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-682")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "a02754d4-746d-590e-98a9-e961e159ebc1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-684]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-684")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "a0c8376b-3ab4-5237-bcb2-007f5d8b2a0f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-667]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-667")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "a15be41e-4713-51a6-9abd-77acd185f0ec", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-677]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-677")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "b9a7f6e5-7c28-5e8c-94c1-d100d192a44e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-670]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-670")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "c2ce6ce0-6dc2-5dc4-9ff1-78e26c624641", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-693]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-693")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "d2c3a787-e8a7-5f9b-9373-ef269e279a1d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-666]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-666")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "d49d4acd-d197-53aa-b0bb-18f6f9945a52", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-669]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-669")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "d5acf07b-bfd0-5e0b-a497-27011f959e85", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-665]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-665")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "dcf261c5-e278-57a9-af37-e38ee62be218", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-683]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-683")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "e226b888-48c2-5b83-b3a8-f3da99566b92", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-668]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-668")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "f24044c6-1ce2-5ebe-8698-7425b9a60efc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-678]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-678")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "f4f2035b-0d45-5dbd-90a2-06d4488fceb9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-664]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-664")], .matchExpressions = []}}}}: +1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 6724822347028538184698449350057771513, .node = "testNode-67"}: +1
AddressGroupSpan{.addressGroup = 7351990186483557552444463781679904809, .node = "testNode-67"}: +1
AddressGroupSpan{.addressGroup = 24461730381542499610093051750066866265, .node = "testNode-68"}: +1
AddressGroupSpan{.addressGroup = 33349030135388836164731705051064410840, .node = "testNode-69"}: +1
AddressGroupSpan{.addressGroup = 62143987467383965424135080433797142978, .node = "testNode-69"}: +1
AddressGroupSpan{.addressGroup = 64580122586708728978132711878962153800, .node = "testNode-67"}: +1
AddressGroupSpan{.addressGroup = 85242953011492514034490306673927868452, .node = "testNode-68"}: +1
AddressGroupSpan{.addressGroup = 86486775776071724534880055643199948636, .node = "testNode-67"}: +1
AddressGroupSpan{.addressGroup = 86991615347597860023055905913112263037, .node = "testNode-69"}: +1
AddressGroupSpan{.addressGroup = 88683067973595289524317345464658190592, .node = "testNode-67"}: +1
AddressGroupSpan{.addressGroup = 120377797935223020323205290684099919383, .node = "testNode-68"}: +1
AddressGroupSpan{.addressGroup = 121108580630303683178705582888559181729, .node = "testNode-67"}: +1
AddressGroupSpan{.addressGroup = 134146252471949571977668474355948013527, .node = "testNode-68"}: +1
AddressGroupSpan{.addressGroup = 138086993536514857553090980018792399275, .node = "testNode-69"}: +1
AddressGroupSpan{.addressGroup = 168044091946758906090084828360503245716, .node = "testNode-68"}: +1
AddressGroupSpan{.addressGroup = 168667235084540050994202206607357889604, .node = "testNode-68"}: +1
AddressGroupSpan{.addressGroup = 180393454471334722579112570754050299799, .node = "testNode-68"}: +1
AddressGroupSpan{.addressGroup = 191216104771784158951842041944479914006, .node = "testNode-67"}: +1
AddressGroupSpan{.addressGroup = 201285752053047080602264562070774159818, .node = "testNode-67"}: +1
AddressGroupSpan{.addressGroup = 207778375529858467154367561208456585304, .node = "testNode-68"}: +1
AddressGroupSpan{.addressGroup = 212880699457879012319962995556026543041, .node = "testNode-68"}: +1
AddressGroupSpan{.addressGroup = 213716062725403220537860765893155039759, .node = "testNode-66"}: +1
AddressGroupSpan{.addressGroup = 214482833123729423733379005998105489644, .node = "testNode-67"}: +1
AddressGroupSpan{.addressGroup = 246779300450021411524970511128637645902, .node = "testNode-66"}: +1
AddressGroupSpan{.addressGroup = 258942052616446291897134980905455208001, .node = "testNode-69"}: +1
AddressGroupSpan{.addressGroup = 280153774932455238337123305715107600925, .node = "testNode-66"}: +1
AddressGroupSpan{.addressGroup = 282613042918141428597609262376610454098, .node = "testNode-66"}: +1
AddressGroupSpan{.addressGroup = 284023515744587474499613737136262848133, .node = "testNode-66"}: +1
AddressGroupSpan{.addressGroup = 293688677984215587141034871616936075800, .node = "testNode-68"}: +1
AddressGroupSpan{.addressGroup = 300606577088930369054413836550902541202, .node = "testNode-66"}: +1
AddressGroupSpan{.addressGroup = 322006876878864341276134893659865091836, .node = "testNode-67"}: +1
AddressGroupSpan{.addressGroup = 325588234872383664713869627785424654009, .node = "testNode-66"}: +1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "050f2757-1b25-5aff-a957-444f7bebc1f9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-672]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-672")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "0587f11a-2393-513a-bf8b-24fb834eb829", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-673]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-673")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "1267286c-5a57-550b-90b6-a915509ec859", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-685]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-685")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "1916ca21-9d10-5123-bf26-c68c1b9da2d8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-691]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-691")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "2ec07f23-522e-57ec-a82c-b8979e5599c2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-694]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-694")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "3095addf-6897-5833-b3bf-56ad9a0b8948", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-675]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-675")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "40213211-38c3-5538-a529-fe9357015024", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-687]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-687")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "4110bf43-a75b-5d54-8a29-3755499ac75c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-680]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-680")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "4171f9c6-e03b-5c81-9d2a-ee8a5462797d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-692]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-692")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "42b7bcd4-7888-57a1-b09f-1d677a586100", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-679]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-679")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "5a8febaa-5cf2-5e35-9f04-a3e18c24fe17", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-681]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-681")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "5b1caa08-bca2-57d8-b738-245eef91ffa1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-676]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-676")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "64eba0e2-8330-5991-a9e5-bf7ba04147d7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-689]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-689")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "7e6c1d67-d7b5-5638-9b27-db894814bb94", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-690]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-690")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "7ee420bb-ffa7-5c26-b619-0cde7455cc44", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-686]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-686")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "87b683fc-a4ab-5d6e-8d63-1400fbb01797", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-688]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-688")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "8fdae1d8-0cb8-56b8-8e46-71e7edf05816", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-671]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-671")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "96168ce7-96b8-5aa5-80f7-98ddff9eb38b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-663]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-663")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "976e39c9-299c-5500-935f-242503b119ca", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-674]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-674")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "9c50a8d6-7e4d-57d1-9930-5dc1514ca058", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-682]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-682")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "a02754d4-746d-590e-98a9-e961e159ebc1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-684]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-684")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "a0c8376b-3ab4-5237-bcb2-007f5d8b2a0f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-667]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-667")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "a15be41e-4713-51a6-9abd-77acd185f0ec", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-677]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-677")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "b9a7f6e5-7c28-5e8c-94c1-d100d192a44e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-670]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-670")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "c2ce6ce0-6dc2-5dc4-9ff1-78e26c624641", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-693]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-693")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "d2c3a787-e8a7-5f9b-9373-ef269e279a1d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-666]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-666")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "d49d4acd-d197-53aa-b0bb-18f6f9945a52", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-669]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-669")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "d5acf07b-bfd0-5e0b-a497-27011f959e85", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-665]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-665")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "dcf261c5-e278-57a9-af37-e38ee62be218", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-683]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-683")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "e226b888-48c2-5b83-b3a8-f3da99566b92", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-668]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-668")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "f24044c6-1ce2-5ebe-8698-7425b9a60efc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-678]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-678")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "f4f2035b-0d45-5dbd-90a2-06d4488fceb9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-664]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-664")], .matchExpressions = []}}}}: +1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 6724822347028538184698449350057771513, .node = "testNode-67", .pods = [k8spolicy.PodReference{.name = "testPod-672", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 7351990186483557552444463781679904809, .node = "testNode-67", .pods = [k8spolicy.PodReference{.name = "testPod-673", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 24461730381542499610093051750066866265, .node = "testNode-68", .pods = [k8spolicy.PodReference{.name = "testPod-685", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 33349030135388836164731705051064410840, .node = "testNode-69", .pods = [k8spolicy.PodReference{.name = "testPod-691", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 62143987467383965424135080433797142978, .node = "testNode-69", .pods = [k8spolicy.PodReference{.name = "testPod-694", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 64580122586708728978132711878962153800, .node = "testNode-67", .pods = [k8spolicy.PodReference{.name = "testPod-675", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 85242953011492514034490306673927868452, .node = "testNode-68", .pods = [k8spolicy.PodReference{.name = "testPod-687", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 86486775776071724534880055643199948636, .node = "testNode-68", .pods = [k8spolicy.PodReference{.name = "testPod-680", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 86991615347597860023055905913112263037, .node = "testNode-69", .pods = [k8spolicy.PodReference{.name = "testPod-692", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 88683067973595289524317345464658190592, .node = "testNode-67", .pods = [k8spolicy.PodReference{.name = "testPod-679", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 120377797935223020323205290684099919383, .node = "testNode-68", .pods = [k8spolicy.PodReference{.name = "testPod-681", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 121108580630303683178705582888559181729, .node = "testNode-67", .pods = [k8spolicy.PodReference{.name = "testPod-676", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 134146252471949571977668474355948013527, .node = "testNode-68", .pods = [k8spolicy.PodReference{.name = "testPod-689", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 168044091946758906090084828360503245716, .node = "testNode-69", .pods = [k8spolicy.PodReference{.name = "testPod-690", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 168667235084540050994202206607357889604, .node = "testNode-68", .pods = [k8spolicy.PodReference{.name = "testPod-686", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 180393454471334722579112570754050299799, .node = "testNode-68", .pods = [k8spolicy.PodReference{.name = "testPod-688", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 191216104771784158951842041944479914006, .node = "testNode-67", .pods = [k8spolicy.PodReference{.name = "testPod-671", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 199501287784320821062320213627481535371, .node = "testNode-66", .pods = [k8spolicy.PodReference{.name = "testPod-663", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 201285752053047080602264562070774159818, .node = "testNode-67", .pods = [k8spolicy.PodReference{.name = "testPod-674", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 207778375529858467154367561208456585304, .node = "testNode-68", .pods = [k8spolicy.PodReference{.name = "testPod-682", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 212880699457879012319962995556026543041, .node = "testNode-68", .pods = [k8spolicy.PodReference{.name = "testPod-684", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 213716062725403220537860765893155039759, .node = "testNode-66", .pods = [k8spolicy.PodReference{.name = "testPod-667", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 214482833123729423733379005998105489644, .node = "testNode-67", .pods = [k8spolicy.PodReference{.name = "testPod-677", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 246779300450021411524970511128637645902, .node = "testNode-67", .pods = [k8spolicy.PodReference{.name = "testPod-670", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 258942052616446291897134980905455208001, .node = "testNode-69", .pods = [k8spolicy.PodReference{.name = "testPod-693", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 280153774932455238337123305715107600925, .node = "testNode-66", .pods = [k8spolicy.PodReference{.name = "testPod-666", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 282613042918141428597609262376610454098, .node = "testNode-66", .pods = [k8spolicy.PodReference{.name = "testPod-669", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 284023515744587474499613737136262848133, .node = "testNode-66", .pods = [k8spolicy.PodReference{.name = "testPod-665", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 293688677984215587141034871616936075800, .node = "testNode-68", .pods = [k8spolicy.PodReference{.name = "testPod-683", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 300606577088930369054413836550902541202, .node = "testNode-66", .pods = [k8spolicy.PodReference{.name = "testPod-668", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 322006876878864341276134893659865091836, .node = "testNode-67", .pods = [k8spolicy.PodReference{.name = "testPod-678", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 325588234872383664713869627785424654009, .node = "testNode-66", .pods = [k8spolicy.PodReference{.name = "testPod-664", .namespace = "testNamespace"}]}: +1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 6724822347028538184698449350057771513, .span = "testNode-67"}: +1
AppliedToGroupSpan{.appliedToGroup = 7351990186483557552444463781679904809, .span = "testNode-67"}: +1
AppliedToGroupSpan{.appliedToGroup = 24461730381542499610093051750066866265, .span = "testNode-68"}: +1
AppliedToGroupSpan{.appliedToGroup = 33349030135388836164731705051064410840, .span = "testNode-69"}: +1
AppliedToGroupSpan{.appliedToGroup = 62143987467383965424135080433797142978, .span = "testNode-69"}: +1
AppliedToGroupSpan{.appliedToGroup = 64580122586708728978132711878962153800, .span = "testNode-67"}: +1
AppliedToGroupSpan{.appliedToGroup = 85242953011492514034490306673927868452, .span = "testNode-68"}: +1
AppliedToGroupSpan{.appliedToGroup = 86486775776071724534880055643199948636, .span = "testNode-68"}: +1
AppliedToGroupSpan{.appliedToGroup = 86991615347597860023055905913112263037, .span = "testNode-69"}: +1
AppliedToGroupSpan{.appliedToGroup = 88683067973595289524317345464658190592, .span = "testNode-67"}: +1
AppliedToGroupSpan{.appliedToGroup = 120377797935223020323205290684099919383, .span = "testNode-68"}: +1
AppliedToGroupSpan{.appliedToGroup = 121108580630303683178705582888559181729, .span = "testNode-67"}: +1
AppliedToGroupSpan{.appliedToGroup = 134146252471949571977668474355948013527, .span = "testNode-68"}: +1
AppliedToGroupSpan{.appliedToGroup = 168044091946758906090084828360503245716, .span = "testNode-69"}: +1
AppliedToGroupSpan{.appliedToGroup = 168667235084540050994202206607357889604, .span = "testNode-68"}: +1
AppliedToGroupSpan{.appliedToGroup = 180393454471334722579112570754050299799, .span = "testNode-68"}: +1
AppliedToGroupSpan{.appliedToGroup = 191216104771784158951842041944479914006, .span = "testNode-67"}: +1
AppliedToGroupSpan{.appliedToGroup = 199501287784320821062320213627481535371, .span = "testNode-66"}: +1
AppliedToGroupSpan{.appliedToGroup = 201285752053047080602264562070774159818, .span = "testNode-67"}: +1
AppliedToGroupSpan{.appliedToGroup = 207778375529858467154367561208456585304, .span = "testNode-68"}: +1
AppliedToGroupSpan{.appliedToGroup = 212880699457879012319962995556026543041, .span = "testNode-68"}: +1
AppliedToGroupSpan{.appliedToGroup = 213716062725403220537860765893155039759, .span = "testNode-66"}: +1
AppliedToGroupSpan{.appliedToGroup = 214482833123729423733379005998105489644, .span = "testNode-67"}: +1
AppliedToGroupSpan{.appliedToGroup = 246779300450021411524970511128637645902, .span = "testNode-67"}: +1
AppliedToGroupSpan{.appliedToGroup = 258942052616446291897134980905455208001, .span = "testNode-69"}: +1
AppliedToGroupSpan{.appliedToGroup = 280153774932455238337123305715107600925, .span = "testNode-66"}: +1
AppliedToGroupSpan{.appliedToGroup = 282613042918141428597609262376610454098, .span = "testNode-66"}: +1
AppliedToGroupSpan{.appliedToGroup = 284023515744587474499613737136262848133, .span = "testNode-66"}: +1
AppliedToGroupSpan{.appliedToGroup = 293688677984215587141034871616936075800, .span = "testNode-68"}: +1
AppliedToGroupSpan{.appliedToGroup = 300606577088930369054413836550902541202, .span = "testNode-66"}: +1
AppliedToGroupSpan{.appliedToGroup = 322006876878864341276134893659865091836, .span = "testNode-67"}: +1
AppliedToGroupSpan{.appliedToGroup = 325588234872383664713869627785424654009, .span = "testNode-66"}: +1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-663"}, .name = "testNP-663", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [325588234872383664713869627785424654009], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [199501287784320821062320213627481535371]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-664"}, .name = "testNP-664", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [284023515744587474499613737136262848133], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [325588234872383664713869627785424654009]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-665"}, .name = "testNP-665", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [280153774932455238337123305715107600925], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [284023515744587474499613737136262848133]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-666"}, .name = "testNP-666", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [213716062725403220537860765893155039759], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [280153774932455238337123305715107600925]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-667"}, .name = "testNP-667", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [300606577088930369054413836550902541202], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [213716062725403220537860765893155039759]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-668"}, .name = "testNP-668", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [282613042918141428597609262376610454098], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [300606577088930369054413836550902541202]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-669"}, .name = "testNP-669", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [246779300450021411524970511128637645902], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [282613042918141428597609262376610454098]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-670"}, .name = "testNP-670", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [191216104771784158951842041944479914006], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [246779300450021411524970511128637645902]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-671"}, .name = "testNP-671", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [6724822347028538184698449350057771513], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [191216104771784158951842041944479914006]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-672"}, .name = "testNP-672", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [7351990186483557552444463781679904809], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [6724822347028538184698449350057771513]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-673"}, .name = "testNP-673", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [201285752053047080602264562070774159818], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [7351990186483557552444463781679904809]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-674"}, .name = "testNP-674", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [64580122586708728978132711878962153800], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [201285752053047080602264562070774159818]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-675"}, .name = "testNP-675", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [121108580630303683178705582888559181729], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [64580122586708728978132711878962153800]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-676"}, .name = "testNP-676", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [214482833123729423733379005998105489644], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [121108580630303683178705582888559181729]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-677"}, .name = "testNP-677", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [322006876878864341276134893659865091836], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [214482833123729423733379005998105489644]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-678"}, .name = "testNP-678", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [88683067973595289524317345464658190592], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [322006876878864341276134893659865091836]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-679"}, .name = "testNP-679", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [86486775776071724534880055643199948636], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [88683067973595289524317345464658190592]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-680"}, .name = "testNP-680", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [120377797935223020323205290684099919383], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [86486775776071724534880055643199948636]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-681"}, .name = "testNP-681", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [207778375529858467154367561208456585304], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [120377797935223020323205290684099919383]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-682"}, .name = "testNP-682", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [293688677984215587141034871616936075800], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [207778375529858467154367561208456585304]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-683"}, .name = "testNP-683", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [212880699457879012319962995556026543041], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [293688677984215587141034871616936075800]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-684"}, .name = "testNP-684", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [24461730381542499610093051750066866265], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [212880699457879012319962995556026543041]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-685"}, .name = "testNP-685", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [168667235084540050994202206607357889604], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [24461730381542499610093051750066866265]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-686"}, .name = "testNP-686", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [85242953011492514034490306673927868452], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [168667235084540050994202206607357889604]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-687"}, .name = "testNP-687", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [180393454471334722579112570754050299799], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [85242953011492514034490306673927868452]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-688"}, .name = "testNP-688", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [134146252471949571977668474355948013527], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [180393454471334722579112570754050299799]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-689"}, .name = "testNP-689", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [168044091946758906090084828360503245716], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [134146252471949571977668474355948013527]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-690"}, .name = "testNP-690", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [33349030135388836164731705051064410840], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [168044091946758906090084828360503245716]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-691"}, .name = "testNP-691", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [86991615347597860023055905913112263037], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [33349030135388836164731705051064410840]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-692"}, .name = "testNP-692", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [258942052616446291897134980905455208001], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [86991615347597860023055905913112263037]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-693"}, .name = "testNP-693", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [62143987467383965424135080433797142978], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [258942052616446291897134980905455208001]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-694"}, .name = "testNP-694", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [138086993536514857553090980018792399275], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [62143987467383965424135080433797142978]}: +1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-663", .policy = k8spolicy.UID{.uid = "testNP-663"}, .node = "testNode-66"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-664", .policy = k8spolicy.UID{.uid = "testNP-664"}, .node = "testNode-66"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-665", .policy = k8spolicy.UID{.uid = "testNP-665"}, .node = "testNode-66"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-666", .policy = k8spolicy.UID{.uid = "testNP-666"}, .node = "testNode-66"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-667", .policy = k8spolicy.UID{.uid = "testNP-667"}, .node = "testNode-66"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-668", .policy = k8spolicy.UID{.uid = "testNP-668"}, .node = "testNode-66"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-669", .policy = k8spolicy.UID{.uid = "testNP-669"}, .node = "testNode-66"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-670", .policy = k8spolicy.UID{.uid = "testNP-670"}, .node = "testNode-67"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-671", .policy = k8spolicy.UID{.uid = "testNP-671"}, .node = "testNode-67"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-672", .policy = k8spolicy.UID{.uid = "testNP-672"}, .node = "testNode-67"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-673", .policy = k8spolicy.UID{.uid = "testNP-673"}, .node = "testNode-67"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-674", .policy = k8spolicy.UID{.uid = "testNP-674"}, .node = "testNode-67"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-675", .policy = k8spolicy.UID{.uid = "testNP-675"}, .node = "testNode-67"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-676", .policy = k8spolicy.UID{.uid = "testNP-676"}, .node = "testNode-67"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-677", .policy = k8spolicy.UID{.uid = "testNP-677"}, .node = "testNode-67"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-678", .policy = k8spolicy.UID{.uid = "testNP-678"}, .node = "testNode-67"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-679", .policy = k8spolicy.UID{.uid = "testNP-679"}, .node = "testNode-67"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-680", .policy = k8spolicy.UID{.uid = "testNP-680"}, .node = "testNode-68"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-681", .policy = k8spolicy.UID{.uid = "testNP-681"}, .node = "testNode-68"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-682", .policy = k8spolicy.UID{.uid = "testNP-682"}, .node = "testNode-68"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-683", .policy = k8spolicy.UID{.uid = "testNP-683"}, .node = "testNode-68"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-684", .policy = k8spolicy.UID{.uid = "testNP-684"}, .node = "testNode-68"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-685", .policy = k8spolicy.UID{.uid = "testNP-685"}, .node = "testNode-68"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-686", .policy = k8spolicy.UID{.uid = "testNP-686"}, .node = "testNode-68"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-687", .policy = k8spolicy.UID{.uid = "testNP-687"}, .node = "testNode-68"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-688", .policy = k8spolicy.UID{.uid = "testNP-688"}, .node = "testNode-68"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-689", .policy = k8spolicy.UID{.uid = "testNP-689"}, .node = "testNode-68"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-690", .policy = k8spolicy.UID{.uid = "testNP-690"}, .node = "testNode-69"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-691", .policy = k8spolicy.UID{.uid = "testNP-691"}, .node = "testNode-69"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-692", .policy = k8spolicy.UID{.uid = "testNP-692"}, .node = "testNode-69"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-693", .policy = k8spolicy.UID{.uid = "testNP-693"}, .node = "testNode-69"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-694", .policy = k8spolicy.UID{.uid = "testNP-694"}, .node = "testNode-69"}: +1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 20329816692323990960514157383100635779, .address = "10.10.71.7"}: +1
AddressGroupAddress{.addressGroup = 30627936651933105797274065759821896072, .address = "10.10.72.3"}: +1
AddressGroupAddress{.addressGroup = 32371090647251812210882361596766477469, .address = "10.10.72.7"}: +1
AddressGroupAddress{.addressGroup = 34591211941641149834652773767088334092, .address = "10.10.69.7"}: +1
AddressGroupAddress{.addressGroup = 40129498806740184513010085757005703310, .address = "10.10.71.9"}: +1
AddressGroupAddress{.addressGroup = 48477708467535794073119471470777082609, .address = "10.10.70.4"}: +1
AddressGroupAddress{.addressGroup = 49753344134897828027802370093534187918, .address = "10.10.70.2"}: +1
AddressGroupAddress{.addressGroup = 61189920482240044489684089556637522064, .address = "10.10.70.0"}: +1
AddressGroupAddress{.addressGroup = 102416549199853754490225967506757640918, .address = "10.10.71.8"}: +1
AddressGroupAddress{.addressGroup = 103342086768867973698815665541437187491, .address = "10.10.70.8"}: +1
AddressGroupAddress{.addressGroup = 105907933172336392369608848569076076365, .address = "10.10.72.1"}: +1
AddressGroupAddress{.addressGroup = 117443228247412088336228824049892542442, .address = "10.10.70.1"}: +1
AddressGroupAddress{.addressGroup = 119635934672166049362267970357951952572, .address = "10.10.70.6"}: +1
AddressGroupAddress{.addressGroup = 141402202887251706883191047768352726243, .address = "10.10.72.0"}: +1
AddressGroupAddress{.addressGroup = 164254990481347015292732693266044634094, .address = "10.10.72.2"}: +1
AddressGroupAddress{.addressGroup = 170779014434083255563906794785649755788, .address = "10.10.71.5"}: +1
AddressGroupAddress{.addressGroup = 181396158620568851092841585491302154389, .address = "10.10.71.2"}: +1
AddressGroupAddress{.addressGroup = 183289785041205741695428160540157384659, .address = "10.10.70.3"}: +1
AddressGroupAddress{.addressGroup = 186340902589858674390192335038199851946, .address = "10.10.71.6"}: +1
AddressGroupAddress{.addressGroup = 186486452426348870215859663383273497938, .address = "10.10.72.5"}: +1
AddressGroupAddress{.addressGroup = 201063849432131633667867681224490298473, .address = "10.10.71.1"}: +1
AddressGroupAddress{.addressGroup = 207205852810374797111027573563788396445, .address = "10.10.69.6"}: +1
AddressGroupAddress{.addressGroup = 224840873215674627700932472004267863469, .address = "10.10.69.8"}: +1
AddressGroupAddress{.addressGroup = 225788033249597382768420230824240158525, .address = "10.10.71.0"}: +1
AddressGroupAddress{.addressGroup = 232807607250189417276509150442107476618, .address = "10.10.70.9"}: +1
AddressGroupAddress{.addressGroup = 284630353269977120950731628110603843203, .address = "10.10.70.5"}: +1
AddressGroupAddress{.addressGroup = 295884182575016866688413238710409829090, .address = "10.10.72.4"}: +1
AddressGroupAddress{.addressGroup = 296253649875124081421802849662034111681, .address = "10.10.72.6"}: +1
AddressGroupAddress{.addressGroup = 298412986344744880696676553289037647571, .address = "10.10.71.3"}: +1
AddressGroupAddress{.addressGroup = 300076302114905989208603666637851573984, .address = "10.10.71.4"}: +1
AddressGroupAddress{.addressGroup = 327632319420903665251336703817543937027, .address = "10.10.69.9"}: +1
AddressGroupAddress{.addressGroup = 328805947928271284467502338079051004245, .address = "10.10.70.7"}: +1
AddressGroupDescr:
AddressGroupDescr{.name = "0f4b6159-9507-5367-b061-c88c5b1b9a83", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-717]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-717")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "170ab9dd-5115-5aa1-a7fa-3799723c1988", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-723]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-723")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "185a71fd-ef8b-56d1-a4c5-52f3a93e5c9d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-727]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-727")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "1a06066c-3d56-5505-8887-5ae3e9e6650c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-697]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-697")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "1e30a90c-1375-56c6-b159-840e1201a88e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-719]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-719")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "2478778f-c17f-5acb-aaa0-27cc573a22f1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-704]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-704")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "256e2541-78f2-5f46-8039-020a998c918e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-702]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-702")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "2e08c000-fe0a-5fe4-96d2-eb7c8b731890", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-700]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-700")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "4d0cb5bb-61ee-5334-a57e-5c0530b9e2d6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-718]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-718")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "4dbef641-dacc-58d4-9172-bd6054abe5a3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-708]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-708")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "4fad2040-84c6-5627-ace8-8205d5eccf4d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-721]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-721")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "585abe35-8eab-5fc4-92ba-2485002947ea", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-701]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-701")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "5a010afb-8f24-509a-a8dd-eb64221776bc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-706]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-706")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "6a6112dc-5170-5d89-aea8-b2a865f79ce3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-720]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-720")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "7b925c47-a6a4-5aaa-a1d7-a2c0585943ee", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-722]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-722")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "807ad77e-b523-579e-b82d-fd698020868c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-715]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-715")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "8877a11e-49e0-5059-a164-9df96f000095", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-712]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-712")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "89e4541b-ed09-5593-8aa7-cb4a518797d3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-703]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-703")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "8c2ff3d1-8c3b-5bff-8f8b-cb2cc35b6baa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-716]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-716")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "8c4bfbfa-c294-5004-a798-9334ef296552", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-725]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-725")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "97437d24-52f4-5ecf-869e-e917ba312c69", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-711]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-711")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "9be26549-d762-50cc-adab-a75c8d48879d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-696]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-696")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "a926c6ec-68db-5f32-8c49-74a3e2b1edad", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-698]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-698")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "a9dd3184-c1f1-57c6-93b0-b25e0641173d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-710]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-710")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "af251d3c-c378-5e78-a972-aeff6e7c9a8a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-709]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-709")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "d621cfe2-2494-56ae-89e0-1e94e9537683", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-705]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-705")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "de993881-b512-5447-a715-9ec08b6b1ae2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-724]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-724")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "dee060a6-a5f7-5412-9d48-5a167da9ecc1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-726]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-726")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "e0804028-9a18-5a77-a65b-93a446960ed3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-713]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-713")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "e1c097f5-25d7-5482-a7fb-163de245bee0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-714]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-714")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "f67bb081-3fa0-51b9-9010-62a042e56c03", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-699]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-699")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "f75db8db-9892-5caf-9ad1-b3e2cae8b955", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-707]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-707")], .matchExpressions = []}}}}: +1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 20329816692323990960514157383100635779, .node = "testNode-71"}: +1
AddressGroupSpan{.addressGroup = 30627936651933105797274065759821896072, .node = "testNode-72"}: +1
AddressGroupSpan{.addressGroup = 32371090647251812210882361596766477469, .node = "testNode-72"}: +1
AddressGroupSpan{.addressGroup = 34591211941641149834652773767088334092, .node = "testNode-69"}: +1
AddressGroupSpan{.addressGroup = 40129498806740184513010085757005703310, .node = "testNode-71"}: +1
AddressGroupSpan{.addressGroup = 48477708467535794073119471470777082609, .node = "testNode-70"}: +1
AddressGroupSpan{.addressGroup = 49753344134897828027802370093534187918, .node = "testNode-70"}: +1
AddressGroupSpan{.addressGroup = 61189920482240044489684089556637522064, .node = "testNode-69"}: +1
AddressGroupSpan{.addressGroup = 102416549199853754490225967506757640918, .node = "testNode-71"}: +1
AddressGroupSpan{.addressGroup = 103342086768867973698815665541437187491, .node = "testNode-70"}: +1
AddressGroupSpan{.addressGroup = 105907933172336392369608848569076076365, .node = "testNode-72"}: +1
AddressGroupSpan{.addressGroup = 117443228247412088336228824049892542442, .node = "testNode-70"}: +1
AddressGroupSpan{.addressGroup = 119635934672166049362267970357951952572, .node = "testNode-70"}: +1
AddressGroupSpan{.addressGroup = 141402202887251706883191047768352726243, .node = "testNode-71"}: +1
AddressGroupSpan{.addressGroup = 164254990481347015292732693266044634094, .node = "testNode-72"}: +1
AddressGroupSpan{.addressGroup = 170779014434083255563906794785649755788, .node = "testNode-71"}: +1
AddressGroupSpan{.addressGroup = 181396158620568851092841585491302154389, .node = "testNode-71"}: +1
AddressGroupSpan{.addressGroup = 183289785041205741695428160540157384659, .node = "testNode-70"}: +1
AddressGroupSpan{.addressGroup = 186340902589858674390192335038199851946, .node = "testNode-71"}: +1
AddressGroupSpan{.addressGroup = 186486452426348870215859663383273497938, .node = "testNode-72"}: +1
AddressGroupSpan{.addressGroup = 201063849432131633667867681224490298473, .node = "testNode-71"}: +1
AddressGroupSpan{.addressGroup = 207205852810374797111027573563788396445, .node = "testNode-69"}: +1
AddressGroupSpan{.addressGroup = 224840873215674627700932472004267863469, .node = "testNode-69"}: +1
AddressGroupSpan{.addressGroup = 225788033249597382768420230824240158525, .node = "testNode-70"}: +1
AddressGroupSpan{.addressGroup = 232807607250189417276509150442107476618, .node = "testNode-70"}: +1
AddressGroupSpan{.addressGroup = 284630353269977120950731628110603843203, .node = "testNode-70"}: +1
AddressGroupSpan{.addressGroup = 295884182575016866688413238710409829090, .node = "testNode-72"}: +1
AddressGroupSpan{.addressGroup = 296253649875124081421802849662034111681, .node = "testNode-72"}: +1
AddressGroupSpan{.addressGroup = 298412986344744880696676553289037647571, .node = "testNode-71"}: +1
AddressGroupSpan{.addressGroup = 300076302114905989208603666637851573984, .node = "testNode-71"}: +1
AddressGroupSpan{.addressGroup = 327632319420903665251336703817543937027, .node = "testNode-69"}: +1
AddressGroupSpan{.addressGroup = 328805947928271284467502338079051004245, .node = "testNode-70"}: +1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "0f4b6159-9507-5367-b061-c88c5b1b9a83", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-717]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-717")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "170ab9dd-5115-5aa1-a7fa-3799723c1988", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-723]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-723")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "1a06066c-3d56-5505-8887-5ae3e9e6650c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-697]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-697")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "1e30a90c-1375-56c6-b159-840e1201a88e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-719]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-719")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "2478778f-c17f-5acb-aaa0-27cc573a22f1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-704]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-704")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "256e2541-78f2-5f46-8039-020a998c918e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-702]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-702")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "2e08c000-fe0a-5fe4-96d2-eb7c8b731890", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-700]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-700")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "4d0cb5bb-61ee-5334-a57e-5c0530b9e2d6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-718]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-718")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "4dbef641-dacc-58d4-9172-bd6054abe5a3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-708]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-708")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "4fad2040-84c6-5627-ace8-8205d5eccf4d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-721]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-721")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "585abe35-8eab-5fc4-92ba-2485002947ea", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-701]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-701")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "5a010afb-8f24-509a-a8dd-eb64221776bc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-706]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-706")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "67e2966b-8704-554b-80df-c194746b81ab", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-695]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-695")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "6a6112dc-5170-5d89-aea8-b2a865f79ce3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-720]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-720")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "7b925c47-a6a4-5aaa-a1d7-a2c0585943ee", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-722]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-722")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "807ad77e-b523-579e-b82d-fd698020868c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-715]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-715")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "8877a11e-49e0-5059-a164-9df96f000095", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-712]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-712")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "89e4541b-ed09-5593-8aa7-cb4a518797d3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-703]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-703")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "8c2ff3d1-8c3b-5bff-8f8b-cb2cc35b6baa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-716]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-716")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "8c4bfbfa-c294-5004-a798-9334ef296552", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-725]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-725")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "97437d24-52f4-5ecf-869e-e917ba312c69", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-711]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-711")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "9be26549-d762-50cc-adab-a75c8d48879d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-696]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-696")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "a926c6ec-68db-5f32-8c49-74a3e2b1edad", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-698]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-698")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "a9dd3184-c1f1-57c6-93b0-b25e0641173d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-710]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-710")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "af251d3c-c378-5e78-a972-aeff6e7c9a8a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-709]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-709")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "d621cfe2-2494-56ae-89e0-1e94e9537683", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-705]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-705")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "de993881-b512-5447-a715-9ec08b6b1ae2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-724]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-724")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "dee060a6-a5f7-5412-9d48-5a167da9ecc1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-726]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-726")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "e0804028-9a18-5a77-a65b-93a446960ed3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-713]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-713")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "e1c097f5-25d7-5482-a7fb-163de245bee0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-714]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-714")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "f67bb081-3fa0-51b9-9010-62a042e56c03", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-699]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-699")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "f75db8db-9892-5caf-9ad1-b3e2cae8b955", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-707]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-707")], .matchExpressions = []}}}}: +1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 20329816692323990960514157383100635779, .node = "testNode-71", .pods = [k8spolicy.PodReference{.name = "testPod-717", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 30627936651933105797274065759821896072, .node = "testNode-72", .pods = [k8spolicy.PodReference{.name = "testPod-723", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 34591211941641149834652773767088334092, .node = "testNode-69", .pods = [k8spolicy.PodReference{.name = "testPod-697", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 40129498806740184513010085757005703310, .node = "testNode-71", .pods = [k8spolicy.PodReference{.name = "testPod-719", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 48477708467535794073119471470777082609, .node = "testNode-70", .pods = [k8spolicy.PodReference{.name = "testPod-704", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 49753344134897828027802370093534187918, .node = "testNode-70", .pods = [k8spolicy.PodReference{.name = "testPod-702", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 61189920482240044489684089556637522064, .node = "testNode-70", .pods = [k8spolicy.PodReference{.name = "testPod-700", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 102416549199853754490225967506757640918, .node = "testNode-71", .pods = [k8spolicy.PodReference{.name = "testPod-718", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 103342086768867973698815665541437187491, .node = "testNode-70", .pods = [k8spolicy.PodReference{.name = "testPod-708", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 105907933172336392369608848569076076365, .node = "testNode-72", .pods = [k8spolicy.PodReference{.name = "testPod-721", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 117443228247412088336228824049892542442, .node = "testNode-70", .pods = [k8spolicy.PodReference{.name = "testPod-701", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 119635934672166049362267970357951952572, .node = "testNode-70", .pods = [k8spolicy.PodReference{.name = "testPod-706", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 138086993536514857553090980018792399275, .node = "testNode-69", .pods = [k8spolicy.PodReference{.name = "testPod-695", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 141402202887251706883191047768352726243, .node = "testNode-72", .pods = [k8spolicy.PodReference{.name = "testPod-720", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 164254990481347015292732693266044634094, .node = "testNode-72", .pods = [k8spolicy.PodReference{.name = "testPod-722", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 170779014434083255563906794785649755788, .node = "testNode-71", .pods = [k8spolicy.PodReference{.name = "testPod-715", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 181396158620568851092841585491302154389, .node = "testNode-71", .pods = [k8spolicy.PodReference{.name = "testPod-712", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 183289785041205741695428160540157384659, .node = "testNode-70", .pods = [k8spolicy.PodReference{.name = "testPod-703", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 186340902589858674390192335038199851946, .node = "testNode-71", .pods = [k8spolicy.PodReference{.name = "testPod-716", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 186486452426348870215859663383273497938, .node = "testNode-72", .pods = [k8spolicy.PodReference{.name = "testPod-725", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 201063849432131633667867681224490298473, .node = "testNode-71", .pods = [k8spolicy.PodReference{.name = "testPod-711", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 207205852810374797111027573563788396445, .node = "testNode-69", .pods = [k8spolicy.PodReference{.name = "testPod-696", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 224840873215674627700932472004267863469, .node = "testNode-69", .pods = [k8spolicy.PodReference{.name = "testPod-698", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 225788033249597382768420230824240158525, .node = "testNode-71", .pods = [k8spolicy.PodReference{.name = "testPod-710", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 232807607250189417276509150442107476618, .node = "testNode-70", .pods = [k8spolicy.PodReference{.name = "testPod-709", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 284630353269977120950731628110603843203, .node = "testNode-70", .pods = [k8spolicy.PodReference{.name = "testPod-705", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 295884182575016866688413238710409829090, .node = "testNode-72", .pods = [k8spolicy.PodReference{.name = "testPod-724", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 296253649875124081421802849662034111681, .node = "testNode-72", .pods = [k8spolicy.PodReference{.name = "testPod-726", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 298412986344744880696676553289037647571, .node = "testNode-71", .pods = [k8spolicy.PodReference{.name = "testPod-713", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 300076302114905989208603666637851573984, .node = "testNode-71", .pods = [k8spolicy.PodReference{.name = "testPod-714", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 327632319420903665251336703817543937027, .node = "testNode-69", .pods = [k8spolicy.PodReference{.name = "testPod-699", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 328805947928271284467502338079051004245, .node = "testNode-70", .pods = [k8spolicy.PodReference{.name = "testPod-707", .namespace = "testNamespace"}]}: +1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 20329816692323990960514157383100635779, .span = "testNode-71"}: +1
AppliedToGroupSpan{.appliedToGroup = 30627936651933105797274065759821896072, .span = "testNode-72"}: +1
AppliedToGroupSpan{.appliedToGroup = 34591211941641149834652773767088334092, .span = "testNode-69"}: +1
AppliedToGroupSpan{.appliedToGroup = 40129498806740184513010085757005703310, .span = "testNode-71"}: +1
AppliedToGroupSpan{.appliedToGroup = 48477708467535794073119471470777082609, .span = "testNode-70"}: +1
AppliedToGroupSpan{.appliedToGroup = 49753344134897828027802370093534187918, .span = "testNode-70"}: +1
AppliedToGroupSpan{.appliedToGroup = 61189920482240044489684089556637522064, .span = "testNode-70"}: +1
AppliedToGroupSpan{.appliedToGroup = 102416549199853754490225967506757640918, .span = "testNode-71"}: +1
AppliedToGroupSpan{.appliedToGroup = 103342086768867973698815665541437187491, .span = "testNode-70"}: +1
AppliedToGroupSpan{.appliedToGroup = 105907933172336392369608848569076076365, .span = "testNode-72"}: +1
AppliedToGroupSpan{.appliedToGroup = 117443228247412088336228824049892542442, .span = "testNode-70"}: +1
AppliedToGroupSpan{.appliedToGroup = 119635934672166049362267970357951952572, .span = "testNode-70"}: +1
AppliedToGroupSpan{.appliedToGroup = 138086993536514857553090980018792399275, .span = "testNode-69"}: +1
AppliedToGroupSpan{.appliedToGroup = 141402202887251706883191047768352726243, .span = "testNode-72"}: +1
AppliedToGroupSpan{.appliedToGroup = 164254990481347015292732693266044634094, .span = "testNode-72"}: +1
AppliedToGroupSpan{.appliedToGroup = 170779014434083255563906794785649755788, .span = "testNode-71"}: +1
AppliedToGroupSpan{.appliedToGroup = 181396158620568851092841585491302154389, .span = "testNode-71"}: +1
AppliedToGroupSpan{.appliedToGroup = 183289785041205741695428160540157384659, .span = "testNode-70"}: +1
AppliedToGroupSpan{.appliedToGroup = 186340902589858674390192335038199851946, .span = "testNode-71"}: +1
AppliedToGroupSpan{.appliedToGroup = 186486452426348870215859663383273497938, .span = "testNode-72"}: +1
AppliedToGroupSpan{.appliedToGroup = 201063849432131633667867681224490298473, .span = "testNode-71"}: +1
AppliedToGroupSpan{.appliedToGroup = 207205852810374797111027573563788396445, .span = "testNode-69"}: +1
AppliedToGroupSpan{.appliedToGroup = 224840873215674627700932472004267863469, .span = "testNode-69"}: +1
AppliedToGroupSpan{.appliedToGroup = 225788033249597382768420230824240158525, .span = "testNode-71"}: +1
AppliedToGroupSpan{.appliedToGroup = 232807607250189417276509150442107476618, .span = "testNode-70"}: +1
AppliedToGroupSpan{.appliedToGroup = 284630353269977120950731628110603843203, .span = "testNode-70"}: +1
AppliedToGroupSpan{.appliedToGroup = 295884182575016866688413238710409829090, .span = "testNode-72"}: +1
AppliedToGroupSpan{.appliedToGroup = 296253649875124081421802849662034111681, .span = "testNode-72"}: +1
AppliedToGroupSpan{.appliedToGroup = 298412986344744880696676553289037647571, .span = "testNode-71"}: +1
AppliedToGroupSpan{.appliedToGroup = 300076302114905989208603666637851573984, .span = "testNode-71"}: +1
AppliedToGroupSpan{.appliedToGroup = 327632319420903665251336703817543937027, .span = "testNode-69"}: +1
AppliedToGroupSpan{.appliedToGroup = 328805947928271284467502338079051004245, .span = "testNode-70"}: +1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-695"}, .name = "testNP-695", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [207205852810374797111027573563788396445], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [138086993536514857553090980018792399275]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-696"}, .name = "testNP-696", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [34591211941641149834652773767088334092], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [207205852810374797111027573563788396445]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-697"}, .name = "testNP-697", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [224840873215674627700932472004267863469], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [34591211941641149834652773767088334092]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-698"}, .name = "testNP-698", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [327632319420903665251336703817543937027], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [224840873215674627700932472004267863469]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-699"}, .name = "testNP-699", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [61189920482240044489684089556637522064], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [327632319420903665251336703817543937027]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-700"}, .name = "testNP-700", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [117443228247412088336228824049892542442], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [61189920482240044489684089556637522064]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-701"}, .name = "testNP-701", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [49753344134897828027802370093534187918], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [117443228247412088336228824049892542442]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-702"}, .name = "testNP-702", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [183289785041205741695428160540157384659], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [49753344134897828027802370093534187918]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-703"}, .name = "testNP-703", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [48477708467535794073119471470777082609], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [183289785041205741695428160540157384659]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-704"}, .name = "testNP-704", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [284630353269977120950731628110603843203], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [48477708467535794073119471470777082609]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-705"}, .name = "testNP-705", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [119635934672166049362267970357951952572], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [284630353269977120950731628110603843203]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-706"}, .name = "testNP-706", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [328805947928271284467502338079051004245], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [119635934672166049362267970357951952572]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-707"}, .name = "testNP-707", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [103342086768867973698815665541437187491], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [328805947928271284467502338079051004245]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-708"}, .name = "testNP-708", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [232807607250189417276509150442107476618], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [103342086768867973698815665541437187491]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-709"}, .name = "testNP-709", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [225788033249597382768420230824240158525], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [232807607250189417276509150442107476618]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-710"}, .name = "testNP-710", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [201063849432131633667867681224490298473], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [225788033249597382768420230824240158525]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-711"}, .name = "testNP-711", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [181396158620568851092841585491302154389], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [201063849432131633667867681224490298473]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-712"}, .name = "testNP-712", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [298412986344744880696676553289037647571], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [181396158620568851092841585491302154389]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-713"}, .name = "testNP-713", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [300076302114905989208603666637851573984], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [298412986344744880696676553289037647571]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-714"}, .name = "testNP-714", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [170779014434083255563906794785649755788], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [300076302114905989208603666637851573984]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-715"}, .name = "testNP-715", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [186340902589858674390192335038199851946], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [170779014434083255563906794785649755788]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-716"}, .name = "testNP-716", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [20329816692323990960514157383100635779], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [186340902589858674390192335038199851946]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-717"}, .name = "testNP-717", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [102416549199853754490225967506757640918], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [20329816692323990960514157383100635779]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-718"}, .name = "testNP-718", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [40129498806740184513010085757005703310], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [102416549199853754490225967506757640918]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-719"}, .name = "testNP-719", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [141402202887251706883191047768352726243], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [40129498806740184513010085757005703310]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-720"}, .name = "testNP-720", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [105907933172336392369608848569076076365], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [141402202887251706883191047768352726243]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-721"}, .name = "testNP-721", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [164254990481347015292732693266044634094], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [105907933172336392369608848569076076365]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-722"}, .name = "testNP-722", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [30627936651933105797274065759821896072], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [164254990481347015292732693266044634094]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-723"}, .name = "testNP-723", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [295884182575016866688413238710409829090], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [30627936651933105797274065759821896072]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-724"}, .name = "testNP-724", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [186486452426348870215859663383273497938], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [295884182575016866688413238710409829090]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-725"}, .name = "testNP-725", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [296253649875124081421802849662034111681], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [186486452426348870215859663383273497938]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-726"}, .name = "testNP-726", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [32371090647251812210882361596766477469], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [296253649875124081421802849662034111681]}: +1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-695", .policy = k8spolicy.UID{.uid = "testNP-695"}, .node = "testNode-69"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-696", .policy = k8spolicy.UID{.uid = "testNP-696"}, .node = "testNode-69"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-697", .policy = k8spolicy.UID{.uid = "testNP-697"}, .node = "testNode-69"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-698", .policy = k8spolicy.UID{.uid = "testNP-698"}, .node = "testNode-69"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-699", .policy = k8spolicy.UID{.uid = "testNP-699"}, .node = "testNode-69"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-700", .policy = k8spolicy.UID{.uid = "testNP-700"}, .node = "testNode-70"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-701", .policy = k8spolicy.UID{.uid = "testNP-701"}, .node = "testNode-70"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-702", .policy = k8spolicy.UID{.uid = "testNP-702"}, .node = "testNode-70"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-703", .policy = k8spolicy.UID{.uid = "testNP-703"}, .node = "testNode-70"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-704", .policy = k8spolicy.UID{.uid = "testNP-704"}, .node = "testNode-70"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-705", .policy = k8spolicy.UID{.uid = "testNP-705"}, .node = "testNode-70"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-706", .policy = k8spolicy.UID{.uid = "testNP-706"}, .node = "testNode-70"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-707", .policy = k8spolicy.UID{.uid = "testNP-707"}, .node = "testNode-70"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-708", .policy = k8spolicy.UID{.uid = "testNP-708"}, .node = "testNode-70"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-709", .policy = k8spolicy.UID{.uid = "testNP-709"}, .node = "testNode-70"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-710", .policy = k8spolicy.UID{.uid = "testNP-710"}, .node = "testNode-71"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-711", .policy = k8spolicy.UID{.uid = "testNP-711"}, .node = "testNode-71"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-712", .policy = k8spolicy.UID{.uid = "testNP-712"}, .node = "testNode-71"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-713", .policy = k8spolicy.UID{.uid = "testNP-713"}, .node = "testNode-71"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-714", .policy = k8spolicy.UID{.uid = "testNP-714"}, .node = "testNode-71"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-715", .policy = k8spolicy.UID{.uid = "testNP-715"}, .node = "testNode-71"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-716", .policy = k8spolicy.UID{.uid = "testNP-716"}, .node = "testNode-71"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-717", .policy = k8spolicy.UID{.uid = "testNP-717"}, .node = "testNode-71"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-718", .policy = k8spolicy.UID{.uid = "testNP-718"}, .node = "testNode-71"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-719", .policy = k8spolicy.UID{.uid = "testNP-719"}, .node = "testNode-71"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-720", .policy = k8spolicy.UID{.uid = "testNP-720"}, .node = "testNode-72"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-721", .policy = k8spolicy.UID{.uid = "testNP-721"}, .node = "testNode-72"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-722", .policy = k8spolicy.UID{.uid = "testNP-722"}, .node = "testNode-72"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-723", .policy = k8spolicy.UID{.uid = "testNP-723"}, .node = "testNode-72"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-724", .policy = k8spolicy.UID{.uid = "testNP-724"}, .node = "testNode-72"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-725", .policy = k8spolicy.UID{.uid = "testNP-725"}, .node = "testNode-72"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-726", .policy = k8spolicy.UID{.uid = "testNP-726"}, .node = "testNode-72"}: +1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 4398037940003267649077370648463899309, .address = "10.10.75.9"}: +1
AddressGroupAddress{.addressGroup = 20092635691975747594380957838639536461, .address = "10.10.75.0"}: +1
AddressGroupAddress{.addressGroup = 24504795559851105437069282183056106079, .address = "10.10.75.6"}: +1
AddressGroupAddress{.addressGroup = 34057724656635809691416705192801932381, .address = "10.10.73.1"}: +1
AddressGroupAddress{.addressGroup = 34426929826697059772173071824620121626, .address = "10.10.74.2"}: +1
AddressGroupAddress{.addressGroup = 35058101665146670808052052538129070863, .address = "10.10.75.3"}: +1
AddressGroupAddress{.addressGroup = 37156467226019537841532311016332182872, .address = "10.10.73.4"}: +1
AddressGroupAddress{.addressGroup = 44289025035542436008242967276697093971, .address = "10.10.73.8"}: +1
AddressGroupAddress{.addressGroup = 68252102549119058317764176736129971979, .address = "10.10.73.2"}: +1
AddressGroupAddress{.addressGroup = 78480696584772383686929246462571805306, .address = "10.10.74.9"}: +1
AddressGroupAddress{.addressGroup = 96032070133182681650620944880094112731, .address = "10.10.72.8"}: +1
AddressGroupAddress{.addressGroup = 121223415449627862530040104112695352084, .address = "10.10.75.5"}: +1
AddressGroupAddress{.addressGroup = 123647219404309518112218654842480239065, .address = "10.10.74.3"}: +1
AddressGroupAddress{.addressGroup = 126876673637250352464688700325600303694, .address = "10.10.75.8"}: +1
AddressGroupAddress{.addressGroup = 157407210107059154996043679640104777363, .address = "10.10.74.0"}: +1
AddressGroupAddress{.addressGroup = 161714700651289711179061588185481536281, .address = "10.10.75.1"}: +1
AddressGroupAddress{.addressGroup = 180270115442061346733561750408827483079, .address = "10.10.73.9"}: +1
AddressGroupAddress{.addressGroup = 196184164387734792494584650260731798644, .address = "10.10.74.7"}: +1
AddressGroupAddress{.addressGroup = 205972580147086176662977578262869677757, .address = "10.10.73.5"}: +1
AddressGroupAddress{.addressGroup = 207587257656012182916251504856989903522, .address = "10.10.75.2"}: +1
AddressGroupAddress{.addressGroup = 211511397827221676516229770772689908353, .address = "10.10.73.3"}: +1
AddressGroupAddress{.addressGroup = 221512310084172929882113552273775677398, .address = "10.10.74.4"}: +1
AddressGroupAddress{.addressGroup = 227976973515706368644401821506401425682, .address = "10.10.75.4"}: +1
AddressGroupAddress{.addressGroup = 236832506682036962533083870175459495033, .address = "10.10.72.9"}: +1
AddressGroupAddress{.addressGroup = 246389996503433342331435283858892631323, .address = "10.10.73.6"}: +1
AddressGroupAddress{.addressGroup = 252347165080086964477547050496069727556, .address = "10.10.73.0"}: +1
AddressGroupAddress{.addressGroup = 274839393383818296487324953745160540360, .address = "10.10.74.1"}: +1
AddressGroupAddress{.addressGroup = 282959601900973743138164282562013519318, .address = "10.10.74.8"}: +1
AddressGroupAddress{.addressGroup = 285976904859708191489159824789792033924, .address = "10.10.75.7"}: +1
AddressGroupAddress{.addressGroup = 294580414416437314404665722698091486060, .address = "10.10.73.7"}: +1
AddressGroupAddress{.addressGroup = 318489599378665995559969640392831084579, .address = "10.10.74.6"}: +1
AddressGroupAddress{.addressGroup = 331362771667904576197395320489126259440, .address = "10.10.74.5"}: +1
AddressGroupDescr:
AddressGroupDescr{.name = "034f0803-0c7b-5be1-a6cd-fa18721f7aad", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-759]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-759")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "0f1db36c-7be5-5373-a007-56b0f06a994d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-750]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-750")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "126f73b3-5254-59a2-82e2-852ddea6a25f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-756]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-756")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "199f4778-09d6-5cfa-abb3-e9bb7691145d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-731]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-731")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "19e662b0-6edf-5f6f-8e72-979d948c6e1a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-742]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-742")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "1a5ff1dd-09d2-57b9-bfa3-9b02a9373b0f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-753]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-753")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "1bf41345-ee85-569b-a022-c36ff6a5c558", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-734]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-734")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "2151c186-1824-5ed9-8bea-9c68a5330753", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-738]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-738")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "3358e076-66f4-5d42-a1d5-707cecb8f70b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-732]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-732")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "3b0ad515-9a94-53ce-be8c-6f3761b97a7a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-749]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-749")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "483f1a9c-687d-5d54-bf85-977ad4a36bdb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-728]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-728")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "5b32c7d3-ede1-5586-a7ca-da8686051b14", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-755]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-755")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "5d059696-d667-5b5c-8d20-23b19ef421d9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-743]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-743")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "5f738ef9-dedf-5309-a62d-53845b5a1a4e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-758]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-758")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "766b86a4-0dcc-521d-8bb6-d27d78acb693", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-740]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-740")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "79a91e52-4b0b-53a7-9959-20ebf048e319", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-751]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-751")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "879ec2e7-3b11-5170-98b0-b4a91d2bb3c7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-739]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-739")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "9397b218-249a-57dd-be98-520d9cba2474", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-747]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-747")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "9af4e040-689a-54a9-ba22-862a631596bd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-735]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-735")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "9c2bd9ff-ca37-5764-95cb-39133fbb2aa2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-752]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-752")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "9f1f9d0c-129c-5a6a-a162-653adf02f281", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-733]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-733")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "a6a5b817-35a6-5f9a-be9a-bf5262fe4fd6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-744]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-744")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "ab82c49b-2783-5c78-9931-7d6b0fbb5912", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-754]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-754")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "b22c4819-b614-5ac5-b1ac-95043bf74c79", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-729]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-729")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "b95cfcba-dd98-56ce-85e1-398a0acdad1b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-736]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-736")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "bdd84bd1-3356-548b-8d43-8a862a43f544", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-730]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-730")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "cec4244a-7b81-5c2d-a20c-783046f610c8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-741]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-741")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "d4e0097b-2530-50a1-a9e9-0292d2e35dd6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-748]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-748")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "d7252600-a390-56b7-97bd-cf4a413f0c84", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-757]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-757")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "dd9e1fc6-07e9-5cbb-8414-7bf3d9b85b6c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-737]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-737")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "ef9add9a-b595-5210-9cf1-0f731acd2823", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-746]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-746")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "f94a2600-3b56-59eb-960b-bf7c66c1eaf0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-745]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-745")], .matchExpressions = []}}}}: +1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 4398037940003267649077370648463899309, .node = "testNode-75"}: +1
AddressGroupSpan{.addressGroup = 20092635691975747594380957838639536461, .node = "testNode-74"}: +1
AddressGroupSpan{.addressGroup = 24504795559851105437069282183056106079, .node = "testNode-75"}: +1
AddressGroupSpan{.addressGroup = 34057724656635809691416705192801932381, .node = "testNode-73"}: +1
AddressGroupSpan{.addressGroup = 34426929826697059772173071824620121626, .node = "testNode-74"}: +1
AddressGroupSpan{.addressGroup = 35058101665146670808052052538129070863, .node = "testNode-75"}: +1
AddressGroupSpan{.addressGroup = 37156467226019537841532311016332182872, .node = "testNode-73"}: +1
AddressGroupSpan{.addressGroup = 44289025035542436008242967276697093971, .node = "testNode-73"}: +1
AddressGroupSpan{.addressGroup = 68252102549119058317764176736129971979, .node = "testNode-73"}: +1
AddressGroupSpan{.addressGroup = 78480696584772383686929246462571805306, .node = "testNode-74"}: +1
AddressGroupSpan{.addressGroup = 96032070133182681650620944880094112731, .node = "testNode-72"}: +1
AddressGroupSpan{.addressGroup = 121223415449627862530040104112695352084, .node = "testNode-75"}: +1
AddressGroupSpan{.addressGroup = 123647219404309518112218654842480239065, .node = "testNode-74"}: +1
AddressGroupSpan{.addressGroup = 126876673637250352464688700325600303694, .node = "testNode-75"}: +1
AddressGroupSpan{.addressGroup = 157407210107059154996043679640104777363, .node = "testNode-73"}: +1
AddressGroupSpan{.addressGroup = 161714700651289711179061588185481536281, .node = "testNode-75"}: +1
AddressGroupSpan{.addressGroup = 180270115442061346733561750408827483079, .node = "testNode-73"}: +1
AddressGroupSpan{.addressGroup = 196184164387734792494584650260731798644, .node = "testNode-74"}: +1
AddressGroupSpan{.addressGroup = 205972580147086176662977578262869677757, .node = "testNode-73"}: +1
AddressGroupSpan{.addressGroup = 207587257656012182916251504856989903522, .node = "testNode-75"}: +1
AddressGroupSpan{.addressGroup = 211511397827221676516229770772689908353, .node = "testNode-73"}: +1
AddressGroupSpan{.addressGroup = 221512310084172929882113552273775677398, .node = "testNode-74"}: +1
AddressGroupSpan{.addressGroup = 227976973515706368644401821506401425682, .node = "testNode-75"}: +1
AddressGroupSpan{.addressGroup = 236832506682036962533083870175459495033, .node = "testNode-72"}: +1
AddressGroupSpan{.addressGroup = 246389996503433342331435283858892631323, .node = "testNode-73"}: +1
AddressGroupSpan{.addressGroup = 252347165080086964477547050496069727556, .node = "testNode-72"}: +1
AddressGroupSpan{.addressGroup = 274839393383818296487324953745160540360, .node = "testNode-74"}: +1
AddressGroupSpan{.addressGroup = 282959601900973743138164282562013519318, .node = "testNode-74"}: +1
AddressGroupSpan{.addressGroup = 285976904859708191489159824789792033924, .node = "testNode-75"}: +1
AddressGroupSpan{.addressGroup = 294580414416437314404665722698091486060, .node = "testNode-73"}: +1
AddressGroupSpan{.addressGroup = 318489599378665995559969640392831084579, .node = "testNode-74"}: +1
AddressGroupSpan{.addressGroup = 331362771667904576197395320489126259440, .node = "testNode-74"}: +1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "0f1db36c-7be5-5373-a007-56b0f06a994d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-750]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-750")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "126f73b3-5254-59a2-82e2-852ddea6a25f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-756]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-756")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "185a71fd-ef8b-56d1-a4c5-52f3a93e5c9d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-727]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-727")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "199f4778-09d6-5cfa-abb3-e9bb7691145d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-731]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-731")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "19e662b0-6edf-5f6f-8e72-979d948c6e1a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-742]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-742")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "1a5ff1dd-09d2-57b9-bfa3-9b02a9373b0f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-753]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-753")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "1bf41345-ee85-569b-a022-c36ff6a5c558", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-734]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-734")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "2151c186-1824-5ed9-8bea-9c68a5330753", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-738]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-738")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "3358e076-66f4-5d42-a1d5-707cecb8f70b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-732]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-732")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "3b0ad515-9a94-53ce-be8c-6f3761b97a7a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-749]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-749")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "483f1a9c-687d-5d54-bf85-977ad4a36bdb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-728]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-728")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "5b32c7d3-ede1-5586-a7ca-da8686051b14", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-755]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-755")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "5d059696-d667-5b5c-8d20-23b19ef421d9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-743]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-743")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "5f738ef9-dedf-5309-a62d-53845b5a1a4e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-758]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-758")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "766b86a4-0dcc-521d-8bb6-d27d78acb693", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-740]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-740")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "79a91e52-4b0b-53a7-9959-20ebf048e319", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-751]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-751")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "879ec2e7-3b11-5170-98b0-b4a91d2bb3c7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-739]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-739")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "9397b218-249a-57dd-be98-520d9cba2474", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-747]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-747")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "9af4e040-689a-54a9-ba22-862a631596bd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-735]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-735")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "9c2bd9ff-ca37-5764-95cb-39133fbb2aa2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-752]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-752")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "9f1f9d0c-129c-5a6a-a162-653adf02f281", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-733]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-733")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "a6a5b817-35a6-5f9a-be9a-bf5262fe4fd6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-744]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-744")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "ab82c49b-2783-5c78-9931-7d6b0fbb5912", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-754]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-754")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "b22c4819-b614-5ac5-b1ac-95043bf74c79", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-729]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-729")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "b95cfcba-dd98-56ce-85e1-398a0acdad1b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-736]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-736")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "bdd84bd1-3356-548b-8d43-8a862a43f544", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-730]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-730")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "cec4244a-7b81-5c2d-a20c-783046f610c8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-741]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-741")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "d4e0097b-2530-50a1-a9e9-0292d2e35dd6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-748]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-748")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "d7252600-a390-56b7-97bd-cf4a413f0c84", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-757]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-757")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "dd9e1fc6-07e9-5cbb-8414-7bf3d9b85b6c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-737]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-737")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "ef9add9a-b595-5210-9cf1-0f731acd2823", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-746]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-746")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "f94a2600-3b56-59eb-960b-bf7c66c1eaf0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-745]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-745")], .matchExpressions = []}}}}: +1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 20092635691975747594380957838639536461, .node = "testNode-75", .pods = [k8spolicy.PodReference{.name = "testPod-750", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 24504795559851105437069282183056106079, .node = "testNode-75", .pods = [k8spolicy.PodReference{.name = "testPod-756", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 32371090647251812210882361596766477469, .node = "testNode-72", .pods = [k8spolicy.PodReference{.name = "testPod-727", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 34057724656635809691416705192801932381, .node = "testNode-73", .pods = [k8spolicy.PodReference{.name = "testPod-731", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 34426929826697059772173071824620121626, .node = "testNode-74", .pods = [k8spolicy.PodReference{.name = "testPod-742", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 35058101665146670808052052538129070863, .node = "testNode-75", .pods = [k8spolicy.PodReference{.name = "testPod-753", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 37156467226019537841532311016332182872, .node = "testNode-73", .pods = [k8spolicy.PodReference{.name = "testPod-734", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 44289025035542436008242967276697093971, .node = "testNode-73", .pods = [k8spolicy.PodReference{.name = "testPod-738", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 68252102549119058317764176736129971979, .node = "testNode-73", .pods = [k8spolicy.PodReference{.name = "testPod-732", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 78480696584772383686929246462571805306, .node = "testNode-74", .pods = [k8spolicy.PodReference{.name = "testPod-749", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 96032070133182681650620944880094112731, .node = "testNode-72", .pods = [k8spolicy.PodReference{.name = "testPod-728", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 121223415449627862530040104112695352084, .node = "testNode-75", .pods = [k8spolicy.PodReference{.name = "testPod-755", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 123647219404309518112218654842480239065, .node = "testNode-74", .pods = [k8spolicy.PodReference{.name = "testPod-743", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 126876673637250352464688700325600303694, .node = "testNode-75", .pods = [k8spolicy.PodReference{.name = "testPod-758", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 157407210107059154996043679640104777363, .node = "testNode-74", .pods = [k8spolicy.PodReference{.name = "testPod-740", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 161714700651289711179061588185481536281, .node = "testNode-75", .pods = [k8spolicy.PodReference{.name = "testPod-751", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 180270115442061346733561750408827483079, .node = "testNode-73", .pods = [k8spolicy.PodReference{.name = "testPod-739", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 196184164387734792494584650260731798644, .node = "testNode-74", .pods = [k8spolicy.PodReference{.name = "testPod-747", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 205972580147086176662977578262869677757, .node = "testNode-73", .pods = [k8spolicy.PodReference{.name = "testPod-735", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 207587257656012182916251504856989903522, .node = "testNode-75", .pods = [k8spolicy.PodReference{.name = "testPod-752", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 211511397827221676516229770772689908353, .node = "testNode-73", .pods = [k8spolicy.PodReference{.name = "testPod-733", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 221512310084172929882113552273775677398, .node = "testNode-74", .pods = [k8spolicy.PodReference{.name = "testPod-744", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 227976973515706368644401821506401425682, .node = "testNode-75", .pods = [k8spolicy.PodReference{.name = "testPod-754", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 236832506682036962533083870175459495033, .node = "testNode-72", .pods = [k8spolicy.PodReference{.name = "testPod-729", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 246389996503433342331435283858892631323, .node = "testNode-73", .pods = [k8spolicy.PodReference{.name = "testPod-736", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 252347165080086964477547050496069727556, .node = "testNode-73", .pods = [k8spolicy.PodReference{.name = "testPod-730", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 274839393383818296487324953745160540360, .node = "testNode-74", .pods = [k8spolicy.PodReference{.name = "testPod-741", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 282959601900973743138164282562013519318, .node = "testNode-74", .pods = [k8spolicy.PodReference{.name = "testPod-748", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 285976904859708191489159824789792033924, .node = "testNode-75", .pods = [k8spolicy.PodReference{.name = "testPod-757", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 294580414416437314404665722698091486060, .node = "testNode-73", .pods = [k8spolicy.PodReference{.name = "testPod-737", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 318489599378665995559969640392831084579, .node = "testNode-74", .pods = [k8spolicy.PodReference{.name = "testPod-746", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 331362771667904576197395320489126259440, .node = "testNode-74", .pods = [k8spolicy.PodReference{.name = "testPod-745", .namespace = "testNamespace"}]}: +1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 20092635691975747594380957838639536461, .span = "testNode-75"}: +1
AppliedToGroupSpan{.appliedToGroup = 24504795559851105437069282183056106079, .span = "testNode-75"}: +1
AppliedToGroupSpan{.appliedToGroup = 32371090647251812210882361596766477469, .span = "testNode-72"}: +1
AppliedToGroupSpan{.appliedToGroup = 34057724656635809691416705192801932381, .span = "testNode-73"}: +1
AppliedToGroupSpan{.appliedToGroup = 34426929826697059772173071824620121626, .span = "testNode-74"}: +1
AppliedToGroupSpan{.appliedToGroup = 35058101665146670808052052538129070863, .span = "testNode-75"}: +1
AppliedToGroupSpan{.appliedToGroup = 37156467226019537841532311016332182872, .span = "testNode-73"}: +1
AppliedToGroupSpan{.appliedToGroup = 44289025035542436008242967276697093971, .span = "testNode-73"}: +1
AppliedToGroupSpan{.appliedToGroup = 68252102549119058317764176736129971979, .span = "testNode-73"}: +1
AppliedToGroupSpan{.appliedToGroup = 78480696584772383686929246462571805306, .span = "testNode-74"}: +1
AppliedToGroupSpan{.appliedToGroup = 96032070133182681650620944880094112731, .span = "testNode-72"}: +1
AppliedToGroupSpan{.appliedToGroup = 121223415449627862530040104112695352084, .span = "testNode-75"}: +1
AppliedToGroupSpan{.appliedToGroup = 123647219404309518112218654842480239065, .span = "testNode-74"}: +1
AppliedToGroupSpan{.appliedToGroup = 126876673637250352464688700325600303694, .span = "testNode-75"}: +1
AppliedToGroupSpan{.appliedToGroup = 157407210107059154996043679640104777363, .span = "testNode-74"}: +1
AppliedToGroupSpan{.appliedToGroup = 161714700651289711179061588185481536281, .span = "testNode-75"}: +1
AppliedToGroupSpan{.appliedToGroup = 180270115442061346733561750408827483079, .span = "testNode-73"}: +1
AppliedToGroupSpan{.appliedToGroup = 196184164387734792494584650260731798644, .span = "testNode-74"}: +1
AppliedToGroupSpan{.appliedToGroup = 205972580147086176662977578262869677757, .span = "testNode-73"}: +1
AppliedToGroupSpan{.appliedToGroup = 207587257656012182916251504856989903522, .span = "testNode-75"}: +1
AppliedToGroupSpan{.appliedToGroup = 211511397827221676516229770772689908353, .span = "testNode-73"}: +1
AppliedToGroupSpan{.appliedToGroup = 221512310084172929882113552273775677398, .span = "testNode-74"}: +1
AppliedToGroupSpan{.appliedToGroup = 227976973515706368644401821506401425682, .span = "testNode-75"}: +1
AppliedToGroupSpan{.appliedToGroup = 236832506682036962533083870175459495033, .span = "testNode-72"}: +1
AppliedToGroupSpan{.appliedToGroup = 246389996503433342331435283858892631323, .span = "testNode-73"}: +1
AppliedToGroupSpan{.appliedToGroup = 252347165080086964477547050496069727556, .span = "testNode-73"}: +1
AppliedToGroupSpan{.appliedToGroup = 274839393383818296487324953745160540360, .span = "testNode-74"}: +1
AppliedToGroupSpan{.appliedToGroup = 282959601900973743138164282562013519318, .span = "testNode-74"}: +1
AppliedToGroupSpan{.appliedToGroup = 285976904859708191489159824789792033924, .span = "testNode-75"}: +1
AppliedToGroupSpan{.appliedToGroup = 294580414416437314404665722698091486060, .span = "testNode-73"}: +1
AppliedToGroupSpan{.appliedToGroup = 318489599378665995559969640392831084579, .span = "testNode-74"}: +1
AppliedToGroupSpan{.appliedToGroup = 331362771667904576197395320489126259440, .span = "testNode-74"}: +1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-727"}, .name = "testNP-727", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [96032070133182681650620944880094112731], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [32371090647251812210882361596766477469]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-728"}, .name = "testNP-728", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [236832506682036962533083870175459495033], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [96032070133182681650620944880094112731]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-729"}, .name = "testNP-729", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [252347165080086964477547050496069727556], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [236832506682036962533083870175459495033]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-730"}, .name = "testNP-730", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [34057724656635809691416705192801932381], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [252347165080086964477547050496069727556]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-731"}, .name = "testNP-731", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [68252102549119058317764176736129971979], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [34057724656635809691416705192801932381]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-732"}, .name = "testNP-732", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [211511397827221676516229770772689908353], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [68252102549119058317764176736129971979]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-733"}, .name = "testNP-733", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [37156467226019537841532311016332182872], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [211511397827221676516229770772689908353]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-734"}, .name = "testNP-734", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [205972580147086176662977578262869677757], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [37156467226019537841532311016332182872]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-735"}, .name = "testNP-735", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [246389996503433342331435283858892631323], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [205972580147086176662977578262869677757]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-736"}, .name = "testNP-736", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [294580414416437314404665722698091486060], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [246389996503433342331435283858892631323]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-737"}, .name = "testNP-737", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [44289025035542436008242967276697093971], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [294580414416437314404665722698091486060]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-738"}, .name = "testNP-738", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [180270115442061346733561750408827483079], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [44289025035542436008242967276697093971]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-739"}, .name = "testNP-739", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [157407210107059154996043679640104777363], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [180270115442061346733561750408827483079]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-740"}, .name = "testNP-740", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [274839393383818296487324953745160540360], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [157407210107059154996043679640104777363]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-741"}, .name = "testNP-741", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [34426929826697059772173071824620121626], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [274839393383818296487324953745160540360]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-742"}, .name = "testNP-742", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [123647219404309518112218654842480239065], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [34426929826697059772173071824620121626]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-743"}, .name = "testNP-743", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [221512310084172929882113552273775677398], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [123647219404309518112218654842480239065]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-744"}, .name = "testNP-744", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [331362771667904576197395320489126259440], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [221512310084172929882113552273775677398]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-745"}, .name = "testNP-745", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [318489599378665995559969640392831084579], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [331362771667904576197395320489126259440]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-746"}, .name = "testNP-746", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [196184164387734792494584650260731798644], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [318489599378665995559969640392831084579]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-747"}, .name = "testNP-747", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [282959601900973743138164282562013519318], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [196184164387734792494584650260731798644]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-748"}, .name = "testNP-748", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [78480696584772383686929246462571805306], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [282959601900973743138164282562013519318]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-749"}, .name = "testNP-749", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [20092635691975747594380957838639536461], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [78480696584772383686929246462571805306]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-750"}, .name = "testNP-750", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [161714700651289711179061588185481536281], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [20092635691975747594380957838639536461]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-751"}, .name = "testNP-751", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [207587257656012182916251504856989903522], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [161714700651289711179061588185481536281]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-752"}, .name = "testNP-752", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [35058101665146670808052052538129070863], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [207587257656012182916251504856989903522]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-753"}, .name = "testNP-753", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [227976973515706368644401821506401425682], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [35058101665146670808052052538129070863]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-754"}, .name = "testNP-754", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [121223415449627862530040104112695352084], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [227976973515706368644401821506401425682]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-755"}, .name = "testNP-755", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [24504795559851105437069282183056106079], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [121223415449627862530040104112695352084]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-756"}, .name = "testNP-756", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [285976904859708191489159824789792033924], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [24504795559851105437069282183056106079]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-757"}, .name = "testNP-757", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [126876673637250352464688700325600303694], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [285976904859708191489159824789792033924]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-758"}, .name = "testNP-758", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [4398037940003267649077370648463899309], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [126876673637250352464688700325600303694]}: +1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-727", .policy = k8spolicy.UID{.uid = "testNP-727"}, .node = "testNode-72"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-728", .policy = k8spolicy.UID{.uid = "testNP-728"}, .node = "testNode-72"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-729", .policy = k8spolicy.UID{.uid = "testNP-729"}, .node = "testNode-72"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-730", .policy = k8spolicy.UID{.uid = "testNP-730"}, .node = "testNode-73"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-731", .policy = k8spolicy.UID{.uid = "testNP-731"}, .node = "testNode-73"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-732", .policy = k8spolicy.UID{.uid = "testNP-732"}, .node = "testNode-73"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-733", .policy = k8spolicy.UID{.uid = "testNP-733"}, .node = "testNode-73"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-734", .policy = k8spolicy.UID{.uid = "testNP-734"}, .node = "testNode-73"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-735", .policy = k8spolicy.UID{.uid = "testNP-735"}, .node = "testNode-73"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-736", .policy = k8spolicy.UID{.uid = "testNP-736"}, .node = "testNode-73"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-737", .policy = k8spolicy.UID{.uid = "testNP-737"}, .node = "testNode-73"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-738", .policy = k8spolicy.UID{.uid = "testNP-738"}, .node = "testNode-73"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-739", .policy = k8spolicy.UID{.uid = "testNP-739"}, .node = "testNode-73"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-740", .policy = k8spolicy.UID{.uid = "testNP-740"}, .node = "testNode-74"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-741", .policy = k8spolicy.UID{.uid = "testNP-741"}, .node = "testNode-74"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-742", .policy = k8spolicy.UID{.uid = "testNP-742"}, .node = "testNode-74"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-743", .policy = k8spolicy.UID{.uid = "testNP-743"}, .node = "testNode-74"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-744", .policy = k8spolicy.UID{.uid = "testNP-744"}, .node = "testNode-74"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-745", .policy = k8spolicy.UID{.uid = "testNP-745"}, .node = "testNode-74"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-746", .policy = k8spolicy.UID{.uid = "testNP-746"}, .node = "testNode-74"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-747", .policy = k8spolicy.UID{.uid = "testNP-747"}, .node = "testNode-74"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-748", .policy = k8spolicy.UID{.uid = "testNP-748"}, .node = "testNode-74"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-749", .policy = k8spolicy.UID{.uid = "testNP-749"}, .node = "testNode-74"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-750", .policy = k8spolicy.UID{.uid = "testNP-750"}, .node = "testNode-75"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-751", .policy = k8spolicy.UID{.uid = "testNP-751"}, .node = "testNode-75"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-752", .policy = k8spolicy.UID{.uid = "testNP-752"}, .node = "testNode-75"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-753", .policy = k8spolicy.UID{.uid = "testNP-753"}, .node = "testNode-75"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-754", .policy = k8spolicy.UID{.uid = "testNP-754"}, .node = "testNode-75"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-755", .policy = k8spolicy.UID{.uid = "testNP-755"}, .node = "testNode-75"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-756", .policy = k8spolicy.UID{.uid = "testNP-756"}, .node = "testNode-75"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-757", .policy = k8spolicy.UID{.uid = "testNP-757"}, .node = "testNode-75"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-758", .policy = k8spolicy.UID{.uid = "testNP-758"}, .node = "testNode-75"}: +1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 15167791859128027178742186806802006013, .address = "10.10.77.7"}: +1
AddressGroupAddress{.addressGroup = 17658808561446985253322180017424654338, .address = "10.10.76.0"}: +1
AddressGroupAddress{.addressGroup = 21585889398609078897151576103508458932, .address = "10.10.78.2"}: +1
AddressGroupAddress{.addressGroup = 59138668918615823277603863876527587177, .address = "10.10.78.5"}: +1
AddressGroupAddress{.addressGroup = 72122705871304275637087195349897034990, .address = "10.10.76.6"}: +1
AddressGroupAddress{.addressGroup = 80708215663055788588686619441514344073, .address = "10.10.78.9"}: +1
AddressGroupAddress{.addressGroup = 99873494153055087609843721750415393612, .address = "10.10.78.7"}: +1
AddressGroupAddress{.addressGroup = 100868379569040624999795522528451395874, .address = "10.10.76.4"}: +1
AddressGroupAddress{.addressGroup = 119589963794466669087788330089559877778, .address = "10.10.76.9"}: +1
AddressGroupAddress{.addressGroup = 130054054732319908097189169192681493188, .address = "10.10.77.2"}: +1
AddressGroupAddress{.addressGroup = 146178588422979754866794290484410982527, .address = "10.10.78.0"}: +1
AddressGroupAddress{.addressGroup = 146185538408816906377723580363484118757, .address = "10.10.77.0"}: +1
AddressGroupAddress{.addressGroup = 156048549456266952186328762894833522783, .address = "10.10.78.3"}: +1
AddressGroupAddress{.addressGroup = 167806124460239317461469712179280498028, .address = "10.10.76.1"}: +1
AddressGroupAddress{.addressGroup = 170872054080291201713603711837466027142, .address = "10.10.76.3"}: +1
AddressGroupAddress{.addressGroup = 182451874850830543827183069280738869661, .address = "10.10.77.5"}: +1
AddressGroupAddress{.addressGroup = 193093053630956660449843576033623764767, .address = "10.10.77.6"}: +1
AddressGroupAddress{.addressGroup = 196267459757869653417180572818886082471, .address = "10.10.78.8"}: +1
AddressGroupAddress{.addressGroup = 197754218681631532389323125046627877130, .address = "10.10.78.4"}: +1
AddressGroupAddress{.addressGroup = 200405146350828304228576124973486837286, .address = "10.10.76.7"}: +1
AddressGroupAddress{.addressGroup = 213884245349307647754033137287386210101, .address = "10.10.77.8"}: +1
AddressGroupAddress{.addressGroup = 228577225627974225456062960310638283122, .address = "10.10.78.6"}: +1
AddressGroupAddress{.addressGroup = 243217735055966500436912331206752091025, .address = "10.10.78.1"}: +1
AddressGroupAddress{.addressGroup = 248025121155873484586719311007875956384, .address = "10.10.77.9"}: +1
AddressGroupAddress{.addressGroup = 258146097539826554152802787500765572116, .address = "10.10.77.1"}: +1
AddressGroupAddress{.addressGroup = 259776768260994503107571264675618229799, .address = "10.10.77.4"}: +1
AddressGroupAddress{.addressGroup = 269910770799879708472502124908742799538, .address = "10.10.79.1"}: +1
AddressGroupAddress{.addressGroup = 284566077296111011827148429360522196537, .address = "10.10.76.5"}: +1
AddressGroupAddress{.addressGroup = 306160349818334709164720342947313424387, .address = "10.10.79.0"}: +1
AddressGroupAddress{.addressGroup = 315165317205468055386143809281584536845, .address = "10.10.76.2"}: +1
AddressGroupAddress{.addressGroup = 333086689822027869740204446506499439221, .address = "10.10.76.8"}: +1
AddressGroupAddress{.addressGroup = 335231819269904380578766239397927905153, .address = "10.10.77.3"}: +1
AddressGroupDescr:
AddressGroupDescr{.name = "0b6935e0-4256-5914-bfb1-bb3186d23ffd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-777]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-777")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "0d48f67b-4f7e-5de0-84cd-517bbdc76002", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-760]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-760")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "103d4a84-040b-5d32-b625-c81009333db4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-782]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-782")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "2c7db17e-58e7-55e0-9f24-671a97b1ff69", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-785]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-785")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "364253f0-a667-50f8-9667-0b11e261bcee", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-766]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-766")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "3cb7d641-1154-598f-8375-57a27086ee89", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-789]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-789")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "4b22ef70-1527-55d5-ab1d-eddbd30bc34c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-787]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-787")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "4be28b13-70ae-536b-a586-e35cc4668122", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-764]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-764")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "59f83071-820d-5756-9459-0f463713e892", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-769]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-769")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "61d77ff5-8035-5e87-8cd3-d82d6f9e52c4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-772]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-772")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "6df8f8d9-6581-5038-bee3-4ec6d252207f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-780]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-780")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "6dfa4f82-8ce7-52be-83c9-cf80986f3ee5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-770]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-770")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "7565db7f-b84e-54ca-af30-88d9b589985f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-783]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-783")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "7e3e48b3-e4b2-5bef-875e-51f352e44d6c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-761]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-761")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "808cc2b4-23d9-591f-b752-0ab0b7006486", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-763]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-763")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "8942f3f2-772e-5aa4-b8a1-20023b26019d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-775]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-775")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "91445e91-446d-5ae2-92a0-8ba2d8116f1f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-776]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-776")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "93a7bcdf-8535-5422-94ba-87ce7acfbfa7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-788]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-788")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "94c613bf-5e11-5c20-b0b1-1ab014bd410a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-784]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-784")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "96c4a092-9489-50c5-bf37-005a45fa0e26", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-767]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-767")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "a0e89b76-615a-5c59-a0c6-027039619f35", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-778]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-778")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "abf65f51-f2db-55f3-bfcd-94ef814b0972", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-786]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-786")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "b6fa082a-45da-5cd2-97d1-e1d11cc63b91", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-781]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-781")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "ba97e699-7b2e-551a-a089-2d4fc5e17ea0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-779]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-779")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "c2352142-f3df-5c0a-a70c-3265e0e16c14", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-771]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-771")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "c36f2f89-0d57-59d7-9b3f-e9d844200e27", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-774]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-774")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "cb0eec6f-b6a8-5a4f-b75a-985e6c5d70b2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-791]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-791")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "d6156ed5-4bc9-53fb-92f6-705c2c15f639", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-765]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-765")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "e65456ab-3523-5706-ac30-fc8f7e431803", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-790]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-790")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "ed1aa1d6-ccb0-569f-bea3-0e902d681d0d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-762]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-762")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "fa9629ba-66b5-578b-b753-884370a7fa75", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-768]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-768")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "fc334cc6-87c1-5f4c-963a-8583abaee781", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-773]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-773")], .matchExpressions = []}}}}: +1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 15167791859128027178742186806802006013, .node = "testNode-77"}: +1
AddressGroupSpan{.addressGroup = 17658808561446985253322180017424654338, .node = "testNode-75"}: +1
AddressGroupSpan{.addressGroup = 21585889398609078897151576103508458932, .node = "testNode-78"}: +1
AddressGroupSpan{.addressGroup = 59138668918615823277603863876527587177, .node = "testNode-78"}: +1
AddressGroupSpan{.addressGroup = 72122705871304275637087195349897034990, .node = "testNode-76"}: +1
AddressGroupSpan{.addressGroup = 80708215663055788588686619441514344073, .node = "testNode-78"}: +1
AddressGroupSpan{.addressGroup = 99873494153055087609843721750415393612, .node = "testNode-78"}: +1
AddressGroupSpan{.addressGroup = 100868379569040624999795522528451395874, .node = "testNode-76"}: +1
AddressGroupSpan{.addressGroup = 119589963794466669087788330089559877778, .node = "testNode-76"}: +1
AddressGroupSpan{.addressGroup = 130054054732319908097189169192681493188, .node = "testNode-77"}: +1
AddressGroupSpan{.addressGroup = 146178588422979754866794290484410982527, .node = "testNode-77"}: +1
AddressGroupSpan{.addressGroup = 146185538408816906377723580363484118757, .node = "testNode-76"}: +1
AddressGroupSpan{.addressGroup = 156048549456266952186328762894833522783, .node = "testNode-78"}: +1
AddressGroupSpan{.addressGroup = 167806124460239317461469712179280498028, .node = "testNode-76"}: +1
AddressGroupSpan{.addressGroup = 170872054080291201713603711837466027142, .node = "testNode-76"}: +1
AddressGroupSpan{.addressGroup = 182451874850830543827183069280738869661, .node = "testNode-77"}: +1
AddressGroupSpan{.addressGroup = 193093053630956660449843576033623764767, .node = "testNode-77"}: +1
AddressGroupSpan{.addressGroup = 196267459757869653417180572818886082471, .node = "testNode-78"}: +1
AddressGroupSpan{.addressGroup = 197754218681631532389323125046627877130, .node = "testNode-78"}: +1
AddressGroupSpan{.addressGroup = 200405146350828304228576124973486837286, .node = "testNode-76"}: +1
AddressGroupSpan{.addressGroup = 213884245349307647754033137287386210101, .node = "testNode-77"}: +1
AddressGroupSpan{.addressGroup = 228577225627974225456062960310638283122, .node = "testNode-78"}: +1
AddressGroupSpan{.addressGroup = 243217735055966500436912331206752091025, .node = "testNode-78"}: +1
AddressGroupSpan{.addressGroup = 248025121155873484586719311007875956384, .node = "testNode-77"}: +1
AddressGroupSpan{.addressGroup = 258146097539826554152802787500765572116, .node = "testNode-77"}: +1
AddressGroupSpan{.addressGroup = 259776768260994503107571264675618229799, .node = "testNode-77"}: +1
AddressGroupSpan{.addressGroup = 269910770799879708472502124908742799538, .node = "testNode-79"}: +1
AddressGroupSpan{.addressGroup = 284566077296111011827148429360522196537, .node = "testNode-76"}: +1
AddressGroupSpan{.addressGroup = 306160349818334709164720342947313424387, .node = "testNode-78"}: +1
AddressGroupSpan{.addressGroup = 315165317205468055386143809281584536845, .node = "testNode-76"}: +1
AddressGroupSpan{.addressGroup = 333086689822027869740204446506499439221, .node = "testNode-76"}: +1
AddressGroupSpan{.addressGroup = 335231819269904380578766239397927905153, .node = "testNode-77"}: +1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "034f0803-0c7b-5be1-a6cd-fa18721f7aad", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-759]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-759")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "0b6935e0-4256-5914-bfb1-bb3186d23ffd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-777]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-777")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "0d48f67b-4f7e-5de0-84cd-517bbdc76002", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-760]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-760")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "103d4a84-040b-5d32-b625-c81009333db4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-782]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-782")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "2c7db17e-58e7-55e0-9f24-671a97b1ff69", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-785]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-785")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "364253f0-a667-50f8-9667-0b11e261bcee", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-766]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-766")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "3cb7d641-1154-598f-8375-57a27086ee89", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-789]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-789")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "4b22ef70-1527-55d5-ab1d-eddbd30bc34c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-787]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-787")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "4be28b13-70ae-536b-a586-e35cc4668122", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-764]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-764")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "59f83071-820d-5756-9459-0f463713e892", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-769]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-769")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "61d77ff5-8035-5e87-8cd3-d82d6f9e52c4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-772]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-772")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "6df8f8d9-6581-5038-bee3-4ec6d252207f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-780]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-780")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "6dfa4f82-8ce7-52be-83c9-cf80986f3ee5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-770]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-770")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "7565db7f-b84e-54ca-af30-88d9b589985f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-783]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-783")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "7e3e48b3-e4b2-5bef-875e-51f352e44d6c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-761]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-761")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "808cc2b4-23d9-591f-b752-0ab0b7006486", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-763]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-763")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "8942f3f2-772e-5aa4-b8a1-20023b26019d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-775]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-775")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "91445e91-446d-5ae2-92a0-8ba2d8116f1f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-776]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-776")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "93a7bcdf-8535-5422-94ba-87ce7acfbfa7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-788]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-788")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "94c613bf-5e11-5c20-b0b1-1ab014bd410a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-784]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-784")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "96c4a092-9489-50c5-bf37-005a45fa0e26", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-767]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-767")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "a0e89b76-615a-5c59-a0c6-027039619f35", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-778]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-778")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "abf65f51-f2db-55f3-bfcd-94ef814b0972", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-786]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-786")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "b6fa082a-45da-5cd2-97d1-e1d11cc63b91", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-781]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-781")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "ba97e699-7b2e-551a-a089-2d4fc5e17ea0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-779]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-779")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "c2352142-f3df-5c0a-a70c-3265e0e16c14", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-771]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-771")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "c36f2f89-0d57-59d7-9b3f-e9d844200e27", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-774]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-774")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "d6156ed5-4bc9-53fb-92f6-705c2c15f639", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-765]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-765")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "e65456ab-3523-5706-ac30-fc8f7e431803", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-790]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-790")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "ed1aa1d6-ccb0-569f-bea3-0e902d681d0d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-762]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-762")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "fa9629ba-66b5-578b-b753-884370a7fa75", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-768]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-768")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "fc334cc6-87c1-5f4c-963a-8583abaee781", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-773]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-773")], .matchExpressions = []}}}}: +1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 4398037940003267649077370648463899309, .node = "testNode-75", .pods = [k8spolicy.PodReference{.name = "testPod-759", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 15167791859128027178742186806802006013, .node = "testNode-77", .pods = [k8spolicy.PodReference{.name = "testPod-777", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 17658808561446985253322180017424654338, .node = "testNode-76", .pods = [k8spolicy.PodReference{.name = "testPod-760", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 21585889398609078897151576103508458932, .node = "testNode-78", .pods = [k8spolicy.PodReference{.name = "testPod-782", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 59138668918615823277603863876527587177, .node = "testNode-78", .pods = [k8spolicy.PodReference{.name = "testPod-785", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 72122705871304275637087195349897034990, .node = "testNode-76", .pods = [k8spolicy.PodReference{.name = "testPod-766", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 80708215663055788588686619441514344073, .node = "testNode-78", .pods = [k8spolicy.PodReference{.name = "testPod-789", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 99873494153055087609843721750415393612, .node = "testNode-78", .pods = [k8spolicy.PodReference{.name = "testPod-787", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 100868379569040624999795522528451395874, .node = "testNode-76", .pods = [k8spolicy.PodReference{.name = "testPod-764", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 119589963794466669087788330089559877778, .node = "testNode-76", .pods = [k8spolicy.PodReference{.name = "testPod-769", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 130054054732319908097189169192681493188, .node = "testNode-77", .pods = [k8spolicy.PodReference{.name = "testPod-772", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 146178588422979754866794290484410982527, .node = "testNode-78", .pods = [k8spolicy.PodReference{.name = "testPod-780", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 146185538408816906377723580363484118757, .node = "testNode-77", .pods = [k8spolicy.PodReference{.name = "testPod-770", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 156048549456266952186328762894833522783, .node = "testNode-78", .pods = [k8spolicy.PodReference{.name = "testPod-783", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 167806124460239317461469712179280498028, .node = "testNode-76", .pods = [k8spolicy.PodReference{.name = "testPod-761", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 170872054080291201713603711837466027142, .node = "testNode-76", .pods = [k8spolicy.PodReference{.name = "testPod-763", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 182451874850830543827183069280738869661, .node = "testNode-77", .pods = [k8spolicy.PodReference{.name = "testPod-775", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 193093053630956660449843576033623764767, .node = "testNode-77", .pods = [k8spolicy.PodReference{.name = "testPod-776", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 196267459757869653417180572818886082471, .node = "testNode-78", .pods = [k8spolicy.PodReference{.name = "testPod-788", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 197754218681631532389323125046627877130, .node = "testNode-78", .pods = [k8spolicy.PodReference{.name = "testPod-784", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 200405146350828304228576124973486837286, .node = "testNode-76", .pods = [k8spolicy.PodReference{.name = "testPod-767", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 213884245349307647754033137287386210101, .node = "testNode-77", .pods = [k8spolicy.PodReference{.name = "testPod-778", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 228577225627974225456062960310638283122, .node = "testNode-78", .pods = [k8spolicy.PodReference{.name = "testPod-786", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 243217735055966500436912331206752091025, .node = "testNode-78", .pods = [k8spolicy.PodReference{.name = "testPod-781", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 248025121155873484586719311007875956384, .node = "testNode-77", .pods = [k8spolicy.PodReference{.name = "testPod-779", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 258146097539826554152802787500765572116, .node = "testNode-77", .pods = [k8spolicy.PodReference{.name = "testPod-771", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 259776768260994503107571264675618229799, .node = "testNode-77", .pods = [k8spolicy.PodReference{.name = "testPod-774", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 284566077296111011827148429360522196537, .node = "testNode-76", .pods = [k8spolicy.PodReference{.name = "testPod-765", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 306160349818334709164720342947313424387, .node = "testNode-79", .pods = [k8spolicy.PodReference{.name = "testPod-790", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 315165317205468055386143809281584536845, .node = "testNode-76", .pods = [k8spolicy.PodReference{.name = "testPod-762", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 333086689822027869740204446506499439221, .node = "testNode-76", .pods = [k8spolicy.PodReference{.name = "testPod-768", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 335231819269904380578766239397927905153, .node = "testNode-77", .pods = [k8spolicy.PodReference{.name = "testPod-773", .namespace = "testNamespace"}]}: +1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 4398037940003267649077370648463899309, .span = "testNode-75"}: +1
AppliedToGroupSpan{.appliedToGroup = 15167791859128027178742186806802006013, .span = "testNode-77"}: +1
AppliedToGroupSpan{.appliedToGroup = 17658808561446985253322180017424654338, .span = "testNode-76"}: +1
AppliedToGroupSpan{.appliedToGroup = 21585889398609078897151576103508458932, .span = "testNode-78"}: +1
AppliedToGroupSpan{.appliedToGroup = 59138668918615823277603863876527587177, .span = "testNode-78"}: +1
AppliedToGroupSpan{.appliedToGroup = 72122705871304275637087195349897034990, .span = "testNode-76"}: +1
AppliedToGroupSpan{.appliedToGroup = 80708215663055788588686619441514344073, .span = "testNode-78"}: +1
AppliedToGroupSpan{.appliedToGroup = 99873494153055087609843721750415393612, .span = "testNode-78"}: +1
AppliedToGroupSpan{.appliedToGroup = 100868379569040624999795522528451395874, .span = "testNode-76"}: +1
AppliedToGroupSpan{.appliedToGroup = 119589963794466669087788330089559877778, .span = "testNode-76"}: +1
AppliedToGroupSpan{.appliedToGroup = 130054054732319908097189169192681493188, .span = "testNode-77"}: +1
AppliedToGroupSpan{.appliedToGroup = 146178588422979754866794290484410982527, .span = "testNode-78"}: +1
AppliedToGroupSpan{.appliedToGroup = 146185538408816906377723580363484118757, .span = "testNode-77"}: +1
AppliedToGroupSpan{.appliedToGroup = 156048549456266952186328762894833522783, .span = "testNode-78"}: +1
AppliedToGroupSpan{.appliedToGroup = 167806124460239317461469712179280498028, .span = "testNode-76"}: +1
AppliedToGroupSpan{.appliedToGroup = 170872054080291201713603711837466027142, .span = "testNode-76"}: +1
AppliedToGroupSpan{.appliedToGroup = 182451874850830543827183069280738869661, .span = "testNode-77"}: +1
AppliedToGroupSpan{.appliedToGroup = 193093053630956660449843576033623764767, .span = "testNode-77"}: +1
AppliedToGroupSpan{.appliedToGroup = 196267459757869653417180572818886082471, .span = "testNode-78"}: +1
AppliedToGroupSpan{.appliedToGroup = 197754218681631532389323125046627877130, .span = "testNode-78"}: +1
AppliedToGroupSpan{.appliedToGroup = 200405146350828304228576124973486837286, .span = "testNode-76"}: +1
AppliedToGroupSpan{.appliedToGroup = 213884245349307647754033137287386210101, .span = "testNode-77"}: +1
AppliedToGroupSpan{.appliedToGroup = 228577225627974225456062960310638283122, .span = "testNode-78"}: +1
AppliedToGroupSpan{.appliedToGroup = 243217735055966500436912331206752091025, .span = "testNode-78"}: +1
AppliedToGroupSpan{.appliedToGroup = 248025121155873484586719311007875956384, .span = "testNode-77"}: +1
AppliedToGroupSpan{.appliedToGroup = 258146097539826554152802787500765572116, .span = "testNode-77"}: +1
AppliedToGroupSpan{.appliedToGroup = 259776768260994503107571264675618229799, .span = "testNode-77"}: +1
AppliedToGroupSpan{.appliedToGroup = 284566077296111011827148429360522196537, .span = "testNode-76"}: +1
AppliedToGroupSpan{.appliedToGroup = 306160349818334709164720342947313424387, .span = "testNode-79"}: +1
AppliedToGroupSpan{.appliedToGroup = 315165317205468055386143809281584536845, .span = "testNode-76"}: +1
AppliedToGroupSpan{.appliedToGroup = 333086689822027869740204446506499439221, .span = "testNode-76"}: +1
AppliedToGroupSpan{.appliedToGroup = 335231819269904380578766239397927905153, .span = "testNode-77"}: +1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-759"}, .name = "testNP-759", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [17658808561446985253322180017424654338], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [4398037940003267649077370648463899309]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-760"}, .name = "testNP-760", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [167806124460239317461469712179280498028], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [17658808561446985253322180017424654338]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-761"}, .name = "testNP-761", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [315165317205468055386143809281584536845], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [167806124460239317461469712179280498028]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-762"}, .name = "testNP-762", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [170872054080291201713603711837466027142], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [315165317205468055386143809281584536845]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-763"}, .name = "testNP-763", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [100868379569040624999795522528451395874], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [170872054080291201713603711837466027142]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-764"}, .name = "testNP-764", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [284566077296111011827148429360522196537], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [100868379569040624999795522528451395874]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-765"}, .name = "testNP-765", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [72122705871304275637087195349897034990], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [284566077296111011827148429360522196537]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-766"}, .name = "testNP-766", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [200405146350828304228576124973486837286], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [72122705871304275637087195349897034990]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-767"}, .name = "testNP-767", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [333086689822027869740204446506499439221], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [200405146350828304228576124973486837286]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-768"}, .name = "testNP-768", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [119589963794466669087788330089559877778], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [333086689822027869740204446506499439221]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-769"}, .name = "testNP-769", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [146185538408816906377723580363484118757], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [119589963794466669087788330089559877778]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-770"}, .name = "testNP-770", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [258146097539826554152802787500765572116], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [146185538408816906377723580363484118757]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-771"}, .name = "testNP-771", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [130054054732319908097189169192681493188], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [258146097539826554152802787500765572116]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-772"}, .name = "testNP-772", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [335231819269904380578766239397927905153], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [130054054732319908097189169192681493188]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-773"}, .name = "testNP-773", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [259776768260994503107571264675618229799], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [335231819269904380578766239397927905153]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-774"}, .name = "testNP-774", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [182451874850830543827183069280738869661], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [259776768260994503107571264675618229799]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-775"}, .name = "testNP-775", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [193093053630956660449843576033623764767], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [182451874850830543827183069280738869661]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-776"}, .name = "testNP-776", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [15167791859128027178742186806802006013], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [193093053630956660449843576033623764767]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-777"}, .name = "testNP-777", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [213884245349307647754033137287386210101], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [15167791859128027178742186806802006013]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-778"}, .name = "testNP-778", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [248025121155873484586719311007875956384], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [213884245349307647754033137287386210101]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-779"}, .name = "testNP-779", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [146178588422979754866794290484410982527], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [248025121155873484586719311007875956384]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-780"}, .name = "testNP-780", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [243217735055966500436912331206752091025], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [146178588422979754866794290484410982527]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-781"}, .name = "testNP-781", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [21585889398609078897151576103508458932], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [243217735055966500436912331206752091025]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-782"}, .name = "testNP-782", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [156048549456266952186328762894833522783], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [21585889398609078897151576103508458932]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-783"}, .name = "testNP-783", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [197754218681631532389323125046627877130], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [156048549456266952186328762894833522783]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-784"}, .name = "testNP-784", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [59138668918615823277603863876527587177], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [197754218681631532389323125046627877130]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-785"}, .name = "testNP-785", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [228577225627974225456062960310638283122], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [59138668918615823277603863876527587177]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-786"}, .name = "testNP-786", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [99873494153055087609843721750415393612], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [228577225627974225456062960310638283122]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-787"}, .name = "testNP-787", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [196267459757869653417180572818886082471], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [99873494153055087609843721750415393612]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-788"}, .name = "testNP-788", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [80708215663055788588686619441514344073], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [196267459757869653417180572818886082471]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-789"}, .name = "testNP-789", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [306160349818334709164720342947313424387], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [80708215663055788588686619441514344073]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-790"}, .name = "testNP-790", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [269910770799879708472502124908742799538], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [306160349818334709164720342947313424387]}: +1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-759", .policy = k8spolicy.UID{.uid = "testNP-759"}, .node = "testNode-75"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-760", .policy = k8spolicy.UID{.uid = "testNP-760"}, .node = "testNode-76"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-761", .policy = k8spolicy.UID{.uid = "testNP-761"}, .node = "testNode-76"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-762", .policy = k8spolicy.UID{.uid = "testNP-762"}, .node = "testNode-76"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-763", .policy = k8spolicy.UID{.uid = "testNP-763"}, .node = "testNode-76"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-764", .policy = k8spolicy.UID{.uid = "testNP-764"}, .node = "testNode-76"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-765", .policy = k8spolicy.UID{.uid = "testNP-765"}, .node = "testNode-76"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-766", .policy = k8spolicy.UID{.uid = "testNP-766"}, .node = "testNode-76"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-767", .policy = k8spolicy.UID{.uid = "testNP-767"}, .node = "testNode-76"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-768", .policy = k8spolicy.UID{.uid = "testNP-768"}, .node = "testNode-76"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-769", .policy = k8spolicy.UID{.uid = "testNP-769"}, .node = "testNode-76"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-770", .policy = k8spolicy.UID{.uid = "testNP-770"}, .node = "testNode-77"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-771", .policy = k8spolicy.UID{.uid = "testNP-771"}, .node = "testNode-77"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-772", .policy = k8spolicy.UID{.uid = "testNP-772"}, .node = "testNode-77"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-773", .policy = k8spolicy.UID{.uid = "testNP-773"}, .node = "testNode-77"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-774", .policy = k8spolicy.UID{.uid = "testNP-774"}, .node = "testNode-77"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-775", .policy = k8spolicy.UID{.uid = "testNP-775"}, .node = "testNode-77"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-776", .policy = k8spolicy.UID{.uid = "testNP-776"}, .node = "testNode-77"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-777", .policy = k8spolicy.UID{.uid = "testNP-777"}, .node = "testNode-77"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-778", .policy = k8spolicy.UID{.uid = "testNP-778"}, .node = "testNode-77"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-779", .policy = k8spolicy.UID{.uid = "testNP-779"}, .node = "testNode-77"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-780", .policy = k8spolicy.UID{.uid = "testNP-780"}, .node = "testNode-78"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-781", .policy = k8spolicy.UID{.uid = "testNP-781"}, .node = "testNode-78"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-782", .policy = k8spolicy.UID{.uid = "testNP-782"}, .node = "testNode-78"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-783", .policy = k8spolicy.UID{.uid = "testNP-783"}, .node = "testNode-78"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-784", .policy = k8spolicy.UID{.uid = "testNP-784"}, .node = "testNode-78"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-785", .policy = k8spolicy.UID{.uid = "testNP-785"}, .node = "testNode-78"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-786", .policy = k8spolicy.UID{.uid = "testNP-786"}, .node = "testNode-78"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-787", .policy = k8spolicy.UID{.uid = "testNP-787"}, .node = "testNode-78"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-788", .policy = k8spolicy.UID{.uid = "testNP-788"}, .node = "testNode-78"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-789", .policy = k8spolicy.UID{.uid = "testNP-789"}, .node = "testNode-78"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-790", .policy = k8spolicy.UID{.uid = "testNP-790"}, .node = "testNode-79"}: +1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 27337855288423711436033931624396873889, .address = "10.10.81.4"}: +1
AddressGroupAddress{.addressGroup = 32754706752723159135885913137305389918, .address = "10.10.79.7"}: +1
AddressGroupAddress{.addressGroup = 45089321902829704720510207515891694671, .address = "10.10.81.2"}: +1
AddressGroupAddress{.addressGroup = 54714787274351090031568943617370037896, .address = "10.10.79.3"}: +1
AddressGroupAddress{.addressGroup = 65732015169622618068652496257861074050, .address = "10.10.81.8"}: +1
AddressGroupAddress{.addressGroup = 77594600140379464808131324024453089145, .address = "10.10.81.7"}: +1
AddressGroupAddress{.addressGroup = 85356211402259028297894520611417496217, .address = "10.10.80.7"}: +1
AddressGroupAddress{.addressGroup = 85868443377906068143268211391593505355, .address = "10.10.80.4"}: +1
AddressGroupAddress{.addressGroup = 91907598845427112955332720907118317376, .address = "10.10.81.9"}: +1
AddressGroupAddress{.addressGroup = 98859468060554981109754749067274905838, .address = "10.10.80.9"}: +1
AddressGroupAddress{.addressGroup = 109508007773179474224583727529641622336, .address = "10.10.81.0"}: +1
AddressGroupAddress{.addressGroup = 127624264566890719673057401043538020193, .address = "10.10.81.6"}: +1
AddressGroupAddress{.addressGroup = 133091743687146462589819455213027340326, .address = "10.10.79.5"}: +1
AddressGroupAddress{.addressGroup = 138978573378644845054091984490075997837, .address = "10.10.80.1"}: +1
AddressGroupAddress{.addressGroup = 157889562500688850322412097656692914640, .address = "10.10.82.0"}: +1
AddressGroupAddress{.addressGroup = 168781342752667898316093318372628028764, .address = "10.10.81.1"}: +1
AddressGroupAddress{.addressGroup = 169577772723870516805200903892640787983, .address = "10.10.79.8"}: +1
AddressGroupAddress{.addressGroup = 181813694912045841176731456505705362199, .address = "10.10.81.5"}: +1
AddressGroupAddress{.addressGroup = 191463359987522060718523006308667269039, .address = "10.10.79.6"}: +1
AddressGroupAddress{.addressGroup = 225059054438637433619270368457501646080, .address = "10.10.80.8"}: +1
AddressGroupAddress{.addressGroup = 250214802431508889243941649213168462554, .address = "10.10.79.4"}: +1
AddressGroupAddress{.addressGroup = 258389722408517552852421004579472822785, .address = "10.10.82.2"}: +1
AddressGroupAddress{.addressGroup = 279695683309546529993807933546001284693, .address = "10.10.82.1"}: +1
AddressGroupAddress{.addressGroup = 279747041992767962566455241181652483533, .address = "10.10.79.9"}: +1
AddressGroupAddress{.addressGroup = 297260401546662599166943535924464176850, .address = "10.10.79.2"}: +1
AddressGroupAddress{.addressGroup = 312707885025460706475837585634874023001, .address = "10.10.80.6"}: +1
AddressGroupAddress{.addressGroup = 318857759385911694218502711806648986450, .address = "10.10.82.3"}: +1
AddressGroupAddress{.addressGroup = 328487043084498615411737899864984341533, .address = "10.10.81.3"}: +1
AddressGroupAddress{.addressGroup = 329254349263432198001601879181974604245, .address = "10.10.80.0"}: +1
AddressGroupAddress{.addressGroup = 335610148981884794842167589519986899484, .address = "10.10.80.2"}: +1
AddressGroupAddress{.addressGroup = 337515532524414323127756877261340155875, .address = "10.10.80.5"}: +1
AddressGroupAddress{.addressGroup = 339034441380380061680712980490388720947, .address = "10.10.80.3"}: +1
AddressGroupDescr:
AddressGroupDescr{.name = "14911454-5064-5a49-b39f-70881e83e0a1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-814]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-814")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "18a453b9-e840-55b2-a4fe-4770390c8b5e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-797]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-797")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "21ebe334-ac4f-5291-b727-bb9360b57c4f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-812]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-812")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "2929af49-e43a-5690-8369-9becfaed1e88", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-793]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-793")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "3173868f-d1c1-5833-92a4-5f3bade4bc82", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-818]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-818")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "3a602d28-1cae-5539-9e3f-635334a04779", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-817]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-817")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "40370223-169e-592c-a72e-282c37521a99", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-807]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-807")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "4099a91f-9177-5076-b5cb-6502c600e24b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-804]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-804")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "4524c279-f346-56a0-9d5d-985ea12e0f40", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-819]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-819")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "4a5fa417-6c34-5816-94e5-f1734c2e68ee", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-809]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-809")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "526279a2-4120-5047-aa67-d3c8f8a7bb40", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-810]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-810")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "60038a0d-fd8e-54aa-8452-6ea5e5160761", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-816]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-816")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "64208996-7094-5d71-9837-c652c1aa3026", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-795]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-795")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "688e4cb3-3a95-5913-94a2-db4a010b468d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-801]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-801")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "76c86c73-3019-59ec-aa8a-0df8b2fbb9d0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-820]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-820")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "7efa1aad-40aa-59ad-a822-3769cb32dd5c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-811]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-811")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "7f937db4-bdb5-528c-ace8-cbe018ccee0f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-798]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-798")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "88c80b3f-32c3-5eba-85d5-8f37c4977317", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-815]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-815")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "900a8077-9f63-58eb-a46c-7c99a55e9faf", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-796]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-796")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "a950cc16-9a35-507a-b339-860754471d00", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-808]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-808")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "bc3d9e38-bbaa-524d-84ee-9f90f77aaada", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-794]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-794")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "c2640ce5-1a94-54ad-b353-55f2bf1a5201", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-822]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-822")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "d26b6dde-c06c-5668-b1a6-3ee9090b3e55", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-821]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-821")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "d275520c-7813-5be9-b9e6-4d4ea2de7dcd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-799]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-799")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "dfa24557-3517-5812-af70-4b7273b9ced2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-792]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-792")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "eb415914-03d2-565b-891b-72973b6edc59", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-806]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-806")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "efe1c54b-4b6c-583d-9275-82362b9d2b52", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-823]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-823")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "f7204da2-9380-5baa-9894-01ea261f4c1d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-813]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-813")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "f7b414c0-2062-5caa-95d5-1312767089d5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-800]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-800")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "fc7c29de-d5d8-5784-8351-f586d60dba1c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-802]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-802")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "fdeb2088-36ba-5ffb-802c-b494193c1fe3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-805]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-805")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "ff0fa885-413c-5541-8e8e-d684c7274d33", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-803]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-803")], .matchExpressions = []}}}}: +1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 27337855288423711436033931624396873889, .node = "testNode-81"}: +1
AddressGroupSpan{.addressGroup = 32754706752723159135885913137305389918, .node = "testNode-79"}: +1
AddressGroupSpan{.addressGroup = 45089321902829704720510207515891694671, .node = "testNode-81"}: +1
AddressGroupSpan{.addressGroup = 54714787274351090031568943617370037896, .node = "testNode-79"}: +1
AddressGroupSpan{.addressGroup = 65732015169622618068652496257861074050, .node = "testNode-81"}: +1
AddressGroupSpan{.addressGroup = 77594600140379464808131324024453089145, .node = "testNode-81"}: +1
AddressGroupSpan{.addressGroup = 85356211402259028297894520611417496217, .node = "testNode-80"}: +1
AddressGroupSpan{.addressGroup = 85868443377906068143268211391593505355, .node = "testNode-80"}: +1
AddressGroupSpan{.addressGroup = 91907598845427112955332720907118317376, .node = "testNode-81"}: +1
AddressGroupSpan{.addressGroup = 98859468060554981109754749067274905838, .node = "testNode-80"}: +1
AddressGroupSpan{.addressGroup = 109508007773179474224583727529641622336, .node = "testNode-80"}: +1
AddressGroupSpan{.addressGroup = 127624264566890719673057401043538020193, .node = "testNode-81"}: +1
AddressGroupSpan{.addressGroup = 133091743687146462589819455213027340326, .node = "testNode-79"}: +1
AddressGroupSpan{.addressGroup = 138978573378644845054091984490075997837, .node = "testNode-80"}: +1
AddressGroupSpan{.addressGroup = 157889562500688850322412097656692914640, .node = "testNode-81"}: +1
AddressGroupSpan{.addressGroup = 168781342752667898316093318372628028764, .node = "testNode-81"}: +1
AddressGroupSpan{.addressGroup = 169577772723870516805200903892640787983, .node = "testNode-79"}: +1
AddressGroupSpan{.addressGroup = 181813694912045841176731456505705362199, .node = "testNode-81"}: +1
AddressGroupSpan{.addressGroup = 191463359987522060718523006308667269039, .node = "testNode-79"}: +1
AddressGroupSpan{.addressGroup = 225059054438637433619270368457501646080, .node = "testNode-80"}: +1
AddressGroupSpan{.addressGroup = 250214802431508889243941649213168462554, .node = "testNode-79"}: +1
AddressGroupSpan{.addressGroup = 258389722408517552852421004579472822785, .node = "testNode-82"}: +1
AddressGroupSpan{.addressGroup = 279695683309546529993807933546001284693, .node = "testNode-82"}: +1
AddressGroupSpan{.addressGroup = 279747041992767962566455241181652483533, .node = "testNode-79"}: +1
AddressGroupSpan{.addressGroup = 297260401546662599166943535924464176850, .node = "testNode-79"}: +1
AddressGroupSpan{.addressGroup = 312707885025460706475837585634874023001, .node = "testNode-80"}: +1
AddressGroupSpan{.addressGroup = 318857759385911694218502711806648986450, .node = "testNode-82"}: +1
AddressGroupSpan{.addressGroup = 328487043084498615411737899864984341533, .node = "testNode-81"}: +1
AddressGroupSpan{.addressGroup = 329254349263432198001601879181974604245, .node = "testNode-79"}: +1
AddressGroupSpan{.addressGroup = 335610148981884794842167589519986899484, .node = "testNode-80"}: +1
AddressGroupSpan{.addressGroup = 337515532524414323127756877261340155875, .node = "testNode-80"}: +1
AddressGroupSpan{.addressGroup = 339034441380380061680712980490388720947, .node = "testNode-80"}: +1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "14911454-5064-5a49-b39f-70881e83e0a1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-814]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-814")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "18a453b9-e840-55b2-a4fe-4770390c8b5e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-797]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-797")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "21ebe334-ac4f-5291-b727-bb9360b57c4f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-812]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-812")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "2929af49-e43a-5690-8369-9becfaed1e88", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-793]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-793")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "3173868f-d1c1-5833-92a4-5f3bade4bc82", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-818]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-818")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "3a602d28-1cae-5539-9e3f-635334a04779", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-817]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-817")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "40370223-169e-592c-a72e-282c37521a99", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-807]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-807")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "4099a91f-9177-5076-b5cb-6502c600e24b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-804]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-804")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "4524c279-f346-56a0-9d5d-985ea12e0f40", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-819]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-819")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "4a5fa417-6c34-5816-94e5-f1734c2e68ee", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-809]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-809")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "526279a2-4120-5047-aa67-d3c8f8a7bb40", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-810]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-810")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "60038a0d-fd8e-54aa-8452-6ea5e5160761", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-816]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-816")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "64208996-7094-5d71-9837-c652c1aa3026", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-795]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-795")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "688e4cb3-3a95-5913-94a2-db4a010b468d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-801]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-801")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "76c86c73-3019-59ec-aa8a-0df8b2fbb9d0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-820]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-820")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "7efa1aad-40aa-59ad-a822-3769cb32dd5c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-811]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-811")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "7f937db4-bdb5-528c-ace8-cbe018ccee0f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-798]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-798")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "88c80b3f-32c3-5eba-85d5-8f37c4977317", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-815]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-815")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "900a8077-9f63-58eb-a46c-7c99a55e9faf", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-796]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-796")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "a950cc16-9a35-507a-b339-860754471d00", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-808]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-808")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "bc3d9e38-bbaa-524d-84ee-9f90f77aaada", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-794]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-794")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "c2640ce5-1a94-54ad-b353-55f2bf1a5201", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-822]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-822")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "cb0eec6f-b6a8-5a4f-b75a-985e6c5d70b2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-791]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-791")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "d26b6dde-c06c-5668-b1a6-3ee9090b3e55", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-821]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-821")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "d275520c-7813-5be9-b9e6-4d4ea2de7dcd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-799]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-799")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "dfa24557-3517-5812-af70-4b7273b9ced2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-792]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-792")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "eb415914-03d2-565b-891b-72973b6edc59", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-806]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-806")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "f7204da2-9380-5baa-9894-01ea261f4c1d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-813]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-813")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "f7b414c0-2062-5caa-95d5-1312767089d5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-800]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-800")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "fc7c29de-d5d8-5784-8351-f586d60dba1c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-802]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-802")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "fdeb2088-36ba-5ffb-802c-b494193c1fe3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-805]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-805")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "ff0fa885-413c-5541-8e8e-d684c7274d33", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-803]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-803")], .matchExpressions = []}}}}: +1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 27337855288423711436033931624396873889, .node = "testNode-81", .pods = [k8spolicy.PodReference{.name = "testPod-814", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 32754706752723159135885913137305389918, .node = "testNode-79", .pods = [k8spolicy.PodReference{.name = "testPod-797", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 45089321902829704720510207515891694671, .node = "testNode-81", .pods = [k8spolicy.PodReference{.name = "testPod-812", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 54714787274351090031568943617370037896, .node = "testNode-79", .pods = [k8spolicy.PodReference{.name = "testPod-793", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 65732015169622618068652496257861074050, .node = "testNode-81", .pods = [k8spolicy.PodReference{.name = "testPod-818", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 77594600140379464808131324024453089145, .node = "testNode-81", .pods = [k8spolicy.PodReference{.name = "testPod-817", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 85356211402259028297894520611417496217, .node = "testNode-80", .pods = [k8spolicy.PodReference{.name = "testPod-807", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 85868443377906068143268211391593505355, .node = "testNode-80", .pods = [k8spolicy.PodReference{.name = "testPod-804", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 91907598845427112955332720907118317376, .node = "testNode-81", .pods = [k8spolicy.PodReference{.name = "testPod-819", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 98859468060554981109754749067274905838, .node = "testNode-80", .pods = [k8spolicy.PodReference{.name = "testPod-809", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 109508007773179474224583727529641622336, .node = "testNode-81", .pods = [k8spolicy.PodReference{.name = "testPod-810", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 127624264566890719673057401043538020193, .node = "testNode-81", .pods = [k8spolicy.PodReference{.name = "testPod-816", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 133091743687146462589819455213027340326, .node = "testNode-79", .pods = [k8spolicy.PodReference{.name = "testPod-795", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 138978573378644845054091984490075997837, .node = "testNode-80", .pods = [k8spolicy.PodReference{.name = "testPod-801", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 157889562500688850322412097656692914640, .node = "testNode-82", .pods = [k8spolicy.PodReference{.name = "testPod-820", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 168781342752667898316093318372628028764, .node = "testNode-81", .pods = [k8spolicy.PodReference{.name = "testPod-811", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 169577772723870516805200903892640787983, .node = "testNode-79", .pods = [k8spolicy.PodReference{.name = "testPod-798", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 181813694912045841176731456505705362199, .node = "testNode-81", .pods = [k8spolicy.PodReference{.name = "testPod-815", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 191463359987522060718523006308667269039, .node = "testNode-79", .pods = [k8spolicy.PodReference{.name = "testPod-796", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 225059054438637433619270368457501646080, .node = "testNode-80", .pods = [k8spolicy.PodReference{.name = "testPod-808", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 250214802431508889243941649213168462554, .node = "testNode-79", .pods = [k8spolicy.PodReference{.name = "testPod-794", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 258389722408517552852421004579472822785, .node = "testNode-82", .pods = [k8spolicy.PodReference{.name = "testPod-822", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 269910770799879708472502124908742799538, .node = "testNode-79", .pods = [k8spolicy.PodReference{.name = "testPod-791", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 279695683309546529993807933546001284693, .node = "testNode-82", .pods = [k8spolicy.PodReference{.name = "testPod-821", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 279747041992767962566455241181652483533, .node = "testNode-79", .pods = [k8spolicy.PodReference{.name = "testPod-799", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 297260401546662599166943535924464176850, .node = "testNode-79", .pods = [k8spolicy.PodReference{.name = "testPod-792", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 312707885025460706475837585634874023001, .node = "testNode-80", .pods = [k8spolicy.PodReference{.name = "testPod-806", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 328487043084498615411737899864984341533, .node = "testNode-81", .pods = [k8spolicy.PodReference{.name = "testPod-813", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 329254349263432198001601879181974604245, .node = "testNode-80", .pods = [k8spolicy.PodReference{.name = "testPod-800", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 335610148981884794842167589519986899484, .node = "testNode-80", .pods = [k8spolicy.PodReference{.name = "testPod-802", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 337515532524414323127756877261340155875, .node = "testNode-80", .pods = [k8spolicy.PodReference{.name = "testPod-805", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 339034441380380061680712980490388720947, .node = "testNode-80", .pods = [k8spolicy.PodReference{.name = "testPod-803", .namespace = "testNamespace"}]}: +1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 27337855288423711436033931624396873889, .span = "testNode-81"}: +1
AppliedToGroupSpan{.appliedToGroup = 32754706752723159135885913137305389918, .span = "testNode-79"}: +1
AppliedToGroupSpan{.appliedToGroup = 45089321902829704720510207515891694671, .span = "testNode-81"}: +1
AppliedToGroupSpan{.appliedToGroup = 54714787274351090031568943617370037896, .span = "testNode-79"}: +1
AppliedToGroupSpan{.appliedToGroup = 65732015169622618068652496257861074050, .span = "testNode-81"}: +1
AppliedToGroupSpan{.appliedToGroup = 77594600140379464808131324024453089145, .span = "testNode-81"}: +1
AppliedToGroupSpan{.appliedToGroup = 85356211402259028297894520611417496217, .span = "testNode-80"}: +1
AppliedToGroupSpan{.appliedToGroup = 85868443377906068143268211391593505355, .span = "testNode-80"}: +1
AppliedToGroupSpan{.appliedToGroup = 91907598845427112955332720907118317376, .span = "testNode-81"}: +1
AppliedToGroupSpan{.appliedToGroup = 98859468060554981109754749067274905838, .span = "testNode-80"}: +1
AppliedToGroupSpan{.appliedToGroup = 109508007773179474224583727529641622336, .span = "testNode-81"}: +1
AppliedToGroupSpan{.appliedToGroup = 127624264566890719673057401043538020193, .span = "testNode-81"}: +1
AppliedToGroupSpan{.appliedToGroup = 133091743687146462589819455213027340326, .span = "testNode-79"}: +1
AppliedToGroupSpan{.appliedToGroup = 138978573378644845054091984490075997837, .span = "testNode-80"}: +1
AppliedToGroupSpan{.appliedToGroup = 157889562500688850322412097656692914640, .span = "testNode-82"}: +1
AppliedToGroupSpan{.appliedToGroup = 168781342752667898316093318372628028764, .span = "testNode-81"}: +1
AppliedToGroupSpan{.appliedToGroup = 169577772723870516805200903892640787983, .span = "testNode-79"}: +1
AppliedToGroupSpan{.appliedToGroup = 181813694912045841176731456505705362199, .span = "testNode-81"}: +1
AppliedToGroupSpan{.appliedToGroup = 191463359987522060718523006308667269039, .span = "testNode-79"}: +1
AppliedToGroupSpan{.appliedToGroup = 225059054438637433619270368457501646080, .span = "testNode-80"}: +1
AppliedToGroupSpan{.appliedToGroup = 250214802431508889243941649213168462554, .span = "testNode-79"}: +1
AppliedToGroupSpan{.appliedToGroup = 258389722408517552852421004579472822785, .span = "testNode-82"}: +1
AppliedToGroupSpan{.appliedToGroup = 269910770799879708472502124908742799538, .span = "testNode-79"}: +1
AppliedToGroupSpan{.appliedToGroup = 279695683309546529993807933546001284693, .span = "testNode-82"}: +1
AppliedToGroupSpan{.appliedToGroup = 279747041992767962566455241181652483533, .span = "testNode-79"}: +1
AppliedToGroupSpan{.appliedToGroup = 297260401546662599166943535924464176850, .span = "testNode-79"}: +1
AppliedToGroupSpan{.appliedToGroup = 312707885025460706475837585634874023001, .span = "testNode-80"}: +1
AppliedToGroupSpan{.appliedToGroup = 328487043084498615411737899864984341533, .span = "testNode-81"}: +1
AppliedToGroupSpan{.appliedToGroup = 329254349263432198001601879181974604245, .span = "testNode-80"}: +1
AppliedToGroupSpan{.appliedToGroup = 335610148981884794842167589519986899484, .span = "testNode-80"}: +1
AppliedToGroupSpan{.appliedToGroup = 337515532524414323127756877261340155875, .span = "testNode-80"}: +1
AppliedToGroupSpan{.appliedToGroup = 339034441380380061680712980490388720947, .span = "testNode-80"}: +1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-791"}, .name = "testNP-791", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [297260401546662599166943535924464176850], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [269910770799879708472502124908742799538]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-792"}, .name = "testNP-792", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [54714787274351090031568943617370037896], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [297260401546662599166943535924464176850]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-793"}, .name = "testNP-793", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [250214802431508889243941649213168462554], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [54714787274351090031568943617370037896]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-794"}, .name = "testNP-794", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [133091743687146462589819455213027340326], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [250214802431508889243941649213168462554]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-795"}, .name = "testNP-795", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [191463359987522060718523006308667269039], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [133091743687146462589819455213027340326]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-796"}, .name = "testNP-796", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [32754706752723159135885913137305389918], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [191463359987522060718523006308667269039]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-797"}, .name = "testNP-797", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [169577772723870516805200903892640787983], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [32754706752723159135885913137305389918]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-798"}, .name = "testNP-798", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [279747041992767962566455241181652483533], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [169577772723870516805200903892640787983]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-799"}, .name = "testNP-799", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [329254349263432198001601879181974604245], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [279747041992767962566455241181652483533]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-800"}, .name = "testNP-800", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [138978573378644845054091984490075997837], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [329254349263432198001601879181974604245]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-801"}, .name = "testNP-801", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [335610148981884794842167589519986899484], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [138978573378644845054091984490075997837]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-802"}, .name = "testNP-802", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [339034441380380061680712980490388720947], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [335610148981884794842167589519986899484]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-803"}, .name = "testNP-803", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [85868443377906068143268211391593505355], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [339034441380380061680712980490388720947]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-804"}, .name = "testNP-804", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [337515532524414323127756877261340155875], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [85868443377906068143268211391593505355]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-805"}, .name = "testNP-805", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [312707885025460706475837585634874023001], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [337515532524414323127756877261340155875]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-806"}, .name = "testNP-806", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [85356211402259028297894520611417496217], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [312707885025460706475837585634874023001]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-807"}, .name = "testNP-807", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [225059054438637433619270368457501646080], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [85356211402259028297894520611417496217]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-808"}, .name = "testNP-808", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [98859468060554981109754749067274905838], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [225059054438637433619270368457501646080]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-809"}, .name = "testNP-809", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [109508007773179474224583727529641622336], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [98859468060554981109754749067274905838]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-810"}, .name = "testNP-810", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [168781342752667898316093318372628028764], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [109508007773179474224583727529641622336]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-811"}, .name = "testNP-811", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [45089321902829704720510207515891694671], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [168781342752667898316093318372628028764]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-812"}, .name = "testNP-812", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [328487043084498615411737899864984341533], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [45089321902829704720510207515891694671]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-813"}, .name = "testNP-813", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [27337855288423711436033931624396873889], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [328487043084498615411737899864984341533]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-814"}, .name = "testNP-814", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [181813694912045841176731456505705362199], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [27337855288423711436033931624396873889]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-815"}, .name = "testNP-815", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [127624264566890719673057401043538020193], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [181813694912045841176731456505705362199]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-816"}, .name = "testNP-816", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [77594600140379464808131324024453089145], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [127624264566890719673057401043538020193]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-817"}, .name = "testNP-817", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [65732015169622618068652496257861074050], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [77594600140379464808131324024453089145]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-818"}, .name = "testNP-818", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [91907598845427112955332720907118317376], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [65732015169622618068652496257861074050]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-819"}, .name = "testNP-819", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [157889562500688850322412097656692914640], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [91907598845427112955332720907118317376]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-820"}, .name = "testNP-820", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [279695683309546529993807933546001284693], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [157889562500688850322412097656692914640]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-821"}, .name = "testNP-821", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [258389722408517552852421004579472822785], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [279695683309546529993807933546001284693]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-822"}, .name = "testNP-822", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [318857759385911694218502711806648986450], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [258389722408517552852421004579472822785]}: +1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-791", .policy = k8spolicy.UID{.uid = "testNP-791"}, .node = "testNode-79"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-792", .policy = k8spolicy.UID{.uid = "testNP-792"}, .node = "testNode-79"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-793", .policy = k8spolicy.UID{.uid = "testNP-793"}, .node = "testNode-79"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-794", .policy = k8spolicy.UID{.uid = "testNP-794"}, .node = "testNode-79"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-795", .policy = k8spolicy.UID{.uid = "testNP-795"}, .node = "testNode-79"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-796", .policy = k8spolicy.UID{.uid = "testNP-796"}, .node = "testNode-79"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-797", .policy = k8spolicy.UID{.uid = "testNP-797"}, .node = "testNode-79"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-798", .policy = k8spolicy.UID{.uid = "testNP-798"}, .node = "testNode-79"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-799", .policy = k8spolicy.UID{.uid = "testNP-799"}, .node = "testNode-79"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-800", .policy = k8spolicy.UID{.uid = "testNP-800"}, .node = "testNode-80"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-801", .policy = k8spolicy.UID{.uid = "testNP-801"}, .node = "testNode-80"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-802", .policy = k8spolicy.UID{.uid = "testNP-802"}, .node = "testNode-80"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-803", .policy = k8spolicy.UID{.uid = "testNP-803"}, .node = "testNode-80"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-804", .policy = k8spolicy.UID{.uid = "testNP-804"}, .node = "testNode-80"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-805", .policy = k8spolicy.UID{.uid = "testNP-805"}, .node = "testNode-80"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-806", .policy = k8spolicy.UID{.uid = "testNP-806"}, .node = "testNode-80"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-807", .policy = k8spolicy.UID{.uid = "testNP-807"}, .node = "testNode-80"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-808", .policy = k8spolicy.UID{.uid = "testNP-808"}, .node = "testNode-80"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-809", .policy = k8spolicy.UID{.uid = "testNP-809"}, .node = "testNode-80"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-810", .policy = k8spolicy.UID{.uid = "testNP-810"}, .node = "testNode-81"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-811", .policy = k8spolicy.UID{.uid = "testNP-811"}, .node = "testNode-81"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-812", .policy = k8spolicy.UID{.uid = "testNP-812"}, .node = "testNode-81"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-813", .policy = k8spolicy.UID{.uid = "testNP-813"}, .node = "testNode-81"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-814", .policy = k8spolicy.UID{.uid = "testNP-814"}, .node = "testNode-81"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-815", .policy = k8spolicy.UID{.uid = "testNP-815"}, .node = "testNode-81"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-816", .policy = k8spolicy.UID{.uid = "testNP-816"}, .node = "testNode-81"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-817", .policy = k8spolicy.UID{.uid = "testNP-817"}, .node = "testNode-81"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-818", .policy = k8spolicy.UID{.uid = "testNP-818"}, .node = "testNode-81"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-819", .policy = k8spolicy.UID{.uid = "testNP-819"}, .node = "testNode-81"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-820", .policy = k8spolicy.UID{.uid = "testNP-820"}, .node = "testNode-82"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-821", .policy = k8spolicy.UID{.uid = "testNP-821"}, .node = "testNode-82"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-822", .policy = k8spolicy.UID{.uid = "testNP-822"}, .node = "testNode-82"}: +1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 2713159282763606650517124854951319954, .address = "10.10.84.6"}: +1
AddressGroupAddress{.addressGroup = 13523609103879019870981401838867374138, .address = "10.10.83.0"}: +1
AddressGroupAddress{.addressGroup = 49414767864989056696330758217040547623, .address = "10.10.85.1"}: +1
AddressGroupAddress{.addressGroup = 60563602358679317412195370747938442453, .address = "10.10.83.2"}: +1
AddressGroupAddress{.addressGroup = 66000272526890874128630433190041902097, .address = "10.10.83.9"}: +1
AddressGroupAddress{.addressGroup = 67551325268732931603077496109245322511, .address = "10.10.85.4"}: +1
AddressGroupAddress{.addressGroup = 70402807548485740829916524100822744633, .address = "10.10.84.2"}: +1
AddressGroupAddress{.addressGroup = 71919851324261580910536288897826873292, .address = "10.10.83.4"}: +1
AddressGroupAddress{.addressGroup = 76582947764619356901301564399490453901, .address = "10.10.83.6"}: +1
AddressGroupAddress{.addressGroup = 85029203199576256853397618624104621426, .address = "10.10.82.9"}: +1
AddressGroupAddress{.addressGroup = 92058654662750202407294423515939843876, .address = "10.10.84.9"}: +1
AddressGroupAddress{.addressGroup = 101768832328018037960013359629468686240, .address = "10.10.83.7"}: +1
AddressGroupAddress{.addressGroup = 118903207609525733175735146840310471888, .address = "10.10.82.8"}: +1
AddressGroupAddress{.addressGroup = 130702299683556091475555948185812082115, .address = "10.10.84.1"}: +1
AddressGroupAddress{.addressGroup = 132604014033279435611134263055966877474, .address = "10.10.82.4"}: +1
AddressGroupAddress{.addressGroup = 144050788454175294008960650237431433381, .address = "10.10.83.1"}: +1
AddressGroupAddress{.addressGroup = 156016938807302056542718758058394293854, .address = "10.10.84.4"}: +1
AddressGroupAddress{.addressGroup = 194284355853476782968390466936649000606, .address = "10.10.84.8"}: +1
AddressGroupAddress{.addressGroup = 222739039549301570413046149404625254524, .address = "10.10.83.8"}: +1
AddressGroupAddress{.addressGroup = 224567882541595529698021674966086580519, .address = "10.10.85.3"}: +1
AddressGroupAddress{.addressGroup = 230848528136259924608226078240857790549, .address = "10.10.84.0"}: +1
AddressGroupAddress{.addressGroup = 238894097777038214975779329977801494345, .address = "10.10.82.7"}: +1
AddressGroupAddress{.addressGroup = 243057228148605278302969988701438359251, .address = "10.10.83.3"}: +1
AddressGroupAddress{.addressGroup = 264297056808482994090982411859970420720, .address = "10.10.84.7"}: +1
AddressGroupAddress{.addressGroup = 308508111671596871040461076360475629585, .address = "10.10.85.0"}: +1
AddressGroupAddress{.addressGroup = 315790997229058838869113019345776079785, .address = "10.10.82.6"}: +1
AddressGroupAddress{.addressGroup = 318123471655951072787084619455295767341, .address = "10.10.82.5"}: +1
AddressGroupAddress{.addressGroup = 322702428777948668945149839222736731021, .address = "10.10.85.2"}: +1
AddressGroupAddress{.addressGroup = 326746700705767242038800951836341543017, .address = "10.10.84.5"}: +1
AddressGroupAddress{.addressGroup = 334574112962914320306382384123610304098, .address = "10.10.84.3"}: +1
AddressGroupAddress{.addressGroup = 334781764854096689956869101842548929627, .address = "10.10.83.5"}: +1
AddressGroupAddress{.addressGroup = 338869634089142606286186861343038919430, .address = "10.10.85.5"}: +1
AddressGroupDescr:
AddressGroupDescr{.name = "020a8914-9ade-5557-bfee-0dab018e1992", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-846]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-846")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "0a2c8d68-500a-596d-a73e-b7ed9e52e03a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-830]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-830")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "252cf028-25ef-50c2-83c3-cf38191e4f27", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-851]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-851")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "2d902022-e1be-5977-b819-26da066f8cd5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-832]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-832")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "31a730ab-afb4-5b62-bcbe-194d95505c11", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-839]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-839")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "32d1e979-9b1f-52bb-a6d4-77656376d50f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-854]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-854")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "34f71667-e281-5b11-8267-4ba34bf3be39", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-842]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-842")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "361b4270-4de5-5f83-85ab-7a3630ecdfcc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-834]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-834")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "399d56d7-f82e-5c72-bc64-900e60fc518d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-836]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-836")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "3ff80763-4cc1-594c-ae0f-b9b8e609e572", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-829]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-829")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "4541da1a-6935-598a-8c37-2a82a159af24", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-849]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-849")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "4c8ff6d3-18d8-537b-859d-852e96efd7a0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-837]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-837")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "5973ecbf-d107-5143-8ed2-5eccb4f0dcd0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-828]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-828")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "625458e7-15dd-52ae-a5f6-67590e461dc3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-841]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-841")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "63c29aa8-bd5e-5c89-a4bb-070769e93722", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-824]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-824")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "6c5f2c36-0b4f-5385-8053-499d815ec8a5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-831]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-831")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "755fc4f9-3cc8-59a0-beae-b94c3cc2965e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-844]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-844")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "9229ce4d-42fd-554f-8d64-ab32525fa69e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-848]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-848")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "a791fa85-dee8-5490-a10f-917be6dcb87c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-838]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-838")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "a8f23371-af6d-5c11-af4c-0c35b863f927", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-853]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-853")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "adabcf2d-fdfc-541e-8d5a-f33c8fc61855", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-840]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-840")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "b3b95463-96f1-5b8e-a29f-6dcf4747cf49", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-827]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-827")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "b6db1e90-48fc-5096-85cd-eb3b881836d3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-833]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-833")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "c6d5c2f7-b2f3-510f-b50c-79d25512eff0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-847]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-847")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "e8188043-dc49-5dd1-b705-43550e7ad811", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-850]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-850")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "ed93223e-f4c8-5aff-9a07-eb363deef3a9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-826]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-826")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "ef545a1d-2939-587e-9d62-9b24e269c32d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-825]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-825")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "f2c63a21-531d-5dae-934f-c77bda48bb8d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-852]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-852")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "f5d12021-8c35-58ec-be62-7ae62a6da069", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-845]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-845")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "fbb4a159-d8d9-5833-af37-657a9f128e62", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-843]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-843")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "fbdc9f61-304b-5f28-89a1-93b9fcd4345b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-835]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-835")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "feefeae4-caa5-5456-b306-d7b13c8e5306", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-855]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-855")], .matchExpressions = []}}}}: +1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 2713159282763606650517124854951319954, .node = "testNode-84"}: +1
AddressGroupSpan{.addressGroup = 13523609103879019870981401838867374138, .node = "testNode-82"}: +1
AddressGroupSpan{.addressGroup = 49414767864989056696330758217040547623, .node = "testNode-85"}: +1
AddressGroupSpan{.addressGroup = 60563602358679317412195370747938442453, .node = "testNode-83"}: +1
AddressGroupSpan{.addressGroup = 66000272526890874128630433190041902097, .node = "testNode-83"}: +1
AddressGroupSpan{.addressGroup = 67551325268732931603077496109245322511, .node = "testNode-85"}: +1
AddressGroupSpan{.addressGroup = 70402807548485740829916524100822744633, .node = "testNode-84"}: +1
AddressGroupSpan{.addressGroup = 71919851324261580910536288897826873292, .node = "testNode-83"}: +1
AddressGroupSpan{.addressGroup = 76582947764619356901301564399490453901, .node = "testNode-83"}: +1
AddressGroupSpan{.addressGroup = 85029203199576256853397618624104621426, .node = "testNode-82"}: +1
AddressGroupSpan{.addressGroup = 92058654662750202407294423515939843876, .node = "testNode-84"}: +1
AddressGroupSpan{.addressGroup = 101768832328018037960013359629468686240, .node = "testNode-83"}: +1
AddressGroupSpan{.addressGroup = 118903207609525733175735146840310471888, .node = "testNode-82"}: +1
AddressGroupSpan{.addressGroup = 130702299683556091475555948185812082115, .node = "testNode-84"}: +1
AddressGroupSpan{.addressGroup = 132604014033279435611134263055966877474, .node = "testNode-82"}: +1
AddressGroupSpan{.addressGroup = 144050788454175294008960650237431433381, .node = "testNode-83"}: +1
AddressGroupSpan{.addressGroup = 156016938807302056542718758058394293854, .node = "testNode-84"}: +1
AddressGroupSpan{.addressGroup = 194284355853476782968390466936649000606, .node = "testNode-84"}: +1
AddressGroupSpan{.addressGroup = 222739039549301570413046149404625254524, .node = "testNode-83"}: +1
AddressGroupSpan{.addressGroup = 224567882541595529698021674966086580519, .node = "testNode-85"}: +1
AddressGroupSpan{.addressGroup = 230848528136259924608226078240857790549, .node = "testNode-83"}: +1
AddressGroupSpan{.addressGroup = 238894097777038214975779329977801494345, .node = "testNode-82"}: +1
AddressGroupSpan{.addressGroup = 243057228148605278302969988701438359251, .node = "testNode-83"}: +1
AddressGroupSpan{.addressGroup = 264297056808482994090982411859970420720, .node = "testNode-84"}: +1
AddressGroupSpan{.addressGroup = 308508111671596871040461076360475629585, .node = "testNode-84"}: +1
AddressGroupSpan{.addressGroup = 315790997229058838869113019345776079785, .node = "testNode-82"}: +1
AddressGroupSpan{.addressGroup = 318123471655951072787084619455295767341, .node = "testNode-82"}: +1
AddressGroupSpan{.addressGroup = 322702428777948668945149839222736731021, .node = "testNode-85"}: +1
AddressGroupSpan{.addressGroup = 326746700705767242038800951836341543017, .node = "testNode-84"}: +1
AddressGroupSpan{.addressGroup = 334574112962914320306382384123610304098, .node = "testNode-84"}: +1
AddressGroupSpan{.addressGroup = 334781764854096689956869101842548929627, .node = "testNode-83"}: +1
AddressGroupSpan{.addressGroup = 338869634089142606286186861343038919430, .node = "testNode-85"}: +1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "020a8914-9ade-5557-bfee-0dab018e1992", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-846]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-846")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "0a2c8d68-500a-596d-a73e-b7ed9e52e03a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-830]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-830")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "252cf028-25ef-50c2-83c3-cf38191e4f27", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-851]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-851")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "2d902022-e1be-5977-b819-26da066f8cd5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-832]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-832")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "31a730ab-afb4-5b62-bcbe-194d95505c11", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-839]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-839")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "32d1e979-9b1f-52bb-a6d4-77656376d50f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-854]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-854")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "34f71667-e281-5b11-8267-4ba34bf3be39", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-842]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-842")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "361b4270-4de5-5f83-85ab-7a3630ecdfcc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-834]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-834")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "399d56d7-f82e-5c72-bc64-900e60fc518d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-836]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-836")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "3ff80763-4cc1-594c-ae0f-b9b8e609e572", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-829]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-829")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "4541da1a-6935-598a-8c37-2a82a159af24", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-849]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-849")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "4c8ff6d3-18d8-537b-859d-852e96efd7a0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-837]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-837")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "5973ecbf-d107-5143-8ed2-5eccb4f0dcd0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-828]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-828")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "625458e7-15dd-52ae-a5f6-67590e461dc3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-841]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-841")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "63c29aa8-bd5e-5c89-a4bb-070769e93722", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-824]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-824")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "6c5f2c36-0b4f-5385-8053-499d815ec8a5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-831]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-831")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "755fc4f9-3cc8-59a0-beae-b94c3cc2965e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-844]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-844")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "9229ce4d-42fd-554f-8d64-ab32525fa69e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-848]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-848")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "a791fa85-dee8-5490-a10f-917be6dcb87c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-838]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-838")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "a8f23371-af6d-5c11-af4c-0c35b863f927", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-853]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-853")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "adabcf2d-fdfc-541e-8d5a-f33c8fc61855", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-840]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-840")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "b3b95463-96f1-5b8e-a29f-6dcf4747cf49", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-827]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-827")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "b6db1e90-48fc-5096-85cd-eb3b881836d3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-833]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-833")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "c6d5c2f7-b2f3-510f-b50c-79d25512eff0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-847]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-847")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "e8188043-dc49-5dd1-b705-43550e7ad811", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-850]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-850")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "ed93223e-f4c8-5aff-9a07-eb363deef3a9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-826]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-826")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "ef545a1d-2939-587e-9d62-9b24e269c32d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-825]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-825")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "efe1c54b-4b6c-583d-9275-82362b9d2b52", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-823]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-823")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "f2c63a21-531d-5dae-934f-c77bda48bb8d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-852]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-852")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "f5d12021-8c35-58ec-be62-7ae62a6da069", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-845]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-845")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "fbb4a159-d8d9-5833-af37-657a9f128e62", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-843]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-843")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "fbdc9f61-304b-5f28-89a1-93b9fcd4345b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-835]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-835")], .matchExpressions = []}}}}: +1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 2713159282763606650517124854951319954, .node = "testNode-84", .pods = [k8spolicy.PodReference{.name = "testPod-846", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 13523609103879019870981401838867374138, .node = "testNode-83", .pods = [k8spolicy.PodReference{.name = "testPod-830", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 49414767864989056696330758217040547623, .node = "testNode-85", .pods = [k8spolicy.PodReference{.name = "testPod-851", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 60563602358679317412195370747938442453, .node = "testNode-83", .pods = [k8spolicy.PodReference{.name = "testPod-832", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 66000272526890874128630433190041902097, .node = "testNode-83", .pods = [k8spolicy.PodReference{.name = "testPod-839", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 67551325268732931603077496109245322511, .node = "testNode-85", .pods = [k8spolicy.PodReference{.name = "testPod-854", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 70402807548485740829916524100822744633, .node = "testNode-84", .pods = [k8spolicy.PodReference{.name = "testPod-842", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 71919851324261580910536288897826873292, .node = "testNode-83", .pods = [k8spolicy.PodReference{.name = "testPod-834", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 76582947764619356901301564399490453901, .node = "testNode-83", .pods = [k8spolicy.PodReference{.name = "testPod-836", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 85029203199576256853397618624104621426, .node = "testNode-82", .pods = [k8spolicy.PodReference{.name = "testPod-829", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 92058654662750202407294423515939843876, .node = "testNode-84", .pods = [k8spolicy.PodReference{.name = "testPod-849", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 101768832328018037960013359629468686240, .node = "testNode-83", .pods = [k8spolicy.PodReference{.name = "testPod-837", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 118903207609525733175735146840310471888, .node = "testNode-82", .pods = [k8spolicy.PodReference{.name = "testPod-828", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 130702299683556091475555948185812082115, .node = "testNode-84", .pods = [k8spolicy.PodReference{.name = "testPod-841", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 132604014033279435611134263055966877474, .node = "testNode-82", .pods = [k8spolicy.PodReference{.name = "testPod-824", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 144050788454175294008960650237431433381, .node = "testNode-83", .pods = [k8spolicy.PodReference{.name = "testPod-831", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 156016938807302056542718758058394293854, .node = "testNode-84", .pods = [k8spolicy.PodReference{.name = "testPod-844", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 194284355853476782968390466936649000606, .node = "testNode-84", .pods = [k8spolicy.PodReference{.name = "testPod-848", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 222739039549301570413046149404625254524, .node = "testNode-83", .pods = [k8spolicy.PodReference{.name = "testPod-838", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 224567882541595529698021674966086580519, .node = "testNode-85", .pods = [k8spolicy.PodReference{.name = "testPod-853", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 230848528136259924608226078240857790549, .node = "testNode-84", .pods = [k8spolicy.PodReference{.name = "testPod-840", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 238894097777038214975779329977801494345, .node = "testNode-82", .pods = [k8spolicy.PodReference{.name = "testPod-827", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 243057228148605278302969988701438359251, .node = "testNode-83", .pods = [k8spolicy.PodReference{.name = "testPod-833", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 264297056808482994090982411859970420720, .node = "testNode-84", .pods = [k8spolicy.PodReference{.name = "testPod-847", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 308508111671596871040461076360475629585, .node = "testNode-85", .pods = [k8spolicy.PodReference{.name = "testPod-850", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 315790997229058838869113019345776079785, .node = "testNode-82", .pods = [k8spolicy.PodReference{.name = "testPod-826", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 318123471655951072787084619455295767341, .node = "testNode-82", .pods = [k8spolicy.PodReference{.name = "testPod-825", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 318857759385911694218502711806648986450, .node = "testNode-82", .pods = [k8spolicy.PodReference{.name = "testPod-823", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 322702428777948668945149839222736731021, .node = "testNode-85", .pods = [k8spolicy.PodReference{.name = "testPod-852", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 326746700705767242038800951836341543017, .node = "testNode-84", .pods = [k8spolicy.PodReference{.name = "testPod-845", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 334574112962914320306382384123610304098, .node = "testNode-84", .pods = [k8spolicy.PodReference{.name = "testPod-843", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 334781764854096689956869101842548929627, .node = "testNode-83", .pods = [k8spolicy.PodReference{.name = "testPod-835", .namespace = "testNamespace"}]}: +1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 2713159282763606650517124854951319954, .span = "testNode-84"}: +1
AppliedToGroupSpan{.appliedToGroup = 13523609103879019870981401838867374138, .span = "testNode-83"}: +1
AppliedToGroupSpan{.appliedToGroup = 49414767864989056696330758217040547623, .span = "testNode-85"}: +1
AppliedToGroupSpan{.appliedToGroup = 60563602358679317412195370747938442453, .span = "testNode-83"}: +1
AppliedToGroupSpan{.appliedToGroup = 66000272526890874128630433190041902097, .span = "testNode-83"}: +1
AppliedToGroupSpan{.appliedToGroup = 67551325268732931603077496109245322511, .span = "testNode-85"}: +1
AppliedToGroupSpan{.appliedToGroup = 70402807548485740829916524100822744633, .span = "testNode-84"}: +1
AppliedToGroupSpan{.appliedToGroup = 71919851324261580910536288897826873292, .span = "testNode-83"}: +1
AppliedToGroupSpan{.appliedToGroup = 76582947764619356901301564399490453901, .span = "testNode-83"}: +1
AppliedToGroupSpan{.appliedToGroup = 85029203199576256853397618624104621426, .span = "testNode-82"}: +1
AppliedToGroupSpan{.appliedToGroup = 92058654662750202407294423515939843876, .span = "testNode-84"}: +1
AppliedToGroupSpan{.appliedToGroup = 101768832328018037960013359629468686240, .span = "testNode-83"}: +1
AppliedToGroupSpan{.appliedToGroup = 118903207609525733175735146840310471888, .span = "testNode-82"}: +1
AppliedToGroupSpan{.appliedToGroup = 130702299683556091475555948185812082115, .span = "testNode-84"}: +1
AppliedToGroupSpan{.appliedToGroup = 132604014033279435611134263055966877474, .span = "testNode-82"}: +1
AppliedToGroupSpan{.appliedToGroup = 144050788454175294008960650237431433381, .span = "testNode-83"}: +1
AppliedToGroupSpan{.appliedToGroup = 156016938807302056542718758058394293854, .span = "testNode-84"}: +1
AppliedToGroupSpan{.appliedToGroup = 194284355853476782968390466936649000606, .span = "testNode-84"}: +1
AppliedToGroupSpan{.appliedToGroup = 222739039549301570413046149404625254524, .span = "testNode-83"}: +1
AppliedToGroupSpan{.appliedToGroup = 224567882541595529698021674966086580519, .span = "testNode-85"}: +1
AppliedToGroupSpan{.appliedToGroup = 230848528136259924608226078240857790549, .span = "testNode-84"}: +1
AppliedToGroupSpan{.appliedToGroup = 238894097777038214975779329977801494345, .span = "testNode-82"}: +1
AppliedToGroupSpan{.appliedToGroup = 243057228148605278302969988701438359251, .span = "testNode-83"}: +1
AppliedToGroupSpan{.appliedToGroup = 264297056808482994090982411859970420720, .span = "testNode-84"}: +1
AppliedToGroupSpan{.appliedToGroup = 308508111671596871040461076360475629585, .span = "testNode-85"}: +1
AppliedToGroupSpan{.appliedToGroup = 315790997229058838869113019345776079785, .span = "testNode-82"}: +1
AppliedToGroupSpan{.appliedToGroup = 318123471655951072787084619455295767341, .span = "testNode-82"}: +1
AppliedToGroupSpan{.appliedToGroup = 318857759385911694218502711806648986450, .span = "testNode-82"}: +1
AppliedToGroupSpan{.appliedToGroup = 322702428777948668945149839222736731021, .span = "testNode-85"}: +1
AppliedToGroupSpan{.appliedToGroup = 326746700705767242038800951836341543017, .span = "testNode-84"}: +1
AppliedToGroupSpan{.appliedToGroup = 334574112962914320306382384123610304098, .span = "testNode-84"}: +1
AppliedToGroupSpan{.appliedToGroup = 334781764854096689956869101842548929627, .span = "testNode-83"}: +1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-823"}, .name = "testNP-823", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [132604014033279435611134263055966877474], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [318857759385911694218502711806648986450]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-824"}, .name = "testNP-824", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [318123471655951072787084619455295767341], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [132604014033279435611134263055966877474]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-825"}, .name = "testNP-825", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [315790997229058838869113019345776079785], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [318123471655951072787084619455295767341]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-826"}, .name = "testNP-826", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [238894097777038214975779329977801494345], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [315790997229058838869113019345776079785]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-827"}, .name = "testNP-827", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [118903207609525733175735146840310471888], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [238894097777038214975779329977801494345]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-828"}, .name = "testNP-828", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [85029203199576256853397618624104621426], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [118903207609525733175735146840310471888]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-829"}, .name = "testNP-829", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [13523609103879019870981401838867374138], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [85029203199576256853397618624104621426]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-830"}, .name = "testNP-830", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [144050788454175294008960650237431433381], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [13523609103879019870981401838867374138]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-831"}, .name = "testNP-831", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [60563602358679317412195370747938442453], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [144050788454175294008960650237431433381]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-832"}, .name = "testNP-832", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [243057228148605278302969988701438359251], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [60563602358679317412195370747938442453]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-833"}, .name = "testNP-833", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [71919851324261580910536288897826873292], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [243057228148605278302969988701438359251]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-834"}, .name = "testNP-834", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [334781764854096689956869101842548929627], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [71919851324261580910536288897826873292]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-835"}, .name = "testNP-835", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [76582947764619356901301564399490453901], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [334781764854096689956869101842548929627]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-836"}, .name = "testNP-836", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [101768832328018037960013359629468686240], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [76582947764619356901301564399490453901]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-837"}, .name = "testNP-837", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [222739039549301570413046149404625254524], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [101768832328018037960013359629468686240]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-838"}, .name = "testNP-838", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [66000272526890874128630433190041902097], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [222739039549301570413046149404625254524]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-839"}, .name = "testNP-839", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [230848528136259924608226078240857790549], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [66000272526890874128630433190041902097]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-840"}, .name = "testNP-840", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [130702299683556091475555948185812082115], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [230848528136259924608226078240857790549]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-841"}, .name = "testNP-841", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [70402807548485740829916524100822744633], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [130702299683556091475555948185812082115]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-842"}, .name = "testNP-842", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [334574112962914320306382384123610304098], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [70402807548485740829916524100822744633]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-843"}, .name = "testNP-843", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [156016938807302056542718758058394293854], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [334574112962914320306382384123610304098]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-844"}, .name = "testNP-844", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [326746700705767242038800951836341543017], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [156016938807302056542718758058394293854]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-845"}, .name = "testNP-845", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [2713159282763606650517124854951319954], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [326746700705767242038800951836341543017]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-846"}, .name = "testNP-846", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [264297056808482994090982411859970420720], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [2713159282763606650517124854951319954]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-847"}, .name = "testNP-847", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [194284355853476782968390466936649000606], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [264297056808482994090982411859970420720]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-848"}, .name = "testNP-848", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [92058654662750202407294423515939843876], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [194284355853476782968390466936649000606]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-849"}, .name = "testNP-849", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [308508111671596871040461076360475629585], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [92058654662750202407294423515939843876]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-850"}, .name = "testNP-850", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [49414767864989056696330758217040547623], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [308508111671596871040461076360475629585]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-851"}, .name = "testNP-851", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [322702428777948668945149839222736731021], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [49414767864989056696330758217040547623]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-852"}, .name = "testNP-852", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [224567882541595529698021674966086580519], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [322702428777948668945149839222736731021]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-853"}, .name = "testNP-853", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [67551325268732931603077496109245322511], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [224567882541595529698021674966086580519]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-854"}, .name = "testNP-854", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [338869634089142606286186861343038919430], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [67551325268732931603077496109245322511]}: +1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-823", .policy = k8spolicy.UID{.uid = "testNP-823"}, .node = "testNode-82"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-824", .policy = k8spolicy.UID{.uid = "testNP-824"}, .node = "testNode-82"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-825", .policy = k8spolicy.UID{.uid = "testNP-825"}, .node = "testNode-82"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-826", .policy = k8spolicy.UID{.uid = "testNP-826"}, .node = "testNode-82"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-827", .policy = k8spolicy.UID{.uid = "testNP-827"}, .node = "testNode-82"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-828", .policy = k8spolicy.UID{.uid = "testNP-828"}, .node = "testNode-82"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-829", .policy = k8spolicy.UID{.uid = "testNP-829"}, .node = "testNode-82"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-830", .policy = k8spolicy.UID{.uid = "testNP-830"}, .node = "testNode-83"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-831", .policy = k8spolicy.UID{.uid = "testNP-831"}, .node = "testNode-83"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-832", .policy = k8spolicy.UID{.uid = "testNP-832"}, .node = "testNode-83"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-833", .policy = k8spolicy.UID{.uid = "testNP-833"}, .node = "testNode-83"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-834", .policy = k8spolicy.UID{.uid = "testNP-834"}, .node = "testNode-83"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-835", .policy = k8spolicy.UID{.uid = "testNP-835"}, .node = "testNode-83"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-836", .policy = k8spolicy.UID{.uid = "testNP-836"}, .node = "testNode-83"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-837", .policy = k8spolicy.UID{.uid = "testNP-837"}, .node = "testNode-83"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-838", .policy = k8spolicy.UID{.uid = "testNP-838"}, .node = "testNode-83"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-839", .policy = k8spolicy.UID{.uid = "testNP-839"}, .node = "testNode-83"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-840", .policy = k8spolicy.UID{.uid = "testNP-840"}, .node = "testNode-84"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-841", .policy = k8spolicy.UID{.uid = "testNP-841"}, .node = "testNode-84"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-842", .policy = k8spolicy.UID{.uid = "testNP-842"}, .node = "testNode-84"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-843", .policy = k8spolicy.UID{.uid = "testNP-843"}, .node = "testNode-84"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-844", .policy = k8spolicy.UID{.uid = "testNP-844"}, .node = "testNode-84"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-845", .policy = k8spolicy.UID{.uid = "testNP-845"}, .node = "testNode-84"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-846", .policy = k8spolicy.UID{.uid = "testNP-846"}, .node = "testNode-84"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-847", .policy = k8spolicy.UID{.uid = "testNP-847"}, .node = "testNode-84"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-848", .policy = k8spolicy.UID{.uid = "testNP-848"}, .node = "testNode-84"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-849", .policy = k8spolicy.UID{.uid = "testNP-849"}, .node = "testNode-84"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-850", .policy = k8spolicy.UID{.uid = "testNP-850"}, .node = "testNode-85"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-851", .policy = k8spolicy.UID{.uid = "testNP-851"}, .node = "testNode-85"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-852", .policy = k8spolicy.UID{.uid = "testNP-852"}, .node = "testNode-85"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-853", .policy = k8spolicy.UID{.uid = "testNP-853"}, .node = "testNode-85"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-854", .policy = k8spolicy.UID{.uid = "testNP-854"}, .node = "testNode-85"}: +1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 6432921876256178299210019311383090573, .address = "10.10.87.3"}: +1
AddressGroupAddress{.addressGroup = 16929035995177688401794158411132237692, .address = "10.10.87.0"}: +1
AddressGroupAddress{.addressGroup = 24654491811094039145637837114633917438, .address = "10.10.86.3"}: +1
AddressGroupAddress{.addressGroup = 43450182955182932974363649988473048728, .address = "10.10.88.3"}: +1
AddressGroupAddress{.addressGroup = 59674089791192946664335360075983842149, .address = "10.10.88.5"}: +1
AddressGroupAddress{.addressGroup = 74007806333053904974253386838709365818, .address = "10.10.88.6"}: +1
AddressGroupAddress{.addressGroup = 85427075421247658790013879771019567608, .address = "10.10.86.7"}: +1
AddressGroupAddress{.addressGroup = 97947033480539230297615040734346064907, .address = "10.10.86.9"}: +1
AddressGroupAddress{.addressGroup = 105507218235411123027196046403096447794, .address = "10.10.86.1"}: +1
AddressGroupAddress{.addressGroup = 130540553026550883058842456145035904529, .address = "10.10.86.5"}: +1
AddressGroupAddress{.addressGroup = 133751857575759824193236955337736130575, .address = "10.10.88.4"}: +1
AddressGroupAddress{.addressGroup = 141167459551208410605755712454092478208, .address = "10.10.85.8"}: +1
AddressGroupAddress{.addressGroup = 149038293266741873835226374669992491993, .address = "10.10.85.9"}: +1
AddressGroupAddress{.addressGroup = 171602404623857936305214241115086315096, .address = "10.10.87.7"}: +1
AddressGroupAddress{.addressGroup = 174337311770431065818540334253174652329, .address = "10.10.86.2"}: +1
AddressGroupAddress{.addressGroup = 183808204776024540619532429708245524084, .address = "10.10.86.8"}: +1
AddressGroupAddress{.addressGroup = 209986870057488514216194983226418908334, .address = "10.10.87.9"}: +1
AddressGroupAddress{.addressGroup = 215958743205595346182449417442045888540, .address = "10.10.87.5"}: +1
AddressGroupAddress{.addressGroup = 223002076411035378504447530302714401838, .address = "10.10.87.4"}: +1
AddressGroupAddress{.addressGroup = 228107098483338029440119427696699574356, .address = "10.10.87.6"}: +1
AddressGroupAddress{.addressGroup = 228364465280635065551503204655847635486, .address = "10.10.87.1"}: +1
AddressGroupAddress{.addressGroup = 250005452172433703017876321230462434284, .address = "10.10.86.4"}: +1
AddressGroupAddress{.addressGroup = 279513617665565652372555166225599337043, .address = "10.10.86.6"}: +1
AddressGroupAddress{.addressGroup = 279931071969290431539675616095058883915, .address = "10.10.86.0"}: +1
AddressGroupAddress{.addressGroup = 280143545038911263052452948198752016041, .address = "10.10.87.2"}: +1
AddressGroupAddress{.addressGroup = 297381104993311173671675011378572438349, .address = "10.10.85.6"}: +1
AddressGroupAddress{.addressGroup = 311908767482772157251262220186454848239, .address = "10.10.88.0"}: +1
AddressGroupAddress{.addressGroup = 315872735114111893654379499599064809978, .address = "10.10.88.2"}: +1
AddressGroupAddress{.addressGroup = 316364702912848143866612050141388606782, .address = "10.10.88.7"}: +1
AddressGroupAddress{.addressGroup = 320823933964711750880781449352391888321, .address = "10.10.85.7"}: +1
AddressGroupAddress{.addressGroup = 322140640158637606108075023533071009743, .address = "10.10.87.8"}: +1
AddressGroupAddress{.addressGroup = 323462768744129485797321979004130115711, .address = "10.10.88.1"}: +1
AddressGroupDescr:
AddressGroupDescr{.name = "04d6ef89-313b-5b8f-bf99-63e7e002158d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-873]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-873")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "0cbc69ea-8e07-55b2-83c6-92645190f77c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-870]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-870")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "128c484b-a554-5f39-85a2-4fe9825493fe", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-863]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-863")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "20b0336a-8759-5739-90ca-ad95ac7ace98", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-883]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-883")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "2ce4cfc7-dacf-5b61-ad41-753f077d6b65", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-885]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-885")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "37ad6291-8e99-5eb8-99fa-bc15607fec3a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-886]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-886")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "4044a800-c149-5545-9150-bf9f6a0761f8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-867]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-867")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "49afe997-ec38-59cd-a0c6-c7427edbb40b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-869]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-869")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "4f5ff37a-f3dd-582a-9b41-1f71c97a8b32", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-861]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-861")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "6235322d-41d9-59a7-a78e-d28d043dc611", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-865]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-865")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "649fabb7-1346-5398-8540-b02141c9100f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-884]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-884")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "6a33dd1e-de7b-5491-a7c7-007326195700", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-858]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-858")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "701fbb2f-0621-52bf-aba1-92529ed87bd9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-859]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-859")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "81196bc3-feaf-50fe-a385-1142b124de58", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-877]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-877")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "83282519-3b79-54a8-b605-484ff79b7da9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-862]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-862")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "8a482c2c-e818-5398-8913-75585c22de74", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-868]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-868")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "9dfa0006-5e86-5ff7-b9b7-0448657bccae", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-879]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-879")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "a278241a-7d2a-5ca5-a7a4-2dbeed5a881c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-875]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-875")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "a7c4a33d-d205-53e7-b085-07212fa3d42e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-874]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-874")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "ab9bd443-2685-5c7d-9215-4ed0341f0854", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-876]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-876")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "abcd656c-d354-55a3-b087-f0e512fafa1e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-871]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-871")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "bc154c74-f996-5fb8-afdc-9b14cadcbbec", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-864]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-864")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "d2485d57-408b-5fac-a69f-03791df49253", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-866]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-866")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "d298c36d-54b7-558f-958c-7925cf71754b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-860]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-860")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "d2c1af28-7fdf-50d3-95a4-7334fdf456a9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-872]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-872")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "dfb9847a-e3ef-5fa3-8ca4-7e6b6f642b4d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-856]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-856")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "eaa7718a-9af3-5a5a-94db-b06185bff2ef", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-880]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-880")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "eda2e03c-1bab-548d-8dc0-0784ff4141fa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-882]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-882")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "ee01a01e-b786-58ab-b30a-6c1349da0d3e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-887]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-887")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "f15c712f-6c6a-5de2-b8ef-0c825ac70dc1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-857]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-857")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "f25a07d0-1076-5241-b6b2-adc9e86e07cf", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-878]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-878")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "f358a9c8-e89b-5cc4-9d76-9c1e0ec3407f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-881]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-881")], .matchExpressions = []}}}}: +1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 6432921876256178299210019311383090573, .node = "testNode-87"}: +1
AddressGroupSpan{.addressGroup = 16929035995177688401794158411132237692, .node = "testNode-86"}: +1
AddressGroupSpan{.addressGroup = 24654491811094039145637837114633917438, .node = "testNode-86"}: +1
AddressGroupSpan{.addressGroup = 43450182955182932974363649988473048728, .node = "testNode-88"}: +1
AddressGroupSpan{.addressGroup = 59674089791192946664335360075983842149, .node = "testNode-88"}: +1
AddressGroupSpan{.addressGroup = 74007806333053904974253386838709365818, .node = "testNode-88"}: +1
AddressGroupSpan{.addressGroup = 85427075421247658790013879771019567608, .node = "testNode-86"}: +1
AddressGroupSpan{.addressGroup = 97947033480539230297615040734346064907, .node = "testNode-86"}: +1
AddressGroupSpan{.addressGroup = 105507218235411123027196046403096447794, .node = "testNode-86"}: +1
AddressGroupSpan{.addressGroup = 130540553026550883058842456145035904529, .node = "testNode-86"}: +1
AddressGroupSpan{.addressGroup = 133751857575759824193236955337736130575, .node = "testNode-88"}: +1
AddressGroupSpan{.addressGroup = 141167459551208410605755712454092478208, .node = "testNode-85"}: +1
AddressGroupSpan{.addressGroup = 149038293266741873835226374669992491993, .node = "testNode-85"}: +1
AddressGroupSpan{.addressGroup = 171602404623857936305214241115086315096, .node = "testNode-87"}: +1
AddressGroupSpan{.addressGroup = 174337311770431065818540334253174652329, .node = "testNode-86"}: +1
AddressGroupSpan{.addressGroup = 183808204776024540619532429708245524084, .node = "testNode-86"}: +1
AddressGroupSpan{.addressGroup = 209986870057488514216194983226418908334, .node = "testNode-87"}: +1
AddressGroupSpan{.addressGroup = 215958743205595346182449417442045888540, .node = "testNode-87"}: +1
AddressGroupSpan{.addressGroup = 223002076411035378504447530302714401838, .node = "testNode-87"}: +1
AddressGroupSpan{.addressGroup = 228107098483338029440119427696699574356, .node = "testNode-87"}: +1
AddressGroupSpan{.addressGroup = 228364465280635065551503204655847635486, .node = "testNode-87"}: +1
AddressGroupSpan{.addressGroup = 250005452172433703017876321230462434284, .node = "testNode-86"}: +1
AddressGroupSpan{.addressGroup = 279513617665565652372555166225599337043, .node = "testNode-86"}: +1
AddressGroupSpan{.addressGroup = 279931071969290431539675616095058883915, .node = "testNode-85"}: +1
AddressGroupSpan{.addressGroup = 280143545038911263052452948198752016041, .node = "testNode-87"}: +1
AddressGroupSpan{.addressGroup = 297381104993311173671675011378572438349, .node = "testNode-85"}: +1
AddressGroupSpan{.addressGroup = 311908767482772157251262220186454848239, .node = "testNode-87"}: +1
AddressGroupSpan{.addressGroup = 315872735114111893654379499599064809978, .node = "testNode-88"}: +1
AddressGroupSpan{.addressGroup = 316364702912848143866612050141388606782, .node = "testNode-88"}: +1
AddressGroupSpan{.addressGroup = 320823933964711750880781449352391888321, .node = "testNode-85"}: +1
AddressGroupSpan{.addressGroup = 322140640158637606108075023533071009743, .node = "testNode-87"}: +1
AddressGroupSpan{.addressGroup = 323462768744129485797321979004130115711, .node = "testNode-88"}: +1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "04d6ef89-313b-5b8f-bf99-63e7e002158d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-873]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-873")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "0cbc69ea-8e07-55b2-83c6-92645190f77c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-870]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-870")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "128c484b-a554-5f39-85a2-4fe9825493fe", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-863]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-863")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "20b0336a-8759-5739-90ca-ad95ac7ace98", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-883]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-883")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "2ce4cfc7-dacf-5b61-ad41-753f077d6b65", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-885]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-885")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "37ad6291-8e99-5eb8-99fa-bc15607fec3a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-886]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-886")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "4044a800-c149-5545-9150-bf9f6a0761f8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-867]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-867")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "49afe997-ec38-59cd-a0c6-c7427edbb40b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-869]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-869")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "4f5ff37a-f3dd-582a-9b41-1f71c97a8b32", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-861]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-861")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "6235322d-41d9-59a7-a78e-d28d043dc611", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-865]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-865")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "649fabb7-1346-5398-8540-b02141c9100f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-884]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-884")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "6a33dd1e-de7b-5491-a7c7-007326195700", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-858]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-858")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "701fbb2f-0621-52bf-aba1-92529ed87bd9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-859]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-859")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "81196bc3-feaf-50fe-a385-1142b124de58", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-877]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-877")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "83282519-3b79-54a8-b605-484ff79b7da9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-862]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-862")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "8a482c2c-e818-5398-8913-75585c22de74", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-868]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-868")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "9dfa0006-5e86-5ff7-b9b7-0448657bccae", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-879]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-879")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "a278241a-7d2a-5ca5-a7a4-2dbeed5a881c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-875]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-875")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "a7c4a33d-d205-53e7-b085-07212fa3d42e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-874]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-874")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "ab9bd443-2685-5c7d-9215-4ed0341f0854", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-876]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-876")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "abcd656c-d354-55a3-b087-f0e512fafa1e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-871]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-871")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "bc154c74-f996-5fb8-afdc-9b14cadcbbec", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-864]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-864")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "d2485d57-408b-5fac-a69f-03791df49253", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-866]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-866")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "d298c36d-54b7-558f-958c-7925cf71754b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-860]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-860")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "d2c1af28-7fdf-50d3-95a4-7334fdf456a9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-872]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-872")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "dfb9847a-e3ef-5fa3-8ca4-7e6b6f642b4d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-856]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-856")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "eaa7718a-9af3-5a5a-94db-b06185bff2ef", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-880]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-880")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "eda2e03c-1bab-548d-8dc0-0784ff4141fa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-882]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-882")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "f15c712f-6c6a-5de2-b8ef-0c825ac70dc1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-857]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-857")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "f25a07d0-1076-5241-b6b2-adc9e86e07cf", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-878]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-878")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "f358a9c8-e89b-5cc4-9d76-9c1e0ec3407f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-881]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-881")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "feefeae4-caa5-5456-b306-d7b13c8e5306", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-855]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-855")], .matchExpressions = []}}}}: +1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 6432921876256178299210019311383090573, .node = "testNode-87", .pods = [k8spolicy.PodReference{.name = "testPod-873", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 16929035995177688401794158411132237692, .node = "testNode-87", .pods = [k8spolicy.PodReference{.name = "testPod-870", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 24654491811094039145637837114633917438, .node = "testNode-86", .pods = [k8spolicy.PodReference{.name = "testPod-863", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 43450182955182932974363649988473048728, .node = "testNode-88", .pods = [k8spolicy.PodReference{.name = "testPod-883", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 59674089791192946664335360075983842149, .node = "testNode-88", .pods = [k8spolicy.PodReference{.name = "testPod-885", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 74007806333053904974253386838709365818, .node = "testNode-88", .pods = [k8spolicy.PodReference{.name = "testPod-886", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 85427075421247658790013879771019567608, .node = "testNode-86", .pods = [k8spolicy.PodReference{.name = "testPod-867", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 97947033480539230297615040734346064907, .node = "testNode-86", .pods = [k8spolicy.PodReference{.name = "testPod-869", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 105507218235411123027196046403096447794, .node = "testNode-86", .pods = [k8spolicy.PodReference{.name = "testPod-861", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 130540553026550883058842456145035904529, .node = "testNode-86", .pods = [k8spolicy.PodReference{.name = "testPod-865", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 133751857575759824193236955337736130575, .node = "testNode-88", .pods = [k8spolicy.PodReference{.name = "testPod-884", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 141167459551208410605755712454092478208, .node = "testNode-85", .pods = [k8spolicy.PodReference{.name = "testPod-858", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 149038293266741873835226374669992491993, .node = "testNode-85", .pods = [k8spolicy.PodReference{.name = "testPod-859", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 171602404623857936305214241115086315096, .node = "testNode-87", .pods = [k8spolicy.PodReference{.name = "testPod-877", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 174337311770431065818540334253174652329, .node = "testNode-86", .pods = [k8spolicy.PodReference{.name = "testPod-862", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 183808204776024540619532429708245524084, .node = "testNode-86", .pods = [k8spolicy.PodReference{.name = "testPod-868", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 209986870057488514216194983226418908334, .node = "testNode-87", .pods = [k8spolicy.PodReference{.name = "testPod-879", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 215958743205595346182449417442045888540, .node = "testNode-87", .pods = [k8spolicy.PodReference{.name = "testPod-875", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 223002076411035378504447530302714401838, .node = "testNode-87", .pods = [k8spolicy.PodReference{.name = "testPod-874", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 228107098483338029440119427696699574356, .node = "testNode-87", .pods = [k8spolicy.PodReference{.name = "testPod-876", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 228364465280635065551503204655847635486, .node = "testNode-87", .pods = [k8spolicy.PodReference{.name = "testPod-871", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 250005452172433703017876321230462434284, .node = "testNode-86", .pods = [k8spolicy.PodReference{.name = "testPod-864", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 279513617665565652372555166225599337043, .node = "testNode-86", .pods = [k8spolicy.PodReference{.name = "testPod-866", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 279931071969290431539675616095058883915, .node = "testNode-86", .pods = [k8spolicy.PodReference{.name = "testPod-860", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 280143545038911263052452948198752016041, .node = "testNode-87", .pods = [k8spolicy.PodReference{.name = "testPod-872", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 297381104993311173671675011378572438349, .node = "testNode-85", .pods = [k8spolicy.PodReference{.name = "testPod-856", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 311908767482772157251262220186454848239, .node = "testNode-88", .pods = [k8spolicy.PodReference{.name = "testPod-880", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 315872735114111893654379499599064809978, .node = "testNode-88", .pods = [k8spolicy.PodReference{.name = "testPod-882", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 320823933964711750880781449352391888321, .node = "testNode-85", .pods = [k8spolicy.PodReference{.name = "testPod-857", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 322140640158637606108075023533071009743, .node = "testNode-87", .pods = [k8spolicy.PodReference{.name = "testPod-878", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 323462768744129485797321979004130115711, .node = "testNode-88", .pods = [k8spolicy.PodReference{.name = "testPod-881", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 338869634089142606286186861343038919430, .node = "testNode-85", .pods = [k8spolicy.PodReference{.name = "testPod-855", .namespace = "testNamespace"}]}: +1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 6432921876256178299210019311383090573, .span = "testNode-87"}: +1
AppliedToGroupSpan{.appliedToGroup = 16929035995177688401794158411132237692, .span = "testNode-87"}: +1
AppliedToGroupSpan{.appliedToGroup = 24654491811094039145637837114633917438, .span = "testNode-86"}: +1
AppliedToGroupSpan{.appliedToGroup = 43450182955182932974363649988473048728, .span = "testNode-88"}: +1
AppliedToGroupSpan{.appliedToGroup = 59674089791192946664335360075983842149, .span = "testNode-88"}: +1
AppliedToGroupSpan{.appliedToGroup = 74007806333053904974253386838709365818, .span = "testNode-88"}: +1
AppliedToGroupSpan{.appliedToGroup = 85427075421247658790013879771019567608, .span = "testNode-86"}: +1
AppliedToGroupSpan{.appliedToGroup = 97947033480539230297615040734346064907, .span = "testNode-86"}: +1
AppliedToGroupSpan{.appliedToGroup = 105507218235411123027196046403096447794, .span = "testNode-86"}: +1
AppliedToGroupSpan{.appliedToGroup = 130540553026550883058842456145035904529, .span = "testNode-86"}: +1
AppliedToGroupSpan{.appliedToGroup = 133751857575759824193236955337736130575, .span = "testNode-88"}: +1
AppliedToGroupSpan{.appliedToGroup = 141167459551208410605755712454092478208, .span = "testNode-85"}: +1
AppliedToGroupSpan{.appliedToGroup = 149038293266741873835226374669992491993, .span = "testNode-85"}: +1
AppliedToGroupSpan{.appliedToGroup = 171602404623857936305214241115086315096, .span = "testNode-87"}: +1
AppliedToGroupSpan{.appliedToGroup = 174337311770431065818540334253174652329, .span = "testNode-86"}: +1
AppliedToGroupSpan{.appliedToGroup = 183808204776024540619532429708245524084, .span = "testNode-86"}: +1
AppliedToGroupSpan{.appliedToGroup = 209986870057488514216194983226418908334, .span = "testNode-87"}: +1
AppliedToGroupSpan{.appliedToGroup = 215958743205595346182449417442045888540, .span = "testNode-87"}: +1
AppliedToGroupSpan{.appliedToGroup = 223002076411035378504447530302714401838, .span = "testNode-87"}: +1
AppliedToGroupSpan{.appliedToGroup = 228107098483338029440119427696699574356, .span = "testNode-87"}: +1
AppliedToGroupSpan{.appliedToGroup = 228364465280635065551503204655847635486, .span = "testNode-87"}: +1
AppliedToGroupSpan{.appliedToGroup = 250005452172433703017876321230462434284, .span = "testNode-86"}: +1
AppliedToGroupSpan{.appliedToGroup = 279513617665565652372555166225599337043, .span = "testNode-86"}: +1
AppliedToGroupSpan{.appliedToGroup = 279931071969290431539675616095058883915, .span = "testNode-86"}: +1
AppliedToGroupSpan{.appliedToGroup = 280143545038911263052452948198752016041, .span = "testNode-87"}: +1
AppliedToGroupSpan{.appliedToGroup = 297381104993311173671675011378572438349, .span = "testNode-85"}: +1
AppliedToGroupSpan{.appliedToGroup = 311908767482772157251262220186454848239, .span = "testNode-88"}: +1
AppliedToGroupSpan{.appliedToGroup = 315872735114111893654379499599064809978, .span = "testNode-88"}: +1
AppliedToGroupSpan{.appliedToGroup = 320823933964711750880781449352391888321, .span = "testNode-85"}: +1
AppliedToGroupSpan{.appliedToGroup = 322140640158637606108075023533071009743, .span = "testNode-87"}: +1
AppliedToGroupSpan{.appliedToGroup = 323462768744129485797321979004130115711, .span = "testNode-88"}: +1
AppliedToGroupSpan{.appliedToGroup = 338869634089142606286186861343038919430, .span = "testNode-85"}: +1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-855"}, .name = "testNP-855", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [297381104993311173671675011378572438349], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [338869634089142606286186861343038919430]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-856"}, .name = "testNP-856", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [320823933964711750880781449352391888321], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [297381104993311173671675011378572438349]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-857"}, .name = "testNP-857", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [141167459551208410605755712454092478208], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [320823933964711750880781449352391888321]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-858"}, .name = "testNP-858", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [149038293266741873835226374669992491993], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [141167459551208410605755712454092478208]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-859"}, .name = "testNP-859", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [279931071969290431539675616095058883915], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [149038293266741873835226374669992491993]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-860"}, .name = "testNP-860", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [105507218235411123027196046403096447794], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [279931071969290431539675616095058883915]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-861"}, .name = "testNP-861", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [174337311770431065818540334253174652329], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [105507218235411123027196046403096447794]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-862"}, .name = "testNP-862", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [24654491811094039145637837114633917438], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [174337311770431065818540334253174652329]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-863"}, .name = "testNP-863", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [250005452172433703017876321230462434284], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [24654491811094039145637837114633917438]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-864"}, .name = "testNP-864", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [130540553026550883058842456145035904529], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [250005452172433703017876321230462434284]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-865"}, .name = "testNP-865", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [279513617665565652372555166225599337043], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [130540553026550883058842456145035904529]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-866"}, .name = "testNP-866", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [85427075421247658790013879771019567608], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [279513617665565652372555166225599337043]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-867"}, .name = "testNP-867", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [183808204776024540619532429708245524084], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [85427075421247658790013879771019567608]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-868"}, .name = "testNP-868", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [97947033480539230297615040734346064907], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [183808204776024540619532429708245524084]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-869"}, .name = "testNP-869", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [16929035995177688401794158411132237692], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [97947033480539230297615040734346064907]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-870"}, .name = "testNP-870", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [228364465280635065551503204655847635486], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [16929035995177688401794158411132237692]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-871"}, .name = "testNP-871", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [280143545038911263052452948198752016041], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [228364465280635065551503204655847635486]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-872"}, .name = "testNP-872", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [6432921876256178299210019311383090573], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [280143545038911263052452948198752016041]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-873"}, .name = "testNP-873", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [223002076411035378504447530302714401838], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [6432921876256178299210019311383090573]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-874"}, .name = "testNP-874", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [215958743205595346182449417442045888540], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [223002076411035378504447530302714401838]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-875"}, .name = "testNP-875", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [228107098483338029440119427696699574356], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [215958743205595346182449417442045888540]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-876"}, .name = "testNP-876", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [171602404623857936305214241115086315096], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [228107098483338029440119427696699574356]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-877"}, .name = "testNP-877", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [322140640158637606108075023533071009743], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [171602404623857936305214241115086315096]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-878"}, .name = "testNP-878", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [209986870057488514216194983226418908334], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [322140640158637606108075023533071009743]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-879"}, .name = "testNP-879", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [311908767482772157251262220186454848239], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [209986870057488514216194983226418908334]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-880"}, .name = "testNP-880", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [323462768744129485797321979004130115711], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [311908767482772157251262220186454848239]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-881"}, .name = "testNP-881", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [315872735114111893654379499599064809978], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [323462768744129485797321979004130115711]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-882"}, .name = "testNP-882", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [43450182955182932974363649988473048728], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [315872735114111893654379499599064809978]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-883"}, .name = "testNP-883", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [133751857575759824193236955337736130575], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [43450182955182932974363649988473048728]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-884"}, .name = "testNP-884", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [59674089791192946664335360075983842149], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [133751857575759824193236955337736130575]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-885"}, .name = "testNP-885", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [74007806333053904974253386838709365818], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [59674089791192946664335360075983842149]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-886"}, .name = "testNP-886", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [316364702912848143866612050141388606782], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [74007806333053904974253386838709365818]}: +1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-855", .policy = k8spolicy.UID{.uid = "testNP-855"}, .node = "testNode-85"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-856", .policy = k8spolicy.UID{.uid = "testNP-856"}, .node = "testNode-85"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-857", .policy = k8spolicy.UID{.uid = "testNP-857"}, .node = "testNode-85"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-858", .policy = k8spolicy.UID{.uid = "testNP-858"}, .node = "testNode-85"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-859", .policy = k8spolicy.UID{.uid = "testNP-859"}, .node = "testNode-85"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-860", .policy = k8spolicy.UID{.uid = "testNP-860"}, .node = "testNode-86"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-861", .policy = k8spolicy.UID{.uid = "testNP-861"}, .node = "testNode-86"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-862", .policy = k8spolicy.UID{.uid = "testNP-862"}, .node = "testNode-86"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-863", .policy = k8spolicy.UID{.uid = "testNP-863"}, .node = "testNode-86"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-864", .policy = k8spolicy.UID{.uid = "testNP-864"}, .node = "testNode-86"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-865", .policy = k8spolicy.UID{.uid = "testNP-865"}, .node = "testNode-86"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-866", .policy = k8spolicy.UID{.uid = "testNP-866"}, .node = "testNode-86"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-867", .policy = k8spolicy.UID{.uid = "testNP-867"}, .node = "testNode-86"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-868", .policy = k8spolicy.UID{.uid = "testNP-868"}, .node = "testNode-86"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-869", .policy = k8spolicy.UID{.uid = "testNP-869"}, .node = "testNode-86"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-870", .policy = k8spolicy.UID{.uid = "testNP-870"}, .node = "testNode-87"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-871", .policy = k8spolicy.UID{.uid = "testNP-871"}, .node = "testNode-87"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-872", .policy = k8spolicy.UID{.uid = "testNP-872"}, .node = "testNode-87"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-873", .policy = k8spolicy.UID{.uid = "testNP-873"}, .node = "testNode-87"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-874", .policy = k8spolicy.UID{.uid = "testNP-874"}, .node = "testNode-87"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-875", .policy = k8spolicy.UID{.uid = "testNP-875"}, .node = "testNode-87"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-876", .policy = k8spolicy.UID{.uid = "testNP-876"}, .node = "testNode-87"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-877", .policy = k8spolicy.UID{.uid = "testNP-877"}, .node = "testNode-87"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-878", .policy = k8spolicy.UID{.uid = "testNP-878"}, .node = "testNode-87"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-879", .policy = k8spolicy.UID{.uid = "testNP-879"}, .node = "testNode-87"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-880", .policy = k8spolicy.UID{.uid = "testNP-880"}, .node = "testNode-88"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-881", .policy = k8spolicy.UID{.uid = "testNP-881"}, .node = "testNode-88"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-882", .policy = k8spolicy.UID{.uid = "testNP-882"}, .node = "testNode-88"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-883", .policy = k8spolicy.UID{.uid = "testNP-883"}, .node = "testNode-88"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-884", .policy = k8spolicy.UID{.uid = "testNP-884"}, .node = "testNode-88"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-885", .policy = k8spolicy.UID{.uid = "testNP-885"}, .node = "testNode-88"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-886", .policy = k8spolicy.UID{.uid = "testNP-886"}, .node = "testNode-88"}: +1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 1178344942689128518483290271691062493, .address = "10.10.89.7"}: +1
AddressGroupAddress{.addressGroup = 19760368924207003562558254411017190194, .address = "10.10.90.2"}: +1
AddressGroupAddress{.addressGroup = 30696003942255852472056292973602899239, .address = "10.10.91.2"}: +1
AddressGroupAddress{.addressGroup = 33359587595968169854985297462549429656, .address = "10.10.90.8"}: +1
AddressGroupAddress{.addressGroup = 42038013867875964634800215627609291329, .address = "10.10.89.4"}: +1
AddressGroupAddress{.addressGroup = 45612154749333732690597565647092664750, .address = "10.10.89.9"}: +1
AddressGroupAddress{.addressGroup = 52009440379722916658142443915196199246, .address = "10.10.91.4"}: +1
AddressGroupAddress{.addressGroup = 70992491464489868080869730044392129785, .address = "10.10.90.1"}: +1
AddressGroupAddress{.addressGroup = 84259068503017294792939377043180163050, .address = "10.10.91.8"}: +1
AddressGroupAddress{.addressGroup = 89811725033545612492079610937642093973, .address = "10.10.91.1"}: +1
AddressGroupAddress{.addressGroup = 91114571321615387922736567229588436793, .address = "10.10.89.3"}: +1
AddressGroupAddress{.addressGroup = 92219302508935630136277103931918883108, .address = "10.10.91.6"}: +1
AddressGroupAddress{.addressGroup = 135041047265651975128061812275763005174, .address = "10.10.89.5"}: +1
AddressGroupAddress{.addressGroup = 141871074522122280174954668525821765382, .address = "10.10.90.7"}: +1
AddressGroupAddress{.addressGroup = 145991167593158205719628765296274317234, .address = "10.10.90.4"}: +1
AddressGroupAddress{.addressGroup = 146514335626164145776762471203706759135, .address = "10.10.90.3"}: +1
AddressGroupAddress{.addressGroup = 152118823496539417069241801604520750522, .address = "10.10.91.5"}: +1
AddressGroupAddress{.addressGroup = 167937540479149022655611876447367135575, .address = "10.10.90.6"}: +1
AddressGroupAddress{.addressGroup = 186339915324272850794860639806508927853, .address = "10.10.91.9"}: +1
AddressGroupAddress{.addressGroup = 187513040822242426735030527655057216737, .address = "10.10.90.9"}: +1
AddressGroupAddress{.addressGroup = 196723119965086899323601465812552178971, .address = "10.10.88.8"}: +1
AddressGroupAddress{.addressGroup = 205446523907170272045552917740213409360, .address = "10.10.90.5"}: +1
AddressGroupAddress{.addressGroup = 215760689775933383780284555101729753898, .address = "10.10.90.0"}: +1
AddressGroupAddress{.addressGroup = 221315335643040719959311860364246923884, .address = "10.10.91.7"}: +1
AddressGroupAddress{.addressGroup = 227401460221416637870671496134541522280, .address = "10.10.89.6"}: +1
AddressGroupAddress{.addressGroup = 230459972229469506074747214534223777899, .address = "10.10.88.9"}: +1
AddressGroupAddress{.addressGroup = 254519844389511459104264260487574445479, .address = "10.10.91.0"}: +1
AddressGroupAddress{.addressGroup = 289112906982018246948632444523046810637, .address = "10.10.89.8"}: +1
AddressGroupAddress{.addressGroup = 289810882421247943298090520412407032001, .address = "10.10.89.1"}: +1
AddressGroupAddress{.addressGroup = 301810568326366645774945846681323329212, .address = "10.10.91.3"}: +1
AddressGroupAddress{.addressGroup = 323652542175413730260248681600058723076, .address = "10.10.89.0"}: +1
AddressGroupAddress{.addressGroup = 328191401992147305105980827494649267604, .address = "10.10.89.2"}: +1
AddressGroupDescr:
AddressGroupDescr{.name = "00e2f0e4-2164-5b09-bfe7-9adb0ce43cdd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-897]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-897")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "0eddb568-45d7-5c98-85ed-15bb7b617b32", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-902]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-902")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "1717d5d7-4e0d-5930-8270-218ea2d38527", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-912]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-912")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "1918d2a7-8005-55aa-b506-521184923d98", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-908]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-908")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "1fa03a1a-c6ae-5008-ab16-3562c6863a41", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-894]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-894")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "225094da-f449-5e13-928b-c8bbaef749ae", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-899]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-899")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "2720a763-7cdf-5fdd-ad3e-af54d337714e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-914]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-914")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "3568a811-4a06-515d-a03c-a79ef93a44f9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-901]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-901")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "3f63b4d0-d681-5dd2-94c2-3587ab090fea", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-918]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-918")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "43911beb-59cc-5988-bb3b-af6aae148d95", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-911]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-911")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "448c0733-62b0-584d-b076-5f0401d7f739", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-893]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-893")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "4560caa7-4bfa-5621-8e1e-d35a85c39924", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-916]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-916")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "6597f5ac-9b8c-5d1e-855b-cbbedbfcc6f6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-895]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-895")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "6abb6004-5aed-5881-a895-2e7ae6d22706", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-907]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-907")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "6dd4e049-f2f0-53dc-a992-5c0f91821fb2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-904]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-904")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "6e39a276-e0ea-57fb-97ab-c913d427e7df", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-903]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-903")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "7271050c-dfc9-5fc8-aec1-8d8633282dba", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-915]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-915")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "7e579803-3f5f-5e8c-b0f4-447b4b5b0157", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-906]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-906")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "8c2fc324-8113-5345-bf12-c53be5ee8b6d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-919]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-919")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "8d11b2b1-faff-5fee-8127-7656c3ded4e1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-909]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-909")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "93ff7ea7-e59f-5463-82dd-534da2c2dd1b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-888]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-888")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "9a8f8fad-2ec7-59a9-b2cc-91f5f0029650", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-905]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-905")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "a251ff50-c398-5a13-a17c-ddc9f0b08b2a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-900]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-900")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "a67fc880-3c0d-577d-a4c8-36d949723a6c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-917]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-917")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "ab13ed9c-243c-5eee-ade8-cb91f15d3568", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-896]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-896")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "ad60f9e4-f65e-5543-a1eb-8b3ddb92d06b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-889]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-889")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "bf7abd2d-7819-5f74-afb5-50977a8bdda7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-910]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-910")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "d9811ed8-34e4-5d7f-b1d7-292aee68b40d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-898]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-898")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "da078bb0-cbad-5a9f-ac2c-4e0a2b3968c1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-891]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-891")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "e30e99e2-29cd-5fe8-83fb-c5bf3bba56bc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-913]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-913")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "f37d3656-5c7b-5a86-895c-1ce6ac7d0b04", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-890]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-890")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "f6e75d67-6165-5ae0-820f-8f317c258594", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-892]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-892")], .matchExpressions = []}}}}: +1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 1178344942689128518483290271691062493, .node = "testNode-89"}: +1
AddressGroupSpan{.addressGroup = 19760368924207003562558254411017190194, .node = "testNode-90"}: +1
AddressGroupSpan{.addressGroup = 30696003942255852472056292973602899239, .node = "testNode-91"}: +1
AddressGroupSpan{.addressGroup = 33359587595968169854985297462549429656, .node = "testNode-90"}: +1
AddressGroupSpan{.addressGroup = 42038013867875964634800215627609291329, .node = "testNode-89"}: +1
AddressGroupSpan{.addressGroup = 45612154749333732690597565647092664750, .node = "testNode-89"}: +1
AddressGroupSpan{.addressGroup = 52009440379722916658142443915196199246, .node = "testNode-91"}: +1
AddressGroupSpan{.addressGroup = 70992491464489868080869730044392129785, .node = "testNode-90"}: +1
AddressGroupSpan{.addressGroup = 84259068503017294792939377043180163050, .node = "testNode-91"}: +1
AddressGroupSpan{.addressGroup = 89811725033545612492079610937642093973, .node = "testNode-91"}: +1
AddressGroupSpan{.addressGroup = 91114571321615387922736567229588436793, .node = "testNode-89"}: +1
AddressGroupSpan{.addressGroup = 92219302508935630136277103931918883108, .node = "testNode-91"}: +1
AddressGroupSpan{.addressGroup = 135041047265651975128061812275763005174, .node = "testNode-89"}: +1
AddressGroupSpan{.addressGroup = 141871074522122280174954668525821765382, .node = "testNode-90"}: +1
AddressGroupSpan{.addressGroup = 145991167593158205719628765296274317234, .node = "testNode-90"}: +1
AddressGroupSpan{.addressGroup = 146514335626164145776762471203706759135, .node = "testNode-90"}: +1
AddressGroupSpan{.addressGroup = 152118823496539417069241801604520750522, .node = "testNode-91"}: +1
AddressGroupSpan{.addressGroup = 167937540479149022655611876447367135575, .node = "testNode-90"}: +1
AddressGroupSpan{.addressGroup = 186339915324272850794860639806508927853, .node = "testNode-91"}: +1
AddressGroupSpan{.addressGroup = 187513040822242426735030527655057216737, .node = "testNode-90"}: +1
AddressGroupSpan{.addressGroup = 196723119965086899323601465812552178971, .node = "testNode-88"}: +1
AddressGroupSpan{.addressGroup = 205446523907170272045552917740213409360, .node = "testNode-90"}: +1
AddressGroupSpan{.addressGroup = 215760689775933383780284555101729753898, .node = "testNode-89"}: +1
AddressGroupSpan{.addressGroup = 221315335643040719959311860364246923884, .node = "testNode-91"}: +1
AddressGroupSpan{.addressGroup = 227401460221416637870671496134541522280, .node = "testNode-89"}: +1
AddressGroupSpan{.addressGroup = 230459972229469506074747214534223777899, .node = "testNode-88"}: +1
AddressGroupSpan{.addressGroup = 254519844389511459104264260487574445479, .node = "testNode-90"}: +1
AddressGroupSpan{.addressGroup = 289112906982018246948632444523046810637, .node = "testNode-89"}: +1
AddressGroupSpan{.addressGroup = 289810882421247943298090520412407032001, .node = "testNode-89"}: +1
AddressGroupSpan{.addressGroup = 301810568326366645774945846681323329212, .node = "testNode-91"}: +1
AddressGroupSpan{.addressGroup = 323652542175413730260248681600058723076, .node = "testNode-88"}: +1
AddressGroupSpan{.addressGroup = 328191401992147305105980827494649267604, .node = "testNode-89"}: +1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "00e2f0e4-2164-5b09-bfe7-9adb0ce43cdd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-897]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-897")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "0eddb568-45d7-5c98-85ed-15bb7b617b32", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-902]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-902")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "1717d5d7-4e0d-5930-8270-218ea2d38527", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-912]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-912")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "1918d2a7-8005-55aa-b506-521184923d98", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-908]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-908")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "1fa03a1a-c6ae-5008-ab16-3562c6863a41", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-894]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-894")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "225094da-f449-5e13-928b-c8bbaef749ae", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-899]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-899")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "2720a763-7cdf-5fdd-ad3e-af54d337714e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-914]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-914")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "3568a811-4a06-515d-a03c-a79ef93a44f9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-901]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-901")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "3f63b4d0-d681-5dd2-94c2-3587ab090fea", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-918]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-918")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "43911beb-59cc-5988-bb3b-af6aae148d95", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-911]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-911")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "448c0733-62b0-584d-b076-5f0401d7f739", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-893]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-893")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "4560caa7-4bfa-5621-8e1e-d35a85c39924", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-916]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-916")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "6597f5ac-9b8c-5d1e-855b-cbbedbfcc6f6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-895]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-895")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "6abb6004-5aed-5881-a895-2e7ae6d22706", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-907]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-907")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "6dd4e049-f2f0-53dc-a992-5c0f91821fb2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-904]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-904")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "6e39a276-e0ea-57fb-97ab-c913d427e7df", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-903]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-903")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "7271050c-dfc9-5fc8-aec1-8d8633282dba", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-915]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-915")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "7e579803-3f5f-5e8c-b0f4-447b4b5b0157", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-906]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-906")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "8d11b2b1-faff-5fee-8127-7656c3ded4e1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-909]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-909")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "93ff7ea7-e59f-5463-82dd-534da2c2dd1b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-888]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-888")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "9a8f8fad-2ec7-59a9-b2cc-91f5f0029650", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-905]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-905")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "a251ff50-c398-5a13-a17c-ddc9f0b08b2a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-900]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-900")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "a67fc880-3c0d-577d-a4c8-36d949723a6c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-917]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-917")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "ab13ed9c-243c-5eee-ade8-cb91f15d3568", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-896]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-896")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "ad60f9e4-f65e-5543-a1eb-8b3ddb92d06b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-889]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-889")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "bf7abd2d-7819-5f74-afb5-50977a8bdda7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-910]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-910")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "d9811ed8-34e4-5d7f-b1d7-292aee68b40d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-898]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-898")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "da078bb0-cbad-5a9f-ac2c-4e0a2b3968c1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-891]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-891")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "e30e99e2-29cd-5fe8-83fb-c5bf3bba56bc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-913]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-913")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "ee01a01e-b786-58ab-b30a-6c1349da0d3e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-887]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-887")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "f37d3656-5c7b-5a86-895c-1ce6ac7d0b04", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-890]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-890")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "f6e75d67-6165-5ae0-820f-8f317c258594", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-892]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-892")], .matchExpressions = []}}}}: +1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 1178344942689128518483290271691062493, .node = "testNode-89", .pods = [k8spolicy.PodReference{.name = "testPod-897", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 19760368924207003562558254411017190194, .node = "testNode-90", .pods = [k8spolicy.PodReference{.name = "testPod-902", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 30696003942255852472056292973602899239, .node = "testNode-91", .pods = [k8spolicy.PodReference{.name = "testPod-912", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 33359587595968169854985297462549429656, .node = "testNode-90", .pods = [k8spolicy.PodReference{.name = "testPod-908", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 42038013867875964634800215627609291329, .node = "testNode-89", .pods = [k8spolicy.PodReference{.name = "testPod-894", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 45612154749333732690597565647092664750, .node = "testNode-89", .pods = [k8spolicy.PodReference{.name = "testPod-899", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 52009440379722916658142443915196199246, .node = "testNode-91", .pods = [k8spolicy.PodReference{.name = "testPod-914", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 70992491464489868080869730044392129785, .node = "testNode-90", .pods = [k8spolicy.PodReference{.name = "testPod-901", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 84259068503017294792939377043180163050, .node = "testNode-91", .pods = [k8spolicy.PodReference{.name = "testPod-918", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 89811725033545612492079610937642093973, .node = "testNode-91", .pods = [k8spolicy.PodReference{.name = "testPod-911", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 91114571321615387922736567229588436793, .node = "testNode-89", .pods = [k8spolicy.PodReference{.name = "testPod-893", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 92219302508935630136277103931918883108, .node = "testNode-91", .pods = [k8spolicy.PodReference{.name = "testPod-916", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 135041047265651975128061812275763005174, .node = "testNode-89", .pods = [k8spolicy.PodReference{.name = "testPod-895", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 141871074522122280174954668525821765382, .node = "testNode-90", .pods = [k8spolicy.PodReference{.name = "testPod-907", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 145991167593158205719628765296274317234, .node = "testNode-90", .pods = [k8spolicy.PodReference{.name = "testPod-904", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 146514335626164145776762471203706759135, .node = "testNode-90", .pods = [k8spolicy.PodReference{.name = "testPod-903", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 152118823496539417069241801604520750522, .node = "testNode-91", .pods = [k8spolicy.PodReference{.name = "testPod-915", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 167937540479149022655611876447367135575, .node = "testNode-90", .pods = [k8spolicy.PodReference{.name = "testPod-906", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 187513040822242426735030527655057216737, .node = "testNode-90", .pods = [k8spolicy.PodReference{.name = "testPod-909", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 196723119965086899323601465812552178971, .node = "testNode-88", .pods = [k8spolicy.PodReference{.name = "testPod-888", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 205446523907170272045552917740213409360, .node = "testNode-90", .pods = [k8spolicy.PodReference{.name = "testPod-905", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 215760689775933383780284555101729753898, .node = "testNode-90", .pods = [k8spolicy.PodReference{.name = "testPod-900", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 221315335643040719959311860364246923884, .node = "testNode-91", .pods = [k8spolicy.PodReference{.name = "testPod-917", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 227401460221416637870671496134541522280, .node = "testNode-89", .pods = [k8spolicy.PodReference{.name = "testPod-896", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 230459972229469506074747214534223777899, .node = "testNode-88", .pods = [k8spolicy.PodReference{.name = "testPod-889", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 254519844389511459104264260487574445479, .node = "testNode-91", .pods = [k8spolicy.PodReference{.name = "testPod-910", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 289112906982018246948632444523046810637, .node = "testNode-89", .pods = [k8spolicy.PodReference{.name = "testPod-898", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 289810882421247943298090520412407032001, .node = "testNode-89", .pods = [k8spolicy.PodReference{.name = "testPod-891", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 301810568326366645774945846681323329212, .node = "testNode-91", .pods = [k8spolicy.PodReference{.name = "testPod-913", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 316364702912848143866612050141388606782, .node = "testNode-88", .pods = [k8spolicy.PodReference{.name = "testPod-887", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 323652542175413730260248681600058723076, .node = "testNode-89", .pods = [k8spolicy.PodReference{.name = "testPod-890", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 328191401992147305105980827494649267604, .node = "testNode-89", .pods = [k8spolicy.PodReference{.name = "testPod-892", .namespace = "testNamespace"}]}: +1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 1178344942689128518483290271691062493, .span = "testNode-89"}: +1
AppliedToGroupSpan{.appliedToGroup = 19760368924207003562558254411017190194, .span = "testNode-90"}: +1
AppliedToGroupSpan{.appliedToGroup = 30696003942255852472056292973602899239, .span = "testNode-91"}: +1
AppliedToGroupSpan{.appliedToGroup = 33359587595968169854985297462549429656, .span = "testNode-90"}: +1
AppliedToGroupSpan{.appliedToGroup = 42038013867875964634800215627609291329, .span = "testNode-89"}: +1
AppliedToGroupSpan{.appliedToGroup = 45612154749333732690597565647092664750, .span = "testNode-89"}: +1
AppliedToGroupSpan{.appliedToGroup = 52009440379722916658142443915196199246, .span = "testNode-91"}: +1
AppliedToGroupSpan{.appliedToGroup = 70992491464489868080869730044392129785, .span = "testNode-90"}: +1
AppliedToGroupSpan{.appliedToGroup = 84259068503017294792939377043180163050, .span = "testNode-91"}: +1
AppliedToGroupSpan{.appliedToGroup = 89811725033545612492079610937642093973, .span = "testNode-91"}: +1
AppliedToGroupSpan{.appliedToGroup = 91114571321615387922736567229588436793, .span = "testNode-89"}: +1
AppliedToGroupSpan{.appliedToGroup = 92219302508935630136277103931918883108, .span = "testNode-91"}: +1
AppliedToGroupSpan{.appliedToGroup = 135041047265651975128061812275763005174, .span = "testNode-89"}: +1
AppliedToGroupSpan{.appliedToGroup = 141871074522122280174954668525821765382, .span = "testNode-90"}: +1
AppliedToGroupSpan{.appliedToGroup = 145991167593158205719628765296274317234, .span = "testNode-90"}: +1
AppliedToGroupSpan{.appliedToGroup = 146514335626164145776762471203706759135, .span = "testNode-90"}: +1
AppliedToGroupSpan{.appliedToGroup = 152118823496539417069241801604520750522, .span = "testNode-91"}: +1
AppliedToGroupSpan{.appliedToGroup = 167937540479149022655611876447367135575, .span = "testNode-90"}: +1
AppliedToGroupSpan{.appliedToGroup = 187513040822242426735030527655057216737, .span = "testNode-90"}: +1
AppliedToGroupSpan{.appliedToGroup = 196723119965086899323601465812552178971, .span = "testNode-88"}: +1
AppliedToGroupSpan{.appliedToGroup = 205446523907170272045552917740213409360, .span = "testNode-90"}: +1
AppliedToGroupSpan{.appliedToGroup = 215760689775933383780284555101729753898, .span = "testNode-90"}: +1
AppliedToGroupSpan{.appliedToGroup = 221315335643040719959311860364246923884, .span = "testNode-91"}: +1
AppliedToGroupSpan{.appliedToGroup = 227401460221416637870671496134541522280, .span = "testNode-89"}: +1
AppliedToGroupSpan{.appliedToGroup = 230459972229469506074747214534223777899, .span = "testNode-88"}: +1
AppliedToGroupSpan{.appliedToGroup = 254519844389511459104264260487574445479, .span = "testNode-91"}: +1
AppliedToGroupSpan{.appliedToGroup = 289112906982018246948632444523046810637, .span = "testNode-89"}: +1
AppliedToGroupSpan{.appliedToGroup = 289810882421247943298090520412407032001, .span = "testNode-89"}: +1
AppliedToGroupSpan{.appliedToGroup = 301810568326366645774945846681323329212, .span = "testNode-91"}: +1
AppliedToGroupSpan{.appliedToGroup = 316364702912848143866612050141388606782, .span = "testNode-88"}: +1
AppliedToGroupSpan{.appliedToGroup = 323652542175413730260248681600058723076, .span = "testNode-89"}: +1
AppliedToGroupSpan{.appliedToGroup = 328191401992147305105980827494649267604, .span = "testNode-89"}: +1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-887"}, .name = "testNP-887", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [196723119965086899323601465812552178971], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [316364702912848143866612050141388606782]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-888"}, .name = "testNP-888", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [230459972229469506074747214534223777899], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [196723119965086899323601465812552178971]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-889"}, .name = "testNP-889", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [323652542175413730260248681600058723076], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [230459972229469506074747214534223777899]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-890"}, .name = "testNP-890", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [289810882421247943298090520412407032001], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [323652542175413730260248681600058723076]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-891"}, .name = "testNP-891", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [328191401992147305105980827494649267604], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [289810882421247943298090520412407032001]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-892"}, .name = "testNP-892", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [91114571321615387922736567229588436793], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [328191401992147305105980827494649267604]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-893"}, .name = "testNP-893", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [42038013867875964634800215627609291329], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [91114571321615387922736567229588436793]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-894"}, .name = "testNP-894", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [135041047265651975128061812275763005174], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [42038013867875964634800215627609291329]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-895"}, .name = "testNP-895", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [227401460221416637870671496134541522280], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [135041047265651975128061812275763005174]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-896"}, .name = "testNP-896", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [1178344942689128518483290271691062493], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [227401460221416637870671496134541522280]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-897"}, .name = "testNP-897", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [289112906982018246948632444523046810637], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [1178344942689128518483290271691062493]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-898"}, .name = "testNP-898", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [45612154749333732690597565647092664750], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [289112906982018246948632444523046810637]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-899"}, .name = "testNP-899", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [215760689775933383780284555101729753898], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [45612154749333732690597565647092664750]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-900"}, .name = "testNP-900", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [70992491464489868080869730044392129785], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [215760689775933383780284555101729753898]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-901"}, .name = "testNP-901", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [19760368924207003562558254411017190194], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [70992491464489868080869730044392129785]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-902"}, .name = "testNP-902", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [146514335626164145776762471203706759135], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [19760368924207003562558254411017190194]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-903"}, .name = "testNP-903", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [145991167593158205719628765296274317234], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [146514335626164145776762471203706759135]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-904"}, .name = "testNP-904", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [205446523907170272045552917740213409360], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [145991167593158205719628765296274317234]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-905"}, .name = "testNP-905", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [167937540479149022655611876447367135575], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [205446523907170272045552917740213409360]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-906"}, .name = "testNP-906", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [141871074522122280174954668525821765382], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [167937540479149022655611876447367135575]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-907"}, .name = "testNP-907", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [33359587595968169854985297462549429656], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [141871074522122280174954668525821765382]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-908"}, .name = "testNP-908", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [187513040822242426735030527655057216737], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [33359587595968169854985297462549429656]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-909"}, .name = "testNP-909", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [254519844389511459104264260487574445479], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [187513040822242426735030527655057216737]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-910"}, .name = "testNP-910", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [89811725033545612492079610937642093973], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [254519844389511459104264260487574445479]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-911"}, .name = "testNP-911", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [30696003942255852472056292973602899239], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [89811725033545612492079610937642093973]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-912"}, .name = "testNP-912", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [301810568326366645774945846681323329212], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [30696003942255852472056292973602899239]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-913"}, .name = "testNP-913", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [52009440379722916658142443915196199246], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [301810568326366645774945846681323329212]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-914"}, .name = "testNP-914", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [152118823496539417069241801604520750522], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [52009440379722916658142443915196199246]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-915"}, .name = "testNP-915", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [92219302508935630136277103931918883108], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [152118823496539417069241801604520750522]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-916"}, .name = "testNP-916", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [221315335643040719959311860364246923884], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [92219302508935630136277103931918883108]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-917"}, .name = "testNP-917", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [84259068503017294792939377043180163050], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [221315335643040719959311860364246923884]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-918"}, .name = "testNP-918", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [186339915324272850794860639806508927853], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [84259068503017294792939377043180163050]}: +1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-887", .policy = k8spolicy.UID{.uid = "testNP-887"}, .node = "testNode-88"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-888", .policy = k8spolicy.UID{.uid = "testNP-888"}, .node = "testNode-88"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-889", .policy = k8spolicy.UID{.uid = "testNP-889"}, .node = "testNode-88"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-890", .policy = k8spolicy.UID{.uid = "testNP-890"}, .node = "testNode-89"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-891", .policy = k8spolicy.UID{.uid = "testNP-891"}, .node = "testNode-89"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-892", .policy = k8spolicy.UID{.uid = "testNP-892"}, .node = "testNode-89"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-893", .policy = k8spolicy.UID{.uid = "testNP-893"}, .node = "testNode-89"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-894", .policy = k8spolicy.UID{.uid = "testNP-894"}, .node = "testNode-89"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-895", .policy = k8spolicy.UID{.uid = "testNP-895"}, .node = "testNode-89"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-896", .policy = k8spolicy.UID{.uid = "testNP-896"}, .node = "testNode-89"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-897", .policy = k8spolicy.UID{.uid = "testNP-897"}, .node = "testNode-89"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-898", .policy = k8spolicy.UID{.uid = "testNP-898"}, .node = "testNode-89"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-899", .policy = k8spolicy.UID{.uid = "testNP-899"}, .node = "testNode-89"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-900", .policy = k8spolicy.UID{.uid = "testNP-900"}, .node = "testNode-90"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-901", .policy = k8spolicy.UID{.uid = "testNP-901"}, .node = "testNode-90"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-902", .policy = k8spolicy.UID{.uid = "testNP-902"}, .node = "testNode-90"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-903", .policy = k8spolicy.UID{.uid = "testNP-903"}, .node = "testNode-90"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-904", .policy = k8spolicy.UID{.uid = "testNP-904"}, .node = "testNode-90"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-905", .policy = k8spolicy.UID{.uid = "testNP-905"}, .node = "testNode-90"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-906", .policy = k8spolicy.UID{.uid = "testNP-906"}, .node = "testNode-90"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-907", .policy = k8spolicy.UID{.uid = "testNP-907"}, .node = "testNode-90"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-908", .policy = k8spolicy.UID{.uid = "testNP-908"}, .node = "testNode-90"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-909", .policy = k8spolicy.UID{.uid = "testNP-909"}, .node = "testNode-90"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-910", .policy = k8spolicy.UID{.uid = "testNP-910"}, .node = "testNode-91"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-911", .policy = k8spolicy.UID{.uid = "testNP-911"}, .node = "testNode-91"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-912", .policy = k8spolicy.UID{.uid = "testNP-912"}, .node = "testNode-91"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-913", .policy = k8spolicy.UID{.uid = "testNP-913"}, .node = "testNode-91"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-914", .policy = k8spolicy.UID{.uid = "testNP-914"}, .node = "testNode-91"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-915", .policy = k8spolicy.UID{.uid = "testNP-915"}, .node = "testNode-91"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-916", .policy = k8spolicy.UID{.uid = "testNP-916"}, .node = "testNode-91"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-917", .policy = k8spolicy.UID{.uid = "testNP-917"}, .node = "testNode-91"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-918", .policy = k8spolicy.UID{.uid = "testNP-918"}, .node = "testNode-91"}: +1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 5335519368479388878137568144432503586, .address = "10.10.92.2"}: +1
AddressGroupAddress{.addressGroup = 8448728117876795021012337747928596438, .address = "10.10.92.5"}: +1
AddressGroupAddress{.addressGroup = 22644253725290928640231557611890804044, .address = "10.10.93.6"}: +1
AddressGroupAddress{.addressGroup = 23819598393183177975527376209301060749, .address = "10.10.92.6"}: +1
AddressGroupAddress{.addressGroup = 28035633820864827285289142082221939225, .address = "10.10.94.5"}: +1
AddressGroupAddress{.addressGroup = 41222766383973271318512058935010269125, .address = "10.10.95.1"}: +1
AddressGroupAddress{.addressGroup = 62131557931447129130973202157313119223, .address = "10.10.92.8"}: +1
AddressGroupAddress{.addressGroup = 67098069245097654131426564816705044690, .address = "10.10.93.2"}: +1
AddressGroupAddress{.addressGroup = 121943455377217233143452830986935511119, .address = "10.10.92.0"}: +1
AddressGroupAddress{.addressGroup = 142278977582764137450706381106654140015, .address = "10.10.93.5"}: +1
AddressGroupAddress{.addressGroup = 144679705734765771383424614329978934963, .address = "10.10.94.7"}: +1
AddressGroupAddress{.addressGroup = 150044942264458386719593437678749131156, .address = "10.10.92.1"}: +1
AddressGroupAddress{.addressGroup = 170180023383795290405935208413263291343, .address = "10.10.93.9"}: +1
AddressGroupAddress{.addressGroup = 182835475002275863146609398249234826144, .address = "10.10.92.9"}: +1
AddressGroupAddress{.addressGroup = 190441149640467033953620392360271644975, .address = "10.10.93.1"}: +1
AddressGroupAddress{.addressGroup = 197394531688979768514698467973151916378, .address = "10.10.94.6"}: +1
AddressGroupAddress{.addressGroup = 207484811570300099771179964418689917973, .address = "10.10.94.8"}: +1
AddressGroupAddress{.addressGroup = 215516683071444669454098825092112700210, .address = "10.10.93.0"}: +1
AddressGroupAddress{.addressGroup = 224568550930731558504236309638539404275, .address = "10.10.94.9"}: +1
AddressGroupAddress{.addressGroup = 226358369160067895483295188054720646819, .address = "10.10.94.0"}: +1
AddressGroupAddress{.addressGroup = 228976924987340901700564889195045382803, .address = "10.10.95.0"}: +1
AddressGroupAddress{.addressGroup = 232436588221897914260673175466484333579, .address = "10.10.93.4"}: +1
AddressGroupAddress{.addressGroup = 239716845774323234046385734049732776003, .address = "10.10.93.7"}: +1
AddressGroupAddress{.addressGroup = 246595944394700037348278069310233732609, .address = "10.10.92.3"}: +1
AddressGroupAddress{.addressGroup = 250995793919897570772577898982993705018, .address = "10.10.92.4"}: +1
AddressGroupAddress{.addressGroup = 257397377916205866993463781049357360571, .address = "10.10.92.7"}: +1
AddressGroupAddress{.addressGroup = 284276812696431317722329384651848990239, .address = "10.10.94.1"}: +1
AddressGroupAddress{.addressGroup = 285690536665355970054173881991793205113, .address = "10.10.93.8"}: +1
AddressGroupAddress{.addressGroup = 287850734721851701042837025825477490912, .address = "10.10.93.3"}: +1
AddressGroupAddress{.addressGroup = 306830314506015856176620586045625347230, .address = "10.10.94.4"}: +1
AddressGroupAddress{.addressGroup = 308245717831027817717477028421452060664, .address = "10.10.94.3"}: +1
AddressGroupAddress{.addressGroup = 331898218482394052943927654159430371627, .address = "10.10.94.2"}: +1
AddressGroupDescr:
AddressGroupDescr{.name = "0403956a-38b3-5303-807f-15089fc71b22", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-922]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-922")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "065b2a74-f9ff-50df-a81a-2c73d4b0bfd6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-925]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-925")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "11091fe7-de5c-5447-9a4c-798bf9ca054c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-936]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-936")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "11eb7cdf-3508-5ff9-8e09-41e573ddbc8d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-926]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-926")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "15177777-9707-58fb-9156-86d565a89a19", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-945]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-945")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "1f03374c-e2d1-5e42-bf57-27f78bf217c5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-951]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-951")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "2ebe1a50-8580-5c80-b944-cd3bf7b2d3f7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-928]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-928")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "327a9e3a-4ad5-5842-a95c-df59834e40d2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-932]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-932")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "5bbd7489-83af-58ec-b085-f1b12910a84f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-920]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-920")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "6b09ef30-cc39-54ff-8316-eaee4792d66f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-935]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-935")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "6cd84c3a-20eb-577a-83ab-6d8c386b56b3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-947]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-947")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "70e19acf-a83e-5c16-bd42-a45a4f48a194", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-921]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-921")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "80077af4-c0d0-5ca1-b0c5-b03ca4f7e3cf", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-939]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-939")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "898cd4e5-11a6-53d6-b5a9-a15a13cb03a0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-929]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-929")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "8f45a19b-25b8-53c9-bde8-660e583f892f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-931]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-931")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "9480cdcf-42f4-5145-936c-f142ac7d015a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-946]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-946")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "9c181f04-663a-5c47-83fc-ef4ba644e415", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-948]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-948")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "a22300db-2ae2-54df-afa2-0d2fc5bdd332", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-930]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-930")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "a8f25465-f134-52e0-bca1-5a9d16c463f3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-949]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-949")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "aa4b093f-ffd9-5490-9e4a-66b74d9c0ea3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-940]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-940")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "ac435a05-1fb1-50d4-bf31-20ac6ab2ea93", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-950]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-950")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "aedda896-4265-5fdc-8ca3-ff38691e7c0b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-934]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-934")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "b457c8ff-44a4-5b41-a4bd-c84d79505043", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-937]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-937")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "b984a6be-b45c-5405-ab16-d94c807b6601", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-923]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-923")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "bcd40813-2c4e-5f33-b964-8bcae036383a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-924]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-924")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "c1a4ee88-b63e-53c3-aeee-6461eda4ddbb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-927]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-927")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "d5ddb8fc-c0b8-5f52-a656-937f1314be1f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-941]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-941")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "d6edfef5-dedc-5d1d-8b89-9e59d603df79", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-938]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-938")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "d88e08f2-9454-5cc4-9d72-ac18e0f1f8e0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-933]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-933")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "e6d55e7a-684c-5439-af68-04096cd02c9e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-944]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-944")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "e7e5f73f-fa9d-50c2-9fc7-c4260b1e57f8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-943]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-943")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "f9b14591-2c15-52f1-b40b-7126f31ec92b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-942]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-942")], .matchExpressions = []}}}}: +1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 5335519368479388878137568144432503586, .node = "testNode-92"}: +1
AddressGroupSpan{.addressGroup = 8448728117876795021012337747928596438, .node = "testNode-92"}: +1
AddressGroupSpan{.addressGroup = 22644253725290928640231557611890804044, .node = "testNode-93"}: +1
AddressGroupSpan{.addressGroup = 23819598393183177975527376209301060749, .node = "testNode-92"}: +1
AddressGroupSpan{.addressGroup = 28035633820864827285289142082221939225, .node = "testNode-94"}: +1
AddressGroupSpan{.addressGroup = 41222766383973271318512058935010269125, .node = "testNode-95"}: +1
AddressGroupSpan{.addressGroup = 62131557931447129130973202157313119223, .node = "testNode-92"}: +1
AddressGroupSpan{.addressGroup = 67098069245097654131426564816705044690, .node = "testNode-93"}: +1
AddressGroupSpan{.addressGroup = 121943455377217233143452830986935511119, .node = "testNode-91"}: +1
AddressGroupSpan{.addressGroup = 142278977582764137450706381106654140015, .node = "testNode-93"}: +1
AddressGroupSpan{.addressGroup = 144679705734765771383424614329978934963, .node = "testNode-94"}: +1
AddressGroupSpan{.addressGroup = 150044942264458386719593437678749131156, .node = "testNode-92"}: +1
AddressGroupSpan{.addressGroup = 170180023383795290405935208413263291343, .node = "testNode-93"}: +1
AddressGroupSpan{.addressGroup = 182835475002275863146609398249234826144, .node = "testNode-92"}: +1
AddressGroupSpan{.addressGroup = 190441149640467033953620392360271644975, .node = "testNode-93"}: +1
AddressGroupSpan{.addressGroup = 197394531688979768514698467973151916378, .node = "testNode-94"}: +1
AddressGroupSpan{.addressGroup = 207484811570300099771179964418689917973, .node = "testNode-94"}: +1
AddressGroupSpan{.addressGroup = 215516683071444669454098825092112700210, .node = "testNode-92"}: +1
AddressGroupSpan{.addressGroup = 224568550930731558504236309638539404275, .node = "testNode-94"}: +1
AddressGroupSpan{.addressGroup = 226358369160067895483295188054720646819, .node = "testNode-93"}: +1
AddressGroupSpan{.addressGroup = 228976924987340901700564889195045382803, .node = "testNode-94"}: +1
AddressGroupSpan{.addressGroup = 232436588221897914260673175466484333579, .node = "testNode-93"}: +1
AddressGroupSpan{.addressGroup = 239716845774323234046385734049732776003, .node = "testNode-93"}: +1
AddressGroupSpan{.addressGroup = 246595944394700037348278069310233732609, .node = "testNode-92"}: +1
AddressGroupSpan{.addressGroup = 250995793919897570772577898982993705018, .node = "testNode-92"}: +1
AddressGroupSpan{.addressGroup = 257397377916205866993463781049357360571, .node = "testNode-92"}: +1
AddressGroupSpan{.addressGroup = 284276812696431317722329384651848990239, .node = "testNode-94"}: +1
AddressGroupSpan{.addressGroup = 285690536665355970054173881991793205113, .node = "testNode-93"}: +1
AddressGroupSpan{.addressGroup = 287850734721851701042837025825477490912, .node = "testNode-93"}: +1
AddressGroupSpan{.addressGroup = 306830314506015856176620586045625347230, .node = "testNode-94"}: +1
AddressGroupSpan{.addressGroup = 308245717831027817717477028421452060664, .node = "testNode-94"}: +1
AddressGroupSpan{.addressGroup = 331898218482394052943927654159430371627, .node = "testNode-94"}: +1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "0403956a-38b3-5303-807f-15089fc71b22", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-922]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-922")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "065b2a74-f9ff-50df-a81a-2c73d4b0bfd6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-925]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-925")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "11091fe7-de5c-5447-9a4c-798bf9ca054c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-936]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-936")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "11eb7cdf-3508-5ff9-8e09-41e573ddbc8d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-926]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-926")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "15177777-9707-58fb-9156-86d565a89a19", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-945]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-945")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "2ebe1a50-8580-5c80-b944-cd3bf7b2d3f7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-928]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-928")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "327a9e3a-4ad5-5842-a95c-df59834e40d2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-932]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-932")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "5bbd7489-83af-58ec-b085-f1b12910a84f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-920]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-920")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "6b09ef30-cc39-54ff-8316-eaee4792d66f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-935]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-935")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "6cd84c3a-20eb-577a-83ab-6d8c386b56b3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-947]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-947")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "70e19acf-a83e-5c16-bd42-a45a4f48a194", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-921]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-921")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "80077af4-c0d0-5ca1-b0c5-b03ca4f7e3cf", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-939]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-939")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "898cd4e5-11a6-53d6-b5a9-a15a13cb03a0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-929]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-929")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "8c2fc324-8113-5345-bf12-c53be5ee8b6d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-919]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-919")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "8f45a19b-25b8-53c9-bde8-660e583f892f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-931]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-931")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "9480cdcf-42f4-5145-936c-f142ac7d015a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-946]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-946")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "9c181f04-663a-5c47-83fc-ef4ba644e415", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-948]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-948")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "a22300db-2ae2-54df-afa2-0d2fc5bdd332", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-930]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-930")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "a8f25465-f134-52e0-bca1-5a9d16c463f3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-949]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-949")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "aa4b093f-ffd9-5490-9e4a-66b74d9c0ea3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-940]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-940")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "ac435a05-1fb1-50d4-bf31-20ac6ab2ea93", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-950]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-950")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "aedda896-4265-5fdc-8ca3-ff38691e7c0b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-934]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-934")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "b457c8ff-44a4-5b41-a4bd-c84d79505043", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-937]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-937")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "b984a6be-b45c-5405-ab16-d94c807b6601", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-923]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-923")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "bcd40813-2c4e-5f33-b964-8bcae036383a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-924]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-924")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "c1a4ee88-b63e-53c3-aeee-6461eda4ddbb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-927]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-927")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "d5ddb8fc-c0b8-5f52-a656-937f1314be1f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-941]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-941")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "d6edfef5-dedc-5d1d-8b89-9e59d603df79", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-938]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-938")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "d88e08f2-9454-5cc4-9d72-ac18e0f1f8e0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-933]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-933")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "e6d55e7a-684c-5439-af68-04096cd02c9e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-944]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-944")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "e7e5f73f-fa9d-50c2-9fc7-c4260b1e57f8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-943]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-943")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "f9b14591-2c15-52f1-b40b-7126f31ec92b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-942]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-942")], .matchExpressions = []}}}}: +1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 5335519368479388878137568144432503586, .node = "testNode-92", .pods = [k8spolicy.PodReference{.name = "testPod-922", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 8448728117876795021012337747928596438, .node = "testNode-92", .pods = [k8spolicy.PodReference{.name = "testPod-925", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 22644253725290928640231557611890804044, .node = "testNode-93", .pods = [k8spolicy.PodReference{.name = "testPod-936", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 23819598393183177975527376209301060749, .node = "testNode-92", .pods = [k8spolicy.PodReference{.name = "testPod-926", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 28035633820864827285289142082221939225, .node = "testNode-94", .pods = [k8spolicy.PodReference{.name = "testPod-945", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 62131557931447129130973202157313119223, .node = "testNode-92", .pods = [k8spolicy.PodReference{.name = "testPod-928", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 67098069245097654131426564816705044690, .node = "testNode-93", .pods = [k8spolicy.PodReference{.name = "testPod-932", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 121943455377217233143452830986935511119, .node = "testNode-92", .pods = [k8spolicy.PodReference{.name = "testPod-920", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 142278977582764137450706381106654140015, .node = "testNode-93", .pods = [k8spolicy.PodReference{.name = "testPod-935", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 144679705734765771383424614329978934963, .node = "testNode-94", .pods = [k8spolicy.PodReference{.name = "testPod-947", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 150044942264458386719593437678749131156, .node = "testNode-92", .pods = [k8spolicy.PodReference{.name = "testPod-921", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 170180023383795290405935208413263291343, .node = "testNode-93", .pods = [k8spolicy.PodReference{.name = "testPod-939", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 182835475002275863146609398249234826144, .node = "testNode-92", .pods = [k8spolicy.PodReference{.name = "testPod-929", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 186339915324272850794860639806508927853, .node = "testNode-91", .pods = [k8spolicy.PodReference{.name = "testPod-919", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 190441149640467033953620392360271644975, .node = "testNode-93", .pods = [k8spolicy.PodReference{.name = "testPod-931", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 197394531688979768514698467973151916378, .node = "testNode-94", .pods = [k8spolicy.PodReference{.name = "testPod-946", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 207484811570300099771179964418689917973, .node = "testNode-94", .pods = [k8spolicy.PodReference{.name = "testPod-948", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 215516683071444669454098825092112700210, .node = "testNode-93", .pods = [k8spolicy.PodReference{.name = "testPod-930", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 224568550930731558504236309638539404275, .node = "testNode-94", .pods = [k8spolicy.PodReference{.name = "testPod-949", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 226358369160067895483295188054720646819, .node = "testNode-94", .pods = [k8spolicy.PodReference{.name = "testPod-940", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 228976924987340901700564889195045382803, .node = "testNode-95", .pods = [k8spolicy.PodReference{.name = "testPod-950", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 232436588221897914260673175466484333579, .node = "testNode-93", .pods = [k8spolicy.PodReference{.name = "testPod-934", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 239716845774323234046385734049732776003, .node = "testNode-93", .pods = [k8spolicy.PodReference{.name = "testPod-937", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 246595944394700037348278069310233732609, .node = "testNode-92", .pods = [k8spolicy.PodReference{.name = "testPod-923", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 250995793919897570772577898982993705018, .node = "testNode-92", .pods = [k8spolicy.PodReference{.name = "testPod-924", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 257397377916205866993463781049357360571, .node = "testNode-92", .pods = [k8spolicy.PodReference{.name = "testPod-927", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 284276812696431317722329384651848990239, .node = "testNode-94", .pods = [k8spolicy.PodReference{.name = "testPod-941", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 285690536665355970054173881991793205113, .node = "testNode-93", .pods = [k8spolicy.PodReference{.name = "testPod-938", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 287850734721851701042837025825477490912, .node = "testNode-93", .pods = [k8spolicy.PodReference{.name = "testPod-933", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 306830314506015856176620586045625347230, .node = "testNode-94", .pods = [k8spolicy.PodReference{.name = "testPod-944", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 308245717831027817717477028421452060664, .node = "testNode-94", .pods = [k8spolicy.PodReference{.name = "testPod-943", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 331898218482394052943927654159430371627, .node = "testNode-94", .pods = [k8spolicy.PodReference{.name = "testPod-942", .namespace = "testNamespace"}]}: +1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 5335519368479388878137568144432503586, .span = "testNode-92"}: +1
AppliedToGroupSpan{.appliedToGroup = 8448728117876795021012337747928596438, .span = "testNode-92"}: +1
AppliedToGroupSpan{.appliedToGroup = 22644253725290928640231557611890804044, .span = "testNode-93"}: +1
AppliedToGroupSpan{.appliedToGroup = 23819598393183177975527376209301060749, .span = "testNode-92"}: +1
AppliedToGroupSpan{.appliedToGroup = 28035633820864827285289142082221939225, .span = "testNode-94"}: +1
AppliedToGroupSpan{.appliedToGroup = 62131557931447129130973202157313119223, .span = "testNode-92"}: +1
AppliedToGroupSpan{.appliedToGroup = 67098069245097654131426564816705044690, .span = "testNode-93"}: +1
AppliedToGroupSpan{.appliedToGroup = 121943455377217233143452830986935511119, .span = "testNode-92"}: +1
AppliedToGroupSpan{.appliedToGroup = 142278977582764137450706381106654140015, .span = "testNode-93"}: +1
AppliedToGroupSpan{.appliedToGroup = 144679705734765771383424614329978934963, .span = "testNode-94"}: +1
AppliedToGroupSpan{.appliedToGroup = 150044942264458386719593437678749131156, .span = "testNode-92"}: +1
AppliedToGroupSpan{.appliedToGroup = 170180023383795290405935208413263291343, .span = "testNode-93"}: +1
AppliedToGroupSpan{.appliedToGroup = 182835475002275863146609398249234826144, .span = "testNode-92"}: +1
AppliedToGroupSpan{.appliedToGroup = 186339915324272850794860639806508927853, .span = "testNode-91"}: +1
AppliedToGroupSpan{.appliedToGroup = 190441149640467033953620392360271644975, .span = "testNode-93"}: +1
AppliedToGroupSpan{.appliedToGroup = 197394531688979768514698467973151916378, .span = "testNode-94"}: +1
AppliedToGroupSpan{.appliedToGroup = 207484811570300099771179964418689917973, .span = "testNode-94"}: +1
AppliedToGroupSpan{.appliedToGroup = 215516683071444669454098825092112700210, .span = "testNode-93"}: +1
AppliedToGroupSpan{.appliedToGroup = 224568550930731558504236309638539404275, .span = "testNode-94"}: +1
AppliedToGroupSpan{.appliedToGroup = 226358369160067895483295188054720646819, .span = "testNode-94"}: +1
AppliedToGroupSpan{.appliedToGroup = 228976924987340901700564889195045382803, .span = "testNode-95"}: +1
AppliedToGroupSpan{.appliedToGroup = 232436588221897914260673175466484333579, .span = "testNode-93"}: +1
AppliedToGroupSpan{.appliedToGroup = 239716845774323234046385734049732776003, .span = "testNode-93"}: +1
AppliedToGroupSpan{.appliedToGroup = 246595944394700037348278069310233732609, .span = "testNode-92"}: +1
AppliedToGroupSpan{.appliedToGroup = 250995793919897570772577898982993705018, .span = "testNode-92"}: +1
AppliedToGroupSpan{.appliedToGroup = 257397377916205866993463781049357360571, .span = "testNode-92"}: +1
AppliedToGroupSpan{.appliedToGroup = 284276812696431317722329384651848990239, .span = "testNode-94"}: +1
AppliedToGroupSpan{.appliedToGroup = 285690536665355970054173881991793205113, .span = "testNode-93"}: +1
AppliedToGroupSpan{.appliedToGroup = 287850734721851701042837025825477490912, .span = "testNode-93"}: +1
AppliedToGroupSpan{.appliedToGroup = 306830314506015856176620586045625347230, .span = "testNode-94"}: +1
AppliedToGroupSpan{.appliedToGroup = 308245717831027817717477028421452060664, .span = "testNode-94"}: +1
AppliedToGroupSpan{.appliedToGroup = 331898218482394052943927654159430371627, .span = "testNode-94"}: +1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-919"}, .name = "testNP-919", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [121943455377217233143452830986935511119], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [186339915324272850794860639806508927853]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-920"}, .name = "testNP-920", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [150044942264458386719593437678749131156], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [121943455377217233143452830986935511119]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-921"}, .name = "testNP-921", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [5335519368479388878137568144432503586], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [150044942264458386719593437678749131156]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-922"}, .name = "testNP-922", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [246595944394700037348278069310233732609], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [5335519368479388878137568144432503586]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-923"}, .name = "testNP-923", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [250995793919897570772577898982993705018], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [246595944394700037348278069310233732609]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-924"}, .name = "testNP-924", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [8448728117876795021012337747928596438], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [250995793919897570772577898982993705018]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-925"}, .name = "testNP-925", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [23819598393183177975527376209301060749], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [8448728117876795021012337747928596438]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-926"}, .name = "testNP-926", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [257397377916205866993463781049357360571], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [23819598393183177975527376209301060749]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-927"}, .name = "testNP-927", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [62131557931447129130973202157313119223], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [257397377916205866993463781049357360571]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-928"}, .name = "testNP-928", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [182835475002275863146609398249234826144], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [62131557931447129130973202157313119223]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-929"}, .name = "testNP-929", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [215516683071444669454098825092112700210], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [182835475002275863146609398249234826144]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-930"}, .name = "testNP-930", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [190441149640467033953620392360271644975], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [215516683071444669454098825092112700210]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-931"}, .name = "testNP-931", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [67098069245097654131426564816705044690], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [190441149640467033953620392360271644975]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-932"}, .name = "testNP-932", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [287850734721851701042837025825477490912], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [67098069245097654131426564816705044690]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-933"}, .name = "testNP-933", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [232436588221897914260673175466484333579], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [287850734721851701042837025825477490912]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-934"}, .name = "testNP-934", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [142278977582764137450706381106654140015], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [232436588221897914260673175466484333579]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-935"}, .name = "testNP-935", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [22644253725290928640231557611890804044], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [142278977582764137450706381106654140015]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-936"}, .name = "testNP-936", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [239716845774323234046385734049732776003], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [22644253725290928640231557611890804044]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-937"}, .name = "testNP-937", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [285690536665355970054173881991793205113], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [239716845774323234046385734049732776003]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-938"}, .name = "testNP-938", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [170180023383795290405935208413263291343], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [285690536665355970054173881991793205113]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-939"}, .name = "testNP-939", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [226358369160067895483295188054720646819], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [170180023383795290405935208413263291343]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-940"}, .name = "testNP-940", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [284276812696431317722329384651848990239], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [226358369160067895483295188054720646819]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-941"}, .name = "testNP-941", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [331898218482394052943927654159430371627], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [284276812696431317722329384651848990239]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-942"}, .name = "testNP-942", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [308245717831027817717477028421452060664], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [331898218482394052943927654159430371627]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-943"}, .name = "testNP-943", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [306830314506015856176620586045625347230], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [308245717831027817717477028421452060664]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-944"}, .name = "testNP-944", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [28035633820864827285289142082221939225], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [306830314506015856176620586045625347230]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-945"}, .name = "testNP-945", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [197394531688979768514698467973151916378], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [28035633820864827285289142082221939225]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-946"}, .name = "testNP-946", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [144679705734765771383424614329978934963], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [197394531688979768514698467973151916378]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-947"}, .name = "testNP-947", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [207484811570300099771179964418689917973], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [144679705734765771383424614329978934963]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-948"}, .name = "testNP-948", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [224568550930731558504236309638539404275], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [207484811570300099771179964418689917973]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-949"}, .name = "testNP-949", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [228976924987340901700564889195045382803], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [224568550930731558504236309638539404275]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-950"}, .name = "testNP-950", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [41222766383973271318512058935010269125], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [228976924987340901700564889195045382803]}: +1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-919", .policy = k8spolicy.UID{.uid = "testNP-919"}, .node = "testNode-91"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-920", .policy = k8spolicy.UID{.uid = "testNP-920"}, .node = "testNode-92"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-921", .policy = k8spolicy.UID{.uid = "testNP-921"}, .node = "testNode-92"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-922", .policy = k8spolicy.UID{.uid = "testNP-922"}, .node = "testNode-92"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-923", .policy = k8spolicy.UID{.uid = "testNP-923"}, .node = "testNode-92"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-924", .policy = k8spolicy.UID{.uid = "testNP-924"}, .node = "testNode-92"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-925", .policy = k8spolicy.UID{.uid = "testNP-925"}, .node = "testNode-92"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-926", .policy = k8spolicy.UID{.uid = "testNP-926"}, .node = "testNode-92"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-927", .policy = k8spolicy.UID{.uid = "testNP-927"}, .node = "testNode-92"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-928", .policy = k8spolicy.UID{.uid = "testNP-928"}, .node = "testNode-92"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-929", .policy = k8spolicy.UID{.uid = "testNP-929"}, .node = "testNode-92"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-930", .policy = k8spolicy.UID{.uid = "testNP-930"}, .node = "testNode-93"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-931", .policy = k8spolicy.UID{.uid = "testNP-931"}, .node = "testNode-93"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-932", .policy = k8spolicy.UID{.uid = "testNP-932"}, .node = "testNode-93"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-933", .policy = k8spolicy.UID{.uid = "testNP-933"}, .node = "testNode-93"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-934", .policy = k8spolicy.UID{.uid = "testNP-934"}, .node = "testNode-93"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-935", .policy = k8spolicy.UID{.uid = "testNP-935"}, .node = "testNode-93"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-936", .policy = k8spolicy.UID{.uid = "testNP-936"}, .node = "testNode-93"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-937", .policy = k8spolicy.UID{.uid = "testNP-937"}, .node = "testNode-93"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-938", .policy = k8spolicy.UID{.uid = "testNP-938"}, .node = "testNode-93"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-939", .policy = k8spolicy.UID{.uid = "testNP-939"}, .node = "testNode-93"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-940", .policy = k8spolicy.UID{.uid = "testNP-940"}, .node = "testNode-94"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-941", .policy = k8spolicy.UID{.uid = "testNP-941"}, .node = "testNode-94"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-942", .policy = k8spolicy.UID{.uid = "testNP-942"}, .node = "testNode-94"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-943", .policy = k8spolicy.UID{.uid = "testNP-943"}, .node = "testNode-94"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-944", .policy = k8spolicy.UID{.uid = "testNP-944"}, .node = "testNode-94"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-945", .policy = k8spolicy.UID{.uid = "testNP-945"}, .node = "testNode-94"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-946", .policy = k8spolicy.UID{.uid = "testNP-946"}, .node = "testNode-94"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-947", .policy = k8spolicy.UID{.uid = "testNP-947"}, .node = "testNode-94"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-948", .policy = k8spolicy.UID{.uid = "testNP-948"}, .node = "testNode-94"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-949", .policy = k8spolicy.UID{.uid = "testNP-949"}, .node = "testNode-94"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-950", .policy = k8spolicy.UID{.uid = "testNP-950"}, .node = "testNode-95"}: +1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 6955428896405004454325893922592310381, .address = "10.10.97.7"}: +1
AddressGroupAddress{.addressGroup = 12977617920415401539443967260442034781, .address = "10.10.96.3"}: +1
AddressGroupAddress{.addressGroup = 28067490434767610700932031817057124467, .address = "10.10.97.8"}: +1
AddressGroupAddress{.addressGroup = 58580881636511900247074240901258357817, .address = "10.10.98.3"}: +1
AddressGroupAddress{.addressGroup = 78694635668396274531784444203009793713, .address = "10.10.95.8"}: +1
AddressGroupAddress{.addressGroup = 82828131887249884533723701257438661146, .address = "10.10.97.2"}: +1
AddressGroupAddress{.addressGroup = 90529116978299336604867041053592005814, .address = "10.10.96.7"}: +1
AddressGroupAddress{.addressGroup = 91241772504908683776781434872618921585, .address = "10.10.95.2"}: +1
AddressGroupAddress{.addressGroup = 97397905553662350940973787766583353241, .address = "10.10.98.2"}: +1
AddressGroupAddress{.addressGroup = 100444576583123224799837278022147750242, .address = "10.10.95.3"}: +1
AddressGroupAddress{.addressGroup = 103776551732556865730733822187495263396, .address = "10.10.96.9"}: +1
AddressGroupAddress{.addressGroup = 122750137078830765493163989058678993709, .address = "10.10.97.4"}: +1
AddressGroupAddress{.addressGroup = 124305456095363608261833557770710852073, .address = "10.10.98.1"}: +1
AddressGroupAddress{.addressGroup = 135970361690114177319395643735779157372, .address = "10.10.95.4"}: +1
AddressGroupAddress{.addressGroup = 139257722318377983010910379350606130564, .address = "10.10.95.7"}: +1
AddressGroupAddress{.addressGroup = 147628045017224055507693129211310379936, .address = "10.10.97.9"}: +1
AddressGroupAddress{.addressGroup = 150281684632617380914825377053888167844, .address = "10.10.96.4"}: +1
AddressGroupAddress{.addressGroup = 157832453976694039397936153148739564370, .address = "10.10.95.9"}: +1
AddressGroupAddress{.addressGroup = 165955253148851010787037661879322972000, .address = "10.10.96.0"}: +1
AddressGroupAddress{.addressGroup = 205320738554122795774216144233380572324, .address = "10.10.98.0"}: +1
AddressGroupAddress{.addressGroup = 208958934596764046016617930950810457235, .address = "10.10.96.8"}: +1
AddressGroupAddress{.addressGroup = 212018859850742054076739919732658823861, .address = "10.10.95.6"}: +1
AddressGroupAddress{.addressGroup = 226474586797790666991108951146544244350, .address = "10.10.97.0"}: +1
AddressGroupAddress{.addressGroup = 238530022762936351723332763909404448473, .address = "10.10.95.5"}: +1
AddressGroupAddress{.addressGroup = 241933318919899387164284680472992336446, .address = "10.10.97.6"}: +1
AddressGroupAddress{.addressGroup = 265312899403064056151572050612998779018, .address = "10.10.96.6"}: +1
AddressGroupAddress{.addressGroup = 276878493953706068313013360845652423508, .address = "10.10.96.5"}: +1
AddressGroupAddress{.addressGroup = 294583558913471611450879899960657037137, .address = "10.10.97.3"}: +1
AddressGroupAddress{.addressGroup = 328353484843600003650135779002917661024, .address = "10.10.97.1"}: +1
AddressGroupAddress{.addressGroup = 329065738897500730756863593153986748985, .address = "10.10.96.1"}: +1
AddressGroupAddress{.addressGroup = 339317329006400214262769459344852923417, .address = "10.10.96.2"}: +1
AddressGroupAddress{.addressGroup = 339363722217751649784544708855688890761, .address = "10.10.97.5"}: +1
AddressGroupDescr:
AddressGroupDescr{.name = "053b911e-f779-5223-88ad-adeacd6ac46d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-977]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-977")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "09c365f6-b998-5c6a-ba07-88aa29b9025d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-963]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-963")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "151d9a1e-9621-5138-bcb3-e1ad3cbd4073", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-978]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-978")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "2c124475-1012-52ee-b743-a9c0fe4b2c39", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-983]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-983")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "3b340918-7875-5eed-af0e-e2d05a2f5eb1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-958]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-958")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "3e501e31-92ce-52dc-8056-5a4609d68a1a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-972]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-972")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "441b4612-b19a-57d1-a51d-987a11f82cb6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-967]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-967")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "44a486b4-08fa-5d04-8395-ae9f858dae71", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-952]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-952")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "4946277f-112c-5c0a-b567-7dbf39c25f99", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-982]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-982")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "4b90ebf9-b9f9-5e5c-bc9c-bb4fc077b962", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-953]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-953")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "4e12a308-a5b9-5a87-8bf5-007597bc8ca4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-969]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-969")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "5c58d104-083b-5905-becc-0fb8a350b32d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-974]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-974")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "5d845c29-e8a6-5b71-a48a-d6f40ef0a1e9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-981]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-981")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "664af069-b28d-5f5d-976a-a6316cf5a57c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-954]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-954")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "68c40fce-3187-554d-a351-8dfd5702ad84", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-957]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-957")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "6f102093-a719-56d9-9715-f985470613a0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-979]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-979")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "710f331c-7055-5ef5-9a3e-e183984b3fa4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-964]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-964")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "76bd6cc8-46e5-5304-886c-914de4703352", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-959]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-959")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "7cd9d1b3-9a5b-5a9e-83d0-e291784a8f60", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-960]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-960")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "9a7755fa-d2bf-5708-bdd0-2558b81deca4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-980]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-980")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "9d3406e4-cce3-549e-bf12-0dbf95c6d493", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-968]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-968")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "9f8158db-4ae3-5689-9fc7-d219f8de62b5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-956]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-956")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "aa616b38-d052-517d-abcd-a27f5a00267e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-970]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-970")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "b373361a-ddd5-5382-932b-3e85eaeb56d9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-955]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-955")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "b602a98f-75dd-5ff8-bca1-34374622ca3e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-976]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-976")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "c79967df-d6ae-5625-b615-50e91452308a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-966]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-966")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "d04cdbb6-065a-5ae0-84db-719000c6f354", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-965]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-965")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "dd9ebacf-29d0-5cfd-adb2-e690e57fc751", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-973]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-973")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "f70694b4-9442-56ed-80aa-096d94a52960", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-971]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-971")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "f78fc18a-9f59-51f8-a488-261ae966e239", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-961]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-961")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "ff4623f5-131b-5aca-a81a-3ecf31283419", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-962]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-962")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "ff4f1351-b9d3-5650-8c86-db65f6388989", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-975]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-975")], .matchExpressions = []}}}}: +1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 6955428896405004454325893922592310381, .node = "testNode-97"}: +1
AddressGroupSpan{.addressGroup = 12977617920415401539443967260442034781, .node = "testNode-96"}: +1
AddressGroupSpan{.addressGroup = 28067490434767610700932031817057124467, .node = "testNode-97"}: +1
AddressGroupSpan{.addressGroup = 58580881636511900247074240901258357817, .node = "testNode-98"}: +1
AddressGroupSpan{.addressGroup = 78694635668396274531784444203009793713, .node = "testNode-95"}: +1
AddressGroupSpan{.addressGroup = 82828131887249884533723701257438661146, .node = "testNode-97"}: +1
AddressGroupSpan{.addressGroup = 90529116978299336604867041053592005814, .node = "testNode-96"}: +1
AddressGroupSpan{.addressGroup = 91241772504908683776781434872618921585, .node = "testNode-95"}: +1
AddressGroupSpan{.addressGroup = 97397905553662350940973787766583353241, .node = "testNode-98"}: +1
AddressGroupSpan{.addressGroup = 100444576583123224799837278022147750242, .node = "testNode-95"}: +1
AddressGroupSpan{.addressGroup = 103776551732556865730733822187495263396, .node = "testNode-96"}: +1
AddressGroupSpan{.addressGroup = 122750137078830765493163989058678993709, .node = "testNode-97"}: +1
AddressGroupSpan{.addressGroup = 124305456095363608261833557770710852073, .node = "testNode-98"}: +1
AddressGroupSpan{.addressGroup = 135970361690114177319395643735779157372, .node = "testNode-95"}: +1
AddressGroupSpan{.addressGroup = 139257722318377983010910379350606130564, .node = "testNode-95"}: +1
AddressGroupSpan{.addressGroup = 147628045017224055507693129211310379936, .node = "testNode-97"}: +1
AddressGroupSpan{.addressGroup = 150281684632617380914825377053888167844, .node = "testNode-96"}: +1
AddressGroupSpan{.addressGroup = 157832453976694039397936153148739564370, .node = "testNode-95"}: +1
AddressGroupSpan{.addressGroup = 165955253148851010787037661879322972000, .node = "testNode-95"}: +1
AddressGroupSpan{.addressGroup = 205320738554122795774216144233380572324, .node = "testNode-97"}: +1
AddressGroupSpan{.addressGroup = 208958934596764046016617930950810457235, .node = "testNode-96"}: +1
AddressGroupSpan{.addressGroup = 212018859850742054076739919732658823861, .node = "testNode-95"}: +1
AddressGroupSpan{.addressGroup = 226474586797790666991108951146544244350, .node = "testNode-96"}: +1
AddressGroupSpan{.addressGroup = 238530022762936351723332763909404448473, .node = "testNode-95"}: +1
AddressGroupSpan{.addressGroup = 241933318919899387164284680472992336446, .node = "testNode-97"}: +1
AddressGroupSpan{.addressGroup = 265312899403064056151572050612998779018, .node = "testNode-96"}: +1
AddressGroupSpan{.addressGroup = 276878493953706068313013360845652423508, .node = "testNode-96"}: +1
AddressGroupSpan{.addressGroup = 294583558913471611450879899960657037137, .node = "testNode-97"}: +1
AddressGroupSpan{.addressGroup = 328353484843600003650135779002917661024, .node = "testNode-97"}: +1
AddressGroupSpan{.addressGroup = 329065738897500730756863593153986748985, .node = "testNode-96"}: +1
AddressGroupSpan{.addressGroup = 339317329006400214262769459344852923417, .node = "testNode-96"}: +1
AddressGroupSpan{.addressGroup = 339363722217751649784544708855688890761, .node = "testNode-97"}: +1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "053b911e-f779-5223-88ad-adeacd6ac46d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-977]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-977")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "09c365f6-b998-5c6a-ba07-88aa29b9025d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-963]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-963")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "151d9a1e-9621-5138-bcb3-e1ad3cbd4073", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-978]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-978")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "1f03374c-e2d1-5e42-bf57-27f78bf217c5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-951]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-951")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "3b340918-7875-5eed-af0e-e2d05a2f5eb1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-958]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-958")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "3e501e31-92ce-52dc-8056-5a4609d68a1a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-972]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-972")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "441b4612-b19a-57d1-a51d-987a11f82cb6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-967]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-967")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "44a486b4-08fa-5d04-8395-ae9f858dae71", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-952]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-952")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "4946277f-112c-5c0a-b567-7dbf39c25f99", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-982]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-982")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "4b90ebf9-b9f9-5e5c-bc9c-bb4fc077b962", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-953]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-953")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "4e12a308-a5b9-5a87-8bf5-007597bc8ca4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-969]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-969")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "5c58d104-083b-5905-becc-0fb8a350b32d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-974]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-974")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "5d845c29-e8a6-5b71-a48a-d6f40ef0a1e9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-981]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-981")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "664af069-b28d-5f5d-976a-a6316cf5a57c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-954]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-954")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "68c40fce-3187-554d-a351-8dfd5702ad84", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-957]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-957")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "6f102093-a719-56d9-9715-f985470613a0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-979]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-979")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "710f331c-7055-5ef5-9a3e-e183984b3fa4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-964]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-964")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "76bd6cc8-46e5-5304-886c-914de4703352", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-959]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-959")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "7cd9d1b3-9a5b-5a9e-83d0-e291784a8f60", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-960]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-960")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "9a7755fa-d2bf-5708-bdd0-2558b81deca4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-980]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-980")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "9d3406e4-cce3-549e-bf12-0dbf95c6d493", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-968]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-968")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "9f8158db-4ae3-5689-9fc7-d219f8de62b5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-956]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-956")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "aa616b38-d052-517d-abcd-a27f5a00267e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-970]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-970")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "b373361a-ddd5-5382-932b-3e85eaeb56d9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-955]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-955")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "b602a98f-75dd-5ff8-bca1-34374622ca3e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-976]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-976")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "c79967df-d6ae-5625-b615-50e91452308a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-966]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-966")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "d04cdbb6-065a-5ae0-84db-719000c6f354", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-965]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-965")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "dd9ebacf-29d0-5cfd-adb2-e690e57fc751", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-973]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-973")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "f70694b4-9442-56ed-80aa-096d94a52960", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-971]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-971")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "f78fc18a-9f59-51f8-a488-261ae966e239", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-961]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-961")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "ff4623f5-131b-5aca-a81a-3ecf31283419", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-962]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-962")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "ff4f1351-b9d3-5650-8c86-db65f6388989", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-975]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-975")], .matchExpressions = []}}}}: +1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 6955428896405004454325893922592310381, .node = "testNode-97", .pods = [k8spolicy.PodReference{.name = "testPod-977", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 12977617920415401539443967260442034781, .node = "testNode-96", .pods = [k8spolicy.PodReference{.name = "testPod-963", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 28067490434767610700932031817057124467, .node = "testNode-97", .pods = [k8spolicy.PodReference{.name = "testPod-978", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 41222766383973271318512058935010269125, .node = "testNode-95", .pods = [k8spolicy.PodReference{.name = "testPod-951", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 78694635668396274531784444203009793713, .node = "testNode-95", .pods = [k8spolicy.PodReference{.name = "testPod-958", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 82828131887249884533723701257438661146, .node = "testNode-97", .pods = [k8spolicy.PodReference{.name = "testPod-972", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 90529116978299336604867041053592005814, .node = "testNode-96", .pods = [k8spolicy.PodReference{.name = "testPod-967", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 91241772504908683776781434872618921585, .node = "testNode-95", .pods = [k8spolicy.PodReference{.name = "testPod-952", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 97397905553662350940973787766583353241, .node = "testNode-98", .pods = [k8spolicy.PodReference{.name = "testPod-982", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 100444576583123224799837278022147750242, .node = "testNode-95", .pods = [k8spolicy.PodReference{.name = "testPod-953", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 103776551732556865730733822187495263396, .node = "testNode-96", .pods = [k8spolicy.PodReference{.name = "testPod-969", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 122750137078830765493163989058678993709, .node = "testNode-97", .pods = [k8spolicy.PodReference{.name = "testPod-974", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 124305456095363608261833557770710852073, .node = "testNode-98", .pods = [k8spolicy.PodReference{.name = "testPod-981", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 135970361690114177319395643735779157372, .node = "testNode-95", .pods = [k8spolicy.PodReference{.name = "testPod-954", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 139257722318377983010910379350606130564, .node = "testNode-95", .pods = [k8spolicy.PodReference{.name = "testPod-957", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 147628045017224055507693129211310379936, .node = "testNode-97", .pods = [k8spolicy.PodReference{.name = "testPod-979", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 150281684632617380914825377053888167844, .node = "testNode-96", .pods = [k8spolicy.PodReference{.name = "testPod-964", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 157832453976694039397936153148739564370, .node = "testNode-95", .pods = [k8spolicy.PodReference{.name = "testPod-959", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 165955253148851010787037661879322972000, .node = "testNode-96", .pods = [k8spolicy.PodReference{.name = "testPod-960", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 205320738554122795774216144233380572324, .node = "testNode-98", .pods = [k8spolicy.PodReference{.name = "testPod-980", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 208958934596764046016617930950810457235, .node = "testNode-96", .pods = [k8spolicy.PodReference{.name = "testPod-968", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 212018859850742054076739919732658823861, .node = "testNode-95", .pods = [k8spolicy.PodReference{.name = "testPod-956", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 226474586797790666991108951146544244350, .node = "testNode-97", .pods = [k8spolicy.PodReference{.name = "testPod-970", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 238530022762936351723332763909404448473, .node = "testNode-95", .pods = [k8spolicy.PodReference{.name = "testPod-955", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 241933318919899387164284680472992336446, .node = "testNode-97", .pods = [k8spolicy.PodReference{.name = "testPod-976", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 265312899403064056151572050612998779018, .node = "testNode-96", .pods = [k8spolicy.PodReference{.name = "testPod-966", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 276878493953706068313013360845652423508, .node = "testNode-96", .pods = [k8spolicy.PodReference{.name = "testPod-965", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 294583558913471611450879899960657037137, .node = "testNode-97", .pods = [k8spolicy.PodReference{.name = "testPod-973", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 328353484843600003650135779002917661024, .node = "testNode-97", .pods = [k8spolicy.PodReference{.name = "testPod-971", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 329065738897500730756863593153986748985, .node = "testNode-96", .pods = [k8spolicy.PodReference{.name = "testPod-961", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 339317329006400214262769459344852923417, .node = "testNode-96", .pods = [k8spolicy.PodReference{.name = "testPod-962", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 339363722217751649784544708855688890761, .node = "testNode-97", .pods = [k8spolicy.PodReference{.name = "testPod-975", .namespace = "testNamespace"}]}: +1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 6955428896405004454325893922592310381, .span = "testNode-97"}: +1
AppliedToGroupSpan{.appliedToGroup = 12977617920415401539443967260442034781, .span = "testNode-96"}: +1
AppliedToGroupSpan{.appliedToGroup = 28067490434767610700932031817057124467, .span = "testNode-97"}: +1
AppliedToGroupSpan{.appliedToGroup = 41222766383973271318512058935010269125, .span = "testNode-95"}: +1
AppliedToGroupSpan{.appliedToGroup = 78694635668396274531784444203009793713, .span = "testNode-95"}: +1
AppliedToGroupSpan{.appliedToGroup = 82828131887249884533723701257438661146, .span = "testNode-97"}: +1
AppliedToGroupSpan{.appliedToGroup = 90529116978299336604867041053592005814, .span = "testNode-96"}: +1
AppliedToGroupSpan{.appliedToGroup = 91241772504908683776781434872618921585, .span = "testNode-95"}: +1
AppliedToGroupSpan{.appliedToGroup = 97397905553662350940973787766583353241, .span = "testNode-98"}: +1
AppliedToGroupSpan{.appliedToGroup = 100444576583123224799837278022147750242, .span = "testNode-95"}: +1
AppliedToGroupSpan{.appliedToGroup = 103776551732556865730733822187495263396, .span = "testNode-96"}: +1
AppliedToGroupSpan{.appliedToGroup = 122750137078830765493163989058678993709, .span = "testNode-97"}: +1
AppliedToGroupSpan{.appliedToGroup = 124305456095363608261833557770710852073, .span = "testNode-98"}: +1
AppliedToGroupSpan{.appliedToGroup = 135970361690114177319395643735779157372, .span = "testNode-95"}: +1
AppliedToGroupSpan{.appliedToGroup = 139257722318377983010910379350606130564, .span = "testNode-95"}: +1
AppliedToGroupSpan{.appliedToGroup = 147628045017224055507693129211310379936, .span = "testNode-97"}: +1
AppliedToGroupSpan{.appliedToGroup = 150281684632617380914825377053888167844, .span = "testNode-96"}: +1
AppliedToGroupSpan{.appliedToGroup = 157832453976694039397936153148739564370, .span = "testNode-95"}: +1
AppliedToGroupSpan{.appliedToGroup = 165955253148851010787037661879322972000, .span = "testNode-96"}: +1
AppliedToGroupSpan{.appliedToGroup = 205320738554122795774216144233380572324, .span = "testNode-98"}: +1
AppliedToGroupSpan{.appliedToGroup = 208958934596764046016617930950810457235, .span = "testNode-96"}: +1
AppliedToGroupSpan{.appliedToGroup = 212018859850742054076739919732658823861, .span = "testNode-95"}: +1
AppliedToGroupSpan{.appliedToGroup = 226474586797790666991108951146544244350, .span = "testNode-97"}: +1
AppliedToGroupSpan{.appliedToGroup = 238530022762936351723332763909404448473, .span = "testNode-95"}: +1
AppliedToGroupSpan{.appliedToGroup = 241933318919899387164284680472992336446, .span = "testNode-97"}: +1
AppliedToGroupSpan{.appliedToGroup = 265312899403064056151572050612998779018, .span = "testNode-96"}: +1
AppliedToGroupSpan{.appliedToGroup = 276878493953706068313013360845652423508, .span = "testNode-96"}: +1
AppliedToGroupSpan{.appliedToGroup = 294583558913471611450879899960657037137, .span = "testNode-97"}: +1
AppliedToGroupSpan{.appliedToGroup = 328353484843600003650135779002917661024, .span = "testNode-97"}: +1
AppliedToGroupSpan{.appliedToGroup = 329065738897500730756863593153986748985, .span = "testNode-96"}: +1
AppliedToGroupSpan{.appliedToGroup = 339317329006400214262769459344852923417, .span = "testNode-96"}: +1
AppliedToGroupSpan{.appliedToGroup = 339363722217751649784544708855688890761, .span = "testNode-97"}: +1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-951"}, .name = "testNP-951", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [91241772504908683776781434872618921585], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [41222766383973271318512058935010269125]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-952"}, .name = "testNP-952", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [100444576583123224799837278022147750242], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [91241772504908683776781434872618921585]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-953"}, .name = "testNP-953", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [135970361690114177319395643735779157372], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [100444576583123224799837278022147750242]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-954"}, .name = "testNP-954", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [238530022762936351723332763909404448473], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [135970361690114177319395643735779157372]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-955"}, .name = "testNP-955", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [212018859850742054076739919732658823861], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [238530022762936351723332763909404448473]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-956"}, .name = "testNP-956", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [139257722318377983010910379350606130564], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [212018859850742054076739919732658823861]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-957"}, .name = "testNP-957", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [78694635668396274531784444203009793713], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [139257722318377983010910379350606130564]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-958"}, .name = "testNP-958", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [157832453976694039397936153148739564370], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [78694635668396274531784444203009793713]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-959"}, .name = "testNP-959", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [165955253148851010787037661879322972000], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [157832453976694039397936153148739564370]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-960"}, .name = "testNP-960", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [329065738897500730756863593153986748985], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [165955253148851010787037661879322972000]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-961"}, .name = "testNP-961", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [339317329006400214262769459344852923417], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [329065738897500730756863593153986748985]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-962"}, .name = "testNP-962", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [12977617920415401539443967260442034781], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [339317329006400214262769459344852923417]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-963"}, .name = "testNP-963", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [150281684632617380914825377053888167844], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [12977617920415401539443967260442034781]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-964"}, .name = "testNP-964", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [276878493953706068313013360845652423508], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [150281684632617380914825377053888167844]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-965"}, .name = "testNP-965", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [265312899403064056151572050612998779018], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [276878493953706068313013360845652423508]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-966"}, .name = "testNP-966", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [90529116978299336604867041053592005814], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [265312899403064056151572050612998779018]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-967"}, .name = "testNP-967", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [208958934596764046016617930950810457235], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [90529116978299336604867041053592005814]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-968"}, .name = "testNP-968", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [103776551732556865730733822187495263396], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [208958934596764046016617930950810457235]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-969"}, .name = "testNP-969", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [226474586797790666991108951146544244350], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [103776551732556865730733822187495263396]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-970"}, .name = "testNP-970", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [328353484843600003650135779002917661024], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [226474586797790666991108951146544244350]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-971"}, .name = "testNP-971", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [82828131887249884533723701257438661146], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [328353484843600003650135779002917661024]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-972"}, .name = "testNP-972", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [294583558913471611450879899960657037137], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [82828131887249884533723701257438661146]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-973"}, .name = "testNP-973", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [122750137078830765493163989058678993709], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [294583558913471611450879899960657037137]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-974"}, .name = "testNP-974", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [339363722217751649784544708855688890761], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [122750137078830765493163989058678993709]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-975"}, .name = "testNP-975", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [241933318919899387164284680472992336446], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [339363722217751649784544708855688890761]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-976"}, .name = "testNP-976", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [6955428896405004454325893922592310381], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [241933318919899387164284680472992336446]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-977"}, .name = "testNP-977", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [28067490434767610700932031817057124467], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [6955428896405004454325893922592310381]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-978"}, .name = "testNP-978", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [147628045017224055507693129211310379936], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [28067490434767610700932031817057124467]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-979"}, .name = "testNP-979", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [205320738554122795774216144233380572324], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [147628045017224055507693129211310379936]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-980"}, .name = "testNP-980", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [124305456095363608261833557770710852073], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [205320738554122795774216144233380572324]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-981"}, .name = "testNP-981", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [97397905553662350940973787766583353241], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [124305456095363608261833557770710852073]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-982"}, .name = "testNP-982", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [58580881636511900247074240901258357817], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [97397905553662350940973787766583353241]}: +1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-951", .policy = k8spolicy.UID{.uid = "testNP-951"}, .node = "testNode-95"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-952", .policy = k8spolicy.UID{.uid = "testNP-952"}, .node = "testNode-95"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-953", .policy = k8spolicy.UID{.uid = "testNP-953"}, .node = "testNode-95"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-954", .policy = k8spolicy.UID{.uid = "testNP-954"}, .node = "testNode-95"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-955", .policy = k8spolicy.UID{.uid = "testNP-955"}, .node = "testNode-95"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-956", .policy = k8spolicy.UID{.uid = "testNP-956"}, .node = "testNode-95"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-957", .policy = k8spolicy.UID{.uid = "testNP-957"}, .node = "testNode-95"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-958", .policy = k8spolicy.UID{.uid = "testNP-958"}, .node = "testNode-95"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-959", .policy = k8spolicy.UID{.uid = "testNP-959"}, .node = "testNode-95"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-960", .policy = k8spolicy.UID{.uid = "testNP-960"}, .node = "testNode-96"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-961", .policy = k8spolicy.UID{.uid = "testNP-961"}, .node = "testNode-96"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-962", .policy = k8spolicy.UID{.uid = "testNP-962"}, .node = "testNode-96"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-963", .policy = k8spolicy.UID{.uid = "testNP-963"}, .node = "testNode-96"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-964", .policy = k8spolicy.UID{.uid = "testNP-964"}, .node = "testNode-96"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-965", .policy = k8spolicy.UID{.uid = "testNP-965"}, .node = "testNode-96"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-966", .policy = k8spolicy.UID{.uid = "testNP-966"}, .node = "testNode-96"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-967", .policy = k8spolicy.UID{.uid = "testNP-967"}, .node = "testNode-96"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-968", .policy = k8spolicy.UID{.uid = "testNP-968"}, .node = "testNode-96"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-969", .policy = k8spolicy.UID{.uid = "testNP-969"}, .node = "testNode-96"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-970", .policy = k8spolicy.UID{.uid = "testNP-970"}, .node = "testNode-97"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-971", .policy = k8spolicy.UID{.uid = "testNP-971"}, .node = "testNode-97"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-972", .policy = k8spolicy.UID{.uid = "testNP-972"}, .node = "testNode-97"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-973", .policy = k8spolicy.UID{.uid = "testNP-973"}, .node = "testNode-97"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-974", .policy = k8spolicy.UID{.uid = "testNP-974"}, .node = "testNode-97"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-975", .policy = k8spolicy.UID{.uid = "testNP-975"}, .node = "testNode-97"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-976", .policy = k8spolicy.UID{.uid = "testNP-976"}, .node = "testNode-97"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-977", .policy = k8spolicy.UID{.uid = "testNP-977"}, .node = "testNode-97"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-978", .policy = k8spolicy.UID{.uid = "testNP-978"}, .node = "testNode-97"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-979", .policy = k8spolicy.UID{.uid = "testNP-979"}, .node = "testNode-97"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-980", .policy = k8spolicy.UID{.uid = "testNP-980"}, .node = "testNode-98"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-981", .policy = k8spolicy.UID{.uid = "testNP-981"}, .node = "testNode-98"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-982", .policy = k8spolicy.UID{.uid = "testNP-982"}, .node = "testNode-98"}: +1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 19780984264382063499464797807697988969, .address = "10.10.98.8"}: +1
AddressGroupAddress{.addressGroup = 26013505902303635868547526954876935271, .address = "10.10.99.4"}: +1
AddressGroupAddress{.addressGroup = 78530837646477164436667492468154438242, .address = "10.10.99.1"}: +1
AddressGroupAddress{.addressGroup = 104522203589244290409050200849711159826, .address = "10.10.99.5"}: +1
AddressGroupAddress{.addressGroup = 106135039592768831683516347285194217116, .address = "10.10.0.0"}: +1
AddressGroupAddress{.addressGroup = 125457437807456623520271095090074814657, .address = "10.10.98.5"}: +1
AddressGroupAddress{.addressGroup = 202632730968193689942333092426544352341, .address = "10.10.98.7"}: +1
AddressGroupAddress{.addressGroup = 214516247379047544100044191790965195055, .address = "10.10.98.9"}: +1
AddressGroupAddress{.addressGroup = 214554090761034450290647451098611736497, .address = "10.10.99.7"}: +1
AddressGroupAddress{.addressGroup = 230443388661938050083912444590094774494, .address = "10.10.99.2"}: +1
AddressGroupAddress{.addressGroup = 231397646714241430473412006113042657340, .address = "10.10.98.4"}: +1
AddressGroupAddress{.addressGroup = 231712728745164061900922256187351744785, .address = "10.10.99.6"}: +1
AddressGroupAddress{.addressGroup = 238344327590017704986812704519914182940, .address = "10.10.99.8"}: +1
AddressGroupAddress{.addressGroup = 302398038345402927436961354535502970252, .address = "10.10.98.6"}: +1
AddressGroupAddress{.addressGroup = 318480578417254718287109121835430459875, .address = "10.10.99.3"}: +1
AddressGroupAddress{.addressGroup = 333866812920312720468549882465320413402, .address = "10.10.99.9"}: +1
AddressGroupAddress{.addressGroup = 339074160255194639522416675461604207183, .address = "10.10.99.0"}: +1
AddressGroupDescr:
AddressGroupDescr{.name = "0ee1add2-7289-5b58-aae3-e5794b840d69", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-988]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-988")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "139204dd-0667-5289-9758-35e557541c67", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-994]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-994")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "3b147d3a-c6eb-58d9-b74c-268660681262", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-991]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-991")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "4ea23e82-39c7-5c27-beb4-60d8c278da12", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-995]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-995")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "4fd8dd76-8a86-5dfc-8d03-690d43e9169c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-0]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-0")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "5e62393f-49b9-57d7-8f57-b8d07ac308c1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-985]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-985")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "9871a4f9-437b-5129-9d0c-732851248c55", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-987]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-987")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "a1625391-7909-5d71-af5f-21316088012f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-989]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-989")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "a1699d64-1b1e-5f4e-8b14-aea884b85fb1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-997]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-997")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "ad5dc842-e9b1-594a-acc0-da13e87f70de", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-992]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-992")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "ae1590d0-d91f-516f-8406-da4fd6b6703c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-984]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-984")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "ae523f8f-2fae-5a35-8da4-01bc8ab1c111", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-996]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-996")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "b34f72a0-4572-56f0-8824-233988fed91c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-998]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-998")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "e37fbe64-4268-584d-b541-f2c27d8d7d8c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-986]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-986")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "ef9920d6-2b33-52b0-8c61-8c9a61ee39e3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-993]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-993")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "fb2c68c4-3797-5ee0-9955-6f457273a8da", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-999]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-999")], .matchExpressions = []}}}}: +1
AddressGroupDescr{.name = "ff174ecf-ef7b-5f5f-b5e9-4d9508d26a4f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-990]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-990")], .matchExpressions = []}}}}: +1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 19780984264382063499464797807697988969, .node = "testNode-98"}: +1
AddressGroupSpan{.addressGroup = 26013505902303635868547526954876935271, .node = "testNode-99"}: +1
AddressGroupSpan{.addressGroup = 78530837646477164436667492468154438242, .node = "testNode-99"}: +1
AddressGroupSpan{.addressGroup = 104522203589244290409050200849711159826, .node = "testNode-99"}: +1
AddressGroupSpan{.addressGroup = 106135039592768831683516347285194217116, .node = "testNode-99"}: +1
AddressGroupSpan{.addressGroup = 125457437807456623520271095090074814657, .node = "testNode-98"}: +1
AddressGroupSpan{.addressGroup = 202632730968193689942333092426544352341, .node = "testNode-98"}: +1
AddressGroupSpan{.addressGroup = 214516247379047544100044191790965195055, .node = "testNode-98"}: +1
AddressGroupSpan{.addressGroup = 214554090761034450290647451098611736497, .node = "testNode-99"}: +1
AddressGroupSpan{.addressGroup = 230443388661938050083912444590094774494, .node = "testNode-99"}: +1
AddressGroupSpan{.addressGroup = 231397646714241430473412006113042657340, .node = "testNode-98"}: +1
AddressGroupSpan{.addressGroup = 231712728745164061900922256187351744785, .node = "testNode-99"}: +1
AddressGroupSpan{.addressGroup = 238344327590017704986812704519914182940, .node = "testNode-99"}: +1
AddressGroupSpan{.addressGroup = 302398038345402927436961354535502970252, .node = "testNode-98"}: +1
AddressGroupSpan{.addressGroup = 318480578417254718287109121835430459875, .node = "testNode-99"}: +1
AddressGroupSpan{.addressGroup = 333866812920312720468549882465320413402, .node = "testNode-99"}: +1
AddressGroupSpan{.addressGroup = 339074160255194639522416675461604207183, .node = "testNode-98"}: +1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "0ee1add2-7289-5b58-aae3-e5794b840d69", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-988]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-988")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "139204dd-0667-5289-9758-35e557541c67", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-994]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-994")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "2c124475-1012-52ee-b743-a9c0fe4b2c39", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-983]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-983")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "3b147d3a-c6eb-58d9-b74c-268660681262", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-991]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-991")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "4ea23e82-39c7-5c27-beb4-60d8c278da12", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-995]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-995")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "5e62393f-49b9-57d7-8f57-b8d07ac308c1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-985]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-985")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "9871a4f9-437b-5129-9d0c-732851248c55", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-987]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-987")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "a1625391-7909-5d71-af5f-21316088012f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-989]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-989")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "a1699d64-1b1e-5f4e-8b14-aea884b85fb1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-997]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-997")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "ad5dc842-e9b1-594a-acc0-da13e87f70de", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-992]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-992")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "ae1590d0-d91f-516f-8406-da4fd6b6703c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-984]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-984")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "ae523f8f-2fae-5a35-8da4-01bc8ab1c111", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-996]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-996")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "b34f72a0-4572-56f0-8824-233988fed91c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-998]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-998")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "e37fbe64-4268-584d-b541-f2c27d8d7d8c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-986]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-986")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "ef9920d6-2b33-52b0-8c61-8c9a61ee39e3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-993]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-993")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "fb2c68c4-3797-5ee0-9955-6f457273a8da", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-999]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-999")], .matchExpressions = []}}}}: +1
AppliedToGroupDescr{.name = "ff174ecf-ef7b-5f5f-b5e9-4d9508d26a4f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-990]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-990")], .matchExpressions = []}}}}: +1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 19780984264382063499464797807697988969, .node = "testNode-98", .pods = [k8spolicy.PodReference{.name = "testPod-988", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 26013505902303635868547526954876935271, .node = "testNode-99", .pods = [k8spolicy.PodReference{.name = "testPod-994", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 58580881636511900247074240901258357817, .node = "testNode-98", .pods = [k8spolicy.PodReference{.name = "testPod-983", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 78530837646477164436667492468154438242, .node = "testNode-99", .pods = [k8spolicy.PodReference{.name = "testPod-991", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 104522203589244290409050200849711159826, .node = "testNode-99", .pods = [k8spolicy.PodReference{.name = "testPod-995", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 125457437807456623520271095090074814657, .node = "testNode-98", .pods = [k8spolicy.PodReference{.name = "testPod-985", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 202632730968193689942333092426544352341, .node = "testNode-98", .pods = [k8spolicy.PodReference{.name = "testPod-987", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 214516247379047544100044191790965195055, .node = "testNode-98", .pods = [k8spolicy.PodReference{.name = "testPod-989", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 214554090761034450290647451098611736497, .node = "testNode-99", .pods = [k8spolicy.PodReference{.name = "testPod-997", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 230443388661938050083912444590094774494, .node = "testNode-99", .pods = [k8spolicy.PodReference{.name = "testPod-992", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 231397646714241430473412006113042657340, .node = "testNode-98", .pods = [k8spolicy.PodReference{.name = "testPod-984", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 231712728745164061900922256187351744785, .node = "testNode-99", .pods = [k8spolicy.PodReference{.name = "testPod-996", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 238344327590017704986812704519914182940, .node = "testNode-99", .pods = [k8spolicy.PodReference{.name = "testPod-998", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 302398038345402927436961354535502970252, .node = "testNode-98", .pods = [k8spolicy.PodReference{.name = "testPod-986", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 318480578417254718287109121835430459875, .node = "testNode-99", .pods = [k8spolicy.PodReference{.name = "testPod-993", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 333866812920312720468549882465320413402, .node = "testNode-99", .pods = [k8spolicy.PodReference{.name = "testPod-999", .namespace = "testNamespace"}]}: +1
AppliedToGroupPodsByNode{.appliedToGroup = 339074160255194639522416675461604207183, .node = "testNode-99", .pods = [k8spolicy.PodReference{.name = "testPod-990", .namespace = "testNamespace"}]}: +1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 19780984264382063499464797807697988969, .span = "testNode-98"}: +1
AppliedToGroupSpan{.appliedToGroup = 26013505902303635868547526954876935271, .span = "testNode-99"}: +1
AppliedToGroupSpan{.appliedToGroup = 58580881636511900247074240901258357817, .span = "testNode-98"}: +1
AppliedToGroupSpan{.appliedToGroup = 78530837646477164436667492468154438242, .span = "testNode-99"}: +1
AppliedToGroupSpan{.appliedToGroup = 104522203589244290409050200849711159826, .span = "testNode-99"}: +1
AppliedToGroupSpan{.appliedToGroup = 125457437807456623520271095090074814657, .span = "testNode-98"}: +1
AppliedToGroupSpan{.appliedToGroup = 202632730968193689942333092426544352341, .span = "testNode-98"}: +1
AppliedToGroupSpan{.appliedToGroup = 214516247379047544100044191790965195055, .span = "testNode-98"}: +1
AppliedToGroupSpan{.appliedToGroup = 214554090761034450290647451098611736497, .span = "testNode-99"}: +1
AppliedToGroupSpan{.appliedToGroup = 230443388661938050083912444590094774494, .span = "testNode-99"}: +1
AppliedToGroupSpan{.appliedToGroup = 231397646714241430473412006113042657340, .span = "testNode-98"}: +1
AppliedToGroupSpan{.appliedToGroup = 231712728745164061900922256187351744785, .span = "testNode-99"}: +1
AppliedToGroupSpan{.appliedToGroup = 238344327590017704986812704519914182940, .span = "testNode-99"}: +1
AppliedToGroupSpan{.appliedToGroup = 302398038345402927436961354535502970252, .span = "testNode-98"}: +1
AppliedToGroupSpan{.appliedToGroup = 318480578417254718287109121835430459875, .span = "testNode-99"}: +1
AppliedToGroupSpan{.appliedToGroup = 333866812920312720468549882465320413402, .span = "testNode-99"}: +1
AppliedToGroupSpan{.appliedToGroup = 339074160255194639522416675461604207183, .span = "testNode-99"}: +1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-983"}, .name = "testNP-983", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [231397646714241430473412006113042657340], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [58580881636511900247074240901258357817]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-984"}, .name = "testNP-984", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [125457437807456623520271095090074814657], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [231397646714241430473412006113042657340]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-985"}, .name = "testNP-985", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [302398038345402927436961354535502970252], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [125457437807456623520271095090074814657]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-986"}, .name = "testNP-986", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [202632730968193689942333092426544352341], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [302398038345402927436961354535502970252]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-987"}, .name = "testNP-987", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [19780984264382063499464797807697988969], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [202632730968193689942333092426544352341]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-988"}, .name = "testNP-988", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [214516247379047544100044191790965195055], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [19780984264382063499464797807697988969]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-989"}, .name = "testNP-989", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [339074160255194639522416675461604207183], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [214516247379047544100044191790965195055]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-990"}, .name = "testNP-990", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [78530837646477164436667492468154438242], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [339074160255194639522416675461604207183]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-991"}, .name = "testNP-991", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [230443388661938050083912444590094774494], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [78530837646477164436667492468154438242]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-992"}, .name = "testNP-992", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [318480578417254718287109121835430459875], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [230443388661938050083912444590094774494]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-993"}, .name = "testNP-993", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [26013505902303635868547526954876935271], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [318480578417254718287109121835430459875]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-994"}, .name = "testNP-994", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [104522203589244290409050200849711159826], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [26013505902303635868547526954876935271]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-995"}, .name = "testNP-995", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [231712728745164061900922256187351744785], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [104522203589244290409050200849711159826]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-996"}, .name = "testNP-996", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [214554090761034450290647451098611736497], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [231712728745164061900922256187351744785]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-997"}, .name = "testNP-997", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [238344327590017704986812704519914182940], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [214554090761034450290647451098611736497]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-998"}, .name = "testNP-998", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [333866812920312720468549882465320413402], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [238344327590017704986812704519914182940]}: +1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-999"}, .name = "testNP-999", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [106135039592768831683516347285194217116], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [333866812920312720468549882465320413402]}: +1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-983", .policy = k8spolicy.UID{.uid = "testNP-983"}, .node = "testNode-98"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-984", .policy = k8spolicy.UID{.uid = "testNP-984"}, .node = "testNode-98"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-985", .policy = k8spolicy.UID{.uid = "testNP-985"}, .node = "testNode-98"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-986", .policy = k8spolicy.UID{.uid = "testNP-986"}, .node = "testNode-98"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-987", .policy = k8spolicy.UID{.uid = "testNP-987"}, .node = "testNode-98"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-988", .policy = k8spolicy.UID{.uid = "testNP-988"}, .node = "testNode-98"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-989", .policy = k8spolicy.UID{.uid = "testNP-989"}, .node = "testNode-98"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-990", .policy = k8spolicy.UID{.uid = "testNP-990"}, .node = "testNode-99"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-991", .policy = k8spolicy.UID{.uid = "testNP-991"}, .node = "testNode-99"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-992", .policy = k8spolicy.UID{.uid = "testNP-992"}, .node = "testNode-99"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-993", .policy = k8spolicy.UID{.uid = "testNP-993"}, .node = "testNode-99"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-994", .policy = k8spolicy.UID{.uid = "testNP-994"}, .node = "testNode-99"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-995", .policy = k8spolicy.UID{.uid = "testNP-995"}, .node = "testNode-99"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-996", .policy = k8spolicy.UID{.uid = "testNP-996"}, .node = "testNode-99"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-997", .policy = k8spolicy.UID{.uid = "testNP-997"}, .node = "testNode-99"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-998", .policy = k8spolicy.UID{.uid = "testNP-998"}, .node = "testNode-99"}: +1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-999", .policy = k8spolicy.UID{.uid = "testNP-999"}, .node = "testNode-99"}: +1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 43278990765031206632240717596255177909, .address = "10.10.1.2"}: -1
AddressGroupAddress{.addressGroup = 44236272532789317872630466770353848062, .address = "10.10.0.1"}: -1
AddressGroupAddress{.addressGroup = 44646213493351026454398859485430306486, .address = "10.10.0.3"}: -1
AddressGroupAddress{.addressGroup = 58898532225706772889499413309621990351, .address = "10.10.1.7"}: -1
AddressGroupAddress{.addressGroup = 60489002938646283986256677442998248084, .address = "10.10.1.4"}: -1
AddressGroupAddress{.addressGroup = 62869394528352203618597082069827805088, .address = "10.10.0.5"}: -1
AddressGroupAddress{.addressGroup = 68832077769101909448369837893361628614, .address = "10.10.2.9"}: -1
AddressGroupAddress{.addressGroup = 81121462914270942832249950298843128703, .address = "10.10.3.1"}: -1
AddressGroupAddress{.addressGroup = 96312429607402271193560398090116188135, .address = "10.10.0.4"}: -1
AddressGroupAddress{.addressGroup = 96618035969411579988466106943835469232, .address = "10.10.3.0"}: -1
AddressGroupAddress{.addressGroup = 97546812034476547964388477049256406319, .address = "10.10.2.4"}: -1
AddressGroupAddress{.addressGroup = 102112251378227976822086423406947489779, .address = "10.10.0.2"}: -1
AddressGroupAddress{.addressGroup = 111338937536370593086794712033923432470, .address = "10.10.1.8"}: -1
AddressGroupAddress{.addressGroup = 139270746501443324926378433473799701055, .address = "10.10.2.2"}: -1
AddressGroupAddress{.addressGroup = 144753196858021665707569721083110589917, .address = "10.10.3.2"}: -1
AddressGroupAddress{.addressGroup = 145735034206050545411436192232897198781, .address = "10.10.0.7"}: -1
AddressGroupAddress{.addressGroup = 176586764159975203579390276585431732896, .address = "10.10.2.3"}: -1
AddressGroupAddress{.addressGroup = 179663795872649533067815864425726121901, .address = "10.10.0.8"}: -1
AddressGroupAddress{.addressGroup = 182432205246793529923938059297094241823, .address = "10.10.1.5"}: -1
AddressGroupAddress{.addressGroup = 196259851041020535303029855840226103764, .address = "10.10.0.9"}: -1
AddressGroupAddress{.addressGroup = 223870443946998379370070698573247327959, .address = "10.10.2.1"}: -1
AddressGroupAddress{.addressGroup = 227822485347605345445118471376208942239, .address = "10.10.1.0"}: -1
AddressGroupAddress{.addressGroup = 236252942169316635240533229674166816472, .address = "10.10.1.1"}: -1
AddressGroupAddress{.addressGroup = 259216780153277234422871262066248771894, .address = "10.10.1.6"}: -1
AddressGroupAddress{.addressGroup = 266946165867844046215863832544505948365, .address = "10.10.1.3"}: -1
AddressGroupAddress{.addressGroup = 274176388433300462609557742028238679621, .address = "10.10.2.8"}: -1
AddressGroupAddress{.addressGroup = 286051166561850116633041377227436361012, .address = "10.10.2.7"}: -1
AddressGroupAddress{.addressGroup = 302482925621519402575123441505680653298, .address = "10.10.1.9"}: -1
AddressGroupAddress{.addressGroup = 311400409529788751919244335325452112245, .address = "10.10.2.0"}: -1
AddressGroupAddress{.addressGroup = 323493623055586544226789124986632517686, .address = "10.10.0.6"}: -1
AddressGroupAddress{.addressGroup = 325047147065144565960557867088934395082, .address = "10.10.2.6"}: -1
AddressGroupAddress{.addressGroup = 331887779747380270873541504967861739528, .address = "10.10.2.5"}: -1
AddressGroupDescr:
AddressGroupDescr{.name = "208f3afd-4faf-5761-b65a-bf568a99ccb5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-12]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-12")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "2147989f-e6af-5749-ba0e-83f61f60fefe", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-1]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-1")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "21968c46-41c3-5a04-a5cf-a647f6f656b6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-3]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-3")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "2c4f71d7-2a06-5e6d-b36c-6eb4e2e2f3cf", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-17]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-17")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "2d81c219-d357-5304-a6cb-b8f2ebcc2294", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-14]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-14")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "2f4c3477-a740-579b-8eb2-1a48a21f5fa0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-5]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-5")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "33c89372-d5b7-5b27-9b11-7081dc6c75c6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-29]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-29")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "3d076cea-adb0-5b25-a9c3-eb0fc9cc237f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-31]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-31")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "48751966-7751-5e92-82c2-ca4e0df2c7e7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-4]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-4")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "48aff4f5-0c50-54f0-af33-70e2ab77f5b0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-30]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-30")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "4962d527-1649-5cd9-9aa6-95739cc1ed2f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-24]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-24")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "4cd21ab0-e6f3-5cbf-9d3f-baeec77a57f3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-2]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-2")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "53c31970-d212-502d-a92f-f295fef40016", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-18]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-18")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "68c691f2-7eb5-5354-b3f7-88c4aa2ac23f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-22]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-22")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "6ce6739e-834b-5cc8-b9f6-0bd7d7a785dd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-32]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-32")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "6da38bf0-1965-54d4-b4da-3981a9cb3abd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-7]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-7")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "84d95faa-012d-5288-ae40-788efddb92a0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-23]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-23")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "8729fd0a-5c54-5db9-af45-51cadb9497ad", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-8]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-8")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "893f2a29-28c2-5766-9b9a-b90764ba0e1f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-15]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-15")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "93a645bc-031d-5524-82a0-ca445ae1d1d4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-9]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-9")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "a86be111-0734-5db8-a656-ee4e8bf0aed7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-21]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-21")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "ab6503c0-5611-5c9a-a9d4-e544fa70549f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-10]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-10")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "b1bca95d-220e-5b74-b38d-0de3c9090ed8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-11]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-11")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "c30355fd-716b-5eaa-a629-601ff71fe936", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-16]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-16")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "c8d3f620-d41d-5ddf-bb54-94d2b26ee8cd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-13]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-13")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "ce44739f-83fa-5414-b860-366a7b1cee45", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-28]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-28")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "d7337363-189b-53ad-89fa-0f7cbfe68534", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-27]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-27")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "e39017a8-50a8-542e-a4ef-0a3f387e7bf2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-19]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-19")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "ea45898f-2a72-5623-85ed-14b453031175", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-20]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-20")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "f35e9b05-11d6-5059-9067-bd9d8be5b836", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-6]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-6")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "f489cdaa-c5e8-5a99-8070-b15ba9f0dcca", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-26]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-26")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "f9af42e5-d01e-5852-906f-94d78a462008", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-25]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-25")], .matchExpressions = []}}}}: -1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 43278990765031206632240717596255177909, .node = "testNode-1"}: -1
AddressGroupSpan{.addressGroup = 44236272532789317872630466770353848062, .node = "testNode-0"}: -1
AddressGroupSpan{.addressGroup = 44646213493351026454398859485430306486, .node = "testNode-0"}: -1
AddressGroupSpan{.addressGroup = 58898532225706772889499413309621990351, .node = "testNode-1"}: -1
AddressGroupSpan{.addressGroup = 60489002938646283986256677442998248084, .node = "testNode-1"}: -1
AddressGroupSpan{.addressGroup = 62869394528352203618597082069827805088, .node = "testNode-0"}: -1
AddressGroupSpan{.addressGroup = 68832077769101909448369837893361628614, .node = "testNode-2"}: -1
AddressGroupSpan{.addressGroup = 81121462914270942832249950298843128703, .node = "testNode-3"}: -1
AddressGroupSpan{.addressGroup = 96312429607402271193560398090116188135, .node = "testNode-0"}: -1
AddressGroupSpan{.addressGroup = 96618035969411579988466106943835469232, .node = "testNode-2"}: -1
AddressGroupSpan{.addressGroup = 97546812034476547964388477049256406319, .node = "testNode-2"}: -1
AddressGroupSpan{.addressGroup = 102112251378227976822086423406947489779, .node = "testNode-0"}: -1
AddressGroupSpan{.addressGroup = 111338937536370593086794712033923432470, .node = "testNode-1"}: -1
AddressGroupSpan{.addressGroup = 139270746501443324926378433473799701055, .node = "testNode-2"}: -1
AddressGroupSpan{.addressGroup = 144753196858021665707569721083110589917, .node = "testNode-3"}: -1
AddressGroupSpan{.addressGroup = 145735034206050545411436192232897198781, .node = "testNode-0"}: -1
AddressGroupSpan{.addressGroup = 176586764159975203579390276585431732896, .node = "testNode-2"}: -1
AddressGroupSpan{.addressGroup = 179663795872649533067815864425726121901, .node = "testNode-0"}: -1
AddressGroupSpan{.addressGroup = 182432205246793529923938059297094241823, .node = "testNode-1"}: -1
AddressGroupSpan{.addressGroup = 196259851041020535303029855840226103764, .node = "testNode-0"}: -1
AddressGroupSpan{.addressGroup = 223870443946998379370070698573247327959, .node = "testNode-2"}: -1
AddressGroupSpan{.addressGroup = 227822485347605345445118471376208942239, .node = "testNode-0"}: -1
AddressGroupSpan{.addressGroup = 236252942169316635240533229674166816472, .node = "testNode-1"}: -1
AddressGroupSpan{.addressGroup = 259216780153277234422871262066248771894, .node = "testNode-1"}: -1
AddressGroupSpan{.addressGroup = 266946165867844046215863832544505948365, .node = "testNode-1"}: -1
AddressGroupSpan{.addressGroup = 274176388433300462609557742028238679621, .node = "testNode-2"}: -1
AddressGroupSpan{.addressGroup = 286051166561850116633041377227436361012, .node = "testNode-2"}: -1
AddressGroupSpan{.addressGroup = 302482925621519402575123441505680653298, .node = "testNode-1"}: -1
AddressGroupSpan{.addressGroup = 311400409529788751919244335325452112245, .node = "testNode-1"}: -1
AddressGroupSpan{.addressGroup = 323493623055586544226789124986632517686, .node = "testNode-0"}: -1
AddressGroupSpan{.addressGroup = 325047147065144565960557867088934395082, .node = "testNode-2"}: -1
AddressGroupSpan{.addressGroup = 331887779747380270873541504967861739528, .node = "testNode-2"}: -1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "208f3afd-4faf-5761-b65a-bf568a99ccb5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-12]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-12")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "2147989f-e6af-5749-ba0e-83f61f60fefe", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-1]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-1")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "21968c46-41c3-5a04-a5cf-a647f6f656b6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-3]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-3")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "2c4f71d7-2a06-5e6d-b36c-6eb4e2e2f3cf", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-17]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-17")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "2d81c219-d357-5304-a6cb-b8f2ebcc2294", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-14]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-14")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "2f4c3477-a740-579b-8eb2-1a48a21f5fa0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-5]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-5")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "33c89372-d5b7-5b27-9b11-7081dc6c75c6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-29]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-29")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "3d076cea-adb0-5b25-a9c3-eb0fc9cc237f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-31]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-31")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "48751966-7751-5e92-82c2-ca4e0df2c7e7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-4]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-4")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "48aff4f5-0c50-54f0-af33-70e2ab77f5b0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-30]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-30")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "4962d527-1649-5cd9-9aa6-95739cc1ed2f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-24]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-24")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "4cd21ab0-e6f3-5cbf-9d3f-baeec77a57f3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-2]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-2")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "4fd8dd76-8a86-5dfc-8d03-690d43e9169c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-0]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-0")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "53c31970-d212-502d-a92f-f295fef40016", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-18]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-18")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "68c691f2-7eb5-5354-b3f7-88c4aa2ac23f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-22]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-22")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "6da38bf0-1965-54d4-b4da-3981a9cb3abd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-7]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-7")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "84d95faa-012d-5288-ae40-788efddb92a0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-23]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-23")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "8729fd0a-5c54-5db9-af45-51cadb9497ad", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-8]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-8")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "893f2a29-28c2-5766-9b9a-b90764ba0e1f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-15]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-15")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "93a645bc-031d-5524-82a0-ca445ae1d1d4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-9]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-9")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "a86be111-0734-5db8-a656-ee4e8bf0aed7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-21]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-21")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "ab6503c0-5611-5c9a-a9d4-e544fa70549f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-10]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-10")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "b1bca95d-220e-5b74-b38d-0de3c9090ed8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-11]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-11")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "c30355fd-716b-5eaa-a629-601ff71fe936", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-16]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-16")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "c8d3f620-d41d-5ddf-bb54-94d2b26ee8cd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-13]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-13")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "ce44739f-83fa-5414-b860-366a7b1cee45", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-28]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-28")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "d7337363-189b-53ad-89fa-0f7cbfe68534", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-27]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-27")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "e39017a8-50a8-542e-a4ef-0a3f387e7bf2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-19]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-19")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "ea45898f-2a72-5623-85ed-14b453031175", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-20]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-20")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "f35e9b05-11d6-5059-9067-bd9d8be5b836", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-6]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-6")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "f489cdaa-c5e8-5a99-8070-b15ba9f0dcca", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-26]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-26")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "f9af42e5-d01e-5852-906f-94d78a462008", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-25]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-25")], .matchExpressions = []}}}}: -1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 43278990765031206632240717596255177909, .node = "testNode-1", .pods = [k8spolicy.PodReference{.name = "testPod-12", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 44236272532789317872630466770353848062, .node = "testNode-0", .pods = [k8spolicy.PodReference{.name = "testPod-1", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 44646213493351026454398859485430306486, .node = "testNode-0", .pods = [k8spolicy.PodReference{.name = "testPod-3", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 58898532225706772889499413309621990351, .node = "testNode-1", .pods = [k8spolicy.PodReference{.name = "testPod-17", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 60489002938646283986256677442998248084, .node = "testNode-1", .pods = [k8spolicy.PodReference{.name = "testPod-14", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 62869394528352203618597082069827805088, .node = "testNode-0", .pods = [k8spolicy.PodReference{.name = "testPod-5", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 68832077769101909448369837893361628614, .node = "testNode-2", .pods = [k8spolicy.PodReference{.name = "testPod-29", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 81121462914270942832249950298843128703, .node = "testNode-3", .pods = [k8spolicy.PodReference{.name = "testPod-31", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 96312429607402271193560398090116188135, .node = "testNode-0", .pods = [k8spolicy.PodReference{.name = "testPod-4", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 96618035969411579988466106943835469232, .node = "testNode-3", .pods = [k8spolicy.PodReference{.name = "testPod-30", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 97546812034476547964388477049256406319, .node = "testNode-2", .pods = [k8spolicy.PodReference{.name = "testPod-24", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 102112251378227976822086423406947489779, .node = "testNode-0", .pods = [k8spolicy.PodReference{.name = "testPod-2", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 106135039592768831683516347285194217116, .node = "testNode-0", .pods = [k8spolicy.PodReference{.name = "testPod-0", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 111338937536370593086794712033923432470, .node = "testNode-1", .pods = [k8spolicy.PodReference{.name = "testPod-18", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 139270746501443324926378433473799701055, .node = "testNode-2", .pods = [k8spolicy.PodReference{.name = "testPod-22", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 145735034206050545411436192232897198781, .node = "testNode-0", .pods = [k8spolicy.PodReference{.name = "testPod-7", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 176586764159975203579390276585431732896, .node = "testNode-2", .pods = [k8spolicy.PodReference{.name = "testPod-23", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 179663795872649533067815864425726121901, .node = "testNode-0", .pods = [k8spolicy.PodReference{.name = "testPod-8", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 182432205246793529923938059297094241823, .node = "testNode-1", .pods = [k8spolicy.PodReference{.name = "testPod-15", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 196259851041020535303029855840226103764, .node = "testNode-0", .pods = [k8spolicy.PodReference{.name = "testPod-9", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 223870443946998379370070698573247327959, .node = "testNode-2", .pods = [k8spolicy.PodReference{.name = "testPod-21", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 227822485347605345445118471376208942239, .node = "testNode-1", .pods = [k8spolicy.PodReference{.name = "testPod-10", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 236252942169316635240533229674166816472, .node = "testNode-1", .pods = [k8spolicy.PodReference{.name = "testPod-11", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 259216780153277234422871262066248771894, .node = "testNode-1", .pods = [k8spolicy.PodReference{.name = "testPod-16", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 266946165867844046215863832544505948365, .node = "testNode-1", .pods = [k8spolicy.PodReference{.name = "testPod-13", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 274176388433300462609557742028238679621, .node = "testNode-2", .pods = [k8spolicy.PodReference{.name = "testPod-28", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 286051166561850116633041377227436361012, .node = "testNode-2", .pods = [k8spolicy.PodReference{.name = "testPod-27", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 302482925621519402575123441505680653298, .node = "testNode-1", .pods = [k8spolicy.PodReference{.name = "testPod-19", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 311400409529788751919244335325452112245, .node = "testNode-2", .pods = [k8spolicy.PodReference{.name = "testPod-20", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 323493623055586544226789124986632517686, .node = "testNode-0", .pods = [k8spolicy.PodReference{.name = "testPod-6", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 325047147065144565960557867088934395082, .node = "testNode-2", .pods = [k8spolicy.PodReference{.name = "testPod-26", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 331887779747380270873541504967861739528, .node = "testNode-2", .pods = [k8spolicy.PodReference{.name = "testPod-25", .namespace = "testNamespace"}]}: -1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 43278990765031206632240717596255177909, .span = "testNode-1"}: -1
AppliedToGroupSpan{.appliedToGroup = 44236272532789317872630466770353848062, .span = "testNode-0"}: -1
AppliedToGroupSpan{.appliedToGroup = 44646213493351026454398859485430306486, .span = "testNode-0"}: -1
AppliedToGroupSpan{.appliedToGroup = 58898532225706772889499413309621990351, .span = "testNode-1"}: -1
AppliedToGroupSpan{.appliedToGroup = 60489002938646283986256677442998248084, .span = "testNode-1"}: -1
AppliedToGroupSpan{.appliedToGroup = 62869394528352203618597082069827805088, .span = "testNode-0"}: -1
AppliedToGroupSpan{.appliedToGroup = 68832077769101909448369837893361628614, .span = "testNode-2"}: -1
AppliedToGroupSpan{.appliedToGroup = 81121462914270942832249950298843128703, .span = "testNode-3"}: -1
AppliedToGroupSpan{.appliedToGroup = 96312429607402271193560398090116188135, .span = "testNode-0"}: -1
AppliedToGroupSpan{.appliedToGroup = 96618035969411579988466106943835469232, .span = "testNode-3"}: -1
AppliedToGroupSpan{.appliedToGroup = 97546812034476547964388477049256406319, .span = "testNode-2"}: -1
AppliedToGroupSpan{.appliedToGroup = 102112251378227976822086423406947489779, .span = "testNode-0"}: -1
AppliedToGroupSpan{.appliedToGroup = 106135039592768831683516347285194217116, .span = "testNode-0"}: -1
AppliedToGroupSpan{.appliedToGroup = 111338937536370593086794712033923432470, .span = "testNode-1"}: -1
AppliedToGroupSpan{.appliedToGroup = 139270746501443324926378433473799701055, .span = "testNode-2"}: -1
AppliedToGroupSpan{.appliedToGroup = 145735034206050545411436192232897198781, .span = "testNode-0"}: -1
AppliedToGroupSpan{.appliedToGroup = 176586764159975203579390276585431732896, .span = "testNode-2"}: -1
AppliedToGroupSpan{.appliedToGroup = 179663795872649533067815864425726121901, .span = "testNode-0"}: -1
AppliedToGroupSpan{.appliedToGroup = 182432205246793529923938059297094241823, .span = "testNode-1"}: -1
AppliedToGroupSpan{.appliedToGroup = 196259851041020535303029855840226103764, .span = "testNode-0"}: -1
AppliedToGroupSpan{.appliedToGroup = 223870443946998379370070698573247327959, .span = "testNode-2"}: -1
AppliedToGroupSpan{.appliedToGroup = 227822485347605345445118471376208942239, .span = "testNode-1"}: -1
AppliedToGroupSpan{.appliedToGroup = 236252942169316635240533229674166816472, .span = "testNode-1"}: -1
AppliedToGroupSpan{.appliedToGroup = 259216780153277234422871262066248771894, .span = "testNode-1"}: -1
AppliedToGroupSpan{.appliedToGroup = 266946165867844046215863832544505948365, .span = "testNode-1"}: -1
AppliedToGroupSpan{.appliedToGroup = 274176388433300462609557742028238679621, .span = "testNode-2"}: -1
AppliedToGroupSpan{.appliedToGroup = 286051166561850116633041377227436361012, .span = "testNode-2"}: -1
AppliedToGroupSpan{.appliedToGroup = 302482925621519402575123441505680653298, .span = "testNode-1"}: -1
AppliedToGroupSpan{.appliedToGroup = 311400409529788751919244335325452112245, .span = "testNode-2"}: -1
AppliedToGroupSpan{.appliedToGroup = 323493623055586544226789124986632517686, .span = "testNode-0"}: -1
AppliedToGroupSpan{.appliedToGroup = 325047147065144565960557867088934395082, .span = "testNode-2"}: -1
AppliedToGroupSpan{.appliedToGroup = 331887779747380270873541504967861739528, .span = "testNode-2"}: -1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-0"}, .name = "testNP-0", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [44236272532789317872630466770353848062], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [106135039592768831683516347285194217116]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-1"}, .name = "testNP-1", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [102112251378227976822086423406947489779], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [44236272532789317872630466770353848062]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-10"}, .name = "testNP-10", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [236252942169316635240533229674166816472], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [227822485347605345445118471376208942239]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-11"}, .name = "testNP-11", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [43278990765031206632240717596255177909], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [236252942169316635240533229674166816472]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-12"}, .name = "testNP-12", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [266946165867844046215863832544505948365], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [43278990765031206632240717596255177909]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-13"}, .name = "testNP-13", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [60489002938646283986256677442998248084], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [266946165867844046215863832544505948365]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-14"}, .name = "testNP-14", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [182432205246793529923938059297094241823], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [60489002938646283986256677442998248084]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-15"}, .name = "testNP-15", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [259216780153277234422871262066248771894], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [182432205246793529923938059297094241823]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-16"}, .name = "testNP-16", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [58898532225706772889499413309621990351], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [259216780153277234422871262066248771894]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-17"}, .name = "testNP-17", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [111338937536370593086794712033923432470], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [58898532225706772889499413309621990351]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-18"}, .name = "testNP-18", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [302482925621519402575123441505680653298], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [111338937536370593086794712033923432470]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-19"}, .name = "testNP-19", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [311400409529788751919244335325452112245], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [302482925621519402575123441505680653298]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-2"}, .name = "testNP-2", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [44646213493351026454398859485430306486], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [102112251378227976822086423406947489779]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-20"}, .name = "testNP-20", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [223870443946998379370070698573247327959], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [311400409529788751919244335325452112245]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-21"}, .name = "testNP-21", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [139270746501443324926378433473799701055], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [223870443946998379370070698573247327959]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-22"}, .name = "testNP-22", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [176586764159975203579390276585431732896], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [139270746501443324926378433473799701055]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-23"}, .name = "testNP-23", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [97546812034476547964388477049256406319], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [176586764159975203579390276585431732896]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-24"}, .name = "testNP-24", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [331887779747380270873541504967861739528], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [97546812034476547964388477049256406319]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-25"}, .name = "testNP-25", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [325047147065144565960557867088934395082], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [331887779747380270873541504967861739528]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-26"}, .name = "testNP-26", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [286051166561850116633041377227436361012], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [325047147065144565960557867088934395082]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-27"}, .name = "testNP-27", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [274176388433300462609557742028238679621], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [286051166561850116633041377227436361012]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-28"}, .name = "testNP-28", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [68832077769101909448369837893361628614], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [274176388433300462609557742028238679621]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-29"}, .name = "testNP-29", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [96618035969411579988466106943835469232], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [68832077769101909448369837893361628614]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-3"}, .name = "testNP-3", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [96312429607402271193560398090116188135], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [44646213493351026454398859485430306486]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-30"}, .name = "testNP-30", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [81121462914270942832249950298843128703], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [96618035969411579988466106943835469232]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-31"}, .name = "testNP-31", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [144753196858021665707569721083110589917], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [81121462914270942832249950298843128703]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-4"}, .name = "testNP-4", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [62869394528352203618597082069827805088], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [96312429607402271193560398090116188135]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-5"}, .name = "testNP-5", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [323493623055586544226789124986632517686], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [62869394528352203618597082069827805088]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-6"}, .name = "testNP-6", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [145735034206050545411436192232897198781], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [323493623055586544226789124986632517686]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-7"}, .name = "testNP-7", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [179663795872649533067815864425726121901], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [145735034206050545411436192232897198781]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-8"}, .name = "testNP-8", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [196259851041020535303029855840226103764], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [179663795872649533067815864425726121901]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-9"}, .name = "testNP-9", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [227822485347605345445118471376208942239], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [196259851041020535303029855840226103764]}: -1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-0", .policy = k8spolicy.UID{.uid = "testNP-0"}, .node = "testNode-0"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-1", .policy = k8spolicy.UID{.uid = "testNP-1"}, .node = "testNode-0"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-10", .policy = k8spolicy.UID{.uid = "testNP-10"}, .node = "testNode-1"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-11", .policy = k8spolicy.UID{.uid = "testNP-11"}, .node = "testNode-1"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-12", .policy = k8spolicy.UID{.uid = "testNP-12"}, .node = "testNode-1"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-13", .policy = k8spolicy.UID{.uid = "testNP-13"}, .node = "testNode-1"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-14", .policy = k8spolicy.UID{.uid = "testNP-14"}, .node = "testNode-1"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-15", .policy = k8spolicy.UID{.uid = "testNP-15"}, .node = "testNode-1"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-16", .policy = k8spolicy.UID{.uid = "testNP-16"}, .node = "testNode-1"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-17", .policy = k8spolicy.UID{.uid = "testNP-17"}, .node = "testNode-1"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-18", .policy = k8spolicy.UID{.uid = "testNP-18"}, .node = "testNode-1"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-19", .policy = k8spolicy.UID{.uid = "testNP-19"}, .node = "testNode-1"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-2", .policy = k8spolicy.UID{.uid = "testNP-2"}, .node = "testNode-0"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-20", .policy = k8spolicy.UID{.uid = "testNP-20"}, .node = "testNode-2"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-21", .policy = k8spolicy.UID{.uid = "testNP-21"}, .node = "testNode-2"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-22", .policy = k8spolicy.UID{.uid = "testNP-22"}, .node = "testNode-2"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-23", .policy = k8spolicy.UID{.uid = "testNP-23"}, .node = "testNode-2"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-24", .policy = k8spolicy.UID{.uid = "testNP-24"}, .node = "testNode-2"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-25", .policy = k8spolicy.UID{.uid = "testNP-25"}, .node = "testNode-2"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-26", .policy = k8spolicy.UID{.uid = "testNP-26"}, .node = "testNode-2"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-27", .policy = k8spolicy.UID{.uid = "testNP-27"}, .node = "testNode-2"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-28", .policy = k8spolicy.UID{.uid = "testNP-28"}, .node = "testNode-2"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-29", .policy = k8spolicy.UID{.uid = "testNP-29"}, .node = "testNode-2"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-3", .policy = k8spolicy.UID{.uid = "testNP-3"}, .node = "testNode-0"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-30", .policy = k8spolicy.UID{.uid = "testNP-30"}, .node = "testNode-3"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-31", .policy = k8spolicy.UID{.uid = "testNP-31"}, .node = "testNode-3"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-4", .policy = k8spolicy.UID{.uid = "testNP-4"}, .node = "testNode-0"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-5", .policy = k8spolicy.UID{.uid = "testNP-5"}, .node = "testNode-0"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-6", .policy = k8spolicy.UID{.uid = "testNP-6"}, .node = "testNode-0"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-7", .policy = k8spolicy.UID{.uid = "testNP-7"}, .node = "testNode-0"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-8", .policy = k8spolicy.UID{.uid = "testNP-8"}, .node = "testNode-0"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-9", .policy = k8spolicy.UID{.uid = "testNP-9"}, .node = "testNode-0"}: -1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 20767815547279998493907012236425171798, .address = "10.10.5.0"}: -1
AddressGroupAddress{.addressGroup = 38004132277364152320107829778209775275, .address = "10.10.6.4"}: -1
AddressGroupAddress{.addressGroup = 38628245282234504053248182638842229937, .address = "10.10.6.1"}: -1
AddressGroupAddress{.addressGroup = 39452312576163401031277279311434766391, .address = "10.10.5.9"}: -1
AddressGroupAddress{.addressGroup = 41273166673565770432178909612616696213, .address = "10.10.6.0"}: -1
AddressGroupAddress{.addressGroup = 43876221218409769006807412802117827291, .address = "10.10.4.0"}: -1
AddressGroupAddress{.addressGroup = 47221714050325705453725051369721297713, .address = "10.10.3.7"}: -1
AddressGroupAddress{.addressGroup = 60460917171393760924650753449093679022, .address = "10.10.5.1"}: -1
AddressGroupAddress{.addressGroup = 70144797405409128114114553010962757218, .address = "10.10.3.3"}: -1
AddressGroupAddress{.addressGroup = 94855553666864199803161217169240171680, .address = "10.10.4.2"}: -1
AddressGroupAddress{.addressGroup = 113831036545704994957248832178974481894, .address = "10.10.5.5"}: -1
AddressGroupAddress{.addressGroup = 119635299887588143896536870584846982759, .address = "10.10.5.4"}: -1
AddressGroupAddress{.addressGroup = 127836115956806847874573849543759564251, .address = "10.10.4.1"}: -1
AddressGroupAddress{.addressGroup = 133048564262879295471989340890274681624, .address = "10.10.3.8"}: -1
AddressGroupAddress{.addressGroup = 135997051926608991473280201116356280270, .address = "10.10.3.5"}: -1
AddressGroupAddress{.addressGroup = 150245552670006731495342494597403576795, .address = "10.10.4.8"}: -1
AddressGroupAddress{.addressGroup = 151117400945067438640309587197077641860, .address = "10.10.5.8"}: -1
AddressGroupAddress{.addressGroup = 151161408702144383027448843335256361428, .address = "10.10.4.6"}: -1
AddressGroupAddress{.addressGroup = 159928134457379710572178241731236640678, .address = "10.10.5.3"}: -1
AddressGroupAddress{.addressGroup = 197420669892879724015737365903881295925, .address = "10.10.3.4"}: -1
AddressGroupAddress{.addressGroup = 197823068481389578285940514810756381878, .address = "10.10.4.9"}: -1
AddressGroupAddress{.addressGroup = 202302642131276625801490600770378263466, .address = "10.10.6.3"}: -1
AddressGroupAddress{.addressGroup = 215513316860074733245676901009072053322, .address = "10.10.5.7"}: -1
AddressGroupAddress{.addressGroup = 223535744135199722597700842790109819993, .address = "10.10.5.2"}: -1
AddressGroupAddress{.addressGroup = 225923597630883948509019350627296324885, .address = "10.10.4.5"}: -1
AddressGroupAddress{.addressGroup = 250653476791479791971840075253253654180, .address = "10.10.4.4"}: -1
AddressGroupAddress{.addressGroup = 291181118710020130136035873167052365866, .address = "10.10.3.9"}: -1
AddressGroupAddress{.addressGroup = 310940190933221253890865733277244449454, .address = "10.10.5.6"}: -1
AddressGroupAddress{.addressGroup = 315439202690119074714610327856710530138, .address = "10.10.4.7"}: -1
AddressGroupAddress{.addressGroup = 324271088399173558429504239361653168070, .address = "10.10.6.2"}: -1
AddressGroupAddress{.addressGroup = 333792767507096372435127251053319945002, .address = "10.10.3.6"}: -1
AddressGroupAddress{.addressGroup = 338724712949557350203684887888038271713, .address = "10.10.4.3"}: -1
AddressGroupDescr:
AddressGroupDescr{.name = "0f9fbc5c-5a7b-5c5f-9aee-9a43fd621356", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-50]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-50")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "1c975463-0c20-5ec3-9552-7dc30a671eab", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-64]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-64")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "1d0f8788-a5a7-56a5-842e-dfef785034b1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-61]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-61")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "1dae3d30-30b8-5bff-a131-5db10e5e5837", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-59]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-59")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "1f0cec39-f9a3-5773-a5f8-d75c15ebc195", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-60]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-60")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "210240b9-6894-57ce-9c87-05e71d4dfadb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-40]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-40")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "23869241-7820-549f-a94b-50ad97b9fb31", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-37]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-37")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "2d7c595d-9ae7-5c49-a196-9bf7e286c7ae", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-51]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-51")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "34c56586-0b5e-5952-a438-e695a1eaf662", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-33]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-33")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "475c83de-e4e5-51b7-8e62-923c954d24a0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-42]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-42")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "55a30f68-81ce-5650-b9a1-7f0b3689dde6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-55]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-55")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "5a00ebaf-738c-52e4-aa5b-86f171891e67", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-54]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-54")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "602c5722-753f-5d2c-ab9c-9991b7170ddb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-41]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-41")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "641838ad-7bfd-5cd6-a02d-fb5f08f35318", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-38]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-38")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "66501457-d7ea-568b-9e57-2211ab397fce", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-35]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-35")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "71083daa-f480-59d1-a72a-046de2f709db", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-48]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-48")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "71b0271b-444a-5dfd-bd9a-20a347925a84", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-58]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-58")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "71b8a0db-408a-5bdd-954c-0a5c1eadc9d4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-46]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-46")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "785109ce-b196-523d-a25e-126f78b2b7a6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-53]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-53")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "9485d685-c6cd-518f-8452-c787dcb05835", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-34]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-34")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "94d3564e-0363-5fa2-9f6d-be334db4bcb6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-49]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-49")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "98321256-678d-57ed-a5f3-fc3d3571ebaa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-63]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-63")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "a2225ae3-9b53-5d5f-866f-fb4c2eabdc4a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-57]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-57")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "a82b6b17-7be3-5ebf-8d0d-3c47a657b459", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-52]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-52")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "a9f74d5b-ce62-5626-8198-ce25bf81ad15", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-45]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-45")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "bc921a89-938a-5c34-94cc-104ece73c6a4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-44]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-44")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "db0f718e-38be-519e-8247-4318117fe02a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-39]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-39")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "e9ece707-d3a9-56b7-b64f-5e06272be2ae", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-56]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-56")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "ed4f616f-9f03-59f5-8080-968295e9b45a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-47]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-47")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "f3f45705-4e21-5ed2-9f79-2f41496f57c6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-62]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-62")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "fb1e260b-b5c2-546d-970a-3e472dd9fb2a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-36]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-36")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "fed401ba-d98f-5082-b730-1c9d3d891ae1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-43]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-43")], .matchExpressions = []}}}}: -1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 20767815547279998493907012236425171798, .node = "testNode-4"}: -1
AddressGroupSpan{.addressGroup = 38004132277364152320107829778209775275, .node = "testNode-6"}: -1
AddressGroupSpan{.addressGroup = 38628245282234504053248182638842229937, .node = "testNode-6"}: -1
AddressGroupSpan{.addressGroup = 39452312576163401031277279311434766391, .node = "testNode-5"}: -1
AddressGroupSpan{.addressGroup = 41273166673565770432178909612616696213, .node = "testNode-5"}: -1
AddressGroupSpan{.addressGroup = 43876221218409769006807412802117827291, .node = "testNode-3"}: -1
AddressGroupSpan{.addressGroup = 47221714050325705453725051369721297713, .node = "testNode-3"}: -1
AddressGroupSpan{.addressGroup = 60460917171393760924650753449093679022, .node = "testNode-5"}: -1
AddressGroupSpan{.addressGroup = 70144797405409128114114553010962757218, .node = "testNode-3"}: -1
AddressGroupSpan{.addressGroup = 94855553666864199803161217169240171680, .node = "testNode-4"}: -1
AddressGroupSpan{.addressGroup = 113831036545704994957248832178974481894, .node = "testNode-5"}: -1
AddressGroupSpan{.addressGroup = 119635299887588143896536870584846982759, .node = "testNode-5"}: -1
AddressGroupSpan{.addressGroup = 127836115956806847874573849543759564251, .node = "testNode-4"}: -1
AddressGroupSpan{.addressGroup = 133048564262879295471989340890274681624, .node = "testNode-3"}: -1
AddressGroupSpan{.addressGroup = 135997051926608991473280201116356280270, .node = "testNode-3"}: -1
AddressGroupSpan{.addressGroup = 150245552670006731495342494597403576795, .node = "testNode-4"}: -1
AddressGroupSpan{.addressGroup = 151117400945067438640309587197077641860, .node = "testNode-5"}: -1
AddressGroupSpan{.addressGroup = 151161408702144383027448843335256361428, .node = "testNode-4"}: -1
AddressGroupSpan{.addressGroup = 159928134457379710572178241731236640678, .node = "testNode-5"}: -1
AddressGroupSpan{.addressGroup = 197420669892879724015737365903881295925, .node = "testNode-3"}: -1
AddressGroupSpan{.addressGroup = 197823068481389578285940514810756381878, .node = "testNode-4"}: -1
AddressGroupSpan{.addressGroup = 202302642131276625801490600770378263466, .node = "testNode-6"}: -1
AddressGroupSpan{.addressGroup = 215513316860074733245676901009072053322, .node = "testNode-5"}: -1
AddressGroupSpan{.addressGroup = 223535744135199722597700842790109819993, .node = "testNode-5"}: -1
AddressGroupSpan{.addressGroup = 225923597630883948509019350627296324885, .node = "testNode-4"}: -1
AddressGroupSpan{.addressGroup = 250653476791479791971840075253253654180, .node = "testNode-4"}: -1
AddressGroupSpan{.addressGroup = 291181118710020130136035873167052365866, .node = "testNode-3"}: -1
AddressGroupSpan{.addressGroup = 310940190933221253890865733277244449454, .node = "testNode-5"}: -1
AddressGroupSpan{.addressGroup = 315439202690119074714610327856710530138, .node = "testNode-4"}: -1
AddressGroupSpan{.addressGroup = 324271088399173558429504239361653168070, .node = "testNode-6"}: -1
AddressGroupSpan{.addressGroup = 333792767507096372435127251053319945002, .node = "testNode-3"}: -1
AddressGroupSpan{.addressGroup = 338724712949557350203684887888038271713, .node = "testNode-4"}: -1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "0f9fbc5c-5a7b-5c5f-9aee-9a43fd621356", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-50]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-50")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "1d0f8788-a5a7-56a5-842e-dfef785034b1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-61]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-61")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "1dae3d30-30b8-5bff-a131-5db10e5e5837", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-59]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-59")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "1f0cec39-f9a3-5773-a5f8-d75c15ebc195", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-60]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-60")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "210240b9-6894-57ce-9c87-05e71d4dfadb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-40]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-40")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "23869241-7820-549f-a94b-50ad97b9fb31", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-37]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-37")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "2d7c595d-9ae7-5c49-a196-9bf7e286c7ae", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-51]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-51")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "34c56586-0b5e-5952-a438-e695a1eaf662", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-33]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-33")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "475c83de-e4e5-51b7-8e62-923c954d24a0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-42]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-42")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "55a30f68-81ce-5650-b9a1-7f0b3689dde6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-55]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-55")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "5a00ebaf-738c-52e4-aa5b-86f171891e67", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-54]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-54")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "602c5722-753f-5d2c-ab9c-9991b7170ddb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-41]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-41")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "641838ad-7bfd-5cd6-a02d-fb5f08f35318", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-38]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-38")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "66501457-d7ea-568b-9e57-2211ab397fce", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-35]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-35")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "6ce6739e-834b-5cc8-b9f6-0bd7d7a785dd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-32]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-32")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "71083daa-f480-59d1-a72a-046de2f709db", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-48]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-48")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "71b0271b-444a-5dfd-bd9a-20a347925a84", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-58]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-58")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "71b8a0db-408a-5bdd-954c-0a5c1eadc9d4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-46]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-46")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "785109ce-b196-523d-a25e-126f78b2b7a6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-53]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-53")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "9485d685-c6cd-518f-8452-c787dcb05835", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-34]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-34")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "94d3564e-0363-5fa2-9f6d-be334db4bcb6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-49]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-49")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "98321256-678d-57ed-a5f3-fc3d3571ebaa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-63]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-63")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "a2225ae3-9b53-5d5f-866f-fb4c2eabdc4a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-57]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-57")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "a82b6b17-7be3-5ebf-8d0d-3c47a657b459", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-52]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-52")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "a9f74d5b-ce62-5626-8198-ce25bf81ad15", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-45]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-45")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "bc921a89-938a-5c34-94cc-104ece73c6a4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-44]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-44")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "db0f718e-38be-519e-8247-4318117fe02a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-39]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-39")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "e9ece707-d3a9-56b7-b64f-5e06272be2ae", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-56]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-56")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "ed4f616f-9f03-59f5-8080-968295e9b45a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-47]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-47")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "f3f45705-4e21-5ed2-9f79-2f41496f57c6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-62]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-62")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "fb1e260b-b5c2-546d-970a-3e472dd9fb2a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-36]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-36")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "fed401ba-d98f-5082-b730-1c9d3d891ae1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-43]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-43")], .matchExpressions = []}}}}: -1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 20767815547279998493907012236425171798, .node = "testNode-5", .pods = [k8spolicy.PodReference{.name = "testPod-50", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 38628245282234504053248182638842229937, .node = "testNode-6", .pods = [k8spolicy.PodReference{.name = "testPod-61", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 39452312576163401031277279311434766391, .node = "testNode-5", .pods = [k8spolicy.PodReference{.name = "testPod-59", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 41273166673565770432178909612616696213, .node = "testNode-6", .pods = [k8spolicy.PodReference{.name = "testPod-60", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 43876221218409769006807412802117827291, .node = "testNode-4", .pods = [k8spolicy.PodReference{.name = "testPod-40", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 47221714050325705453725051369721297713, .node = "testNode-3", .pods = [k8spolicy.PodReference{.name = "testPod-37", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 60460917171393760924650753449093679022, .node = "testNode-5", .pods = [k8spolicy.PodReference{.name = "testPod-51", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 70144797405409128114114553010962757218, .node = "testNode-3", .pods = [k8spolicy.PodReference{.name = "testPod-33", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 94855553666864199803161217169240171680, .node = "testNode-4", .pods = [k8spolicy.PodReference{.name = "testPod-42", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 113831036545704994957248832178974481894, .node = "testNode-5", .pods = [k8spolicy.PodReference{.name = "testPod-55", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 119635299887588143896536870584846982759, .node = "testNode-5", .pods = [k8spolicy.PodReference{.name = "testPod-54", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 127836115956806847874573849543759564251, .node = "testNode-4", .pods = [k8spolicy.PodReference{.name = "testPod-41", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 133048564262879295471989340890274681624, .node = "testNode-3", .pods = [k8spolicy.PodReference{.name = "testPod-38", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 135997051926608991473280201116356280270, .node = "testNode-3", .pods = [k8spolicy.PodReference{.name = "testPod-35", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 144753196858021665707569721083110589917, .node = "testNode-3", .pods = [k8spolicy.PodReference{.name = "testPod-32", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 150245552670006731495342494597403576795, .node = "testNode-4", .pods = [k8spolicy.PodReference{.name = "testPod-48", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 151117400945067438640309587197077641860, .node = "testNode-5", .pods = [k8spolicy.PodReference{.name = "testPod-58", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 151161408702144383027448843335256361428, .node = "testNode-4", .pods = [k8spolicy.PodReference{.name = "testPod-46", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 159928134457379710572178241731236640678, .node = "testNode-5", .pods = [k8spolicy.PodReference{.name = "testPod-53", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 197420669892879724015737365903881295925, .node = "testNode-3", .pods = [k8spolicy.PodReference{.name = "testPod-34", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 197823068481389578285940514810756381878, .node = "testNode-4", .pods = [k8spolicy.PodReference{.name = "testPod-49", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 202302642131276625801490600770378263466, .node = "testNode-6", .pods = [k8spolicy.PodReference{.name = "testPod-63", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 215513316860074733245676901009072053322, .node = "testNode-5", .pods = [k8spolicy.PodReference{.name = "testPod-57", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 223535744135199722597700842790109819993, .node = "testNode-5", .pods = [k8spolicy.PodReference{.name = "testPod-52", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 225923597630883948509019350627296324885, .node = "testNode-4", .pods = [k8spolicy.PodReference{.name = "testPod-45", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 250653476791479791971840075253253654180, .node = "testNode-4", .pods = [k8spolicy.PodReference{.name = "testPod-44", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 291181118710020130136035873167052365866, .node = "testNode-3", .pods = [k8spolicy.PodReference{.name = "testPod-39", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 310940190933221253890865733277244449454, .node = "testNode-5", .pods = [k8spolicy.PodReference{.name = "testPod-56", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 315439202690119074714610327856710530138, .node = "testNode-4", .pods = [k8spolicy.PodReference{.name = "testPod-47", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 324271088399173558429504239361653168070, .node = "testNode-6", .pods = [k8spolicy.PodReference{.name = "testPod-62", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 333792767507096372435127251053319945002, .node = "testNode-3", .pods = [k8spolicy.PodReference{.name = "testPod-36", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 338724712949557350203684887888038271713, .node = "testNode-4", .pods = [k8spolicy.PodReference{.name = "testPod-43", .namespace = "testNamespace"}]}: -1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 20767815547279998493907012236425171798, .span = "testNode-5"}: -1
AppliedToGroupSpan{.appliedToGroup = 38628245282234504053248182638842229937, .span = "testNode-6"}: -1
AppliedToGroupSpan{.appliedToGroup = 39452312576163401031277279311434766391, .span = "testNode-5"}: -1
AppliedToGroupSpan{.appliedToGroup = 41273166673565770432178909612616696213, .span = "testNode-6"}: -1
AppliedToGroupSpan{.appliedToGroup = 43876221218409769006807412802117827291, .span = "testNode-4"}: -1
AppliedToGroupSpan{.appliedToGroup = 47221714050325705453725051369721297713, .span = "testNode-3"}: -1
AppliedToGroupSpan{.appliedToGroup = 60460917171393760924650753449093679022, .span = "testNode-5"}: -1
AppliedToGroupSpan{.appliedToGroup = 70144797405409128114114553010962757218, .span = "testNode-3"}: -1
AppliedToGroupSpan{.appliedToGroup = 94855553666864199803161217169240171680, .span = "testNode-4"}: -1
AppliedToGroupSpan{.appliedToGroup = 113831036545704994957248832178974481894, .span = "testNode-5"}: -1
AppliedToGroupSpan{.appliedToGroup = 119635299887588143896536870584846982759, .span = "testNode-5"}: -1
AppliedToGroupSpan{.appliedToGroup = 127836115956806847874573849543759564251, .span = "testNode-4"}: -1
AppliedToGroupSpan{.appliedToGroup = 133048564262879295471989340890274681624, .span = "testNode-3"}: -1
AppliedToGroupSpan{.appliedToGroup = 135997051926608991473280201116356280270, .span = "testNode-3"}: -1
AppliedToGroupSpan{.appliedToGroup = 144753196858021665707569721083110589917, .span = "testNode-3"}: -1
AppliedToGroupSpan{.appliedToGroup = 150245552670006731495342494597403576795, .span = "testNode-4"}: -1
AppliedToGroupSpan{.appliedToGroup = 151117400945067438640309587197077641860, .span = "testNode-5"}: -1
AppliedToGroupSpan{.appliedToGroup = 151161408702144383027448843335256361428, .span = "testNode-4"}: -1
AppliedToGroupSpan{.appliedToGroup = 159928134457379710572178241731236640678, .span = "testNode-5"}: -1
AppliedToGroupSpan{.appliedToGroup = 197420669892879724015737365903881295925, .span = "testNode-3"}: -1
AppliedToGroupSpan{.appliedToGroup = 197823068481389578285940514810756381878, .span = "testNode-4"}: -1
AppliedToGroupSpan{.appliedToGroup = 202302642131276625801490600770378263466, .span = "testNode-6"}: -1
AppliedToGroupSpan{.appliedToGroup = 215513316860074733245676901009072053322, .span = "testNode-5"}: -1
AppliedToGroupSpan{.appliedToGroup = 223535744135199722597700842790109819993, .span = "testNode-5"}: -1
AppliedToGroupSpan{.appliedToGroup = 225923597630883948509019350627296324885, .span = "testNode-4"}: -1
AppliedToGroupSpan{.appliedToGroup = 250653476791479791971840075253253654180, .span = "testNode-4"}: -1
AppliedToGroupSpan{.appliedToGroup = 291181118710020130136035873167052365866, .span = "testNode-3"}: -1
AppliedToGroupSpan{.appliedToGroup = 310940190933221253890865733277244449454, .span = "testNode-5"}: -1
AppliedToGroupSpan{.appliedToGroup = 315439202690119074714610327856710530138, .span = "testNode-4"}: -1
AppliedToGroupSpan{.appliedToGroup = 324271088399173558429504239361653168070, .span = "testNode-6"}: -1
AppliedToGroupSpan{.appliedToGroup = 333792767507096372435127251053319945002, .span = "testNode-3"}: -1
AppliedToGroupSpan{.appliedToGroup = 338724712949557350203684887888038271713, .span = "testNode-4"}: -1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-32"}, .name = "testNP-32", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [70144797405409128114114553010962757218], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [144753196858021665707569721083110589917]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-33"}, .name = "testNP-33", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [197420669892879724015737365903881295925], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [70144797405409128114114553010962757218]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-34"}, .name = "testNP-34", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [135997051926608991473280201116356280270], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [197420669892879724015737365903881295925]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-35"}, .name = "testNP-35", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [333792767507096372435127251053319945002], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [135997051926608991473280201116356280270]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-36"}, .name = "testNP-36", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [47221714050325705453725051369721297713], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [333792767507096372435127251053319945002]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-37"}, .name = "testNP-37", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [133048564262879295471989340890274681624], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [47221714050325705453725051369721297713]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-38"}, .name = "testNP-38", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [291181118710020130136035873167052365866], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [133048564262879295471989340890274681624]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-39"}, .name = "testNP-39", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [43876221218409769006807412802117827291], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [291181118710020130136035873167052365866]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-40"}, .name = "testNP-40", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [127836115956806847874573849543759564251], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [43876221218409769006807412802117827291]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-41"}, .name = "testNP-41", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [94855553666864199803161217169240171680], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [127836115956806847874573849543759564251]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-42"}, .name = "testNP-42", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [338724712949557350203684887888038271713], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [94855553666864199803161217169240171680]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-43"}, .name = "testNP-43", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [250653476791479791971840075253253654180], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [338724712949557350203684887888038271713]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-44"}, .name = "testNP-44", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [225923597630883948509019350627296324885], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [250653476791479791971840075253253654180]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-45"}, .name = "testNP-45", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [151161408702144383027448843335256361428], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [225923597630883948509019350627296324885]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-46"}, .name = "testNP-46", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [315439202690119074714610327856710530138], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [151161408702144383027448843335256361428]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-47"}, .name = "testNP-47", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [150245552670006731495342494597403576795], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [315439202690119074714610327856710530138]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-48"}, .name = "testNP-48", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [197823068481389578285940514810756381878], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [150245552670006731495342494597403576795]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-49"}, .name = "testNP-49", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [20767815547279998493907012236425171798], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [197823068481389578285940514810756381878]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-50"}, .name = "testNP-50", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [60460917171393760924650753449093679022], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [20767815547279998493907012236425171798]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-51"}, .name = "testNP-51", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [223535744135199722597700842790109819993], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [60460917171393760924650753449093679022]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-52"}, .name = "testNP-52", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [159928134457379710572178241731236640678], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [223535744135199722597700842790109819993]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-53"}, .name = "testNP-53", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [119635299887588143896536870584846982759], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [159928134457379710572178241731236640678]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-54"}, .name = "testNP-54", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [113831036545704994957248832178974481894], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [119635299887588143896536870584846982759]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-55"}, .name = "testNP-55", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [310940190933221253890865733277244449454], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [113831036545704994957248832178974481894]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-56"}, .name = "testNP-56", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [215513316860074733245676901009072053322], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [310940190933221253890865733277244449454]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-57"}, .name = "testNP-57", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [151117400945067438640309587197077641860], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [215513316860074733245676901009072053322]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-58"}, .name = "testNP-58", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [39452312576163401031277279311434766391], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [151117400945067438640309587197077641860]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-59"}, .name = "testNP-59", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [41273166673565770432178909612616696213], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [39452312576163401031277279311434766391]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-60"}, .name = "testNP-60", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [38628245282234504053248182638842229937], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [41273166673565770432178909612616696213]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-61"}, .name = "testNP-61", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [324271088399173558429504239361653168070], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [38628245282234504053248182638842229937]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-62"}, .name = "testNP-62", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [202302642131276625801490600770378263466], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [324271088399173558429504239361653168070]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-63"}, .name = "testNP-63", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [38004132277364152320107829778209775275], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [202302642131276625801490600770378263466]}: -1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-32", .policy = k8spolicy.UID{.uid = "testNP-32"}, .node = "testNode-3"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-33", .policy = k8spolicy.UID{.uid = "testNP-33"}, .node = "testNode-3"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-34", .policy = k8spolicy.UID{.uid = "testNP-34"}, .node = "testNode-3"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-35", .policy = k8spolicy.UID{.uid = "testNP-35"}, .node = "testNode-3"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-36", .policy = k8spolicy.UID{.uid = "testNP-36"}, .node = "testNode-3"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-37", .policy = k8spolicy.UID{.uid = "testNP-37"}, .node = "testNode-3"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-38", .policy = k8spolicy.UID{.uid = "testNP-38"}, .node = "testNode-3"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-39", .policy = k8spolicy.UID{.uid = "testNP-39"}, .node = "testNode-3"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-40", .policy = k8spolicy.UID{.uid = "testNP-40"}, .node = "testNode-4"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-41", .policy = k8spolicy.UID{.uid = "testNP-41"}, .node = "testNode-4"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-42", .policy = k8spolicy.UID{.uid = "testNP-42"}, .node = "testNode-4"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-43", .policy = k8spolicy.UID{.uid = "testNP-43"}, .node = "testNode-4"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-44", .policy = k8spolicy.UID{.uid = "testNP-44"}, .node = "testNode-4"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-45", .policy = k8spolicy.UID{.uid = "testNP-45"}, .node = "testNode-4"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-46", .policy = k8spolicy.UID{.uid = "testNP-46"}, .node = "testNode-4"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-47", .policy = k8spolicy.UID{.uid = "testNP-47"}, .node = "testNode-4"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-48", .policy = k8spolicy.UID{.uid = "testNP-48"}, .node = "testNode-4"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-49", .policy = k8spolicy.UID{.uid = "testNP-49"}, .node = "testNode-4"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-50", .policy = k8spolicy.UID{.uid = "testNP-50"}, .node = "testNode-5"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-51", .policy = k8spolicy.UID{.uid = "testNP-51"}, .node = "testNode-5"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-52", .policy = k8spolicy.UID{.uid = "testNP-52"}, .node = "testNode-5"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-53", .policy = k8spolicy.UID{.uid = "testNP-53"}, .node = "testNode-5"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-54", .policy = k8spolicy.UID{.uid = "testNP-54"}, .node = "testNode-5"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-55", .policy = k8spolicy.UID{.uid = "testNP-55"}, .node = "testNode-5"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-56", .policy = k8spolicy.UID{.uid = "testNP-56"}, .node = "testNode-5"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-57", .policy = k8spolicy.UID{.uid = "testNP-57"}, .node = "testNode-5"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-58", .policy = k8spolicy.UID{.uid = "testNP-58"}, .node = "testNode-5"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-59", .policy = k8spolicy.UID{.uid = "testNP-59"}, .node = "testNode-5"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-60", .policy = k8spolicy.UID{.uid = "testNP-60"}, .node = "testNode-6"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-61", .policy = k8spolicy.UID{.uid = "testNP-61"}, .node = "testNode-6"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-62", .policy = k8spolicy.UID{.uid = "testNP-62"}, .node = "testNode-6"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-63", .policy = k8spolicy.UID{.uid = "testNP-63"}, .node = "testNode-6"}: -1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 22210396090670704327531025234772154740, .address = "10.10.9.0"}: -1
AddressGroupAddress{.addressGroup = 22861342794206303209929185441815622320, .address = "10.10.8.5"}: -1
AddressGroupAddress{.addressGroup = 35184666245455068155766600872485278590, .address = "10.10.7.8"}: -1
AddressGroupAddress{.addressGroup = 43808627284850999836440511680257005060, .address = "10.10.6.6"}: -1
AddressGroupAddress{.addressGroup = 60386306182705873281447315111536782089, .address = "10.10.9.3"}: -1
AddressGroupAddress{.addressGroup = 64948609301626119424448148183788342866, .address = "10.10.9.2"}: -1
AddressGroupAddress{.addressGroup = 70580325334576926992948232860341253201, .address = "10.10.7.5"}: -1
AddressGroupAddress{.addressGroup = 83361076002547028554621603357616584295, .address = "10.10.6.7"}: -1
AddressGroupAddress{.addressGroup = 101518538893632532406007965810177493869, .address = "10.10.8.0"}: -1
AddressGroupAddress{.addressGroup = 112299973715776994013371347923002599379, .address = "10.10.7.2"}: -1
AddressGroupAddress{.addressGroup = 136531156628800201268540616835061467659, .address = "10.10.9.5"}: -1
AddressGroupAddress{.addressGroup = 136744418091426290396479365750407022099, .address = "10.10.8.1"}: -1
AddressGroupAddress{.addressGroup = 146555467124840070340015562061588014158, .address = "10.10.9.1"}: -1
AddressGroupAddress{.addressGroup = 151905872123989268088239396191728799111, .address = "10.10.6.5"}: -1
AddressGroupAddress{.addressGroup = 156721006097654111554548022160434781123, .address = "10.10.7.9"}: -1
AddressGroupAddress{.addressGroup = 180337676044367460640997715204112802096, .address = "10.10.8.3"}: -1
AddressGroupAddress{.addressGroup = 187899322683655706681824521420354734939, .address = "10.10.9.6"}: -1
AddressGroupAddress{.addressGroup = 198898627122014703402066283836612161345, .address = "10.10.8.2"}: -1
AddressGroupAddress{.addressGroup = 207062112071959762746330428969528801157, .address = "10.10.7.3"}: -1
AddressGroupAddress{.addressGroup = 216079185330943871065821579875144935337, .address = "10.10.7.4"}: -1
AddressGroupAddress{.addressGroup = 223955728476299927111283106740832335974, .address = "10.10.8.8"}: -1
AddressGroupAddress{.addressGroup = 225258361982660033586696895651733671374, .address = "10.10.6.8"}: -1
AddressGroupAddress{.addressGroup = 241668530693184253737879454563077500169, .address = "10.10.7.6"}: -1
AddressGroupAddress{.addressGroup = 243420142607871313129022015229202740915, .address = "10.10.8.7"}: -1
AddressGroupAddress{.addressGroup = 243953198337152849466731736236542213108, .address = "10.10.8.9"}: -1
AddressGroupAddress{.addressGroup = 252838272729494038051191256155543415249, .address = "10.10.8.4"}: -1
AddressGroupAddress{.addressGroup = 268407614332431288519984878690122756601, .address = "10.10.8.6"}: -1
AddressGroupAddress{.addressGroup = 271035497562104608376238663622262080518, .address = "10.10.7.0"}: -1
AddressGroupAddress{.addressGroup = 281202759973643394147461313037128163534, .address = "10.10.7.1"}: -1
AddressGroupAddress{.addressGroup = 292709995959071864261371376180066479171, .address = "10.10.6.9"}: -1
AddressGroupAddress{.addressGroup = 323858756633658217275083867718577893925, .address = "10.10.9.4"}: -1
AddressGroupAddress{.addressGroup = 323906248563065033049990240949028664315, .address = "10.10.7.7"}: -1
AddressGroupDescr:
AddressGroupDescr{.name = "10b59112-a57e-5d49-968b-9f862c18d974", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-90]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-90")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "1132ef39-23a8-50b0-832a-4e2d43e672b0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-85]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-85")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "1a7851fa-a0ed-5c12-b4e0-6131bc09537e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-78]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-78")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "20f53c16-05ce-54e7-ae47-396d24111604", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-66]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-66")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "2d6dfac2-8829-539a-b265-c63a13346b09", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-93]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-93")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "30dca5ab-9fda-5d4c-8615-48e88970ce52", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-92]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-92")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "351946b5-58ff-5208-85f5-88334f3e3451", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-75]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-75")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "3eb6c25e-0252-58bf-b260-387044d53667", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-67]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-67")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "4c5fc267-d043-5294-9044-61ec13124b6d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-80]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-80")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "547c302e-bf61-5241-be2f-d5d117fa27d3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-72]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-72")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "66b6f1bc-f1f0-50be-a451-a991f5bf4a0b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-95]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-95")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "66e00457-0849-5184-bf00-abca386fc613", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-81]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-81")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "6e418e67-6108-51aa-9efd-15ab697d244e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-91]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-91")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "724801bc-ac83-557b-b23e-987677738d87", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-65]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-65")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "75e75e2b-cc28-5038-bc0c-b760d589dbc3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-79]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-79")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "87abc5e5-eac1-5746-8fcc-5a7c58a66130", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-83]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-83")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "8d5c17dc-85b5-55db-ba20-2565a735cb5b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-96]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-96")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "95a27b70-9e78-5dc7-826b-fb7baa062f41", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-82]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-82")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "9bc6b652-a82f-57cd-9a60-91ce90eb3785", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-73]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-73")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "a28f565b-d559-57df-ba26-e0167663a7a9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-74]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-74")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "a87c4deb-1fb9-5126-b493-cda9d5907866", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-88]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-88")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "a9772eb5-79d4-5e3e-9b39-c76348a18dce", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-68]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-68")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "b5cfaa7e-2d4a-5223-8550-75d22758ad09", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-76]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-76")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "b72103a0-bf2c-5823-b0f8-5ba0e64b36b3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-87]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-87")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "b787ad4d-f2ec-58ae-8a53-eb5575093bf4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-89]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-89")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "be36e14b-32d0-59d6-a7c5-aafc86f1a9d1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-84]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-84")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "c9ed6d19-c495-52d4-b1b7-1750965a71f9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-86]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-86")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "cbe789bf-430c-5438-a094-736e589d4406", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-70]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-70")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "d38dae7c-8908-5aeb-85fa-35c607f3e0ce", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-71]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-71")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "dc35e506-127b-51f2-a292-a61d8edb6c43", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-69]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-69")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "f3a4ed7e-bf9b-51b2-a75d-becfe6013225", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-94]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-94")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "f3ae1307-2bd5-5fc8-81c8-d5945eaa33fb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-77]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-77")], .matchExpressions = []}}}}: -1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 22210396090670704327531025234772154740, .node = "testNode-8"}: -1
AddressGroupSpan{.addressGroup = 22861342794206303209929185441815622320, .node = "testNode-8"}: -1
AddressGroupSpan{.addressGroup = 35184666245455068155766600872485278590, .node = "testNode-7"}: -1
AddressGroupSpan{.addressGroup = 43808627284850999836440511680257005060, .node = "testNode-6"}: -1
AddressGroupSpan{.addressGroup = 60386306182705873281447315111536782089, .node = "testNode-9"}: -1
AddressGroupSpan{.addressGroup = 64948609301626119424448148183788342866, .node = "testNode-9"}: -1
AddressGroupSpan{.addressGroup = 70580325334576926992948232860341253201, .node = "testNode-7"}: -1
AddressGroupSpan{.addressGroup = 83361076002547028554621603357616584295, .node = "testNode-6"}: -1
AddressGroupSpan{.addressGroup = 101518538893632532406007965810177493869, .node = "testNode-7"}: -1
AddressGroupSpan{.addressGroup = 112299973715776994013371347923002599379, .node = "testNode-7"}: -1
AddressGroupSpan{.addressGroup = 136531156628800201268540616835061467659, .node = "testNode-9"}: -1
AddressGroupSpan{.addressGroup = 136744418091426290396479365750407022099, .node = "testNode-8"}: -1
AddressGroupSpan{.addressGroup = 146555467124840070340015562061588014158, .node = "testNode-9"}: -1
AddressGroupSpan{.addressGroup = 151905872123989268088239396191728799111, .node = "testNode-6"}: -1
AddressGroupSpan{.addressGroup = 156721006097654111554548022160434781123, .node = "testNode-7"}: -1
AddressGroupSpan{.addressGroup = 180337676044367460640997715204112802096, .node = "testNode-8"}: -1
AddressGroupSpan{.addressGroup = 187899322683655706681824521420354734939, .node = "testNode-9"}: -1
AddressGroupSpan{.addressGroup = 198898627122014703402066283836612161345, .node = "testNode-8"}: -1
AddressGroupSpan{.addressGroup = 207062112071959762746330428969528801157, .node = "testNode-7"}: -1
AddressGroupSpan{.addressGroup = 216079185330943871065821579875144935337, .node = "testNode-7"}: -1
AddressGroupSpan{.addressGroup = 223955728476299927111283106740832335974, .node = "testNode-8"}: -1
AddressGroupSpan{.addressGroup = 225258361982660033586696895651733671374, .node = "testNode-6"}: -1
AddressGroupSpan{.addressGroup = 241668530693184253737879454563077500169, .node = "testNode-7"}: -1
AddressGroupSpan{.addressGroup = 243420142607871313129022015229202740915, .node = "testNode-8"}: -1
AddressGroupSpan{.addressGroup = 243953198337152849466731736236542213108, .node = "testNode-8"}: -1
AddressGroupSpan{.addressGroup = 252838272729494038051191256155543415249, .node = "testNode-8"}: -1
AddressGroupSpan{.addressGroup = 268407614332431288519984878690122756601, .node = "testNode-8"}: -1
AddressGroupSpan{.addressGroup = 271035497562104608376238663622262080518, .node = "testNode-6"}: -1
AddressGroupSpan{.addressGroup = 281202759973643394147461313037128163534, .node = "testNode-7"}: -1
AddressGroupSpan{.addressGroup = 292709995959071864261371376180066479171, .node = "testNode-6"}: -1
AddressGroupSpan{.addressGroup = 323858756633658217275083867718577893925, .node = "testNode-9"}: -1
AddressGroupSpan{.addressGroup = 323906248563065033049990240949028664315, .node = "testNode-7"}: -1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "10b59112-a57e-5d49-968b-9f862c18d974", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-90]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-90")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "1132ef39-23a8-50b0-832a-4e2d43e672b0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-85]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-85")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "1a7851fa-a0ed-5c12-b4e0-6131bc09537e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-78]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-78")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "1c975463-0c20-5ec3-9552-7dc30a671eab", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-64]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-64")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "20f53c16-05ce-54e7-ae47-396d24111604", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-66]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-66")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "2d6dfac2-8829-539a-b265-c63a13346b09", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-93]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-93")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "30dca5ab-9fda-5d4c-8615-48e88970ce52", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-92]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-92")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "351946b5-58ff-5208-85f5-88334f3e3451", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-75]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-75")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "3eb6c25e-0252-58bf-b260-387044d53667", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-67]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-67")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "4c5fc267-d043-5294-9044-61ec13124b6d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-80]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-80")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "547c302e-bf61-5241-be2f-d5d117fa27d3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-72]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-72")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "66b6f1bc-f1f0-50be-a451-a991f5bf4a0b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-95]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-95")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "66e00457-0849-5184-bf00-abca386fc613", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-81]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-81")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "6e418e67-6108-51aa-9efd-15ab697d244e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-91]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-91")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "724801bc-ac83-557b-b23e-987677738d87", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-65]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-65")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "75e75e2b-cc28-5038-bc0c-b760d589dbc3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-79]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-79")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "87abc5e5-eac1-5746-8fcc-5a7c58a66130", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-83]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-83")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "95a27b70-9e78-5dc7-826b-fb7baa062f41", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-82]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-82")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "9bc6b652-a82f-57cd-9a60-91ce90eb3785", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-73]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-73")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "a28f565b-d559-57df-ba26-e0167663a7a9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-74]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-74")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "a87c4deb-1fb9-5126-b493-cda9d5907866", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-88]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-88")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "a9772eb5-79d4-5e3e-9b39-c76348a18dce", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-68]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-68")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "b5cfaa7e-2d4a-5223-8550-75d22758ad09", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-76]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-76")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "b72103a0-bf2c-5823-b0f8-5ba0e64b36b3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-87]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-87")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "b787ad4d-f2ec-58ae-8a53-eb5575093bf4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-89]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-89")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "be36e14b-32d0-59d6-a7c5-aafc86f1a9d1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-84]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-84")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "c9ed6d19-c495-52d4-b1b7-1750965a71f9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-86]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-86")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "cbe789bf-430c-5438-a094-736e589d4406", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-70]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-70")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "d38dae7c-8908-5aeb-85fa-35c607f3e0ce", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-71]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-71")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "dc35e506-127b-51f2-a292-a61d8edb6c43", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-69]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-69")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "f3a4ed7e-bf9b-51b2-a75d-becfe6013225", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-94]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-94")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "f3ae1307-2bd5-5fc8-81c8-d5945eaa33fb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-77]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-77")], .matchExpressions = []}}}}: -1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 22210396090670704327531025234772154740, .node = "testNode-9", .pods = [k8spolicy.PodReference{.name = "testPod-90", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 22861342794206303209929185441815622320, .node = "testNode-8", .pods = [k8spolicy.PodReference{.name = "testPod-85", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 35184666245455068155766600872485278590, .node = "testNode-7", .pods = [k8spolicy.PodReference{.name = "testPod-78", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 38004132277364152320107829778209775275, .node = "testNode-6", .pods = [k8spolicy.PodReference{.name = "testPod-64", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 43808627284850999836440511680257005060, .node = "testNode-6", .pods = [k8spolicy.PodReference{.name = "testPod-66", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 60386306182705873281447315111536782089, .node = "testNode-9", .pods = [k8spolicy.PodReference{.name = "testPod-93", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 64948609301626119424448148183788342866, .node = "testNode-9", .pods = [k8spolicy.PodReference{.name = "testPod-92", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 70580325334576926992948232860341253201, .node = "testNode-7", .pods = [k8spolicy.PodReference{.name = "testPod-75", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 83361076002547028554621603357616584295, .node = "testNode-6", .pods = [k8spolicy.PodReference{.name = "testPod-67", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 101518538893632532406007965810177493869, .node = "testNode-8", .pods = [k8spolicy.PodReference{.name = "testPod-80", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 112299973715776994013371347923002599379, .node = "testNode-7", .pods = [k8spolicy.PodReference{.name = "testPod-72", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 136531156628800201268540616835061467659, .node = "testNode-9", .pods = [k8spolicy.PodReference{.name = "testPod-95", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 136744418091426290396479365750407022099, .node = "testNode-8", .pods = [k8spolicy.PodReference{.name = "testPod-81", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 146555467124840070340015562061588014158, .node = "testNode-9", .pods = [k8spolicy.PodReference{.name = "testPod-91", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 151905872123989268088239396191728799111, .node = "testNode-6", .pods = [k8spolicy.PodReference{.name = "testPod-65", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 156721006097654111554548022160434781123, .node = "testNode-7", .pods = [k8spolicy.PodReference{.name = "testPod-79", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 180337676044367460640997715204112802096, .node = "testNode-8", .pods = [k8spolicy.PodReference{.name = "testPod-83", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 198898627122014703402066283836612161345, .node = "testNode-8", .pods = [k8spolicy.PodReference{.name = "testPod-82", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 207062112071959762746330428969528801157, .node = "testNode-7", .pods = [k8spolicy.PodReference{.name = "testPod-73", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 216079185330943871065821579875144935337, .node = "testNode-7", .pods = [k8spolicy.PodReference{.name = "testPod-74", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 223955728476299927111283106740832335974, .node = "testNode-8", .pods = [k8spolicy.PodReference{.name = "testPod-88", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 225258361982660033586696895651733671374, .node = "testNode-6", .pods = [k8spolicy.PodReference{.name = "testPod-68", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 241668530693184253737879454563077500169, .node = "testNode-7", .pods = [k8spolicy.PodReference{.name = "testPod-76", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 243420142607871313129022015229202740915, .node = "testNode-8", .pods = [k8spolicy.PodReference{.name = "testPod-87", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 243953198337152849466731736236542213108, .node = "testNode-8", .pods = [k8spolicy.PodReference{.name = "testPod-89", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 252838272729494038051191256155543415249, .node = "testNode-8", .pods = [k8spolicy.PodReference{.name = "testPod-84", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 268407614332431288519984878690122756601, .node = "testNode-8", .pods = [k8spolicy.PodReference{.name = "testPod-86", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 271035497562104608376238663622262080518, .node = "testNode-7", .pods = [k8spolicy.PodReference{.name = "testPod-70", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 281202759973643394147461313037128163534, .node = "testNode-7", .pods = [k8spolicy.PodReference{.name = "testPod-71", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 292709995959071864261371376180066479171, .node = "testNode-6", .pods = [k8spolicy.PodReference{.name = "testPod-69", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 323858756633658217275083867718577893925, .node = "testNode-9", .pods = [k8spolicy.PodReference{.name = "testPod-94", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 323906248563065033049990240949028664315, .node = "testNode-7", .pods = [k8spolicy.PodReference{.name = "testPod-77", .namespace = "testNamespace"}]}: -1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 22210396090670704327531025234772154740, .span = "testNode-9"}: -1
AppliedToGroupSpan{.appliedToGroup = 22861342794206303209929185441815622320, .span = "testNode-8"}: -1
AppliedToGroupSpan{.appliedToGroup = 35184666245455068155766600872485278590, .span = "testNode-7"}: -1
AppliedToGroupSpan{.appliedToGroup = 38004132277364152320107829778209775275, .span = "testNode-6"}: -1
AppliedToGroupSpan{.appliedToGroup = 43808627284850999836440511680257005060, .span = "testNode-6"}: -1
AppliedToGroupSpan{.appliedToGroup = 60386306182705873281447315111536782089, .span = "testNode-9"}: -1
AppliedToGroupSpan{.appliedToGroup = 64948609301626119424448148183788342866, .span = "testNode-9"}: -1
AppliedToGroupSpan{.appliedToGroup = 70580325334576926992948232860341253201, .span = "testNode-7"}: -1
AppliedToGroupSpan{.appliedToGroup = 83361076002547028554621603357616584295, .span = "testNode-6"}: -1
AppliedToGroupSpan{.appliedToGroup = 101518538893632532406007965810177493869, .span = "testNode-8"}: -1
AppliedToGroupSpan{.appliedToGroup = 112299973715776994013371347923002599379, .span = "testNode-7"}: -1
AppliedToGroupSpan{.appliedToGroup = 136531156628800201268540616835061467659, .span = "testNode-9"}: -1
AppliedToGroupSpan{.appliedToGroup = 136744418091426290396479365750407022099, .span = "testNode-8"}: -1
AppliedToGroupSpan{.appliedToGroup = 146555467124840070340015562061588014158, .span = "testNode-9"}: -1
AppliedToGroupSpan{.appliedToGroup = 151905872123989268088239396191728799111, .span = "testNode-6"}: -1
AppliedToGroupSpan{.appliedToGroup = 156721006097654111554548022160434781123, .span = "testNode-7"}: -1
AppliedToGroupSpan{.appliedToGroup = 180337676044367460640997715204112802096, .span = "testNode-8"}: -1
AppliedToGroupSpan{.appliedToGroup = 198898627122014703402066283836612161345, .span = "testNode-8"}: -1
AppliedToGroupSpan{.appliedToGroup = 207062112071959762746330428969528801157, .span = "testNode-7"}: -1
AppliedToGroupSpan{.appliedToGroup = 216079185330943871065821579875144935337, .span = "testNode-7"}: -1
AppliedToGroupSpan{.appliedToGroup = 223955728476299927111283106740832335974, .span = "testNode-8"}: -1
AppliedToGroupSpan{.appliedToGroup = 225258361982660033586696895651733671374, .span = "testNode-6"}: -1
AppliedToGroupSpan{.appliedToGroup = 241668530693184253737879454563077500169, .span = "testNode-7"}: -1
AppliedToGroupSpan{.appliedToGroup = 243420142607871313129022015229202740915, .span = "testNode-8"}: -1
AppliedToGroupSpan{.appliedToGroup = 243953198337152849466731736236542213108, .span = "testNode-8"}: -1
AppliedToGroupSpan{.appliedToGroup = 252838272729494038051191256155543415249, .span = "testNode-8"}: -1
AppliedToGroupSpan{.appliedToGroup = 268407614332431288519984878690122756601, .span = "testNode-8"}: -1
AppliedToGroupSpan{.appliedToGroup = 271035497562104608376238663622262080518, .span = "testNode-7"}: -1
AppliedToGroupSpan{.appliedToGroup = 281202759973643394147461313037128163534, .span = "testNode-7"}: -1
AppliedToGroupSpan{.appliedToGroup = 292709995959071864261371376180066479171, .span = "testNode-6"}: -1
AppliedToGroupSpan{.appliedToGroup = 323858756633658217275083867718577893925, .span = "testNode-9"}: -1
AppliedToGroupSpan{.appliedToGroup = 323906248563065033049990240949028664315, .span = "testNode-7"}: -1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-64"}, .name = "testNP-64", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [151905872123989268088239396191728799111], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [38004132277364152320107829778209775275]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-65"}, .name = "testNP-65", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [43808627284850999836440511680257005060], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [151905872123989268088239396191728799111]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-66"}, .name = "testNP-66", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [83361076002547028554621603357616584295], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [43808627284850999836440511680257005060]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-67"}, .name = "testNP-67", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [225258361982660033586696895651733671374], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [83361076002547028554621603357616584295]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-68"}, .name = "testNP-68", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [292709995959071864261371376180066479171], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [225258361982660033586696895651733671374]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-69"}, .name = "testNP-69", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [271035497562104608376238663622262080518], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [292709995959071864261371376180066479171]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-70"}, .name = "testNP-70", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [281202759973643394147461313037128163534], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [271035497562104608376238663622262080518]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-71"}, .name = "testNP-71", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [112299973715776994013371347923002599379], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [281202759973643394147461313037128163534]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-72"}, .name = "testNP-72", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [207062112071959762746330428969528801157], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [112299973715776994013371347923002599379]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-73"}, .name = "testNP-73", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [216079185330943871065821579875144935337], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [207062112071959762746330428969528801157]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-74"}, .name = "testNP-74", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [70580325334576926992948232860341253201], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [216079185330943871065821579875144935337]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-75"}, .name = "testNP-75", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [241668530693184253737879454563077500169], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [70580325334576926992948232860341253201]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-76"}, .name = "testNP-76", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [323906248563065033049990240949028664315], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [241668530693184253737879454563077500169]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-77"}, .name = "testNP-77", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [35184666245455068155766600872485278590], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [323906248563065033049990240949028664315]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-78"}, .name = "testNP-78", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [156721006097654111554548022160434781123], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [35184666245455068155766600872485278590]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-79"}, .name = "testNP-79", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [101518538893632532406007965810177493869], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [156721006097654111554548022160434781123]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-80"}, .name = "testNP-80", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [136744418091426290396479365750407022099], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [101518538893632532406007965810177493869]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-81"}, .name = "testNP-81", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [198898627122014703402066283836612161345], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [136744418091426290396479365750407022099]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-82"}, .name = "testNP-82", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [180337676044367460640997715204112802096], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [198898627122014703402066283836612161345]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-83"}, .name = "testNP-83", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [252838272729494038051191256155543415249], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [180337676044367460640997715204112802096]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-84"}, .name = "testNP-84", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [22861342794206303209929185441815622320], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [252838272729494038051191256155543415249]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-85"}, .name = "testNP-85", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [268407614332431288519984878690122756601], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [22861342794206303209929185441815622320]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-86"}, .name = "testNP-86", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [243420142607871313129022015229202740915], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [268407614332431288519984878690122756601]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-87"}, .name = "testNP-87", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [223955728476299927111283106740832335974], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [243420142607871313129022015229202740915]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-88"}, .name = "testNP-88", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [243953198337152849466731736236542213108], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [223955728476299927111283106740832335974]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-89"}, .name = "testNP-89", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [22210396090670704327531025234772154740], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [243953198337152849466731736236542213108]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-90"}, .name = "testNP-90", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [146555467124840070340015562061588014158], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [22210396090670704327531025234772154740]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-91"}, .name = "testNP-91", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [64948609301626119424448148183788342866], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [146555467124840070340015562061588014158]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-92"}, .name = "testNP-92", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [60386306182705873281447315111536782089], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [64948609301626119424448148183788342866]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-93"}, .name = "testNP-93", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [323858756633658217275083867718577893925], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [60386306182705873281447315111536782089]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-94"}, .name = "testNP-94", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [136531156628800201268540616835061467659], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [323858756633658217275083867718577893925]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-95"}, .name = "testNP-95", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [187899322683655706681824521420354734939], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [136531156628800201268540616835061467659]}: -1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-64", .policy = k8spolicy.UID{.uid = "testNP-64"}, .node = "testNode-6"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-65", .policy = k8spolicy.UID{.uid = "testNP-65"}, .node = "testNode-6"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-66", .policy = k8spolicy.UID{.uid = "testNP-66"}, .node = "testNode-6"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-67", .policy = k8spolicy.UID{.uid = "testNP-67"}, .node = "testNode-6"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-68", .policy = k8spolicy.UID{.uid = "testNP-68"}, .node = "testNode-6"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-69", .policy = k8spolicy.UID{.uid = "testNP-69"}, .node = "testNode-6"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-70", .policy = k8spolicy.UID{.uid = "testNP-70"}, .node = "testNode-7"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-71", .policy = k8spolicy.UID{.uid = "testNP-71"}, .node = "testNode-7"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-72", .policy = k8spolicy.UID{.uid = "testNP-72"}, .node = "testNode-7"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-73", .policy = k8spolicy.UID{.uid = "testNP-73"}, .node = "testNode-7"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-74", .policy = k8spolicy.UID{.uid = "testNP-74"}, .node = "testNode-7"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-75", .policy = k8spolicy.UID{.uid = "testNP-75"}, .node = "testNode-7"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-76", .policy = k8spolicy.UID{.uid = "testNP-76"}, .node = "testNode-7"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-77", .policy = k8spolicy.UID{.uid = "testNP-77"}, .node = "testNode-7"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-78", .policy = k8spolicy.UID{.uid = "testNP-78"}, .node = "testNode-7"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-79", .policy = k8spolicy.UID{.uid = "testNP-79"}, .node = "testNode-7"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-80", .policy = k8spolicy.UID{.uid = "testNP-80"}, .node = "testNode-8"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-81", .policy = k8spolicy.UID{.uid = "testNP-81"}, .node = "testNode-8"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-82", .policy = k8spolicy.UID{.uid = "testNP-82"}, .node = "testNode-8"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-83", .policy = k8spolicy.UID{.uid = "testNP-83"}, .node = "testNode-8"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-84", .policy = k8spolicy.UID{.uid = "testNP-84"}, .node = "testNode-8"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-85", .policy = k8spolicy.UID{.uid = "testNP-85"}, .node = "testNode-8"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-86", .policy = k8spolicy.UID{.uid = "testNP-86"}, .node = "testNode-8"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-87", .policy = k8spolicy.UID{.uid = "testNP-87"}, .node = "testNode-8"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-88", .policy = k8spolicy.UID{.uid = "testNP-88"}, .node = "testNode-8"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-89", .policy = k8spolicy.UID{.uid = "testNP-89"}, .node = "testNode-8"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-90", .policy = k8spolicy.UID{.uid = "testNP-90"}, .node = "testNode-9"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-91", .policy = k8spolicy.UID{.uid = "testNP-91"}, .node = "testNode-9"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-92", .policy = k8spolicy.UID{.uid = "testNP-92"}, .node = "testNode-9"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-93", .policy = k8spolicy.UID{.uid = "testNP-93"}, .node = "testNode-9"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-94", .policy = k8spolicy.UID{.uid = "testNP-94"}, .node = "testNode-9"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-95", .policy = k8spolicy.UID{.uid = "testNP-95"}, .node = "testNode-9"}: -1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 37094232250629904696615345556549125086, .address = "10.10.11.6"}: -1
AddressGroupAddress{.addressGroup = 40226556570344230591673114971473823913, .address = "10.10.10.8"}: -1
AddressGroupAddress{.addressGroup = 48355655105218248400214367788657140487, .address = "10.10.10.5"}: -1
AddressGroupAddress{.addressGroup = 71503701122299566550815862563487196482, .address = "10.10.9.7"}: -1
AddressGroupAddress{.addressGroup = 76505436127682966627559488275809969935, .address = "10.10.10.7"}: -1
AddressGroupAddress{.addressGroup = 83842439654690705305462600332173591641, .address = "10.10.11.3"}: -1
AddressGroupAddress{.addressGroup = 87587464778203803044727175222927015864, .address = "10.10.11.1"}: -1
AddressGroupAddress{.addressGroup = 97163317757406971048806639485267087470, .address = "10.10.10.1"}: -1
AddressGroupAddress{.addressGroup = 103978118845097611771361772982098164468, .address = "10.10.10.9"}: -1
AddressGroupAddress{.addressGroup = 106849196439510839689295162975966348245, .address = "10.10.10.4"}: -1
AddressGroupAddress{.addressGroup = 109826924473310848161915484640883073288, .address = "10.10.12.6"}: -1
AddressGroupAddress{.addressGroup = 110489607692344612611469296967415356937, .address = "10.10.11.2"}: -1
AddressGroupAddress{.addressGroup = 124407188772037775036834619774522604758, .address = "10.10.11.8"}: -1
AddressGroupAddress{.addressGroup = 135235726876099996338886379078866691609, .address = "10.10.12.2"}: -1
AddressGroupAddress{.addressGroup = 137836733821018051449608580289007076441, .address = "10.10.10.6"}: -1
AddressGroupAddress{.addressGroup = 156821087437095192774093726492480999556, .address = "10.10.11.0"}: -1
AddressGroupAddress{.addressGroup = 162670393145983371263408187545058521866, .address = "10.10.12.1"}: -1
AddressGroupAddress{.addressGroup = 162719744790132748984941022468429009156, .address = "10.10.12.4"}: -1
AddressGroupAddress{.addressGroup = 170265535328858483244073312225293336437, .address = "10.10.11.4"}: -1
AddressGroupAddress{.addressGroup = 177290530696359873639164811705966787107, .address = "10.10.12.3"}: -1
AddressGroupAddress{.addressGroup = 180256761869604097147275307970390218967, .address = "10.10.9.8"}: -1
AddressGroupAddress{.addressGroup = 180696582671324939437016125830931674222, .address = "10.10.12.7"}: -1
AddressGroupAddress{.addressGroup = 185092290797436099830614230358285476905, .address = "10.10.10.2"}: -1
AddressGroupAddress{.addressGroup = 211806542268647232324164049752470641112, .address = "10.10.11.9"}: -1
AddressGroupAddress{.addressGroup = 213411722502795708203597923932530478918, .address = "10.10.10.3"}: -1
AddressGroupAddress{.addressGroup = 260358766361233030153346401094923757693, .address = "10.10.10.0"}: -1
AddressGroupAddress{.addressGroup = 266160596277303920306906385582642592399, .address = "10.10.12.5"}: -1
AddressGroupAddress{.addressGroup = 273498342722146853995965744453610466834, .address = "10.10.12.8"}: -1
AddressGroupAddress{.addressGroup = 286128460058581977126156559513193502164, .address = "10.10.9.9"}: -1
AddressGroupAddress{.addressGroup = 315405270023021899541948823901841373403, .address = "10.10.11.7"}: -1
AddressGroupAddress{.addressGroup = 330962894326518286540943393408930974864, .address = "10.10.12.0"}: -1
AddressGroupAddress{.addressGroup = 335155796345710149772225273215530780623, .address = "10.10.11.5"}: -1
AddressGroupDescr:
AddressGroupDescr{.name = "1be816da-1b7c-51a7-b348-474c6219c3de", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-116]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-116")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "1e435a5d-47b4-5c5a-bee8-24096b4dc8a9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-108]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-108")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "2460f5dd-bde1-5ee0-9f92-4e516f71e307", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-105]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-105")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "35cb1ca6-4dc8-5e2d-97fa-2f3a7bc9a542", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-97]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-97")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "398e6939-9175-5476-888b-77fd6b52270f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-107]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-107")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "3f13776d-7893-50d4-8996-a85dfef34459", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-113]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-113")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "41e4bb6c-03e1-5ba9-a6f3-2d070417bfb8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-111]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-111")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "4918f96c-ce60-5e9a-a85d-2dfff6c6106e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-101]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-101")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "4e39750f-48ff-5a5e-adb8-a9a10a577af4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-109]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-109")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "5062681d-34e1-5c2a-8279-f82765d643d5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-104]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-104")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "529fe570-ec28-5fac-acdd-44b8870d6108", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-126]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-126")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "531f863f-1131-55d0-9c8e-2446ef21de09", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-112]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-112")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "5d97f3f8-cfb6-5a84-9c49-c43cb45fbcd6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-118]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-118")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "65bd741e-bf4a-57bd-b810-965b3fb7e619", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-122]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-122")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "67b263a9-d60a-56b3-9aa8-7c0af1d64459", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-106]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-106")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "75faa48f-e4d8-507d-a68b-66e729b79084", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-110]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-110")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "7a612d99-6fd0-5c13-b062-6498518fb30a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-121]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-121")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "7a6aaed2-c276-574a-b2df-601fdc3f5104", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-124]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-124")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "8017f305-3d4a-55a4-bbb0-a99fc77d7f75", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-114]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-114")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "8560ea08-8412-5100-b137-dac29e35fa23", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-123]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-123")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "879c3085-735c-5bf2-bc12-c6460ffd58d7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-98]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-98")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "87f0e55c-6c51-5e85-9d7d-493146f7f46e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-127]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-127")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "8b3f7a81-161a-51ff-8401-2d1875f5e429", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-102]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-102")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "9f5874ca-a706-5d9a-8b0a-27075810d9d8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-119]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-119")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "a08d9a49-92c3-5076-8b73-15bfeafb0f46", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-103]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-103")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "c3df4641-d2bb-5aa9-930e-51d73740a87d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-100]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-100")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "c83caa8e-9d9b-5aad-93fc-641e567a7a8f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-125]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-125")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "cdc1dd63-75b7-554c-88c5-3fcac40d6e12", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-128]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-128")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "d7425640-2e50-5a48-b84f-318532f355d4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-99]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-99")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "ed48d86d-2640-5a21-9f41-3f5ddedbb8db", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-117]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-117")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "f8fd2286-9b94-5d2f-a4c9-15f522768c90", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-120]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-120")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "fc24a88e-5356-50e7-bb4d-a5394fcf47cf", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-115]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-115")], .matchExpressions = []}}}}: -1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 37094232250629904696615345556549125086, .node = "testNode-11"}: -1
AddressGroupSpan{.addressGroup = 40226556570344230591673114971473823913, .node = "testNode-10"}: -1
AddressGroupSpan{.addressGroup = 48355655105218248400214367788657140487, .node = "testNode-10"}: -1
AddressGroupSpan{.addressGroup = 71503701122299566550815862563487196482, .node = "testNode-9"}: -1
AddressGroupSpan{.addressGroup = 76505436127682966627559488275809969935, .node = "testNode-10"}: -1
AddressGroupSpan{.addressGroup = 83842439654690705305462600332173591641, .node = "testNode-11"}: -1
AddressGroupSpan{.addressGroup = 87587464778203803044727175222927015864, .node = "testNode-11"}: -1
AddressGroupSpan{.addressGroup = 97163317757406971048806639485267087470, .node = "testNode-10"}: -1
AddressGroupSpan{.addressGroup = 103978118845097611771361772982098164468, .node = "testNode-10"}: -1
AddressGroupSpan{.addressGroup = 106849196439510839689295162975966348245, .node = "testNode-10"}: -1
AddressGroupSpan{.addressGroup = 109826924473310848161915484640883073288, .node = "testNode-12"}: -1
AddressGroupSpan{.addressGroup = 110489607692344612611469296967415356937, .node = "testNode-11"}: -1
AddressGroupSpan{.addressGroup = 124407188772037775036834619774522604758, .node = "testNode-11"}: -1
AddressGroupSpan{.addressGroup = 135235726876099996338886379078866691609, .node = "testNode-12"}: -1
AddressGroupSpan{.addressGroup = 137836733821018051449608580289007076441, .node = "testNode-10"}: -1
AddressGroupSpan{.addressGroup = 156821087437095192774093726492480999556, .node = "testNode-10"}: -1
AddressGroupSpan{.addressGroup = 162670393145983371263408187545058521866, .node = "testNode-12"}: -1
AddressGroupSpan{.addressGroup = 162719744790132748984941022468429009156, .node = "testNode-12"}: -1
AddressGroupSpan{.addressGroup = 170265535328858483244073312225293336437, .node = "testNode-11"}: -1
AddressGroupSpan{.addressGroup = 177290530696359873639164811705966787107, .node = "testNode-12"}: -1
AddressGroupSpan{.addressGroup = 180256761869604097147275307970390218967, .node = "testNode-9"}: -1
AddressGroupSpan{.addressGroup = 180696582671324939437016125830931674222, .node = "testNode-12"}: -1
AddressGroupSpan{.addressGroup = 185092290797436099830614230358285476905, .node = "testNode-10"}: -1
AddressGroupSpan{.addressGroup = 211806542268647232324164049752470641112, .node = "testNode-11"}: -1
AddressGroupSpan{.addressGroup = 213411722502795708203597923932530478918, .node = "testNode-10"}: -1
AddressGroupSpan{.addressGroup = 260358766361233030153346401094923757693, .node = "testNode-9"}: -1
AddressGroupSpan{.addressGroup = 266160596277303920306906385582642592399, .node = "testNode-12"}: -1
AddressGroupSpan{.addressGroup = 273498342722146853995965744453610466834, .node = "testNode-12"}: -1
AddressGroupSpan{.addressGroup = 286128460058581977126156559513193502164, .node = "testNode-9"}: -1
AddressGroupSpan{.addressGroup = 315405270023021899541948823901841373403, .node = "testNode-11"}: -1
AddressGroupSpan{.addressGroup = 330962894326518286540943393408930974864, .node = "testNode-11"}: -1
AddressGroupSpan{.addressGroup = 335155796345710149772225273215530780623, .node = "testNode-11"}: -1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "1be816da-1b7c-51a7-b348-474c6219c3de", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-116]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-116")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "1e435a5d-47b4-5c5a-bee8-24096b4dc8a9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-108]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-108")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "2460f5dd-bde1-5ee0-9f92-4e516f71e307", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-105]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-105")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "35cb1ca6-4dc8-5e2d-97fa-2f3a7bc9a542", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-97]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-97")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "398e6939-9175-5476-888b-77fd6b52270f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-107]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-107")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "3f13776d-7893-50d4-8996-a85dfef34459", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-113]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-113")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "41e4bb6c-03e1-5ba9-a6f3-2d070417bfb8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-111]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-111")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "4918f96c-ce60-5e9a-a85d-2dfff6c6106e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-101]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-101")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "4e39750f-48ff-5a5e-adb8-a9a10a577af4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-109]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-109")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "5062681d-34e1-5c2a-8279-f82765d643d5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-104]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-104")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "529fe570-ec28-5fac-acdd-44b8870d6108", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-126]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-126")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "531f863f-1131-55d0-9c8e-2446ef21de09", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-112]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-112")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "5d97f3f8-cfb6-5a84-9c49-c43cb45fbcd6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-118]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-118")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "65bd741e-bf4a-57bd-b810-965b3fb7e619", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-122]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-122")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "67b263a9-d60a-56b3-9aa8-7c0af1d64459", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-106]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-106")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "75faa48f-e4d8-507d-a68b-66e729b79084", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-110]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-110")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "7a612d99-6fd0-5c13-b062-6498518fb30a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-121]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-121")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "7a6aaed2-c276-574a-b2df-601fdc3f5104", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-124]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-124")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "8017f305-3d4a-55a4-bbb0-a99fc77d7f75", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-114]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-114")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "8560ea08-8412-5100-b137-dac29e35fa23", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-123]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-123")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "879c3085-735c-5bf2-bc12-c6460ffd58d7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-98]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-98")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "87f0e55c-6c51-5e85-9d7d-493146f7f46e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-127]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-127")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "8b3f7a81-161a-51ff-8401-2d1875f5e429", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-102]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-102")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "8d5c17dc-85b5-55db-ba20-2565a735cb5b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-96]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-96")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "9f5874ca-a706-5d9a-8b0a-27075810d9d8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-119]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-119")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "a08d9a49-92c3-5076-8b73-15bfeafb0f46", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-103]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-103")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "c3df4641-d2bb-5aa9-930e-51d73740a87d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-100]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-100")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "c83caa8e-9d9b-5aad-93fc-641e567a7a8f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-125]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-125")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "d7425640-2e50-5a48-b84f-318532f355d4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-99]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-99")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "ed48d86d-2640-5a21-9f41-3f5ddedbb8db", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-117]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-117")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "f8fd2286-9b94-5d2f-a4c9-15f522768c90", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-120]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-120")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "fc24a88e-5356-50e7-bb4d-a5394fcf47cf", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-115]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-115")], .matchExpressions = []}}}}: -1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 37094232250629904696615345556549125086, .node = "testNode-11", .pods = [k8spolicy.PodReference{.name = "testPod-116", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 40226556570344230591673114971473823913, .node = "testNode-10", .pods = [k8spolicy.PodReference{.name = "testPod-108", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 48355655105218248400214367788657140487, .node = "testNode-10", .pods = [k8spolicy.PodReference{.name = "testPod-105", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 71503701122299566550815862563487196482, .node = "testNode-9", .pods = [k8spolicy.PodReference{.name = "testPod-97", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 76505436127682966627559488275809969935, .node = "testNode-10", .pods = [k8spolicy.PodReference{.name = "testPod-107", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 83842439654690705305462600332173591641, .node = "testNode-11", .pods = [k8spolicy.PodReference{.name = "testPod-113", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 87587464778203803044727175222927015864, .node = "testNode-11", .pods = [k8spolicy.PodReference{.name = "testPod-111", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 97163317757406971048806639485267087470, .node = "testNode-10", .pods = [k8spolicy.PodReference{.name = "testPod-101", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 103978118845097611771361772982098164468, .node = "testNode-10", .pods = [k8spolicy.PodReference{.name = "testPod-109", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 106849196439510839689295162975966348245, .node = "testNode-10", .pods = [k8spolicy.PodReference{.name = "testPod-104", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 109826924473310848161915484640883073288, .node = "testNode-12", .pods = [k8spolicy.PodReference{.name = "testPod-126", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 110489607692344612611469296967415356937, .node = "testNode-11", .pods = [k8spolicy.PodReference{.name = "testPod-112", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 124407188772037775036834619774522604758, .node = "testNode-11", .pods = [k8spolicy.PodReference{.name = "testPod-118", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 135235726876099996338886379078866691609, .node = "testNode-12", .pods = [k8spolicy.PodReference{.name = "testPod-122", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 137836733821018051449608580289007076441, .node = "testNode-10", .pods = [k8spolicy.PodReference{.name = "testPod-106", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 156821087437095192774093726492480999556, .node = "testNode-11", .pods = [k8spolicy.PodReference{.name = "testPod-110", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 162670393145983371263408187545058521866, .node = "testNode-12", .pods = [k8spolicy.PodReference{.name = "testPod-121", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 162719744790132748984941022468429009156, .node = "testNode-12", .pods = [k8spolicy.PodReference{.name = "testPod-124", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 170265535328858483244073312225293336437, .node = "testNode-11", .pods = [k8spolicy.PodReference{.name = "testPod-114", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 177290530696359873639164811705966787107, .node = "testNode-12", .pods = [k8spolicy.PodReference{.name = "testPod-123", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 180256761869604097147275307970390218967, .node = "testNode-9", .pods = [k8spolicy.PodReference{.name = "testPod-98", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 180696582671324939437016125830931674222, .node = "testNode-12", .pods = [k8spolicy.PodReference{.name = "testPod-127", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 185092290797436099830614230358285476905, .node = "testNode-10", .pods = [k8spolicy.PodReference{.name = "testPod-102", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 187899322683655706681824521420354734939, .node = "testNode-9", .pods = [k8spolicy.PodReference{.name = "testPod-96", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 211806542268647232324164049752470641112, .node = "testNode-11", .pods = [k8spolicy.PodReference{.name = "testPod-119", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 213411722502795708203597923932530478918, .node = "testNode-10", .pods = [k8spolicy.PodReference{.name = "testPod-103", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 260358766361233030153346401094923757693, .node = "testNode-10", .pods = [k8spolicy.PodReference{.name = "testPod-100", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 266160596277303920306906385582642592399, .node = "testNode-12", .pods = [k8spolicy.PodReference{.name = "testPod-125", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 286128460058581977126156559513193502164, .node = "testNode-9", .pods = [k8spolicy.PodReference{.name = "testPod-99", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 315405270023021899541948823901841373403, .node = "testNode-11", .pods = [k8spolicy.PodReference{.name = "testPod-117", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 330962894326518286540943393408930974864, .node = "testNode-12", .pods = [k8spolicy.PodReference{.name = "testPod-120", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 335155796345710149772225273215530780623, .node = "testNode-11", .pods = [k8spolicy.PodReference{.name = "testPod-115", .namespace = "testNamespace"}]}: -1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 37094232250629904696615345556549125086, .span = "testNode-11"}: -1
AppliedToGroupSpan{.appliedToGroup = 40226556570344230591673114971473823913, .span = "testNode-10"}: -1
AppliedToGroupSpan{.appliedToGroup = 48355655105218248400214367788657140487, .span = "testNode-10"}: -1
AppliedToGroupSpan{.appliedToGroup = 71503701122299566550815862563487196482, .span = "testNode-9"}: -1
AppliedToGroupSpan{.appliedToGroup = 76505436127682966627559488275809969935, .span = "testNode-10"}: -1
AppliedToGroupSpan{.appliedToGroup = 83842439654690705305462600332173591641, .span = "testNode-11"}: -1
AppliedToGroupSpan{.appliedToGroup = 87587464778203803044727175222927015864, .span = "testNode-11"}: -1
AppliedToGroupSpan{.appliedToGroup = 97163317757406971048806639485267087470, .span = "testNode-10"}: -1
AppliedToGroupSpan{.appliedToGroup = 103978118845097611771361772982098164468, .span = "testNode-10"}: -1
AppliedToGroupSpan{.appliedToGroup = 106849196439510839689295162975966348245, .span = "testNode-10"}: -1
AppliedToGroupSpan{.appliedToGroup = 109826924473310848161915484640883073288, .span = "testNode-12"}: -1
AppliedToGroupSpan{.appliedToGroup = 110489607692344612611469296967415356937, .span = "testNode-11"}: -1
AppliedToGroupSpan{.appliedToGroup = 124407188772037775036834619774522604758, .span = "testNode-11"}: -1
AppliedToGroupSpan{.appliedToGroup = 135235726876099996338886379078866691609, .span = "testNode-12"}: -1
AppliedToGroupSpan{.appliedToGroup = 137836733821018051449608580289007076441, .span = "testNode-10"}: -1
AppliedToGroupSpan{.appliedToGroup = 156821087437095192774093726492480999556, .span = "testNode-11"}: -1
AppliedToGroupSpan{.appliedToGroup = 162670393145983371263408187545058521866, .span = "testNode-12"}: -1
AppliedToGroupSpan{.appliedToGroup = 162719744790132748984941022468429009156, .span = "testNode-12"}: -1
AppliedToGroupSpan{.appliedToGroup = 170265535328858483244073312225293336437, .span = "testNode-11"}: -1
AppliedToGroupSpan{.appliedToGroup = 177290530696359873639164811705966787107, .span = "testNode-12"}: -1
AppliedToGroupSpan{.appliedToGroup = 180256761869604097147275307970390218967, .span = "testNode-9"}: -1
AppliedToGroupSpan{.appliedToGroup = 180696582671324939437016125830931674222, .span = "testNode-12"}: -1
AppliedToGroupSpan{.appliedToGroup = 185092290797436099830614230358285476905, .span = "testNode-10"}: -1
AppliedToGroupSpan{.appliedToGroup = 187899322683655706681824521420354734939, .span = "testNode-9"}: -1
AppliedToGroupSpan{.appliedToGroup = 211806542268647232324164049752470641112, .span = "testNode-11"}: -1
AppliedToGroupSpan{.appliedToGroup = 213411722502795708203597923932530478918, .span = "testNode-10"}: -1
AppliedToGroupSpan{.appliedToGroup = 260358766361233030153346401094923757693, .span = "testNode-10"}: -1
AppliedToGroupSpan{.appliedToGroup = 266160596277303920306906385582642592399, .span = "testNode-12"}: -1
AppliedToGroupSpan{.appliedToGroup = 286128460058581977126156559513193502164, .span = "testNode-9"}: -1
AppliedToGroupSpan{.appliedToGroup = 315405270023021899541948823901841373403, .span = "testNode-11"}: -1
AppliedToGroupSpan{.appliedToGroup = 330962894326518286540943393408930974864, .span = "testNode-12"}: -1
AppliedToGroupSpan{.appliedToGroup = 335155796345710149772225273215530780623, .span = "testNode-11"}: -1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-100"}, .name = "testNP-100", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [97163317757406971048806639485267087470], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [260358766361233030153346401094923757693]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-101"}, .name = "testNP-101", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [185092290797436099830614230358285476905], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [97163317757406971048806639485267087470]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-102"}, .name = "testNP-102", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [213411722502795708203597923932530478918], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [185092290797436099830614230358285476905]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-103"}, .name = "testNP-103", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [106849196439510839689295162975966348245], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [213411722502795708203597923932530478918]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-104"}, .name = "testNP-104", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [48355655105218248400214367788657140487], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [106849196439510839689295162975966348245]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-105"}, .name = "testNP-105", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [137836733821018051449608580289007076441], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [48355655105218248400214367788657140487]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-106"}, .name = "testNP-106", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [76505436127682966627559488275809969935], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [137836733821018051449608580289007076441]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-107"}, .name = "testNP-107", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [40226556570344230591673114971473823913], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [76505436127682966627559488275809969935]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-108"}, .name = "testNP-108", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [103978118845097611771361772982098164468], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [40226556570344230591673114971473823913]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-109"}, .name = "testNP-109", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [156821087437095192774093726492480999556], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [103978118845097611771361772982098164468]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-110"}, .name = "testNP-110", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [87587464778203803044727175222927015864], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [156821087437095192774093726492480999556]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-111"}, .name = "testNP-111", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [110489607692344612611469296967415356937], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [87587464778203803044727175222927015864]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-112"}, .name = "testNP-112", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [83842439654690705305462600332173591641], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [110489607692344612611469296967415356937]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-113"}, .name = "testNP-113", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [170265535328858483244073312225293336437], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [83842439654690705305462600332173591641]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-114"}, .name = "testNP-114", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [335155796345710149772225273215530780623], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [170265535328858483244073312225293336437]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-115"}, .name = "testNP-115", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [37094232250629904696615345556549125086], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [335155796345710149772225273215530780623]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-116"}, .name = "testNP-116", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [315405270023021899541948823901841373403], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [37094232250629904696615345556549125086]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-117"}, .name = "testNP-117", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [124407188772037775036834619774522604758], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [315405270023021899541948823901841373403]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-118"}, .name = "testNP-118", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [211806542268647232324164049752470641112], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [124407188772037775036834619774522604758]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-119"}, .name = "testNP-119", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [330962894326518286540943393408930974864], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [211806542268647232324164049752470641112]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-120"}, .name = "testNP-120", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [162670393145983371263408187545058521866], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [330962894326518286540943393408930974864]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-121"}, .name = "testNP-121", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [135235726876099996338886379078866691609], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [162670393145983371263408187545058521866]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-122"}, .name = "testNP-122", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [177290530696359873639164811705966787107], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [135235726876099996338886379078866691609]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-123"}, .name = "testNP-123", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [162719744790132748984941022468429009156], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [177290530696359873639164811705966787107]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-124"}, .name = "testNP-124", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [266160596277303920306906385582642592399], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [162719744790132748984941022468429009156]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-125"}, .name = "testNP-125", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [109826924473310848161915484640883073288], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [266160596277303920306906385582642592399]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-126"}, .name = "testNP-126", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [180696582671324939437016125830931674222], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [109826924473310848161915484640883073288]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-127"}, .name = "testNP-127", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [273498342722146853995965744453610466834], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [180696582671324939437016125830931674222]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-96"}, .name = "testNP-96", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [71503701122299566550815862563487196482], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [187899322683655706681824521420354734939]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-97"}, .name = "testNP-97", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [180256761869604097147275307970390218967], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [71503701122299566550815862563487196482]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-98"}, .name = "testNP-98", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [286128460058581977126156559513193502164], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [180256761869604097147275307970390218967]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-99"}, .name = "testNP-99", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [260358766361233030153346401094923757693], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [286128460058581977126156559513193502164]}: -1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-100", .policy = k8spolicy.UID{.uid = "testNP-100"}, .node = "testNode-10"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-101", .policy = k8spolicy.UID{.uid = "testNP-101"}, .node = "testNode-10"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-102", .policy = k8spolicy.UID{.uid = "testNP-102"}, .node = "testNode-10"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-103", .policy = k8spolicy.UID{.uid = "testNP-103"}, .node = "testNode-10"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-104", .policy = k8spolicy.UID{.uid = "testNP-104"}, .node = "testNode-10"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-105", .policy = k8spolicy.UID{.uid = "testNP-105"}, .node = "testNode-10"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-106", .policy = k8spolicy.UID{.uid = "testNP-106"}, .node = "testNode-10"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-107", .policy = k8spolicy.UID{.uid = "testNP-107"}, .node = "testNode-10"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-108", .policy = k8spolicy.UID{.uid = "testNP-108"}, .node = "testNode-10"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-109", .policy = k8spolicy.UID{.uid = "testNP-109"}, .node = "testNode-10"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-110", .policy = k8spolicy.UID{.uid = "testNP-110"}, .node = "testNode-11"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-111", .policy = k8spolicy.UID{.uid = "testNP-111"}, .node = "testNode-11"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-112", .policy = k8spolicy.UID{.uid = "testNP-112"}, .node = "testNode-11"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-113", .policy = k8spolicy.UID{.uid = "testNP-113"}, .node = "testNode-11"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-114", .policy = k8spolicy.UID{.uid = "testNP-114"}, .node = "testNode-11"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-115", .policy = k8spolicy.UID{.uid = "testNP-115"}, .node = "testNode-11"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-116", .policy = k8spolicy.UID{.uid = "testNP-116"}, .node = "testNode-11"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-117", .policy = k8spolicy.UID{.uid = "testNP-117"}, .node = "testNode-11"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-118", .policy = k8spolicy.UID{.uid = "testNP-118"}, .node = "testNode-11"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-119", .policy = k8spolicy.UID{.uid = "testNP-119"}, .node = "testNode-11"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-120", .policy = k8spolicy.UID{.uid = "testNP-120"}, .node = "testNode-12"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-121", .policy = k8spolicy.UID{.uid = "testNP-121"}, .node = "testNode-12"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-122", .policy = k8spolicy.UID{.uid = "testNP-122"}, .node = "testNode-12"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-123", .policy = k8spolicy.UID{.uid = "testNP-123"}, .node = "testNode-12"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-124", .policy = k8spolicy.UID{.uid = "testNP-124"}, .node = "testNode-12"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-125", .policy = k8spolicy.UID{.uid = "testNP-125"}, .node = "testNode-12"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-126", .policy = k8spolicy.UID{.uid = "testNP-126"}, .node = "testNode-12"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-127", .policy = k8spolicy.UID{.uid = "testNP-127"}, .node = "testNode-12"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-96", .policy = k8spolicy.UID{.uid = "testNP-96"}, .node = "testNode-9"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-97", .policy = k8spolicy.UID{.uid = "testNP-97"}, .node = "testNode-9"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-98", .policy = k8spolicy.UID{.uid = "testNP-98"}, .node = "testNode-9"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-99", .policy = k8spolicy.UID{.uid = "testNP-99"}, .node = "testNode-9"}: -1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 5174678131681871740017664947586831952, .address = "10.10.14.1"}: -1
AddressGroupAddress{.addressGroup = 23859904554043317776138937686972490692, .address = "10.10.13.2"}: -1
AddressGroupAddress{.addressGroup = 34503473083417678635513967958248208655, .address = "10.10.13.7"}: -1
AddressGroupAddress{.addressGroup = 48309711104650181870977623970954456715, .address = "10.10.13.8"}: -1
AddressGroupAddress{.addressGroup = 62736095198605211225257809392018632659, .address = "10.10.15.4"}: -1
AddressGroupAddress{.addressGroup = 85736293771979518900314375920704824975, .address = "10.10.16.0"}: -1
AddressGroupAddress{.addressGroup = 88306647967896663440454702563333622411, .address = "10.10.14.2"}: -1
AddressGroupAddress{.addressGroup = 88593012092994971404195594578066505753, .address = "10.10.14.6"}: -1
AddressGroupAddress{.addressGroup = 101236793920148805528803897551160429874, .address = "10.10.15.5"}: -1
AddressGroupAddress{.addressGroup = 103540348370426618402557980166152264074, .address = "10.10.13.9"}: -1
AddressGroupAddress{.addressGroup = 105288662624453264750951304918564969592, .address = "10.10.14.9"}: -1
AddressGroupAddress{.addressGroup = 105541544679718557174351818626480748349, .address = "10.10.15.1"}: -1
AddressGroupAddress{.addressGroup = 115734955286026134645148105451329628103, .address = "10.10.15.8"}: -1
AddressGroupAddress{.addressGroup = 127997802756657206686749848402997922788, .address = "10.10.14.7"}: -1
AddressGroupAddress{.addressGroup = 141855097966456625106267262973040160760, .address = "10.10.14.4"}: -1
AddressGroupAddress{.addressGroup = 145445688903953453565683089960176195512, .address = "10.10.15.2"}: -1
AddressGroupAddress{.addressGroup = 152622529118381787560133857353049784362, .address = "10.10.13.3"}: -1
AddressGroupAddress{.addressGroup = 168119171796060862792535601563218818929, .address = "10.10.13.1"}: -1
AddressGroupAddress{.addressGroup = 171251048780850527017278303207274963999, .address = "10.10.15.0"}: -1
AddressGroupAddress{.addressGroup = 217009013054914692991117235578490985621, .address = "10.10.14.0"}: -1
AddressGroupAddress{.addressGroup = 219182765788762484199904846940068515825, .address = "10.10.13.5"}: -1
AddressGroupAddress{.addressGroup = 232790950656709164395444420136473141434, .address = "10.10.13.0"}: -1
AddressGroupAddress{.addressGroup = 242822805854533997069140197230193475072, .address = "10.10.13.6"}: -1
AddressGroupAddress{.addressGroup = 263582411874843359805262917493823858270, .address = "10.10.13.4"}: -1
AddressGroupAddress{.addressGroup = 266716386045000504023096980925676284275, .address = "10.10.15.9"}: -1
AddressGroupAddress{.addressGroup = 286248117606648181817375295335297863313, .address = "10.10.14.8"}: -1
AddressGroupAddress{.addressGroup = 286410501704168837165861605088666066578, .address = "10.10.15.7"}: -1
AddressGroupAddress{.addressGroup = 294769527764678373131618238457085121326, .address = "10.10.14.3"}: -1
AddressGroupAddress{.addressGroup = 301514260321844487074024254615064100404, .address = "10.10.15.6"}: -1
AddressGroupAddress{.addressGroup = 318107101283880568845359000382843925186, .address = "10.10.12.9"}: -1
AddressGroupAddress{.addressGroup = 327681950154789363076035809114670984144, .address = "10.10.15.3"}: -1
AddressGroupAddress{.addressGroup = 335879917074264638271285719334370053948, .address = "10.10.14.5"}: -1
AddressGroupDescr:
AddressGroupDescr{.name = "03e49b54-6729-5e12-8d61-f782ee539650", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-141]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-141")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "11f3401e-7ad6-5382-8c45-71974428e3c4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-132]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-132")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "19f52090-285c-5684-861f-5e37131d390f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-137]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-137")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "24581ca6-ed7c-5737-94ef-e306779dae8b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-138]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-138")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "2f32884d-930f-5128-9be6-c381f8cbafd3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-154]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-154")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "408035a5-0b4c-599f-a516-938d95dc268f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-160]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-160")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "426f3de4-0c3d-56af-b8de-ee0d5a35ca8b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-142]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-142")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "42a664bb-7479-5e6c-bc90-d47696558019", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-146]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-146")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "4c297f4e-4bdd-511c-85f6-43b9a4194d32", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-155]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-155")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "4de5254f-140b-5efb-8f31-8c35be80198a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-139]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-139")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "4f35dbdb-51a8-526d-8499-46af611d9c78", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-149]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-149")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "4f668fe7-976a-55cd-8e8f-464d4ed8373d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-151]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-151")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "5711bdd9-7b7c-5dc7-9a4a-8d3d208127c7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-158]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-158")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "604b7ae8-c85d-5292-8a2e-da3fd3cdcbe4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-147]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-147")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "6ab84c4f-df5f-5774-a9ff-25cc55b46ff8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-144]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-144")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "6d6bd21c-f2c1-516e-a5cb-81c72bc417b8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-152]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-152")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "72d207a7-a39f-5992-b79f-cd6d08bb402a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-133]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-133")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "7e7a9320-c4cd-517f-a01e-978c0ced3771", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-131]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-131")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "80d5c095-c7ec-5cb5-8ce4-dc8bbc7de41f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-150]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-150")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "a3426a67-ac84-50b5-abd6-4f86f99a1c95", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-140]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-140")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "a4e510b0-76a7-5988-8174-b0d8161e0ff1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-135]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-135")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "af21e800-ff3a-53a1-8640-448f384f20ba", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-130]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-130")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "b6adf8a6-f496-58ad-8918-5d70e040fe00", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-136]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-136")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "c64c2040-82c5-5dbb-9ce9-412bdb6f665e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-134]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-134")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "c8a7b51b-b949-51bc-82ea-3fd6f5e86973", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-159]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-159")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "d75961d2-c492-5966-8737-2caa0f8e4e91", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-148]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-148")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "d778a7fa-39fa-5b01-ae44-33c20b301e92", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-157]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-157")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "ddc28bc8-1071-5af0-89be-79967257532e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-143]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-143")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "e2d588c5-5a40-5ebf-bb15-6c653c573e34", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-156]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-156")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "ef5132fe-043c-5862-aa70-bf9ed5b832c2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-129]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-129")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "f6853f7d-2dd9-58d9-b1d7-d873db3f6bd0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-153]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-153")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "fcb01e76-dc36-5ccd-81b4-eb8de4328f3c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-145]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-145")], .matchExpressions = []}}}}: -1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 5174678131681871740017664947586831952, .node = "testNode-14"}: -1
AddressGroupSpan{.addressGroup = 23859904554043317776138937686972490692, .node = "testNode-13"}: -1
AddressGroupSpan{.addressGroup = 34503473083417678635513967958248208655, .node = "testNode-13"}: -1
AddressGroupSpan{.addressGroup = 48309711104650181870977623970954456715, .node = "testNode-13"}: -1
AddressGroupSpan{.addressGroup = 62736095198605211225257809392018632659, .node = "testNode-15"}: -1
AddressGroupSpan{.addressGroup = 85736293771979518900314375920704824975, .node = "testNode-15"}: -1
AddressGroupSpan{.addressGroup = 88306647967896663440454702563333622411, .node = "testNode-14"}: -1
AddressGroupSpan{.addressGroup = 88593012092994971404195594578066505753, .node = "testNode-14"}: -1
AddressGroupSpan{.addressGroup = 101236793920148805528803897551160429874, .node = "testNode-15"}: -1
AddressGroupSpan{.addressGroup = 103540348370426618402557980166152264074, .node = "testNode-13"}: -1
AddressGroupSpan{.addressGroup = 105288662624453264750951304918564969592, .node = "testNode-14"}: -1
AddressGroupSpan{.addressGroup = 105541544679718557174351818626480748349, .node = "testNode-15"}: -1
AddressGroupSpan{.addressGroup = 115734955286026134645148105451329628103, .node = "testNode-15"}: -1
AddressGroupSpan{.addressGroup = 127997802756657206686749848402997922788, .node = "testNode-14"}: -1
AddressGroupSpan{.addressGroup = 141855097966456625106267262973040160760, .node = "testNode-14"}: -1
AddressGroupSpan{.addressGroup = 145445688903953453565683089960176195512, .node = "testNode-15"}: -1
AddressGroupSpan{.addressGroup = 152622529118381787560133857353049784362, .node = "testNode-13"}: -1
AddressGroupSpan{.addressGroup = 168119171796060862792535601563218818929, .node = "testNode-13"}: -1
AddressGroupSpan{.addressGroup = 171251048780850527017278303207274963999, .node = "testNode-14"}: -1
AddressGroupSpan{.addressGroup = 217009013054914692991117235578490985621, .node = "testNode-13"}: -1
AddressGroupSpan{.addressGroup = 219182765788762484199904846940068515825, .node = "testNode-13"}: -1
AddressGroupSpan{.addressGroup = 232790950656709164395444420136473141434, .node = "testNode-12"}: -1
AddressGroupSpan{.addressGroup = 242822805854533997069140197230193475072, .node = "testNode-13"}: -1
AddressGroupSpan{.addressGroup = 263582411874843359805262917493823858270, .node = "testNode-13"}: -1
AddressGroupSpan{.addressGroup = 266716386045000504023096980925676284275, .node = "testNode-15"}: -1
AddressGroupSpan{.addressGroup = 286248117606648181817375295335297863313, .node = "testNode-14"}: -1
AddressGroupSpan{.addressGroup = 286410501704168837165861605088666066578, .node = "testNode-15"}: -1
AddressGroupSpan{.addressGroup = 294769527764678373131618238457085121326, .node = "testNode-14"}: -1
AddressGroupSpan{.addressGroup = 301514260321844487074024254615064100404, .node = "testNode-15"}: -1
AddressGroupSpan{.addressGroup = 318107101283880568845359000382843925186, .node = "testNode-12"}: -1
AddressGroupSpan{.addressGroup = 327681950154789363076035809114670984144, .node = "testNode-15"}: -1
AddressGroupSpan{.addressGroup = 335879917074264638271285719334370053948, .node = "testNode-14"}: -1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "03e49b54-6729-5e12-8d61-f782ee539650", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-141]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-141")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "11f3401e-7ad6-5382-8c45-71974428e3c4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-132]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-132")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "19f52090-285c-5684-861f-5e37131d390f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-137]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-137")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "24581ca6-ed7c-5737-94ef-e306779dae8b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-138]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-138")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "2f32884d-930f-5128-9be6-c381f8cbafd3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-154]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-154")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "426f3de4-0c3d-56af-b8de-ee0d5a35ca8b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-142]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-142")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "42a664bb-7479-5e6c-bc90-d47696558019", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-146]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-146")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "4c297f4e-4bdd-511c-85f6-43b9a4194d32", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-155]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-155")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "4de5254f-140b-5efb-8f31-8c35be80198a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-139]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-139")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "4f35dbdb-51a8-526d-8499-46af611d9c78", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-149]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-149")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "4f668fe7-976a-55cd-8e8f-464d4ed8373d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-151]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-151")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "5711bdd9-7b7c-5dc7-9a4a-8d3d208127c7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-158]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-158")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "604b7ae8-c85d-5292-8a2e-da3fd3cdcbe4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-147]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-147")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "6ab84c4f-df5f-5774-a9ff-25cc55b46ff8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-144]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-144")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "6d6bd21c-f2c1-516e-a5cb-81c72bc417b8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-152]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-152")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "72d207a7-a39f-5992-b79f-cd6d08bb402a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-133]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-133")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "7e7a9320-c4cd-517f-a01e-978c0ced3771", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-131]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-131")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "80d5c095-c7ec-5cb5-8ce4-dc8bbc7de41f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-150]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-150")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "a3426a67-ac84-50b5-abd6-4f86f99a1c95", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-140]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-140")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "a4e510b0-76a7-5988-8174-b0d8161e0ff1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-135]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-135")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "af21e800-ff3a-53a1-8640-448f384f20ba", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-130]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-130")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "b6adf8a6-f496-58ad-8918-5d70e040fe00", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-136]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-136")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "c64c2040-82c5-5dbb-9ce9-412bdb6f665e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-134]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-134")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "c8a7b51b-b949-51bc-82ea-3fd6f5e86973", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-159]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-159")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "cdc1dd63-75b7-554c-88c5-3fcac40d6e12", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-128]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-128")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "d75961d2-c492-5966-8737-2caa0f8e4e91", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-148]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-148")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "d778a7fa-39fa-5b01-ae44-33c20b301e92", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-157]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-157")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "ddc28bc8-1071-5af0-89be-79967257532e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-143]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-143")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "e2d588c5-5a40-5ebf-bb15-6c653c573e34", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-156]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-156")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "ef5132fe-043c-5862-aa70-bf9ed5b832c2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-129]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-129")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "f6853f7d-2dd9-58d9-b1d7-d873db3f6bd0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-153]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-153")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "fcb01e76-dc36-5ccd-81b4-eb8de4328f3c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-145]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-145")], .matchExpressions = []}}}}: -1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 5174678131681871740017664947586831952, .node = "testNode-14", .pods = [k8spolicy.PodReference{.name = "testPod-141", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 23859904554043317776138937686972490692, .node = "testNode-13", .pods = [k8spolicy.PodReference{.name = "testPod-132", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 34503473083417678635513967958248208655, .node = "testNode-13", .pods = [k8spolicy.PodReference{.name = "testPod-137", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 48309711104650181870977623970954456715, .node = "testNode-13", .pods = [k8spolicy.PodReference{.name = "testPod-138", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 62736095198605211225257809392018632659, .node = "testNode-15", .pods = [k8spolicy.PodReference{.name = "testPod-154", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 88306647967896663440454702563333622411, .node = "testNode-14", .pods = [k8spolicy.PodReference{.name = "testPod-142", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 88593012092994971404195594578066505753, .node = "testNode-14", .pods = [k8spolicy.PodReference{.name = "testPod-146", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 101236793920148805528803897551160429874, .node = "testNode-15", .pods = [k8spolicy.PodReference{.name = "testPod-155", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 103540348370426618402557980166152264074, .node = "testNode-13", .pods = [k8spolicy.PodReference{.name = "testPod-139", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 105288662624453264750951304918564969592, .node = "testNode-14", .pods = [k8spolicy.PodReference{.name = "testPod-149", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 105541544679718557174351818626480748349, .node = "testNode-15", .pods = [k8spolicy.PodReference{.name = "testPod-151", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 115734955286026134645148105451329628103, .node = "testNode-15", .pods = [k8spolicy.PodReference{.name = "testPod-158", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 127997802756657206686749848402997922788, .node = "testNode-14", .pods = [k8spolicy.PodReference{.name = "testPod-147", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 141855097966456625106267262973040160760, .node = "testNode-14", .pods = [k8spolicy.PodReference{.name = "testPod-144", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 145445688903953453565683089960176195512, .node = "testNode-15", .pods = [k8spolicy.PodReference{.name = "testPod-152", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 152622529118381787560133857353049784362, .node = "testNode-13", .pods = [k8spolicy.PodReference{.name = "testPod-133", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 168119171796060862792535601563218818929, .node = "testNode-13", .pods = [k8spolicy.PodReference{.name = "testPod-131", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 171251048780850527017278303207274963999, .node = "testNode-15", .pods = [k8spolicy.PodReference{.name = "testPod-150", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 217009013054914692991117235578490985621, .node = "testNode-14", .pods = [k8spolicy.PodReference{.name = "testPod-140", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 219182765788762484199904846940068515825, .node = "testNode-13", .pods = [k8spolicy.PodReference{.name = "testPod-135", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 232790950656709164395444420136473141434, .node = "testNode-13", .pods = [k8spolicy.PodReference{.name = "testPod-130", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 242822805854533997069140197230193475072, .node = "testNode-13", .pods = [k8spolicy.PodReference{.name = "testPod-136", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 263582411874843359805262917493823858270, .node = "testNode-13", .pods = [k8spolicy.PodReference{.name = "testPod-134", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 266716386045000504023096980925676284275, .node = "testNode-15", .pods = [k8spolicy.PodReference{.name = "testPod-159", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 273498342722146853995965744453610466834, .node = "testNode-12", .pods = [k8spolicy.PodReference{.name = "testPod-128", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 286248117606648181817375295335297863313, .node = "testNode-14", .pods = [k8spolicy.PodReference{.name = "testPod-148", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 286410501704168837165861605088666066578, .node = "testNode-15", .pods = [k8spolicy.PodReference{.name = "testPod-157", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 294769527764678373131618238457085121326, .node = "testNode-14", .pods = [k8spolicy.PodReference{.name = "testPod-143", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 301514260321844487074024254615064100404, .node = "testNode-15", .pods = [k8spolicy.PodReference{.name = "testPod-156", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 318107101283880568845359000382843925186, .node = "testNode-12", .pods = [k8spolicy.PodReference{.name = "testPod-129", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 327681950154789363076035809114670984144, .node = "testNode-15", .pods = [k8spolicy.PodReference{.name = "testPod-153", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 335879917074264638271285719334370053948, .node = "testNode-14", .pods = [k8spolicy.PodReference{.name = "testPod-145", .namespace = "testNamespace"}]}: -1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 5174678131681871740017664947586831952, .span = "testNode-14"}: -1
AppliedToGroupSpan{.appliedToGroup = 23859904554043317776138937686972490692, .span = "testNode-13"}: -1
AppliedToGroupSpan{.appliedToGroup = 34503473083417678635513967958248208655, .span = "testNode-13"}: -1
AppliedToGroupSpan{.appliedToGroup = 48309711104650181870977623970954456715, .span = "testNode-13"}: -1
AppliedToGroupSpan{.appliedToGroup = 62736095198605211225257809392018632659, .span = "testNode-15"}: -1
AppliedToGroupSpan{.appliedToGroup = 88306647967896663440454702563333622411, .span = "testNode-14"}: -1
AppliedToGroupSpan{.appliedToGroup = 88593012092994971404195594578066505753, .span = "testNode-14"}: -1
AppliedToGroupSpan{.appliedToGroup = 101236793920148805528803897551160429874, .span = "testNode-15"}: -1
AppliedToGroupSpan{.appliedToGroup = 103540348370426618402557980166152264074, .span = "testNode-13"}: -1
AppliedToGroupSpan{.appliedToGroup = 105288662624453264750951304918564969592, .span = "testNode-14"}: -1
AppliedToGroupSpan{.appliedToGroup = 105541544679718557174351818626480748349, .span = "testNode-15"}: -1
AppliedToGroupSpan{.appliedToGroup = 115734955286026134645148105451329628103, .span = "testNode-15"}: -1
AppliedToGroupSpan{.appliedToGroup = 127997802756657206686749848402997922788, .span = "testNode-14"}: -1
AppliedToGroupSpan{.appliedToGroup = 141855097966456625106267262973040160760, .span = "testNode-14"}: -1
AppliedToGroupSpan{.appliedToGroup = 145445688903953453565683089960176195512, .span = "testNode-15"}: -1
AppliedToGroupSpan{.appliedToGroup = 152622529118381787560133857353049784362, .span = "testNode-13"}: -1
AppliedToGroupSpan{.appliedToGroup = 168119171796060862792535601563218818929, .span = "testNode-13"}: -1
AppliedToGroupSpan{.appliedToGroup = 171251048780850527017278303207274963999, .span = "testNode-15"}: -1
AppliedToGroupSpan{.appliedToGroup = 217009013054914692991117235578490985621, .span = "testNode-14"}: -1
AppliedToGroupSpan{.appliedToGroup = 219182765788762484199904846940068515825, .span = "testNode-13"}: -1
AppliedToGroupSpan{.appliedToGroup = 232790950656709164395444420136473141434, .span = "testNode-13"}: -1
AppliedToGroupSpan{.appliedToGroup = 242822805854533997069140197230193475072, .span = "testNode-13"}: -1
AppliedToGroupSpan{.appliedToGroup = 263582411874843359805262917493823858270, .span = "testNode-13"}: -1
AppliedToGroupSpan{.appliedToGroup = 266716386045000504023096980925676284275, .span = "testNode-15"}: -1
AppliedToGroupSpan{.appliedToGroup = 273498342722146853995965744453610466834, .span = "testNode-12"}: -1
AppliedToGroupSpan{.appliedToGroup = 286248117606648181817375295335297863313, .span = "testNode-14"}: -1
AppliedToGroupSpan{.appliedToGroup = 286410501704168837165861605088666066578, .span = "testNode-15"}: -1
AppliedToGroupSpan{.appliedToGroup = 294769527764678373131618238457085121326, .span = "testNode-14"}: -1
AppliedToGroupSpan{.appliedToGroup = 301514260321844487074024254615064100404, .span = "testNode-15"}: -1
AppliedToGroupSpan{.appliedToGroup = 318107101283880568845359000382843925186, .span = "testNode-12"}: -1
AppliedToGroupSpan{.appliedToGroup = 327681950154789363076035809114670984144, .span = "testNode-15"}: -1
AppliedToGroupSpan{.appliedToGroup = 335879917074264638271285719334370053948, .span = "testNode-14"}: -1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-128"}, .name = "testNP-128", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [318107101283880568845359000382843925186], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [273498342722146853995965744453610466834]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-129"}, .name = "testNP-129", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [232790950656709164395444420136473141434], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [318107101283880568845359000382843925186]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-130"}, .name = "testNP-130", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [168119171796060862792535601563218818929], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [232790950656709164395444420136473141434]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-131"}, .name = "testNP-131", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [23859904554043317776138937686972490692], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [168119171796060862792535601563218818929]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-132"}, .name = "testNP-132", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [152622529118381787560133857353049784362], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [23859904554043317776138937686972490692]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-133"}, .name = "testNP-133", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [263582411874843359805262917493823858270], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [152622529118381787560133857353049784362]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-134"}, .name = "testNP-134", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [219182765788762484199904846940068515825], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [263582411874843359805262917493823858270]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-135"}, .name = "testNP-135", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [242822805854533997069140197230193475072], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [219182765788762484199904846940068515825]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-136"}, .name = "testNP-136", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [34503473083417678635513967958248208655], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [242822805854533997069140197230193475072]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-137"}, .name = "testNP-137", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [48309711104650181870977623970954456715], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [34503473083417678635513967958248208655]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-138"}, .name = "testNP-138", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [103540348370426618402557980166152264074], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [48309711104650181870977623970954456715]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-139"}, .name = "testNP-139", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [217009013054914692991117235578490985621], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [103540348370426618402557980166152264074]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-140"}, .name = "testNP-140", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [5174678131681871740017664947586831952], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [217009013054914692991117235578490985621]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-141"}, .name = "testNP-141", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [88306647967896663440454702563333622411], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [5174678131681871740017664947586831952]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-142"}, .name = "testNP-142", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [294769527764678373131618238457085121326], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [88306647967896663440454702563333622411]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-143"}, .name = "testNP-143", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [141855097966456625106267262973040160760], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [294769527764678373131618238457085121326]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-144"}, .name = "testNP-144", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [335879917074264638271285719334370053948], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [141855097966456625106267262973040160760]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-145"}, .name = "testNP-145", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [88593012092994971404195594578066505753], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [335879917074264638271285719334370053948]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-146"}, .name = "testNP-146", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [127997802756657206686749848402997922788], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [88593012092994971404195594578066505753]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-147"}, .name = "testNP-147", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [286248117606648181817375295335297863313], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [127997802756657206686749848402997922788]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-148"}, .name = "testNP-148", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [105288662624453264750951304918564969592], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [286248117606648181817375295335297863313]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-149"}, .name = "testNP-149", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [171251048780850527017278303207274963999], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [105288662624453264750951304918564969592]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-150"}, .name = "testNP-150", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [105541544679718557174351818626480748349], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [171251048780850527017278303207274963999]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-151"}, .name = "testNP-151", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [145445688903953453565683089960176195512], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [105541544679718557174351818626480748349]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-152"}, .name = "testNP-152", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [327681950154789363076035809114670984144], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [145445688903953453565683089960176195512]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-153"}, .name = "testNP-153", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [62736095198605211225257809392018632659], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [327681950154789363076035809114670984144]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-154"}, .name = "testNP-154", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [101236793920148805528803897551160429874], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [62736095198605211225257809392018632659]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-155"}, .name = "testNP-155", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [301514260321844487074024254615064100404], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [101236793920148805528803897551160429874]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-156"}, .name = "testNP-156", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [286410501704168837165861605088666066578], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [301514260321844487074024254615064100404]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-157"}, .name = "testNP-157", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [115734955286026134645148105451329628103], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [286410501704168837165861605088666066578]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-158"}, .name = "testNP-158", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [266716386045000504023096980925676284275], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [115734955286026134645148105451329628103]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-159"}, .name = "testNP-159", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [85736293771979518900314375920704824975], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [266716386045000504023096980925676284275]}: -1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-128", .policy = k8spolicy.UID{.uid = "testNP-128"}, .node = "testNode-12"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-129", .policy = k8spolicy.UID{.uid = "testNP-129"}, .node = "testNode-12"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-130", .policy = k8spolicy.UID{.uid = "testNP-130"}, .node = "testNode-13"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-131", .policy = k8spolicy.UID{.uid = "testNP-131"}, .node = "testNode-13"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-132", .policy = k8spolicy.UID{.uid = "testNP-132"}, .node = "testNode-13"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-133", .policy = k8spolicy.UID{.uid = "testNP-133"}, .node = "testNode-13"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-134", .policy = k8spolicy.UID{.uid = "testNP-134"}, .node = "testNode-13"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-135", .policy = k8spolicy.UID{.uid = "testNP-135"}, .node = "testNode-13"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-136", .policy = k8spolicy.UID{.uid = "testNP-136"}, .node = "testNode-13"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-137", .policy = k8spolicy.UID{.uid = "testNP-137"}, .node = "testNode-13"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-138", .policy = k8spolicy.UID{.uid = "testNP-138"}, .node = "testNode-13"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-139", .policy = k8spolicy.UID{.uid = "testNP-139"}, .node = "testNode-13"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-140", .policy = k8spolicy.UID{.uid = "testNP-140"}, .node = "testNode-14"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-141", .policy = k8spolicy.UID{.uid = "testNP-141"}, .node = "testNode-14"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-142", .policy = k8spolicy.UID{.uid = "testNP-142"}, .node = "testNode-14"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-143", .policy = k8spolicy.UID{.uid = "testNP-143"}, .node = "testNode-14"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-144", .policy = k8spolicy.UID{.uid = "testNP-144"}, .node = "testNode-14"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-145", .policy = k8spolicy.UID{.uid = "testNP-145"}, .node = "testNode-14"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-146", .policy = k8spolicy.UID{.uid = "testNP-146"}, .node = "testNode-14"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-147", .policy = k8spolicy.UID{.uid = "testNP-147"}, .node = "testNode-14"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-148", .policy = k8spolicy.UID{.uid = "testNP-148"}, .node = "testNode-14"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-149", .policy = k8spolicy.UID{.uid = "testNP-149"}, .node = "testNode-14"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-150", .policy = k8spolicy.UID{.uid = "testNP-150"}, .node = "testNode-15"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-151", .policy = k8spolicy.UID{.uid = "testNP-151"}, .node = "testNode-15"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-152", .policy = k8spolicy.UID{.uid = "testNP-152"}, .node = "testNode-15"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-153", .policy = k8spolicy.UID{.uid = "testNP-153"}, .node = "testNode-15"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-154", .policy = k8spolicy.UID{.uid = "testNP-154"}, .node = "testNode-15"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-155", .policy = k8spolicy.UID{.uid = "testNP-155"}, .node = "testNode-15"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-156", .policy = k8spolicy.UID{.uid = "testNP-156"}, .node = "testNode-15"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-157", .policy = k8spolicy.UID{.uid = "testNP-157"}, .node = "testNode-15"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-158", .policy = k8spolicy.UID{.uid = "testNP-158"}, .node = "testNode-15"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-159", .policy = k8spolicy.UID{.uid = "testNP-159"}, .node = "testNode-15"}: -1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 2726805893817710174022653320676471588, .address = "10.10.18.4"}: -1
AddressGroupAddress{.addressGroup = 9974211639473608319659941722946644199, .address = "10.10.17.9"}: -1
AddressGroupAddress{.addressGroup = 10182033094312184239641526473766767040, .address = "10.10.18.1"}: -1
AddressGroupAddress{.addressGroup = 17256720215278577374007817148573614136, .address = "10.10.18.5"}: -1
AddressGroupAddress{.addressGroup = 20328604585586023979547482022759361984, .address = "10.10.18.8"}: -1
AddressGroupAddress{.addressGroup = 36551653331402414760417302807572760213, .address = "10.10.17.1"}: -1
AddressGroupAddress{.addressGroup = 49151665004338976913036705027161529557, .address = "10.10.16.9"}: -1
AddressGroupAddress{.addressGroup = 63883611013831348314868339228951323249, .address = "10.10.16.6"}: -1
AddressGroupAddress{.addressGroup = 66761871567052836029848502489228091960, .address = "10.10.16.5"}: -1
AddressGroupAddress{.addressGroup = 68320038444336093762246010090623310652, .address = "10.10.17.4"}: -1
AddressGroupAddress{.addressGroup = 68986903415887453706751896061239479418, .address = "10.10.19.1"}: -1
AddressGroupAddress{.addressGroup = 86041146750172122340794046651979546959, .address = "10.10.17.8"}: -1
AddressGroupAddress{.addressGroup = 90719153998053510093378737867866863921, .address = "10.10.16.3"}: -1
AddressGroupAddress{.addressGroup = 101965737476516751481190340387943244725, .address = "10.10.17.5"}: -1
AddressGroupAddress{.addressGroup = 132798376501879574902227363326979390325, .address = "10.10.16.2"}: -1
AddressGroupAddress{.addressGroup = 142367404777172477545007685153919311464, .address = "10.10.17.6"}: -1
AddressGroupAddress{.addressGroup = 157653470633199016616762445680041740027, .address = "10.10.18.3"}: -1
AddressGroupAddress{.addressGroup = 187224818334107445908201002416377339679, .address = "10.10.16.4"}: -1
AddressGroupAddress{.addressGroup = 216336353712954726812863483949575378717, .address = "10.10.17.3"}: -1
AddressGroupAddress{.addressGroup = 224389261803876575839037860451583230551, .address = "10.10.18.0"}: -1
AddressGroupAddress{.addressGroup = 233478311629120248037837049617413376244, .address = "10.10.19.0"}: -1
AddressGroupAddress{.addressGroup = 236585385853030717689703769531827284787, .address = "10.10.18.9"}: -1
AddressGroupAddress{.addressGroup = 238001474346375222645344555139006607619, .address = "10.10.16.1"}: -1
AddressGroupAddress{.addressGroup = 245363590310446604044532254890596787847, .address = "10.10.16.8"}: -1
AddressGroupAddress{.addressGroup = 254650429442398006867559744965885096267, .address = "10.10.19.2"}: -1
AddressGroupAddress{.addressGroup = 255162848066491254404362432706335389062, .address = "10.10.17.7"}: -1
AddressGroupAddress{.addressGroup = 272143872542305492469587541571323597915, .address = "10.10.17.0"}: -1
AddressGroupAddress{.addressGroup = 282885779642291332653147546854698842358, .address = "10.10.17.2"}: -1
AddressGroupAddress{.addressGroup = 311966986161641290925012556157292490936, .address = "10.10.16.7"}: -1
AddressGroupAddress{.addressGroup = 321248390499260274484285298341757591550, .address = "10.10.18.2"}: -1
AddressGroupAddress{.addressGroup = 325194613543852890456429179505499702299, .address = "10.10.18.7"}: -1
AddressGroupAddress{.addressGroup = 335016774647576936724650941556949766459, .address = "10.10.18.6"}: -1
AddressGroupDescr:
AddressGroupDescr{.name = "020d29e9-0d59-56f2-be4f-80e1ca9f7324", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-184]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-184")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "0780f699-f6e9-5158-ad62-c012c34da8e7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-179]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-179")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "07a8fcfd-8014-5a34-a8bd-13c6c03c89c0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-181]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-181")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "0cfb85fe-e1fa-5967-bee3-5530bc9b0038", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-185]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-185")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "0f4b2596-a4ed-55a9-bf6e-e3af9547edc0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-188]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-188")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "1b7f97a5-596f-5d36-9973-c53a4ac5c695", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-171]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-171")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "24fa442f-2cd2-541e-9765-3d4849131cd5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-169]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-169")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "300f8933-6918-5c2a-9d54-003daf562271", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-166]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-166")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "3239de67-04a5-5398-89c0-6b0dfa4da238", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-165]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-165")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "3365f5f5-f370-5479-90bc-b38d0e8b9b3c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-174]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-174")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "33e664f1-3b9a-575d-a9d1-a8332819cc7a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-191]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-191")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "40baec0e-95e4-5295-806c-91c9d764414f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-178]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-178")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "443fdf9f-19c2-5a22-8bd7-43e3e4457931", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-163]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-163")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "4cb5e2ff-79de-563a-9956-a634c80863b5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-175]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-175")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "63e80977-fc88-57e2-9ab0-f8fe8fa6bb75", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-162]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-162")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "6b1af6fc-e75e-5e52-84bb-2829d56b9e68", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-176]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-176")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "769af438-e108-5287-a978-31ac710b46fb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-183]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-183")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "8cda303a-bbf0-52d3-9fe9-378528fa9f1f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-164]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-164")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "a2c0ddbd-27ca-5a9b-a410-20a188a1171d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-173]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-173")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "a8cfccc3-0404-525a-b3d3-284dd5c38257", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-180]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-180")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "afa64984-2df6-5f21-9d9c-7ab14dc108f4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-190]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-190")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "b1fcb01a-565c-5b61-becc-800d4492eb33", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-189]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-189")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "b30d6aa7-f2f6-5bce-ba24-615b7eba3103", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-161]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-161")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "b8974eff-5e85-5907-bda4-4bd7b8ac6687", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-168]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-168")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "bf93e384-8ebe-5643-85f5-1f91edd0f14b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-192]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-192")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "bff693b4-df3f-5e7c-b929-9d26f3aab586", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-177]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-177")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "ccbd00da-4e21-58a1-83e6-f6ebc038945b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-170]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-170")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "d4d1d1c3-3e8b-59c0-aa4d-09d26aa0f8f6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-172]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-172")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "eab2a7f1-a404-59d7-8f5f-7ec0bdbdb0b8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-167]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-167")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "f1ae3082-14a4-598f-b762-2e7287c81ffe", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-182]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-182")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "f4a63453-6945-5801-9c67-f941d090041b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-187]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-187")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "fc09e241-cdaa-52a0-9cc4-04d72757d13b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-186]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-186")], .matchExpressions = []}}}}: -1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 2726805893817710174022653320676471588, .node = "testNode-18"}: -1
AddressGroupSpan{.addressGroup = 9974211639473608319659941722946644199, .node = "testNode-17"}: -1
AddressGroupSpan{.addressGroup = 10182033094312184239641526473766767040, .node = "testNode-18"}: -1
AddressGroupSpan{.addressGroup = 17256720215278577374007817148573614136, .node = "testNode-18"}: -1
AddressGroupSpan{.addressGroup = 20328604585586023979547482022759361984, .node = "testNode-18"}: -1
AddressGroupSpan{.addressGroup = 36551653331402414760417302807572760213, .node = "testNode-17"}: -1
AddressGroupSpan{.addressGroup = 49151665004338976913036705027161529557, .node = "testNode-16"}: -1
AddressGroupSpan{.addressGroup = 63883611013831348314868339228951323249, .node = "testNode-16"}: -1
AddressGroupSpan{.addressGroup = 66761871567052836029848502489228091960, .node = "testNode-16"}: -1
AddressGroupSpan{.addressGroup = 68320038444336093762246010090623310652, .node = "testNode-17"}: -1
AddressGroupSpan{.addressGroup = 68986903415887453706751896061239479418, .node = "testNode-19"}: -1
AddressGroupSpan{.addressGroup = 86041146750172122340794046651979546959, .node = "testNode-17"}: -1
AddressGroupSpan{.addressGroup = 90719153998053510093378737867866863921, .node = "testNode-16"}: -1
AddressGroupSpan{.addressGroup = 101965737476516751481190340387943244725, .node = "testNode-17"}: -1
AddressGroupSpan{.addressGroup = 132798376501879574902227363326979390325, .node = "testNode-16"}: -1
AddressGroupSpan{.addressGroup = 142367404777172477545007685153919311464, .node = "testNode-17"}: -1
AddressGroupSpan{.addressGroup = 157653470633199016616762445680041740027, .node = "testNode-18"}: -1
AddressGroupSpan{.addressGroup = 187224818334107445908201002416377339679, .node = "testNode-16"}: -1
AddressGroupSpan{.addressGroup = 216336353712954726812863483949575378717, .node = "testNode-17"}: -1
AddressGroupSpan{.addressGroup = 224389261803876575839037860451583230551, .node = "testNode-17"}: -1
AddressGroupSpan{.addressGroup = 233478311629120248037837049617413376244, .node = "testNode-18"}: -1
AddressGroupSpan{.addressGroup = 236585385853030717689703769531827284787, .node = "testNode-18"}: -1
AddressGroupSpan{.addressGroup = 238001474346375222645344555139006607619, .node = "testNode-16"}: -1
AddressGroupSpan{.addressGroup = 245363590310446604044532254890596787847, .node = "testNode-16"}: -1
AddressGroupSpan{.addressGroup = 254650429442398006867559744965885096267, .node = "testNode-19"}: -1
AddressGroupSpan{.addressGroup = 255162848066491254404362432706335389062, .node = "testNode-17"}: -1
AddressGroupSpan{.addressGroup = 272143872542305492469587541571323597915, .node = "testNode-16"}: -1
AddressGroupSpan{.addressGroup = 282885779642291332653147546854698842358, .node = "testNode-17"}: -1
AddressGroupSpan{.addressGroup = 311966986161641290925012556157292490936, .node = "testNode-16"}: -1
AddressGroupSpan{.addressGroup = 321248390499260274484285298341757591550, .node = "testNode-18"}: -1
AddressGroupSpan{.addressGroup = 325194613543852890456429179505499702299, .node = "testNode-18"}: -1
AddressGroupSpan{.addressGroup = 335016774647576936724650941556949766459, .node = "testNode-18"}: -1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "020d29e9-0d59-56f2-be4f-80e1ca9f7324", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-184]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-184")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "0780f699-f6e9-5158-ad62-c012c34da8e7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-179]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-179")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "07a8fcfd-8014-5a34-a8bd-13c6c03c89c0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-181]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-181")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "0cfb85fe-e1fa-5967-bee3-5530bc9b0038", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-185]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-185")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "0f4b2596-a4ed-55a9-bf6e-e3af9547edc0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-188]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-188")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "1b7f97a5-596f-5d36-9973-c53a4ac5c695", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-171]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-171")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "24fa442f-2cd2-541e-9765-3d4849131cd5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-169]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-169")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "300f8933-6918-5c2a-9d54-003daf562271", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-166]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-166")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "3239de67-04a5-5398-89c0-6b0dfa4da238", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-165]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-165")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "3365f5f5-f370-5479-90bc-b38d0e8b9b3c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-174]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-174")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "33e664f1-3b9a-575d-a9d1-a8332819cc7a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-191]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-191")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "408035a5-0b4c-599f-a516-938d95dc268f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-160]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-160")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "40baec0e-95e4-5295-806c-91c9d764414f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-178]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-178")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "443fdf9f-19c2-5a22-8bd7-43e3e4457931", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-163]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-163")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "4cb5e2ff-79de-563a-9956-a634c80863b5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-175]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-175")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "63e80977-fc88-57e2-9ab0-f8fe8fa6bb75", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-162]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-162")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "6b1af6fc-e75e-5e52-84bb-2829d56b9e68", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-176]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-176")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "769af438-e108-5287-a978-31ac710b46fb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-183]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-183")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "8cda303a-bbf0-52d3-9fe9-378528fa9f1f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-164]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-164")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "a2c0ddbd-27ca-5a9b-a410-20a188a1171d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-173]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-173")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "a8cfccc3-0404-525a-b3d3-284dd5c38257", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-180]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-180")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "afa64984-2df6-5f21-9d9c-7ab14dc108f4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-190]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-190")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "b1fcb01a-565c-5b61-becc-800d4492eb33", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-189]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-189")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "b30d6aa7-f2f6-5bce-ba24-615b7eba3103", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-161]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-161")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "b8974eff-5e85-5907-bda4-4bd7b8ac6687", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-168]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-168")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "bff693b4-df3f-5e7c-b929-9d26f3aab586", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-177]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-177")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "ccbd00da-4e21-58a1-83e6-f6ebc038945b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-170]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-170")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "d4d1d1c3-3e8b-59c0-aa4d-09d26aa0f8f6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-172]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-172")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "eab2a7f1-a404-59d7-8f5f-7ec0bdbdb0b8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-167]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-167")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "f1ae3082-14a4-598f-b762-2e7287c81ffe", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-182]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-182")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "f4a63453-6945-5801-9c67-f941d090041b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-187]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-187")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "fc09e241-cdaa-52a0-9cc4-04d72757d13b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-186]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-186")], .matchExpressions = []}}}}: -1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 2726805893817710174022653320676471588, .node = "testNode-18", .pods = [k8spolicy.PodReference{.name = "testPod-184", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 9974211639473608319659941722946644199, .node = "testNode-17", .pods = [k8spolicy.PodReference{.name = "testPod-179", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 10182033094312184239641526473766767040, .node = "testNode-18", .pods = [k8spolicy.PodReference{.name = "testPod-181", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 17256720215278577374007817148573614136, .node = "testNode-18", .pods = [k8spolicy.PodReference{.name = "testPod-185", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 20328604585586023979547482022759361984, .node = "testNode-18", .pods = [k8spolicy.PodReference{.name = "testPod-188", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 36551653331402414760417302807572760213, .node = "testNode-17", .pods = [k8spolicy.PodReference{.name = "testPod-171", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 49151665004338976913036705027161529557, .node = "testNode-16", .pods = [k8spolicy.PodReference{.name = "testPod-169", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 63883611013831348314868339228951323249, .node = "testNode-16", .pods = [k8spolicy.PodReference{.name = "testPod-166", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 66761871567052836029848502489228091960, .node = "testNode-16", .pods = [k8spolicy.PodReference{.name = "testPod-165", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 68320038444336093762246010090623310652, .node = "testNode-17", .pods = [k8spolicy.PodReference{.name = "testPod-174", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 68986903415887453706751896061239479418, .node = "testNode-19", .pods = [k8spolicy.PodReference{.name = "testPod-191", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 85736293771979518900314375920704824975, .node = "testNode-16", .pods = [k8spolicy.PodReference{.name = "testPod-160", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 86041146750172122340794046651979546959, .node = "testNode-17", .pods = [k8spolicy.PodReference{.name = "testPod-178", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 90719153998053510093378737867866863921, .node = "testNode-16", .pods = [k8spolicy.PodReference{.name = "testPod-163", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 101965737476516751481190340387943244725, .node = "testNode-17", .pods = [k8spolicy.PodReference{.name = "testPod-175", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 132798376501879574902227363326979390325, .node = "testNode-16", .pods = [k8spolicy.PodReference{.name = "testPod-162", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 142367404777172477545007685153919311464, .node = "testNode-17", .pods = [k8spolicy.PodReference{.name = "testPod-176", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 157653470633199016616762445680041740027, .node = "testNode-18", .pods = [k8spolicy.PodReference{.name = "testPod-183", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 187224818334107445908201002416377339679, .node = "testNode-16", .pods = [k8spolicy.PodReference{.name = "testPod-164", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 216336353712954726812863483949575378717, .node = "testNode-17", .pods = [k8spolicy.PodReference{.name = "testPod-173", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 224389261803876575839037860451583230551, .node = "testNode-18", .pods = [k8spolicy.PodReference{.name = "testPod-180", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 233478311629120248037837049617413376244, .node = "testNode-19", .pods = [k8spolicy.PodReference{.name = "testPod-190", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 236585385853030717689703769531827284787, .node = "testNode-18", .pods = [k8spolicy.PodReference{.name = "testPod-189", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 238001474346375222645344555139006607619, .node = "testNode-16", .pods = [k8spolicy.PodReference{.name = "testPod-161", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 245363590310446604044532254890596787847, .node = "testNode-16", .pods = [k8spolicy.PodReference{.name = "testPod-168", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 255162848066491254404362432706335389062, .node = "testNode-17", .pods = [k8spolicy.PodReference{.name = "testPod-177", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 272143872542305492469587541571323597915, .node = "testNode-17", .pods = [k8spolicy.PodReference{.name = "testPod-170", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 282885779642291332653147546854698842358, .node = "testNode-17", .pods = [k8spolicy.PodReference{.name = "testPod-172", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 311966986161641290925012556157292490936, .node = "testNode-16", .pods = [k8spolicy.PodReference{.name = "testPod-167", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 321248390499260274484285298341757591550, .node = "testNode-18", .pods = [k8spolicy.PodReference{.name = "testPod-182", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 325194613543852890456429179505499702299, .node = "testNode-18", .pods = [k8spolicy.PodReference{.name = "testPod-187", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 335016774647576936724650941556949766459, .node = "testNode-18", .pods = [k8spolicy.PodReference{.name = "testPod-186", .namespace = "testNamespace"}]}: -1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 2726805893817710174022653320676471588, .span = "testNode-18"}: -1
AppliedToGroupSpan{.appliedToGroup = 9974211639473608319659941722946644199, .span = "testNode-17"}: -1
AppliedToGroupSpan{.appliedToGroup = 10182033094312184239641526473766767040, .span = "testNode-18"}: -1
AppliedToGroupSpan{.appliedToGroup = 17256720215278577374007817148573614136, .span = "testNode-18"}: -1
AppliedToGroupSpan{.appliedToGroup = 20328604585586023979547482022759361984, .span = "testNode-18"}: -1
AppliedToGroupSpan{.appliedToGroup = 36551653331402414760417302807572760213, .span = "testNode-17"}: -1
AppliedToGroupSpan{.appliedToGroup = 49151665004338976913036705027161529557, .span = "testNode-16"}: -1
AppliedToGroupSpan{.appliedToGroup = 63883611013831348314868339228951323249, .span = "testNode-16"}: -1
AppliedToGroupSpan{.appliedToGroup = 66761871567052836029848502489228091960, .span = "testNode-16"}: -1
AppliedToGroupSpan{.appliedToGroup = 68320038444336093762246010090623310652, .span = "testNode-17"}: -1
AppliedToGroupSpan{.appliedToGroup = 68986903415887453706751896061239479418, .span = "testNode-19"}: -1
AppliedToGroupSpan{.appliedToGroup = 85736293771979518900314375920704824975, .span = "testNode-16"}: -1
AppliedToGroupSpan{.appliedToGroup = 86041146750172122340794046651979546959, .span = "testNode-17"}: -1
AppliedToGroupSpan{.appliedToGroup = 90719153998053510093378737867866863921, .span = "testNode-16"}: -1
AppliedToGroupSpan{.appliedToGroup = 101965737476516751481190340387943244725, .span = "testNode-17"}: -1
AppliedToGroupSpan{.appliedToGroup = 132798376501879574902227363326979390325, .span = "testNode-16"}: -1
AppliedToGroupSpan{.appliedToGroup = 142367404777172477545007685153919311464, .span = "testNode-17"}: -1
AppliedToGroupSpan{.appliedToGroup = 157653470633199016616762445680041740027, .span = "testNode-18"}: -1
AppliedToGroupSpan{.appliedToGroup = 187224818334107445908201002416377339679, .span = "testNode-16"}: -1
AppliedToGroupSpan{.appliedToGroup = 216336353712954726812863483949575378717, .span = "testNode-17"}: -1
AppliedToGroupSpan{.appliedToGroup = 224389261803876575839037860451583230551, .span = "testNode-18"}: -1
AppliedToGroupSpan{.appliedToGroup = 233478311629120248037837049617413376244, .span = "testNode-19"}: -1
AppliedToGroupSpan{.appliedToGroup = 236585385853030717689703769531827284787, .span = "testNode-18"}: -1
AppliedToGroupSpan{.appliedToGroup = 238001474346375222645344555139006607619, .span = "testNode-16"}: -1
AppliedToGroupSpan{.appliedToGroup = 245363590310446604044532254890596787847, .span = "testNode-16"}: -1
AppliedToGroupSpan{.appliedToGroup = 255162848066491254404362432706335389062, .span = "testNode-17"}: -1
AppliedToGroupSpan{.appliedToGroup = 272143872542305492469587541571323597915, .span = "testNode-17"}: -1
AppliedToGroupSpan{.appliedToGroup = 282885779642291332653147546854698842358, .span = "testNode-17"}: -1
AppliedToGroupSpan{.appliedToGroup = 311966986161641290925012556157292490936, .span = "testNode-16"}: -1
AppliedToGroupSpan{.appliedToGroup = 321248390499260274484285298341757591550, .span = "testNode-18"}: -1
AppliedToGroupSpan{.appliedToGroup = 325194613543852890456429179505499702299, .span = "testNode-18"}: -1
AppliedToGroupSpan{.appliedToGroup = 335016774647576936724650941556949766459, .span = "testNode-18"}: -1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-160"}, .name = "testNP-160", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [238001474346375222645344555139006607619], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [85736293771979518900314375920704824975]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-161"}, .name = "testNP-161", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [132798376501879574902227363326979390325], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [238001474346375222645344555139006607619]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-162"}, .name = "testNP-162", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [90719153998053510093378737867866863921], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [132798376501879574902227363326979390325]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-163"}, .name = "testNP-163", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [187224818334107445908201002416377339679], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [90719153998053510093378737867866863921]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-164"}, .name = "testNP-164", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [66761871567052836029848502489228091960], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [187224818334107445908201002416377339679]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-165"}, .name = "testNP-165", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [63883611013831348314868339228951323249], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [66761871567052836029848502489228091960]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-166"}, .name = "testNP-166", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [311966986161641290925012556157292490936], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [63883611013831348314868339228951323249]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-167"}, .name = "testNP-167", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [245363590310446604044532254890596787847], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [311966986161641290925012556157292490936]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-168"}, .name = "testNP-168", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [49151665004338976913036705027161529557], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [245363590310446604044532254890596787847]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-169"}, .name = "testNP-169", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [272143872542305492469587541571323597915], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [49151665004338976913036705027161529557]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-170"}, .name = "testNP-170", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [36551653331402414760417302807572760213], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [272143872542305492469587541571323597915]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-171"}, .name = "testNP-171", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [282885779642291332653147546854698842358], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [36551653331402414760417302807572760213]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-172"}, .name = "testNP-172", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [216336353712954726812863483949575378717], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [282885779642291332653147546854698842358]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-173"}, .name = "testNP-173", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [68320038444336093762246010090623310652], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [216336353712954726812863483949575378717]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-174"}, .name = "testNP-174", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [101965737476516751481190340387943244725], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [68320038444336093762246010090623310652]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-175"}, .name = "testNP-175", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [142367404777172477545007685153919311464], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [101965737476516751481190340387943244725]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-176"}, .name = "testNP-176", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [255162848066491254404362432706335389062], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [142367404777172477545007685153919311464]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-177"}, .name = "testNP-177", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [86041146750172122340794046651979546959], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [255162848066491254404362432706335389062]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-178"}, .name = "testNP-178", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [9974211639473608319659941722946644199], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [86041146750172122340794046651979546959]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-179"}, .name = "testNP-179", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [224389261803876575839037860451583230551], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [9974211639473608319659941722946644199]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-180"}, .name = "testNP-180", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [10182033094312184239641526473766767040], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [224389261803876575839037860451583230551]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-181"}, .name = "testNP-181", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [321248390499260274484285298341757591550], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [10182033094312184239641526473766767040]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-182"}, .name = "testNP-182", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [157653470633199016616762445680041740027], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [321248390499260274484285298341757591550]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-183"}, .name = "testNP-183", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [2726805893817710174022653320676471588], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [157653470633199016616762445680041740027]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-184"}, .name = "testNP-184", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [17256720215278577374007817148573614136], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [2726805893817710174022653320676471588]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-185"}, .name = "testNP-185", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [335016774647576936724650941556949766459], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [17256720215278577374007817148573614136]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-186"}, .name = "testNP-186", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [325194613543852890456429179505499702299], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [335016774647576936724650941556949766459]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-187"}, .name = "testNP-187", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [20328604585586023979547482022759361984], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [325194613543852890456429179505499702299]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-188"}, .name = "testNP-188", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [236585385853030717689703769531827284787], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [20328604585586023979547482022759361984]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-189"}, .name = "testNP-189", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [233478311629120248037837049617413376244], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [236585385853030717689703769531827284787]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-190"}, .name = "testNP-190", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [68986903415887453706751896061239479418], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [233478311629120248037837049617413376244]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-191"}, .name = "testNP-191", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [254650429442398006867559744965885096267], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [68986903415887453706751896061239479418]}: -1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-160", .policy = k8spolicy.UID{.uid = "testNP-160"}, .node = "testNode-16"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-161", .policy = k8spolicy.UID{.uid = "testNP-161"}, .node = "testNode-16"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-162", .policy = k8spolicy.UID{.uid = "testNP-162"}, .node = "testNode-16"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-163", .policy = k8spolicy.UID{.uid = "testNP-163"}, .node = "testNode-16"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-164", .policy = k8spolicy.UID{.uid = "testNP-164"}, .node = "testNode-16"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-165", .policy = k8spolicy.UID{.uid = "testNP-165"}, .node = "testNode-16"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-166", .policy = k8spolicy.UID{.uid = "testNP-166"}, .node = "testNode-16"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-167", .policy = k8spolicy.UID{.uid = "testNP-167"}, .node = "testNode-16"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-168", .policy = k8spolicy.UID{.uid = "testNP-168"}, .node = "testNode-16"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-169", .policy = k8spolicy.UID{.uid = "testNP-169"}, .node = "testNode-16"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-170", .policy = k8spolicy.UID{.uid = "testNP-170"}, .node = "testNode-17"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-171", .policy = k8spolicy.UID{.uid = "testNP-171"}, .node = "testNode-17"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-172", .policy = k8spolicy.UID{.uid = "testNP-172"}, .node = "testNode-17"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-173", .policy = k8spolicy.UID{.uid = "testNP-173"}, .node = "testNode-17"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-174", .policy = k8spolicy.UID{.uid = "testNP-174"}, .node = "testNode-17"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-175", .policy = k8spolicy.UID{.uid = "testNP-175"}, .node = "testNode-17"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-176", .policy = k8spolicy.UID{.uid = "testNP-176"}, .node = "testNode-17"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-177", .policy = k8spolicy.UID{.uid = "testNP-177"}, .node = "testNode-17"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-178", .policy = k8spolicy.UID{.uid = "testNP-178"}, .node = "testNode-17"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-179", .policy = k8spolicy.UID{.uid = "testNP-179"}, .node = "testNode-17"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-180", .policy = k8spolicy.UID{.uid = "testNP-180"}, .node = "testNode-18"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-181", .policy = k8spolicy.UID{.uid = "testNP-181"}, .node = "testNode-18"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-182", .policy = k8spolicy.UID{.uid = "testNP-182"}, .node = "testNode-18"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-183", .policy = k8spolicy.UID{.uid = "testNP-183"}, .node = "testNode-18"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-184", .policy = k8spolicy.UID{.uid = "testNP-184"}, .node = "testNode-18"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-185", .policy = k8spolicy.UID{.uid = "testNP-185"}, .node = "testNode-18"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-186", .policy = k8spolicy.UID{.uid = "testNP-186"}, .node = "testNode-18"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-187", .policy = k8spolicy.UID{.uid = "testNP-187"}, .node = "testNode-18"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-188", .policy = k8spolicy.UID{.uid = "testNP-188"}, .node = "testNode-18"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-189", .policy = k8spolicy.UID{.uid = "testNP-189"}, .node = "testNode-18"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-190", .policy = k8spolicy.UID{.uid = "testNP-190"}, .node = "testNode-19"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-191", .policy = k8spolicy.UID{.uid = "testNP-191"}, .node = "testNode-19"}: -1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 19954882372624767847269339684625319556, .address = "10.10.22.0"}: -1
AddressGroupAddress{.addressGroup = 25696023426616215154958532051893520306, .address = "10.10.19.8"}: -1
AddressGroupAddress{.addressGroup = 31006974088550824198755824768856600235, .address = "10.10.20.1"}: -1
AddressGroupAddress{.addressGroup = 33703463587909161242769186897832987590, .address = "10.10.20.3"}: -1
AddressGroupAddress{.addressGroup = 40907116952880894293774087494266444075, .address = "10.10.21.1"}: -1
AddressGroupAddress{.addressGroup = 53461813972510612144985104795020463894, .address = "10.10.19.4"}: -1
AddressGroupAddress{.addressGroup = 57300239076662165375439007813575462000, .address = "10.10.19.3"}: -1
AddressGroupAddress{.addressGroup = 65075389810740430332440348069746261908, .address = "10.10.22.3"}: -1
AddressGroupAddress{.addressGroup = 75942463945999836881962796856495961412, .address = "10.10.20.2"}: -1
AddressGroupAddress{.addressGroup = 83785598465348900714859335941647885594, .address = "10.10.20.4"}: -1
AddressGroupAddress{.addressGroup = 96129841428936758687501228319270128609, .address = "10.10.20.9"}: -1
AddressGroupAddress{.addressGroup = 98084079121610444304202333165918820717, .address = "10.10.19.6"}: -1
AddressGroupAddress{.addressGroup = 119943215358358031355366371303809726165, .address = "10.10.20.8"}: -1
AddressGroupAddress{.addressGroup = 162011623228205519824689437489696841739, .address = "10.10.19.7"}: -1
AddressGroupAddress{.addressGroup = 185095757664273280601006928671604579678, .address = "10.10.21.0"}: -1
AddressGroupAddress{.addressGroup = 200625523123688564407237909476201822814, .address = "10.10.22.4"}: -1
AddressGroupAddress{.addressGroup = 206113199014032320922053922067967002044, .address = "10.10.20.0"}: -1
AddressGroupAddress{.addressGroup = 227490618867503998727090134637222993911, .address = "10.10.20.7"}: -1
AddressGroupAddress{.addressGroup = 242363711763724829089145815052878036562, .address = "10.10.20.5"}: -1
AddressGroupAddress{.addressGroup = 242902656798424184510869763157271317029, .address = "10.10.20.6"}: -1
AddressGroupAddress{.addressGroup = 243387286179380872418279174833502995369, .address = "10.10.21.2"}: -1
AddressGroupAddress{.addressGroup = 253301405221812236416901820238840297181, .address = "10.10.19.9"}: -1
AddressGroupAddress{.addressGroup = 254274852237376053379399165541838943723, .address = "10.10.22.2"}: -1
AddressGroupAddress{.addressGroup = 272361320202870035058683159969001521237, .address = "10.10.21.7"}: -1
AddressGroupAddress{.addressGroup = 272617845590879382841056528498694166965, .address = "10.10.21.8"}: -1
AddressGroupAddress{.addressGroup = 273903785612067732148175004176344542828, .address = "10.10.21.5"}: -1
AddressGroupAddress{.addressGroup = 298696299457761002590106537850835748215, .address = "10.10.21.6"}: -1
AddressGroupAddress{.addressGroup = 302049344293990434719066002872617220537, .address = "10.10.19.5"}: -1
AddressGroupAddress{.addressGroup = 305857481517685389569122444645882591043, .address = "10.10.21.9"}: -1
AddressGroupAddress{.addressGroup = 319667111843607341849615986754096266255, .address = "10.10.21.4"}: -1
AddressGroupAddress{.addressGroup = 323172733288198583288479242077076248832, .address = "10.10.21.3"}: -1
AddressGroupAddress{.addressGroup = 333534983878518753844206178808645995449, .address = "10.10.22.1"}: -1
AddressGroupDescr:
AddressGroupDescr{.name = "0f032ba9-271b-5ea5-a68c-a17f073e0684", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-220]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-220")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "1354dfc4-d07d-599b-9202-2a047d7887b2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-198]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-198")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "1753b9da-5ccf-53e6-b0fb-d05a9c7baeab", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-201]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-201")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "195b0d0c-b87d-5d28-9286-324a27604bc6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-203]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-203")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "1ec66c94-f36e-5c6f-af53-9982c106d92b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-211]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-211")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "28385eef-7119-578d-b809-9694ba7a8f16", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-194]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-194")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "2b1b9fe7-7a74-57c5-9583-858774654c70", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-193]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-193")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "30f5106e-9e8f-5329-a04f-f5223d313f94", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-223]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-223")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "3921fc8d-a686-5d41-b716-bc5b4ef1f544", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-202]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-202")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "3f0884f0-cc39-51b6-b019-74e3b40de51a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-204]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-204")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "4851ef1b-a775-5343-b0c7-53be5c924be1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-209]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-209")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "49ca4e77-1929-5c26-943c-472b2f1f196d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-196]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-196")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "5a3c3917-155a-502d-bc7e-0656e685b6d5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-208]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-208")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "79e24dbc-1919-5e6c-b7c1-9d4fe977a00b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-197]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-197")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "8b40256f-1904-56da-8ebb-021e3b859d5e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-210]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-210")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "96ef11fc-8238-5331-acdc-7a54fa317a5e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-224]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-224")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "9b0ff54c-090b-5ae2-8883-8c9f80e245bc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-200]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-200")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "ab251978-7739-5005-b186-1b8b695e9ff7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-207]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-207")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "b6558d90-dfdf-57f0-a0f0-47b447973e52", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-205]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-205")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "b6bd599b-8fbe-5e7c-978a-d72910190a25", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-206]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-206")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "b71aafae-50e7-5119-9d3a-52b08374c3a9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-212]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-212")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "be90137d-1291-5421-be9a-568c1d5576dd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-199]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-199")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "bf4b8e21-c64f-52cb-a0e0-5c7a300ef5eb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-222]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-222")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "cce6e1d9-a389-58ee-bf74-9faadfa24055", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-217]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-217")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "cd184987-3c4e-52a2-82de-406b959e19b5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-218]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-218")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "ce0ff344-2eaf-5ade-9cd0-be745f89ee6c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-215]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-215")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "e0b6d092-d299-5591-ac2f-94ba68eac577", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-216]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-216")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "e33c9672-9427-5cbe-abab-4284039d39b9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-195]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-195")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "e61a021b-d18d-5759-bc20-c440a1def743", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-219]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-219")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "f07da573-7e4c-5433-bf13-8fa09504fc0f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-214]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-214")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "f320cdee-caa8-577e-8561-bbcc5a6cd900", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-213]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-213")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "faec8054-e271-5a63-8328-d0b7a1decbb9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-221]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-221")], .matchExpressions = []}}}}: -1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 19954882372624767847269339684625319556, .node = "testNode-21"}: -1
AddressGroupSpan{.addressGroup = 25696023426616215154958532051893520306, .node = "testNode-19"}: -1
AddressGroupSpan{.addressGroup = 31006974088550824198755824768856600235, .node = "testNode-20"}: -1
AddressGroupSpan{.addressGroup = 33703463587909161242769186897832987590, .node = "testNode-20"}: -1
AddressGroupSpan{.addressGroup = 40907116952880894293774087494266444075, .node = "testNode-21"}: -1
AddressGroupSpan{.addressGroup = 53461813972510612144985104795020463894, .node = "testNode-19"}: -1
AddressGroupSpan{.addressGroup = 57300239076662165375439007813575462000, .node = "testNode-19"}: -1
AddressGroupSpan{.addressGroup = 65075389810740430332440348069746261908, .node = "testNode-22"}: -1
AddressGroupSpan{.addressGroup = 75942463945999836881962796856495961412, .node = "testNode-20"}: -1
AddressGroupSpan{.addressGroup = 83785598465348900714859335941647885594, .node = "testNode-20"}: -1
AddressGroupSpan{.addressGroup = 96129841428936758687501228319270128609, .node = "testNode-20"}: -1
AddressGroupSpan{.addressGroup = 98084079121610444304202333165918820717, .node = "testNode-19"}: -1
AddressGroupSpan{.addressGroup = 119943215358358031355366371303809726165, .node = "testNode-20"}: -1
AddressGroupSpan{.addressGroup = 162011623228205519824689437489696841739, .node = "testNode-19"}: -1
AddressGroupSpan{.addressGroup = 185095757664273280601006928671604579678, .node = "testNode-20"}: -1
AddressGroupSpan{.addressGroup = 200625523123688564407237909476201822814, .node = "testNode-22"}: -1
AddressGroupSpan{.addressGroup = 206113199014032320922053922067967002044, .node = "testNode-19"}: -1
AddressGroupSpan{.addressGroup = 227490618867503998727090134637222993911, .node = "testNode-20"}: -1
AddressGroupSpan{.addressGroup = 242363711763724829089145815052878036562, .node = "testNode-20"}: -1
AddressGroupSpan{.addressGroup = 242902656798424184510869763157271317029, .node = "testNode-20"}: -1
AddressGroupSpan{.addressGroup = 243387286179380872418279174833502995369, .node = "testNode-21"}: -1
AddressGroupSpan{.addressGroup = 253301405221812236416901820238840297181, .node = "testNode-19"}: -1
AddressGroupSpan{.addressGroup = 254274852237376053379399165541838943723, .node = "testNode-22"}: -1
AddressGroupSpan{.addressGroup = 272361320202870035058683159969001521237, .node = "testNode-21"}: -1
AddressGroupSpan{.addressGroup = 272617845590879382841056528498694166965, .node = "testNode-21"}: -1
AddressGroupSpan{.addressGroup = 273903785612067732148175004176344542828, .node = "testNode-21"}: -1
AddressGroupSpan{.addressGroup = 298696299457761002590106537850835748215, .node = "testNode-21"}: -1
AddressGroupSpan{.addressGroup = 302049344293990434719066002872617220537, .node = "testNode-19"}: -1
AddressGroupSpan{.addressGroup = 305857481517685389569122444645882591043, .node = "testNode-21"}: -1
AddressGroupSpan{.addressGroup = 319667111843607341849615986754096266255, .node = "testNode-21"}: -1
AddressGroupSpan{.addressGroup = 323172733288198583288479242077076248832, .node = "testNode-21"}: -1
AddressGroupSpan{.addressGroup = 333534983878518753844206178808645995449, .node = "testNode-22"}: -1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "0f032ba9-271b-5ea5-a68c-a17f073e0684", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-220]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-220")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "1354dfc4-d07d-599b-9202-2a047d7887b2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-198]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-198")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "1753b9da-5ccf-53e6-b0fb-d05a9c7baeab", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-201]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-201")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "195b0d0c-b87d-5d28-9286-324a27604bc6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-203]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-203")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "1ec66c94-f36e-5c6f-af53-9982c106d92b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-211]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-211")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "28385eef-7119-578d-b809-9694ba7a8f16", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-194]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-194")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "2b1b9fe7-7a74-57c5-9583-858774654c70", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-193]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-193")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "30f5106e-9e8f-5329-a04f-f5223d313f94", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-223]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-223")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "3921fc8d-a686-5d41-b716-bc5b4ef1f544", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-202]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-202")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "3f0884f0-cc39-51b6-b019-74e3b40de51a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-204]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-204")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "4851ef1b-a775-5343-b0c7-53be5c924be1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-209]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-209")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "49ca4e77-1929-5c26-943c-472b2f1f196d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-196]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-196")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "5a3c3917-155a-502d-bc7e-0656e685b6d5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-208]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-208")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "79e24dbc-1919-5e6c-b7c1-9d4fe977a00b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-197]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-197")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "8b40256f-1904-56da-8ebb-021e3b859d5e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-210]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-210")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "9b0ff54c-090b-5ae2-8883-8c9f80e245bc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-200]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-200")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "ab251978-7739-5005-b186-1b8b695e9ff7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-207]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-207")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "b6558d90-dfdf-57f0-a0f0-47b447973e52", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-205]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-205")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "b6bd599b-8fbe-5e7c-978a-d72910190a25", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-206]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-206")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "b71aafae-50e7-5119-9d3a-52b08374c3a9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-212]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-212")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "be90137d-1291-5421-be9a-568c1d5576dd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-199]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-199")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "bf4b8e21-c64f-52cb-a0e0-5c7a300ef5eb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-222]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-222")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "bf93e384-8ebe-5643-85f5-1f91edd0f14b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-192]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-192")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "cce6e1d9-a389-58ee-bf74-9faadfa24055", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-217]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-217")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "cd184987-3c4e-52a2-82de-406b959e19b5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-218]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-218")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "ce0ff344-2eaf-5ade-9cd0-be745f89ee6c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-215]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-215")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "e0b6d092-d299-5591-ac2f-94ba68eac577", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-216]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-216")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "e33c9672-9427-5cbe-abab-4284039d39b9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-195]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-195")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "e61a021b-d18d-5759-bc20-c440a1def743", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-219]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-219")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "f07da573-7e4c-5433-bf13-8fa09504fc0f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-214]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-214")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "f320cdee-caa8-577e-8561-bbcc5a6cd900", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-213]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-213")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "faec8054-e271-5a63-8328-d0b7a1decbb9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-221]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-221")], .matchExpressions = []}}}}: -1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 19954882372624767847269339684625319556, .node = "testNode-22", .pods = [k8spolicy.PodReference{.name = "testPod-220", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 25696023426616215154958532051893520306, .node = "testNode-19", .pods = [k8spolicy.PodReference{.name = "testPod-198", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 31006974088550824198755824768856600235, .node = "testNode-20", .pods = [k8spolicy.PodReference{.name = "testPod-201", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 33703463587909161242769186897832987590, .node = "testNode-20", .pods = [k8spolicy.PodReference{.name = "testPod-203", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 40907116952880894293774087494266444075, .node = "testNode-21", .pods = [k8spolicy.PodReference{.name = "testPod-211", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 53461813972510612144985104795020463894, .node = "testNode-19", .pods = [k8spolicy.PodReference{.name = "testPod-194", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 57300239076662165375439007813575462000, .node = "testNode-19", .pods = [k8spolicy.PodReference{.name = "testPod-193", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 65075389810740430332440348069746261908, .node = "testNode-22", .pods = [k8spolicy.PodReference{.name = "testPod-223", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 75942463945999836881962796856495961412, .node = "testNode-20", .pods = [k8spolicy.PodReference{.name = "testPod-202", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 83785598465348900714859335941647885594, .node = "testNode-20", .pods = [k8spolicy.PodReference{.name = "testPod-204", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 96129841428936758687501228319270128609, .node = "testNode-20", .pods = [k8spolicy.PodReference{.name = "testPod-209", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 98084079121610444304202333165918820717, .node = "testNode-19", .pods = [k8spolicy.PodReference{.name = "testPod-196", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 119943215358358031355366371303809726165, .node = "testNode-20", .pods = [k8spolicy.PodReference{.name = "testPod-208", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 162011623228205519824689437489696841739, .node = "testNode-19", .pods = [k8spolicy.PodReference{.name = "testPod-197", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 185095757664273280601006928671604579678, .node = "testNode-21", .pods = [k8spolicy.PodReference{.name = "testPod-210", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 206113199014032320922053922067967002044, .node = "testNode-20", .pods = [k8spolicy.PodReference{.name = "testPod-200", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 227490618867503998727090134637222993911, .node = "testNode-20", .pods = [k8spolicy.PodReference{.name = "testPod-207", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 242363711763724829089145815052878036562, .node = "testNode-20", .pods = [k8spolicy.PodReference{.name = "testPod-205", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 242902656798424184510869763157271317029, .node = "testNode-20", .pods = [k8spolicy.PodReference{.name = "testPod-206", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 243387286179380872418279174833502995369, .node = "testNode-21", .pods = [k8spolicy.PodReference{.name = "testPod-212", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 253301405221812236416901820238840297181, .node = "testNode-19", .pods = [k8spolicy.PodReference{.name = "testPod-199", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 254274852237376053379399165541838943723, .node = "testNode-22", .pods = [k8spolicy.PodReference{.name = "testPod-222", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 254650429442398006867559744965885096267, .node = "testNode-19", .pods = [k8spolicy.PodReference{.name = "testPod-192", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 272361320202870035058683159969001521237, .node = "testNode-21", .pods = [k8spolicy.PodReference{.name = "testPod-217", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 272617845590879382841056528498694166965, .node = "testNode-21", .pods = [k8spolicy.PodReference{.name = "testPod-218", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 273903785612067732148175004176344542828, .node = "testNode-21", .pods = [k8spolicy.PodReference{.name = "testPod-215", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 298696299457761002590106537850835748215, .node = "testNode-21", .pods = [k8spolicy.PodReference{.name = "testPod-216", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 302049344293990434719066002872617220537, .node = "testNode-19", .pods = [k8spolicy.PodReference{.name = "testPod-195", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 305857481517685389569122444645882591043, .node = "testNode-21", .pods = [k8spolicy.PodReference{.name = "testPod-219", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 319667111843607341849615986754096266255, .node = "testNode-21", .pods = [k8spolicy.PodReference{.name = "testPod-214", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 323172733288198583288479242077076248832, .node = "testNode-21", .pods = [k8spolicy.PodReference{.name = "testPod-213", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 333534983878518753844206178808645995449, .node = "testNode-22", .pods = [k8spolicy.PodReference{.name = "testPod-221", .namespace = "testNamespace"}]}: -1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 19954882372624767847269339684625319556, .span = "testNode-22"}: -1
AppliedToGroupSpan{.appliedToGroup = 25696023426616215154958532051893520306, .span = "testNode-19"}: -1
AppliedToGroupSpan{.appliedToGroup = 31006974088550824198755824768856600235, .span = "testNode-20"}: -1
AppliedToGroupSpan{.appliedToGroup = 33703463587909161242769186897832987590, .span = "testNode-20"}: -1
AppliedToGroupSpan{.appliedToGroup = 40907116952880894293774087494266444075, .span = "testNode-21"}: -1
AppliedToGroupSpan{.appliedToGroup = 53461813972510612144985104795020463894, .span = "testNode-19"}: -1
AppliedToGroupSpan{.appliedToGroup = 57300239076662165375439007813575462000, .span = "testNode-19"}: -1
AppliedToGroupSpan{.appliedToGroup = 65075389810740430332440348069746261908, .span = "testNode-22"}: -1
AppliedToGroupSpan{.appliedToGroup = 75942463945999836881962796856495961412, .span = "testNode-20"}: -1
AppliedToGroupSpan{.appliedToGroup = 83785598465348900714859335941647885594, .span = "testNode-20"}: -1
AppliedToGroupSpan{.appliedToGroup = 96129841428936758687501228319270128609, .span = "testNode-20"}: -1
AppliedToGroupSpan{.appliedToGroup = 98084079121610444304202333165918820717, .span = "testNode-19"}: -1
AppliedToGroupSpan{.appliedToGroup = 119943215358358031355366371303809726165, .span = "testNode-20"}: -1
AppliedToGroupSpan{.appliedToGroup = 162011623228205519824689437489696841739, .span = "testNode-19"}: -1
AppliedToGroupSpan{.appliedToGroup = 185095757664273280601006928671604579678, .span = "testNode-21"}: -1
AppliedToGroupSpan{.appliedToGroup = 206113199014032320922053922067967002044, .span = "testNode-20"}: -1
AppliedToGroupSpan{.appliedToGroup = 227490618867503998727090134637222993911, .span = "testNode-20"}: -1
AppliedToGroupSpan{.appliedToGroup = 242363711763724829089145815052878036562, .span = "testNode-20"}: -1
AppliedToGroupSpan{.appliedToGroup = 242902656798424184510869763157271317029, .span = "testNode-20"}: -1
AppliedToGroupSpan{.appliedToGroup = 243387286179380872418279174833502995369, .span = "testNode-21"}: -1
AppliedToGroupSpan{.appliedToGroup = 253301405221812236416901820238840297181, .span = "testNode-19"}: -1
AppliedToGroupSpan{.appliedToGroup = 254274852237376053379399165541838943723, .span = "testNode-22"}: -1
AppliedToGroupSpan{.appliedToGroup = 254650429442398006867559744965885096267, .span = "testNode-19"}: -1
AppliedToGroupSpan{.appliedToGroup = 272361320202870035058683159969001521237, .span = "testNode-21"}: -1
AppliedToGroupSpan{.appliedToGroup = 272617845590879382841056528498694166965, .span = "testNode-21"}: -1
AppliedToGroupSpan{.appliedToGroup = 273903785612067732148175004176344542828, .span = "testNode-21"}: -1
AppliedToGroupSpan{.appliedToGroup = 298696299457761002590106537850835748215, .span = "testNode-21"}: -1
AppliedToGroupSpan{.appliedToGroup = 302049344293990434719066002872617220537, .span = "testNode-19"}: -1
AppliedToGroupSpan{.appliedToGroup = 305857481517685389569122444645882591043, .span = "testNode-21"}: -1
AppliedToGroupSpan{.appliedToGroup = 319667111843607341849615986754096266255, .span = "testNode-21"}: -1
AppliedToGroupSpan{.appliedToGroup = 323172733288198583288479242077076248832, .span = "testNode-21"}: -1
AppliedToGroupSpan{.appliedToGroup = 333534983878518753844206178808645995449, .span = "testNode-22"}: -1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-192"}, .name = "testNP-192", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [57300239076662165375439007813575462000], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [254650429442398006867559744965885096267]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-193"}, .name = "testNP-193", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [53461813972510612144985104795020463894], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [57300239076662165375439007813575462000]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-194"}, .name = "testNP-194", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [302049344293990434719066002872617220537], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [53461813972510612144985104795020463894]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-195"}, .name = "testNP-195", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [98084079121610444304202333165918820717], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [302049344293990434719066002872617220537]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-196"}, .name = "testNP-196", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [162011623228205519824689437489696841739], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [98084079121610444304202333165918820717]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-197"}, .name = "testNP-197", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [25696023426616215154958532051893520306], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [162011623228205519824689437489696841739]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-198"}, .name = "testNP-198", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [253301405221812236416901820238840297181], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [25696023426616215154958532051893520306]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-199"}, .name = "testNP-199", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [206113199014032320922053922067967002044], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [253301405221812236416901820238840297181]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-200"}, .name = "testNP-200", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [31006974088550824198755824768856600235], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [206113199014032320922053922067967002044]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-201"}, .name = "testNP-201", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [75942463945999836881962796856495961412], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [31006974088550824198755824768856600235]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-202"}, .name = "testNP-202", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [33703463587909161242769186897832987590], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [75942463945999836881962796856495961412]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-203"}, .name = "testNP-203", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [83785598465348900714859335941647885594], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [33703463587909161242769186897832987590]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-204"}, .name = "testNP-204", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [242363711763724829089145815052878036562], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [83785598465348900714859335941647885594]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-205"}, .name = "testNP-205", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [242902656798424184510869763157271317029], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [242363711763724829089145815052878036562]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-206"}, .name = "testNP-206", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [227490618867503998727090134637222993911], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [242902656798424184510869763157271317029]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-207"}, .name = "testNP-207", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [119943215358358031355366371303809726165], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [227490618867503998727090134637222993911]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-208"}, .name = "testNP-208", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [96129841428936758687501228319270128609], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [119943215358358031355366371303809726165]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-209"}, .name = "testNP-209", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [185095757664273280601006928671604579678], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [96129841428936758687501228319270128609]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-210"}, .name = "testNP-210", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [40907116952880894293774087494266444075], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [185095757664273280601006928671604579678]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-211"}, .name = "testNP-211", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [243387286179380872418279174833502995369], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [40907116952880894293774087494266444075]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-212"}, .name = "testNP-212", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [323172733288198583288479242077076248832], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [243387286179380872418279174833502995369]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-213"}, .name = "testNP-213", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [319667111843607341849615986754096266255], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [323172733288198583288479242077076248832]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-214"}, .name = "testNP-214", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [273903785612067732148175004176344542828], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [319667111843607341849615986754096266255]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-215"}, .name = "testNP-215", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [298696299457761002590106537850835748215], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [273903785612067732148175004176344542828]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-216"}, .name = "testNP-216", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [272361320202870035058683159969001521237], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [298696299457761002590106537850835748215]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-217"}, .name = "testNP-217", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [272617845590879382841056528498694166965], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [272361320202870035058683159969001521237]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-218"}, .name = "testNP-218", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [305857481517685389569122444645882591043], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [272617845590879382841056528498694166965]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-219"}, .name = "testNP-219", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [19954882372624767847269339684625319556], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [305857481517685389569122444645882591043]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-220"}, .name = "testNP-220", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [333534983878518753844206178808645995449], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [19954882372624767847269339684625319556]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-221"}, .name = "testNP-221", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [254274852237376053379399165541838943723], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [333534983878518753844206178808645995449]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-222"}, .name = "testNP-222", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [65075389810740430332440348069746261908], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [254274852237376053379399165541838943723]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-223"}, .name = "testNP-223", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [200625523123688564407237909476201822814], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [65075389810740430332440348069746261908]}: -1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-192", .policy = k8spolicy.UID{.uid = "testNP-192"}, .node = "testNode-19"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-193", .policy = k8spolicy.UID{.uid = "testNP-193"}, .node = "testNode-19"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-194", .policy = k8spolicy.UID{.uid = "testNP-194"}, .node = "testNode-19"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-195", .policy = k8spolicy.UID{.uid = "testNP-195"}, .node = "testNode-19"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-196", .policy = k8spolicy.UID{.uid = "testNP-196"}, .node = "testNode-19"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-197", .policy = k8spolicy.UID{.uid = "testNP-197"}, .node = "testNode-19"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-198", .policy = k8spolicy.UID{.uid = "testNP-198"}, .node = "testNode-19"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-199", .policy = k8spolicy.UID{.uid = "testNP-199"}, .node = "testNode-19"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-200", .policy = k8spolicy.UID{.uid = "testNP-200"}, .node = "testNode-20"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-201", .policy = k8spolicy.UID{.uid = "testNP-201"}, .node = "testNode-20"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-202", .policy = k8spolicy.UID{.uid = "testNP-202"}, .node = "testNode-20"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-203", .policy = k8spolicy.UID{.uid = "testNP-203"}, .node = "testNode-20"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-204", .policy = k8spolicy.UID{.uid = "testNP-204"}, .node = "testNode-20"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-205", .policy = k8spolicy.UID{.uid = "testNP-205"}, .node = "testNode-20"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-206", .policy = k8spolicy.UID{.uid = "testNP-206"}, .node = "testNode-20"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-207", .policy = k8spolicy.UID{.uid = "testNP-207"}, .node = "testNode-20"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-208", .policy = k8spolicy.UID{.uid = "testNP-208"}, .node = "testNode-20"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-209", .policy = k8spolicy.UID{.uid = "testNP-209"}, .node = "testNode-20"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-210", .policy = k8spolicy.UID{.uid = "testNP-210"}, .node = "testNode-21"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-211", .policy = k8spolicy.UID{.uid = "testNP-211"}, .node = "testNode-21"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-212", .policy = k8spolicy.UID{.uid = "testNP-212"}, .node = "testNode-21"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-213", .policy = k8spolicy.UID{.uid = "testNP-213"}, .node = "testNode-21"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-214", .policy = k8spolicy.UID{.uid = "testNP-214"}, .node = "testNode-21"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-215", .policy = k8spolicy.UID{.uid = "testNP-215"}, .node = "testNode-21"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-216", .policy = k8spolicy.UID{.uid = "testNP-216"}, .node = "testNode-21"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-217", .policy = k8spolicy.UID{.uid = "testNP-217"}, .node = "testNode-21"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-218", .policy = k8spolicy.UID{.uid = "testNP-218"}, .node = "testNode-21"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-219", .policy = k8spolicy.UID{.uid = "testNP-219"}, .node = "testNode-21"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-220", .policy = k8spolicy.UID{.uid = "testNP-220"}, .node = "testNode-22"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-221", .policy = k8spolicy.UID{.uid = "testNP-221"}, .node = "testNode-22"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-222", .policy = k8spolicy.UID{.uid = "testNP-222"}, .node = "testNode-22"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-223", .policy = k8spolicy.UID{.uid = "testNP-223"}, .node = "testNode-22"}: -1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 5000348061321598198544054792473025953, .address = "10.10.24.1"}: -1
AddressGroupAddress{.addressGroup = 21635672696621659145282466240689271719, .address = "10.10.25.3"}: -1
AddressGroupAddress{.addressGroup = 24207714993854062402672490706735243245, .address = "10.10.23.4"}: -1
AddressGroupAddress{.addressGroup = 32799975566556251485002269396672892334, .address = "10.10.24.4"}: -1
AddressGroupAddress{.addressGroup = 50357878079141964382064563425032511967, .address = "10.10.22.5"}: -1
AddressGroupAddress{.addressGroup = 62732359457955505848815890202296019829, .address = "10.10.24.7"}: -1
AddressGroupAddress{.addressGroup = 73456120734767717407669044687261056014, .address = "10.10.25.0"}: -1
AddressGroupAddress{.addressGroup = 78721238079268886571836885286107397058, .address = "10.10.22.9"}: -1
AddressGroupAddress{.addressGroup = 81017432767208634160878707617635971083, .address = "10.10.22.7"}: -1
AddressGroupAddress{.addressGroup = 90974300742102068063722133264993469160, .address = "10.10.25.1"}: -1
AddressGroupAddress{.addressGroup = 98752078049165748701833396063987600954, .address = "10.10.23.3"}: -1
AddressGroupAddress{.addressGroup = 121166866869133903682801473025245130326, .address = "10.10.22.8"}: -1
AddressGroupAddress{.addressGroup = 131788962422218172241686865476794051526, .address = "10.10.23.7"}: -1
AddressGroupAddress{.addressGroup = 139849944424790845208688965132217560649, .address = "10.10.24.9"}: -1
AddressGroupAddress{.addressGroup = 155714705312979213405431466543305483147, .address = "10.10.25.4"}: -1
AddressGroupAddress{.addressGroup = 157889365267049042872010997512883971494, .address = "10.10.25.2"}: -1
AddressGroupAddress{.addressGroup = 167530786211348237968764042909968735852, .address = "10.10.23.9"}: -1
AddressGroupAddress{.addressGroup = 190460611465846798285191163804162431147, .address = "10.10.24.3"}: -1
AddressGroupAddress{.addressGroup = 200200896977569317375034003776843348530, .address = "10.10.23.8"}: -1
AddressGroupAddress{.addressGroup = 200459869075163341577850205116491218554, .address = "10.10.23.5"}: -1
AddressGroupAddress{.addressGroup = 233265439487618365758316340603862945483, .address = "10.10.24.5"}: -1
AddressGroupAddress{.addressGroup = 244224093007820216493804104085222208038, .address = "10.10.24.6"}: -1
AddressGroupAddress{.addressGroup = 249683883932718758567018628419093851827, .address = "10.10.25.5"}: -1
AddressGroupAddress{.addressGroup = 259240135738401922606075083345883065730, .address = "10.10.23.2"}: -1
AddressGroupAddress{.addressGroup = 268345534186152870112432675652845772444, .address = "10.10.23.6"}: -1
AddressGroupAddress{.addressGroup = 291552711123575801776829061693263992941, .address = "10.10.23.0"}: -1
AddressGroupAddress{.addressGroup = 297641443841427172847837255856041654708, .address = "10.10.22.6"}: -1
AddressGroupAddress{.addressGroup = 303083713667118274442842133486781045329, .address = "10.10.24.2"}: -1
AddressGroupAddress{.addressGroup = 312710907542561639138425961858530591396, .address = "10.10.25.6"}: -1
AddressGroupAddress{.addressGroup = 320929280564012470485576605372406179473, .address = "10.10.24.0"}: -1
AddressGroupAddress{.addressGroup = 321235439773102702454149290415836106728, .address = "10.10.24.8"}: -1
AddressGroupAddress{.addressGroup = 325361514656320789968046420851435115919, .address = "10.10.23.1"}: -1
AddressGroupDescr:
AddressGroupDescr{.name = "03c30831-91b6-580f-a2e1-24562dcc1da1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-241]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-241")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "1046e105-938c-51f2-b9a2-7cb6d3d6f3a7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-253]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-253")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "12363c7f-6a05-50df-bc3c-49a85d7c9fed", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-234]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-234")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "18ad0ba6-aaa4-574f-a7e5-5380d9decdae", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-244]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-244")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "25e29314-9597-55b2-b357-ce6cad43a1df", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-225]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-225")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "2f31d01d-e600-5abf-a95d-7f691b736b75", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-247]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-247")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "3743225e-5982-515c-8798-cd2d602abc0e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-250]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-250")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "3b3928b2-19ee-5d88-8ffb-4da451fabbc2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-229]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-229")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "3cf363d5-9f6d-5fbe-bce8-ead2115f300b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-227]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-227")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "44710353-c3a3-594d-91e3-188bce89c2e8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-251]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-251")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "4a4af55a-eac9-527c-8aee-491684848e3a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-233]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-233")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "5b27e3c4-7fb5-5646-9309-e6b53a932e56", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-228]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-228")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "6325a183-1cca-5fa2-93a7-8d93436debc6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-237]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-237")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "69361e9c-1095-5e70-bed3-1e101dd52e49", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-249]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-249")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "75258fb6-3b10-56b5-bb55-e60abd84638b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-254]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-254")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "76c862b9-bfd6-5bf9-9b43-cb1fbcbca5a6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-252]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-252")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "7e09417a-9bf1-5ba5-9fa1-211122179e6c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-239]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-239")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "8f496125-eb17-5c5e-8643-dd1f181798ab", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-243]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-243")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "969d4a4d-0d73-5ff1-ac23-9a3c6060fa32", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-238]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-238")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "96cf2a9c-7745-5799-805c-f5491131be7a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-235]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-235")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "af7d4a1c-0403-5ead-b5ab-424c37808ecb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-245]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-245")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "b7bbd971-6410-546b-bdec-d44038b03226", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-246]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-246")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "bbd75deb-2c15-5e08-a6f1-37aaa90ceeb3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-255]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-255")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "c307d582-5f15-57ff-9bc8-84b78be06d82", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-232]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-232")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "c9e17850-2963-5c1f-aba2-fe7636551e9c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-236]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-236")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "db570279-dd87-5b76-8602-bd407ca2586d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-230]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-230")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "dfeba82d-1edf-50bf-8ab9-0f84b7d679b4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-226]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-226")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "e403cccb-89fd-5709-a1f4-49bbfcf39a51", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-242]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-242")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "eb41ee19-8b4d-56bc-9bc6-6baa5fdcc2a4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-256]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-256")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "f170bb2c-7146-5078-9c22-3bfd840e2691", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-240]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-240")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "f1abb1fc-ef88-52a9-806e-ca9360600fe8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-248]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-248")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "f4c6592f-9d24-5299-a825-1b870d36158f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-231]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-231")], .matchExpressions = []}}}}: -1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 5000348061321598198544054792473025953, .node = "testNode-24"}: -1
AddressGroupSpan{.addressGroup = 21635672696621659145282466240689271719, .node = "testNode-25"}: -1
AddressGroupSpan{.addressGroup = 24207714993854062402672490706735243245, .node = "testNode-23"}: -1
AddressGroupSpan{.addressGroup = 32799975566556251485002269396672892334, .node = "testNode-24"}: -1
AddressGroupSpan{.addressGroup = 50357878079141964382064563425032511967, .node = "testNode-22"}: -1
AddressGroupSpan{.addressGroup = 62732359457955505848815890202296019829, .node = "testNode-24"}: -1
AddressGroupSpan{.addressGroup = 73456120734767717407669044687261056014, .node = "testNode-24"}: -1
AddressGroupSpan{.addressGroup = 78721238079268886571836885286107397058, .node = "testNode-22"}: -1
AddressGroupSpan{.addressGroup = 81017432767208634160878707617635971083, .node = "testNode-22"}: -1
AddressGroupSpan{.addressGroup = 90974300742102068063722133264993469160, .node = "testNode-25"}: -1
AddressGroupSpan{.addressGroup = 98752078049165748701833396063987600954, .node = "testNode-23"}: -1
AddressGroupSpan{.addressGroup = 121166866869133903682801473025245130326, .node = "testNode-22"}: -1
AddressGroupSpan{.addressGroup = 131788962422218172241686865476794051526, .node = "testNode-23"}: -1
AddressGroupSpan{.addressGroup = 139849944424790845208688965132217560649, .node = "testNode-24"}: -1
AddressGroupSpan{.addressGroup = 155714705312979213405431466543305483147, .node = "testNode-25"}: -1
AddressGroupSpan{.addressGroup = 157889365267049042872010997512883971494, .node = "testNode-25"}: -1
AddressGroupSpan{.addressGroup = 167530786211348237968764042909968735852, .node = "testNode-23"}: -1
AddressGroupSpan{.addressGroup = 190460611465846798285191163804162431147, .node = "testNode-24"}: -1
AddressGroupSpan{.addressGroup = 200200896977569317375034003776843348530, .node = "testNode-23"}: -1
AddressGroupSpan{.addressGroup = 200459869075163341577850205116491218554, .node = "testNode-23"}: -1
AddressGroupSpan{.addressGroup = 233265439487618365758316340603862945483, .node = "testNode-24"}: -1
AddressGroupSpan{.addressGroup = 244224093007820216493804104085222208038, .node = "testNode-24"}: -1
AddressGroupSpan{.addressGroup = 249683883932718758567018628419093851827, .node = "testNode-25"}: -1
AddressGroupSpan{.addressGroup = 259240135738401922606075083345883065730, .node = "testNode-23"}: -1
AddressGroupSpan{.addressGroup = 268345534186152870112432675652845772444, .node = "testNode-23"}: -1
AddressGroupSpan{.addressGroup = 291552711123575801776829061693263992941, .node = "testNode-22"}: -1
AddressGroupSpan{.addressGroup = 297641443841427172847837255856041654708, .node = "testNode-22"}: -1
AddressGroupSpan{.addressGroup = 303083713667118274442842133486781045329, .node = "testNode-24"}: -1
AddressGroupSpan{.addressGroup = 312710907542561639138425961858530591396, .node = "testNode-25"}: -1
AddressGroupSpan{.addressGroup = 320929280564012470485576605372406179473, .node = "testNode-23"}: -1
AddressGroupSpan{.addressGroup = 321235439773102702454149290415836106728, .node = "testNode-24"}: -1
AddressGroupSpan{.addressGroup = 325361514656320789968046420851435115919, .node = "testNode-23"}: -1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "03c30831-91b6-580f-a2e1-24562dcc1da1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-241]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-241")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "1046e105-938c-51f2-b9a2-7cb6d3d6f3a7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-253]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-253")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "12363c7f-6a05-50df-bc3c-49a85d7c9fed", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-234]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-234")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "18ad0ba6-aaa4-574f-a7e5-5380d9decdae", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-244]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-244")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "25e29314-9597-55b2-b357-ce6cad43a1df", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-225]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-225")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "2f31d01d-e600-5abf-a95d-7f691b736b75", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-247]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-247")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "3743225e-5982-515c-8798-cd2d602abc0e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-250]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-250")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "3b3928b2-19ee-5d88-8ffb-4da451fabbc2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-229]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-229")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "3cf363d5-9f6d-5fbe-bce8-ead2115f300b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-227]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-227")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "44710353-c3a3-594d-91e3-188bce89c2e8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-251]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-251")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "4a4af55a-eac9-527c-8aee-491684848e3a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-233]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-233")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "5b27e3c4-7fb5-5646-9309-e6b53a932e56", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-228]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-228")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "6325a183-1cca-5fa2-93a7-8d93436debc6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-237]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-237")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "69361e9c-1095-5e70-bed3-1e101dd52e49", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-249]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-249")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "75258fb6-3b10-56b5-bb55-e60abd84638b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-254]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-254")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "76c862b9-bfd6-5bf9-9b43-cb1fbcbca5a6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-252]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-252")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "7e09417a-9bf1-5ba5-9fa1-211122179e6c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-239]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-239")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "8f496125-eb17-5c5e-8643-dd1f181798ab", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-243]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-243")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "969d4a4d-0d73-5ff1-ac23-9a3c6060fa32", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-238]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-238")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "96cf2a9c-7745-5799-805c-f5491131be7a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-235]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-235")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "96ef11fc-8238-5331-acdc-7a54fa317a5e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-224]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-224")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "af7d4a1c-0403-5ead-b5ab-424c37808ecb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-245]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-245")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "b7bbd971-6410-546b-bdec-d44038b03226", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-246]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-246")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "bbd75deb-2c15-5e08-a6f1-37aaa90ceeb3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-255]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-255")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "c307d582-5f15-57ff-9bc8-84b78be06d82", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-232]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-232")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "c9e17850-2963-5c1f-aba2-fe7636551e9c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-236]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-236")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "db570279-dd87-5b76-8602-bd407ca2586d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-230]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-230")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "dfeba82d-1edf-50bf-8ab9-0f84b7d679b4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-226]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-226")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "e403cccb-89fd-5709-a1f4-49bbfcf39a51", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-242]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-242")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "f170bb2c-7146-5078-9c22-3bfd840e2691", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-240]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-240")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "f1abb1fc-ef88-52a9-806e-ca9360600fe8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-248]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-248")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "f4c6592f-9d24-5299-a825-1b870d36158f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-231]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-231")], .matchExpressions = []}}}}: -1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 5000348061321598198544054792473025953, .node = "testNode-24", .pods = [k8spolicy.PodReference{.name = "testPod-241", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 21635672696621659145282466240689271719, .node = "testNode-25", .pods = [k8spolicy.PodReference{.name = "testPod-253", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 24207714993854062402672490706735243245, .node = "testNode-23", .pods = [k8spolicy.PodReference{.name = "testPod-234", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 32799975566556251485002269396672892334, .node = "testNode-24", .pods = [k8spolicy.PodReference{.name = "testPod-244", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 50357878079141964382064563425032511967, .node = "testNode-22", .pods = [k8spolicy.PodReference{.name = "testPod-225", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 62732359457955505848815890202296019829, .node = "testNode-24", .pods = [k8spolicy.PodReference{.name = "testPod-247", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 73456120734767717407669044687261056014, .node = "testNode-25", .pods = [k8spolicy.PodReference{.name = "testPod-250", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 78721238079268886571836885286107397058, .node = "testNode-22", .pods = [k8spolicy.PodReference{.name = "testPod-229", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 81017432767208634160878707617635971083, .node = "testNode-22", .pods = [k8spolicy.PodReference{.name = "testPod-227", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 90974300742102068063722133264993469160, .node = "testNode-25", .pods = [k8spolicy.PodReference{.name = "testPod-251", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 98752078049165748701833396063987600954, .node = "testNode-23", .pods = [k8spolicy.PodReference{.name = "testPod-233", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 121166866869133903682801473025245130326, .node = "testNode-22", .pods = [k8spolicy.PodReference{.name = "testPod-228", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 131788962422218172241686865476794051526, .node = "testNode-23", .pods = [k8spolicy.PodReference{.name = "testPod-237", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 139849944424790845208688965132217560649, .node = "testNode-24", .pods = [k8spolicy.PodReference{.name = "testPod-249", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 155714705312979213405431466543305483147, .node = "testNode-25", .pods = [k8spolicy.PodReference{.name = "testPod-254", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 157889365267049042872010997512883971494, .node = "testNode-25", .pods = [k8spolicy.PodReference{.name = "testPod-252", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 167530786211348237968764042909968735852, .node = "testNode-23", .pods = [k8spolicy.PodReference{.name = "testPod-239", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 190460611465846798285191163804162431147, .node = "testNode-24", .pods = [k8spolicy.PodReference{.name = "testPod-243", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 200200896977569317375034003776843348530, .node = "testNode-23", .pods = [k8spolicy.PodReference{.name = "testPod-238", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 200459869075163341577850205116491218554, .node = "testNode-23", .pods = [k8spolicy.PodReference{.name = "testPod-235", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 200625523123688564407237909476201822814, .node = "testNode-22", .pods = [k8spolicy.PodReference{.name = "testPod-224", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 233265439487618365758316340603862945483, .node = "testNode-24", .pods = [k8spolicy.PodReference{.name = "testPod-245", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 244224093007820216493804104085222208038, .node = "testNode-24", .pods = [k8spolicy.PodReference{.name = "testPod-246", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 249683883932718758567018628419093851827, .node = "testNode-25", .pods = [k8spolicy.PodReference{.name = "testPod-255", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 259240135738401922606075083345883065730, .node = "testNode-23", .pods = [k8spolicy.PodReference{.name = "testPod-232", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 268345534186152870112432675652845772444, .node = "testNode-23", .pods = [k8spolicy.PodReference{.name = "testPod-236", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 291552711123575801776829061693263992941, .node = "testNode-23", .pods = [k8spolicy.PodReference{.name = "testPod-230", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 297641443841427172847837255856041654708, .node = "testNode-22", .pods = [k8spolicy.PodReference{.name = "testPod-226", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 303083713667118274442842133486781045329, .node = "testNode-24", .pods = [k8spolicy.PodReference{.name = "testPod-242", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 320929280564012470485576605372406179473, .node = "testNode-24", .pods = [k8spolicy.PodReference{.name = "testPod-240", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 321235439773102702454149290415836106728, .node = "testNode-24", .pods = [k8spolicy.PodReference{.name = "testPod-248", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 325361514656320789968046420851435115919, .node = "testNode-23", .pods = [k8spolicy.PodReference{.name = "testPod-231", .namespace = "testNamespace"}]}: -1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 5000348061321598198544054792473025953, .span = "testNode-24"}: -1
AppliedToGroupSpan{.appliedToGroup = 21635672696621659145282466240689271719, .span = "testNode-25"}: -1
AppliedToGroupSpan{.appliedToGroup = 24207714993854062402672490706735243245, .span = "testNode-23"}: -1
AppliedToGroupSpan{.appliedToGroup = 32799975566556251485002269396672892334, .span = "testNode-24"}: -1
AppliedToGroupSpan{.appliedToGroup = 50357878079141964382064563425032511967, .span = "testNode-22"}: -1
AppliedToGroupSpan{.appliedToGroup = 62732359457955505848815890202296019829, .span = "testNode-24"}: -1
AppliedToGroupSpan{.appliedToGroup = 73456120734767717407669044687261056014, .span = "testNode-25"}: -1
AppliedToGroupSpan{.appliedToGroup = 78721238079268886571836885286107397058, .span = "testNode-22"}: -1
AppliedToGroupSpan{.appliedToGroup = 81017432767208634160878707617635971083, .span = "testNode-22"}: -1
AppliedToGroupSpan{.appliedToGroup = 90974300742102068063722133264993469160, .span = "testNode-25"}: -1
AppliedToGroupSpan{.appliedToGroup = 98752078049165748701833396063987600954, .span = "testNode-23"}: -1
AppliedToGroupSpan{.appliedToGroup = 121166866869133903682801473025245130326, .span = "testNode-22"}: -1
AppliedToGroupSpan{.appliedToGroup = 131788962422218172241686865476794051526, .span = "testNode-23"}: -1
AppliedToGroupSpan{.appliedToGroup = 139849944424790845208688965132217560649, .span = "testNode-24"}: -1
AppliedToGroupSpan{.appliedToGroup = 155714705312979213405431466543305483147, .span = "testNode-25"}: -1
AppliedToGroupSpan{.appliedToGroup = 157889365267049042872010997512883971494, .span = "testNode-25"}: -1
AppliedToGroupSpan{.appliedToGroup = 167530786211348237968764042909968735852, .span = "testNode-23"}: -1
AppliedToGroupSpan{.appliedToGroup = 190460611465846798285191163804162431147, .span = "testNode-24"}: -1
AppliedToGroupSpan{.appliedToGroup = 200200896977569317375034003776843348530, .span = "testNode-23"}: -1
AppliedToGroupSpan{.appliedToGroup = 200459869075163341577850205116491218554, .span = "testNode-23"}: -1
AppliedToGroupSpan{.appliedToGroup = 200625523123688564407237909476201822814, .span = "testNode-22"}: -1
AppliedToGroupSpan{.appliedToGroup = 233265439487618365758316340603862945483, .span = "testNode-24"}: -1
AppliedToGroupSpan{.appliedToGroup = 244224093007820216493804104085222208038, .span = "testNode-24"}: -1
AppliedToGroupSpan{.appliedToGroup = 249683883932718758567018628419093851827, .span = "testNode-25"}: -1
AppliedToGroupSpan{.appliedToGroup = 259240135738401922606075083345883065730, .span = "testNode-23"}: -1
AppliedToGroupSpan{.appliedToGroup = 268345534186152870112432675652845772444, .span = "testNode-23"}: -1
AppliedToGroupSpan{.appliedToGroup = 291552711123575801776829061693263992941, .span = "testNode-23"}: -1
AppliedToGroupSpan{.appliedToGroup = 297641443841427172847837255856041654708, .span = "testNode-22"}: -1
AppliedToGroupSpan{.appliedToGroup = 303083713667118274442842133486781045329, .span = "testNode-24"}: -1
AppliedToGroupSpan{.appliedToGroup = 320929280564012470485576605372406179473, .span = "testNode-24"}: -1
AppliedToGroupSpan{.appliedToGroup = 321235439773102702454149290415836106728, .span = "testNode-24"}: -1
AppliedToGroupSpan{.appliedToGroup = 325361514656320789968046420851435115919, .span = "testNode-23"}: -1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-224"}, .name = "testNP-224", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [50357878079141964382064563425032511967], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [200625523123688564407237909476201822814]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-225"}, .name = "testNP-225", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [297641443841427172847837255856041654708], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [50357878079141964382064563425032511967]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-226"}, .name = "testNP-226", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [81017432767208634160878707617635971083], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [297641443841427172847837255856041654708]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-227"}, .name = "testNP-227", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [121166866869133903682801473025245130326], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [81017432767208634160878707617635971083]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-228"}, .name = "testNP-228", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [78721238079268886571836885286107397058], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [121166866869133903682801473025245130326]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-229"}, .name = "testNP-229", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [291552711123575801776829061693263992941], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [78721238079268886571836885286107397058]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-230"}, .name = "testNP-230", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [325361514656320789968046420851435115919], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [291552711123575801776829061693263992941]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-231"}, .name = "testNP-231", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [259240135738401922606075083345883065730], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [325361514656320789968046420851435115919]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-232"}, .name = "testNP-232", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [98752078049165748701833396063987600954], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [259240135738401922606075083345883065730]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-233"}, .name = "testNP-233", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [24207714993854062402672490706735243245], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [98752078049165748701833396063987600954]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-234"}, .name = "testNP-234", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [200459869075163341577850205116491218554], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [24207714993854062402672490706735243245]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-235"}, .name = "testNP-235", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [268345534186152870112432675652845772444], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [200459869075163341577850205116491218554]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-236"}, .name = "testNP-236", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [131788962422218172241686865476794051526], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [268345534186152870112432675652845772444]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-237"}, .name = "testNP-237", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [200200896977569317375034003776843348530], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [131788962422218172241686865476794051526]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-238"}, .name = "testNP-238", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [167530786211348237968764042909968735852], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [200200896977569317375034003776843348530]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-239"}, .name = "testNP-239", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [320929280564012470485576605372406179473], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [167530786211348237968764042909968735852]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-240"}, .name = "testNP-240", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [5000348061321598198544054792473025953], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [320929280564012470485576605372406179473]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-241"}, .name = "testNP-241", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [303083713667118274442842133486781045329], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [5000348061321598198544054792473025953]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-242"}, .name = "testNP-242", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [190460611465846798285191163804162431147], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [303083713667118274442842133486781045329]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-243"}, .name = "testNP-243", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [32799975566556251485002269396672892334], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [190460611465846798285191163804162431147]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-244"}, .name = "testNP-244", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [233265439487618365758316340603862945483], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [32799975566556251485002269396672892334]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-245"}, .name = "testNP-245", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [244224093007820216493804104085222208038], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [233265439487618365758316340603862945483]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-246"}, .name = "testNP-246", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [62732359457955505848815890202296019829], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [244224093007820216493804104085222208038]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-247"}, .name = "testNP-247", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [321235439773102702454149290415836106728], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [62732359457955505848815890202296019829]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-248"}, .name = "testNP-248", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [139849944424790845208688965132217560649], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [321235439773102702454149290415836106728]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-249"}, .name = "testNP-249", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [73456120734767717407669044687261056014], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [139849944424790845208688965132217560649]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-250"}, .name = "testNP-250", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [90974300742102068063722133264993469160], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [73456120734767717407669044687261056014]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-251"}, .name = "testNP-251", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [157889365267049042872010997512883971494], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [90974300742102068063722133264993469160]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-252"}, .name = "testNP-252", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [21635672696621659145282466240689271719], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [157889365267049042872010997512883971494]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-253"}, .name = "testNP-253", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [155714705312979213405431466543305483147], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [21635672696621659145282466240689271719]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-254"}, .name = "testNP-254", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [249683883932718758567018628419093851827], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [155714705312979213405431466543305483147]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-255"}, .name = "testNP-255", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [312710907542561639138425961858530591396], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [249683883932718758567018628419093851827]}: -1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-224", .policy = k8spolicy.UID{.uid = "testNP-224"}, .node = "testNode-22"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-225", .policy = k8spolicy.UID{.uid = "testNP-225"}, .node = "testNode-22"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-226", .policy = k8spolicy.UID{.uid = "testNP-226"}, .node = "testNode-22"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-227", .policy = k8spolicy.UID{.uid = "testNP-227"}, .node = "testNode-22"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-228", .policy = k8spolicy.UID{.uid = "testNP-228"}, .node = "testNode-22"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-229", .policy = k8spolicy.UID{.uid = "testNP-229"}, .node = "testNode-22"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-230", .policy = k8spolicy.UID{.uid = "testNP-230"}, .node = "testNode-23"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-231", .policy = k8spolicy.UID{.uid = "testNP-231"}, .node = "testNode-23"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-232", .policy = k8spolicy.UID{.uid = "testNP-232"}, .node = "testNode-23"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-233", .policy = k8spolicy.UID{.uid = "testNP-233"}, .node = "testNode-23"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-234", .policy = k8spolicy.UID{.uid = "testNP-234"}, .node = "testNode-23"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-235", .policy = k8spolicy.UID{.uid = "testNP-235"}, .node = "testNode-23"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-236", .policy = k8spolicy.UID{.uid = "testNP-236"}, .node = "testNode-23"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-237", .policy = k8spolicy.UID{.uid = "testNP-237"}, .node = "testNode-23"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-238", .policy = k8spolicy.UID{.uid = "testNP-238"}, .node = "testNode-23"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-239", .policy = k8spolicy.UID{.uid = "testNP-239"}, .node = "testNode-23"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-240", .policy = k8spolicy.UID{.uid = "testNP-240"}, .node = "testNode-24"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-241", .policy = k8spolicy.UID{.uid = "testNP-241"}, .node = "testNode-24"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-242", .policy = k8spolicy.UID{.uid = "testNP-242"}, .node = "testNode-24"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-243", .policy = k8spolicy.UID{.uid = "testNP-243"}, .node = "testNode-24"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-244", .policy = k8spolicy.UID{.uid = "testNP-244"}, .node = "testNode-24"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-245", .policy = k8spolicy.UID{.uid = "testNP-245"}, .node = "testNode-24"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-246", .policy = k8spolicy.UID{.uid = "testNP-246"}, .node = "testNode-24"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-247", .policy = k8spolicy.UID{.uid = "testNP-247"}, .node = "testNode-24"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-248", .policy = k8spolicy.UID{.uid = "testNP-248"}, .node = "testNode-24"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-249", .policy = k8spolicy.UID{.uid = "testNP-249"}, .node = "testNode-24"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-250", .policy = k8spolicy.UID{.uid = "testNP-250"}, .node = "testNode-25"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-251", .policy = k8spolicy.UID{.uid = "testNP-251"}, .node = "testNode-25"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-252", .policy = k8spolicy.UID{.uid = "testNP-252"}, .node = "testNode-25"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-253", .policy = k8spolicy.UID{.uid = "testNP-253"}, .node = "testNode-25"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-254", .policy = k8spolicy.UID{.uid = "testNP-254"}, .node = "testNode-25"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-255", .policy = k8spolicy.UID{.uid = "testNP-255"}, .node = "testNode-25"}: -1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 13063196721853360374467798401377364568, .address = "10.10.28.0"}: -1
AddressGroupAddress{.addressGroup = 20643700476799638026552884954771120321, .address = "10.10.28.5"}: -1
AddressGroupAddress{.addressGroup = 38547867095710278151103125597346105774, .address = "10.10.26.8"}: -1
AddressGroupAddress{.addressGroup = 49397092328259744860688097983021229415, .address = "10.10.25.7"}: -1
AddressGroupAddress{.addressGroup = 54173367739610389021744724036216383038, .address = "10.10.26.0"}: -1
AddressGroupAddress{.addressGroup = 70163950952673858484825929710071194438, .address = "10.10.28.7"}: -1
AddressGroupAddress{.addressGroup = 85782303579613378772361651334418289549, .address = "10.10.26.6"}: -1
AddressGroupAddress{.addressGroup = 105262092280727309163668449514915827968, .address = "10.10.26.2"}: -1
AddressGroupAddress{.addressGroup = 106595406649655788404178246914544831141, .address = "10.10.26.5"}: -1
AddressGroupAddress{.addressGroup = 127258093284410874578276543482273225553, .address = "10.10.26.3"}: -1
AddressGroupAddress{.addressGroup = 131224120380189425830369655115866018529, .address = "10.10.28.8"}: -1
AddressGroupAddress{.addressGroup = 136453088387764345787124003034617416831, .address = "10.10.27.2"}: -1
AddressGroupAddress{.addressGroup = 148654982392265016181588333582428753722, .address = "10.10.27.0"}: -1
AddressGroupAddress{.addressGroup = 157985805333154754199542315854719920445, .address = "10.10.27.4"}: -1
AddressGroupAddress{.addressGroup = 183416497404506331845338707449675506127, .address = "10.10.28.3"}: -1
AddressGroupAddress{.addressGroup = 184731771022276550172337454322659699387, .address = "10.10.27.3"}: -1
AddressGroupAddress{.addressGroup = 192812925966794127159312995671770491559, .address = "10.10.27.8"}: -1
AddressGroupAddress{.addressGroup = 210129332259193493485763176358356638987, .address = "10.10.26.1"}: -1
AddressGroupAddress{.addressGroup = 214865031273587251322774421605536797293, .address = "10.10.27.7"}: -1
AddressGroupAddress{.addressGroup = 225728898954448707343846920380925188998, .address = "10.10.26.9"}: -1
AddressGroupAddress{.addressGroup = 227701430734608610339502583555857715375, .address = "10.10.27.1"}: -1
AddressGroupAddress{.addressGroup = 232438921463616447694847912040201683335, .address = "10.10.28.6"}: -1
AddressGroupAddress{.addressGroup = 238705569364434725930358941439262742398, .address = "10.10.25.8"}: -1
AddressGroupAddress{.addressGroup = 242301727091993075644961042592813426762, .address = "10.10.27.9"}: -1
AddressGroupAddress{.addressGroup = 269645923025042690683955849066564355999, .address = "10.10.28.2"}: -1
AddressGroupAddress{.addressGroup = 269822968468005839286651474018888465459, .address = "10.10.28.4"}: -1
AddressGroupAddress{.addressGroup = 277425362559311821121538083049028156518, .address = "10.10.28.1"}: -1
AddressGroupAddress{.addressGroup = 306298228026850752664550689649567882491, .address = "10.10.26.7"}: -1
AddressGroupAddress{.addressGroup = 315436731749062220140046054035387773271, .address = "10.10.26.4"}: -1
AddressGroupAddress{.addressGroup = 321369933391693023813289760771402686256, .address = "10.10.27.6"}: -1
AddressGroupAddress{.addressGroup = 321547543023437848811106824117497987275, .address = "10.10.27.5"}: -1
AddressGroupAddress{.addressGroup = 334720320446643550315781540352394834310, .address = "10.10.25.9"}: -1
AddressGroupDescr:
AddressGroupDescr{.name = "09d3e153-0eab-5d9f-b6a1-ded45eafea58", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-280]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-280")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "0f87d503-ec80-5aa3-a688-8e1d94b260c1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-285]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-285")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "1d000c95-4daa-53e8-8849-adc210cc89ae", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-268]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-268")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "252988af-827c-5c19-874a-2b41c094a567", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-257]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-257")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "28c1693e-9f7f-598e-b11f-78f7d0b3663e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-260]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-260")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "34c915dd-cc6d-5a19-97fb-17c1208c2346", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-287]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-287")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "4089121a-75ca-5f8e-a05e-a3c9775c538d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-266]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-266")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "4f30bdd6-6eb9-576f-820b-06f111a31100", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-262]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-262")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "5031874f-b679-5ac2-abbf-affbdd110aa5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-265]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-265")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "5fbd046a-a401-5321-8e1c-d14171e05b51", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-263]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-263")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "62b8d8a6-3d39-5505-8060-58ec197192e1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-288]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-288")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "66a7e8ad-365f-56cc-a437-39062f7d0c7f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-272]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-272")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "6fd5e87f-9bf5-51c5-9f33-e0465acd4f3a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-270]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-270")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "76daf596-83d2-5607-bcdc-95e838a0a93d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-274]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-274")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "89fcbb82-ccbe-5bb4-b942-08bc7ca3e1cf", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-283]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-283")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "8afa0b81-c994-5d3c-be76-bfb62cfd2abb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-273]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-273")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "910e6b35-104a-5787-b0a5-e0a02a996aa7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-278]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-278")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "9e156ff4-26ce-5a44-9eab-44feb066dd0b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-261]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-261")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "a1a57ff1-2217-59c3-9b5f-84ae0610926d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-277]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-277")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "a9d1cdf9-051d-5eb8-8a31-55cb54f19b86", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-269]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-269")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "ab4db34c-4f8e-5a49-92fd-e280ff8610af", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-271]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-271")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "aede1b9f-e8ff-5860-9bd4-fe58d7778187", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-286]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-286")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "b3950538-7b64-5a87-bb38-37e2fcd4577e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-258]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-258")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "b6499d7c-5393-5f94-b3e2-5b90801a284a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-279]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-279")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "cadbea6e-d3b9-5caf-a5e2-20d0dc81079f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-282]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-282")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "cafe0372-7b41-5768-93b7-a40709563c33", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-284]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-284")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "d0b62e6a-3ca5-5779-b226-f501695f7c66", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-281]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-281")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "e66ee496-dc95-5ad9-b85a-3b1ed35a5cfb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-267]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-267")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "ed4ee79b-f5da-5c29-9934-d38e15f2f157", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-264]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-264")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "f1c59909-0f1a-5693-b2ba-a4b4ef40df30", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-276]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-276")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "f1e7cddd-c6e8-5717-8129-e2f531b580cb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-275]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-275")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "fbd0c9ef-bc08-536a-91f3-d7c220ecb186", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-259]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-259")], .matchExpressions = []}}}}: -1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 13063196721853360374467798401377364568, .node = "testNode-27"}: -1
AddressGroupSpan{.addressGroup = 20643700476799638026552884954771120321, .node = "testNode-28"}: -1
AddressGroupSpan{.addressGroup = 38547867095710278151103125597346105774, .node = "testNode-26"}: -1
AddressGroupSpan{.addressGroup = 49397092328259744860688097983021229415, .node = "testNode-25"}: -1
AddressGroupSpan{.addressGroup = 54173367739610389021744724036216383038, .node = "testNode-25"}: -1
AddressGroupSpan{.addressGroup = 70163950952673858484825929710071194438, .node = "testNode-28"}: -1
AddressGroupSpan{.addressGroup = 85782303579613378772361651334418289549, .node = "testNode-26"}: -1
AddressGroupSpan{.addressGroup = 105262092280727309163668449514915827968, .node = "testNode-26"}: -1
AddressGroupSpan{.addressGroup = 106595406649655788404178246914544831141, .node = "testNode-26"}: -1
AddressGroupSpan{.addressGroup = 127258093284410874578276543482273225553, .node = "testNode-26"}: -1
AddressGroupSpan{.addressGroup = 131224120380189425830369655115866018529, .node = "testNode-28"}: -1
AddressGroupSpan{.addressGroup = 136453088387764345787124003034617416831, .node = "testNode-27"}: -1
AddressGroupSpan{.addressGroup = 148654982392265016181588333582428753722, .node = "testNode-26"}: -1
AddressGroupSpan{.addressGroup = 157985805333154754199542315854719920445, .node = "testNode-27"}: -1
AddressGroupSpan{.addressGroup = 183416497404506331845338707449675506127, .node = "testNode-28"}: -1
AddressGroupSpan{.addressGroup = 184731771022276550172337454322659699387, .node = "testNode-27"}: -1
AddressGroupSpan{.addressGroup = 192812925966794127159312995671770491559, .node = "testNode-27"}: -1
AddressGroupSpan{.addressGroup = 210129332259193493485763176358356638987, .node = "testNode-26"}: -1
AddressGroupSpan{.addressGroup = 214865031273587251322774421605536797293, .node = "testNode-27"}: -1
AddressGroupSpan{.addressGroup = 225728898954448707343846920380925188998, .node = "testNode-26"}: -1
AddressGroupSpan{.addressGroup = 227701430734608610339502583555857715375, .node = "testNode-27"}: -1
AddressGroupSpan{.addressGroup = 232438921463616447694847912040201683335, .node = "testNode-28"}: -1
AddressGroupSpan{.addressGroup = 238705569364434725930358941439262742398, .node = "testNode-25"}: -1
AddressGroupSpan{.addressGroup = 242301727091993075644961042592813426762, .node = "testNode-27"}: -1
AddressGroupSpan{.addressGroup = 269645923025042690683955849066564355999, .node = "testNode-28"}: -1
AddressGroupSpan{.addressGroup = 269822968468005839286651474018888465459, .node = "testNode-28"}: -1
AddressGroupSpan{.addressGroup = 277425362559311821121538083049028156518, .node = "testNode-28"}: -1
AddressGroupSpan{.addressGroup = 306298228026850752664550689649567882491, .node = "testNode-26"}: -1
AddressGroupSpan{.addressGroup = 315436731749062220140046054035387773271, .node = "testNode-26"}: -1
AddressGroupSpan{.addressGroup = 321369933391693023813289760771402686256, .node = "testNode-27"}: -1
AddressGroupSpan{.addressGroup = 321547543023437848811106824117497987275, .node = "testNode-27"}: -1
AddressGroupSpan{.addressGroup = 334720320446643550315781540352394834310, .node = "testNode-25"}: -1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "09d3e153-0eab-5d9f-b6a1-ded45eafea58", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-280]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-280")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "0f87d503-ec80-5aa3-a688-8e1d94b260c1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-285]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-285")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "1d000c95-4daa-53e8-8849-adc210cc89ae", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-268]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-268")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "252988af-827c-5c19-874a-2b41c094a567", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-257]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-257")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "28c1693e-9f7f-598e-b11f-78f7d0b3663e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-260]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-260")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "34c915dd-cc6d-5a19-97fb-17c1208c2346", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-287]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-287")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "4089121a-75ca-5f8e-a05e-a3c9775c538d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-266]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-266")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "4f30bdd6-6eb9-576f-820b-06f111a31100", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-262]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-262")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "5031874f-b679-5ac2-abbf-affbdd110aa5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-265]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-265")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "5fbd046a-a401-5321-8e1c-d14171e05b51", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-263]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-263")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "66a7e8ad-365f-56cc-a437-39062f7d0c7f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-272]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-272")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "6fd5e87f-9bf5-51c5-9f33-e0465acd4f3a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-270]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-270")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "76daf596-83d2-5607-bcdc-95e838a0a93d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-274]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-274")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "89fcbb82-ccbe-5bb4-b942-08bc7ca3e1cf", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-283]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-283")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "8afa0b81-c994-5d3c-be76-bfb62cfd2abb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-273]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-273")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "910e6b35-104a-5787-b0a5-e0a02a996aa7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-278]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-278")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "9e156ff4-26ce-5a44-9eab-44feb066dd0b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-261]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-261")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "a1a57ff1-2217-59c3-9b5f-84ae0610926d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-277]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-277")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "a9d1cdf9-051d-5eb8-8a31-55cb54f19b86", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-269]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-269")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "ab4db34c-4f8e-5a49-92fd-e280ff8610af", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-271]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-271")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "aede1b9f-e8ff-5860-9bd4-fe58d7778187", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-286]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-286")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "b3950538-7b64-5a87-bb38-37e2fcd4577e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-258]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-258")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "b6499d7c-5393-5f94-b3e2-5b90801a284a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-279]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-279")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "cadbea6e-d3b9-5caf-a5e2-20d0dc81079f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-282]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-282")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "cafe0372-7b41-5768-93b7-a40709563c33", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-284]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-284")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "d0b62e6a-3ca5-5779-b226-f501695f7c66", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-281]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-281")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "e66ee496-dc95-5ad9-b85a-3b1ed35a5cfb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-267]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-267")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "eb41ee19-8b4d-56bc-9bc6-6baa5fdcc2a4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-256]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-256")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "ed4ee79b-f5da-5c29-9934-d38e15f2f157", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-264]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-264")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "f1c59909-0f1a-5693-b2ba-a4b4ef40df30", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-276]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-276")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "f1e7cddd-c6e8-5717-8129-e2f531b580cb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-275]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-275")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "fbd0c9ef-bc08-536a-91f3-d7c220ecb186", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-259]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-259")], .matchExpressions = []}}}}: -1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 13063196721853360374467798401377364568, .node = "testNode-28", .pods = [k8spolicy.PodReference{.name = "testPod-280", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 20643700476799638026552884954771120321, .node = "testNode-28", .pods = [k8spolicy.PodReference{.name = "testPod-285", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 38547867095710278151103125597346105774, .node = "testNode-26", .pods = [k8spolicy.PodReference{.name = "testPod-268", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 49397092328259744860688097983021229415, .node = "testNode-25", .pods = [k8spolicy.PodReference{.name = "testPod-257", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 54173367739610389021744724036216383038, .node = "testNode-26", .pods = [k8spolicy.PodReference{.name = "testPod-260", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 70163950952673858484825929710071194438, .node = "testNode-28", .pods = [k8spolicy.PodReference{.name = "testPod-287", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 85782303579613378772361651334418289549, .node = "testNode-26", .pods = [k8spolicy.PodReference{.name = "testPod-266", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 105262092280727309163668449514915827968, .node = "testNode-26", .pods = [k8spolicy.PodReference{.name = "testPod-262", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 106595406649655788404178246914544831141, .node = "testNode-26", .pods = [k8spolicy.PodReference{.name = "testPod-265", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 127258093284410874578276543482273225553, .node = "testNode-26", .pods = [k8spolicy.PodReference{.name = "testPod-263", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 136453088387764345787124003034617416831, .node = "testNode-27", .pods = [k8spolicy.PodReference{.name = "testPod-272", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 148654982392265016181588333582428753722, .node = "testNode-27", .pods = [k8spolicy.PodReference{.name = "testPod-270", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 157985805333154754199542315854719920445, .node = "testNode-27", .pods = [k8spolicy.PodReference{.name = "testPod-274", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 183416497404506331845338707449675506127, .node = "testNode-28", .pods = [k8spolicy.PodReference{.name = "testPod-283", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 184731771022276550172337454322659699387, .node = "testNode-27", .pods = [k8spolicy.PodReference{.name = "testPod-273", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 192812925966794127159312995671770491559, .node = "testNode-27", .pods = [k8spolicy.PodReference{.name = "testPod-278", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 210129332259193493485763176358356638987, .node = "testNode-26", .pods = [k8spolicy.PodReference{.name = "testPod-261", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 214865031273587251322774421605536797293, .node = "testNode-27", .pods = [k8spolicy.PodReference{.name = "testPod-277", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 225728898954448707343846920380925188998, .node = "testNode-26", .pods = [k8spolicy.PodReference{.name = "testPod-269", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 227701430734608610339502583555857715375, .node = "testNode-27", .pods = [k8spolicy.PodReference{.name = "testPod-271", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 232438921463616447694847912040201683335, .node = "testNode-28", .pods = [k8spolicy.PodReference{.name = "testPod-286", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 238705569364434725930358941439262742398, .node = "testNode-25", .pods = [k8spolicy.PodReference{.name = "testPod-258", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 242301727091993075644961042592813426762, .node = "testNode-27", .pods = [k8spolicy.PodReference{.name = "testPod-279", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 269645923025042690683955849066564355999, .node = "testNode-28", .pods = [k8spolicy.PodReference{.name = "testPod-282", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 269822968468005839286651474018888465459, .node = "testNode-28", .pods = [k8spolicy.PodReference{.name = "testPod-284", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 277425362559311821121538083049028156518, .node = "testNode-28", .pods = [k8spolicy.PodReference{.name = "testPod-281", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 306298228026850752664550689649567882491, .node = "testNode-26", .pods = [k8spolicy.PodReference{.name = "testPod-267", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 312710907542561639138425961858530591396, .node = "testNode-25", .pods = [k8spolicy.PodReference{.name = "testPod-256", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 315436731749062220140046054035387773271, .node = "testNode-26", .pods = [k8spolicy.PodReference{.name = "testPod-264", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 321369933391693023813289760771402686256, .node = "testNode-27", .pods = [k8spolicy.PodReference{.name = "testPod-276", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 321547543023437848811106824117497987275, .node = "testNode-27", .pods = [k8spolicy.PodReference{.name = "testPod-275", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 334720320446643550315781540352394834310, .node = "testNode-25", .pods = [k8spolicy.PodReference{.name = "testPod-259", .namespace = "testNamespace"}]}: -1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 13063196721853360374467798401377364568, .span = "testNode-28"}: -1
AppliedToGroupSpan{.appliedToGroup = 20643700476799638026552884954771120321, .span = "testNode-28"}: -1
AppliedToGroupSpan{.appliedToGroup = 38547867095710278151103125597346105774, .span = "testNode-26"}: -1
AppliedToGroupSpan{.appliedToGroup = 49397092328259744860688097983021229415, .span = "testNode-25"}: -1
AppliedToGroupSpan{.appliedToGroup = 54173367739610389021744724036216383038, .span = "testNode-26"}: -1
AppliedToGroupSpan{.appliedToGroup = 70163950952673858484825929710071194438, .span = "testNode-28"}: -1
AppliedToGroupSpan{.appliedToGroup = 85782303579613378772361651334418289549, .span = "testNode-26"}: -1
AppliedToGroupSpan{.appliedToGroup = 105262092280727309163668449514915827968, .span = "testNode-26"}: -1
AppliedToGroupSpan{.appliedToGroup = 106595406649655788404178246914544831141, .span = "testNode-26"}: -1
AppliedToGroupSpan{.appliedToGroup = 127258093284410874578276543482273225553, .span = "testNode-26"}: -1
AppliedToGroupSpan{.appliedToGroup = 136453088387764345787124003034617416831, .span = "testNode-27"}: -1
AppliedToGroupSpan{.appliedToGroup = 148654982392265016181588333582428753722, .span = "testNode-27"}: -1
AppliedToGroupSpan{.appliedToGroup = 157985805333154754199542315854719920445, .span = "testNode-27"}: -1
AppliedToGroupSpan{.appliedToGroup = 183416497404506331845338707449675506127, .span = "testNode-28"}: -1
AppliedToGroupSpan{.appliedToGroup = 184731771022276550172337454322659699387, .span = "testNode-27"}: -1
AppliedToGroupSpan{.appliedToGroup = 192812925966794127159312995671770491559, .span = "testNode-27"}: -1
AppliedToGroupSpan{.appliedToGroup = 210129332259193493485763176358356638987, .span = "testNode-26"}: -1
AppliedToGroupSpan{.appliedToGroup = 214865031273587251322774421605536797293, .span = "testNode-27"}: -1
AppliedToGroupSpan{.appliedToGroup = 225728898954448707343846920380925188998, .span = "testNode-26"}: -1
AppliedToGroupSpan{.appliedToGroup = 227701430734608610339502583555857715375, .span = "testNode-27"}: -1
AppliedToGroupSpan{.appliedToGroup = 232438921463616447694847912040201683335, .span = "testNode-28"}: -1
AppliedToGroupSpan{.appliedToGroup = 238705569364434725930358941439262742398, .span = "testNode-25"}: -1
AppliedToGroupSpan{.appliedToGroup = 242301727091993075644961042592813426762, .span = "testNode-27"}: -1
AppliedToGroupSpan{.appliedToGroup = 269645923025042690683955849066564355999, .span = "testNode-28"}: -1
AppliedToGroupSpan{.appliedToGroup = 269822968468005839286651474018888465459, .span = "testNode-28"}: -1
AppliedToGroupSpan{.appliedToGroup = 277425362559311821121538083049028156518, .span = "testNode-28"}: -1
AppliedToGroupSpan{.appliedToGroup = 306298228026850752664550689649567882491, .span = "testNode-26"}: -1
AppliedToGroupSpan{.appliedToGroup = 312710907542561639138425961858530591396, .span = "testNode-25"}: -1
AppliedToGroupSpan{.appliedToGroup = 315436731749062220140046054035387773271, .span = "testNode-26"}: -1
AppliedToGroupSpan{.appliedToGroup = 321369933391693023813289760771402686256, .span = "testNode-27"}: -1
AppliedToGroupSpan{.appliedToGroup = 321547543023437848811106824117497987275, .span = "testNode-27"}: -1
AppliedToGroupSpan{.appliedToGroup = 334720320446643550315781540352394834310, .span = "testNode-25"}: -1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-256"}, .name = "testNP-256", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [49397092328259744860688097983021229415], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [312710907542561639138425961858530591396]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-257"}, .name = "testNP-257", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [238705569364434725930358941439262742398], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [49397092328259744860688097983021229415]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-258"}, .name = "testNP-258", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [334720320446643550315781540352394834310], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [238705569364434725930358941439262742398]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-259"}, .name = "testNP-259", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [54173367739610389021744724036216383038], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [334720320446643550315781540352394834310]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-260"}, .name = "testNP-260", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [210129332259193493485763176358356638987], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [54173367739610389021744724036216383038]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-261"}, .name = "testNP-261", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [105262092280727309163668449514915827968], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [210129332259193493485763176358356638987]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-262"}, .name = "testNP-262", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [127258093284410874578276543482273225553], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [105262092280727309163668449514915827968]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-263"}, .name = "testNP-263", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [315436731749062220140046054035387773271], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [127258093284410874578276543482273225553]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-264"}, .name = "testNP-264", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [106595406649655788404178246914544831141], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [315436731749062220140046054035387773271]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-265"}, .name = "testNP-265", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [85782303579613378772361651334418289549], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [106595406649655788404178246914544831141]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-266"}, .name = "testNP-266", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [306298228026850752664550689649567882491], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [85782303579613378772361651334418289549]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-267"}, .name = "testNP-267", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [38547867095710278151103125597346105774], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [306298228026850752664550689649567882491]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-268"}, .name = "testNP-268", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [225728898954448707343846920380925188998], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [38547867095710278151103125597346105774]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-269"}, .name = "testNP-269", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [148654982392265016181588333582428753722], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [225728898954448707343846920380925188998]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-270"}, .name = "testNP-270", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [227701430734608610339502583555857715375], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [148654982392265016181588333582428753722]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-271"}, .name = "testNP-271", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [136453088387764345787124003034617416831], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [227701430734608610339502583555857715375]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-272"}, .name = "testNP-272", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [184731771022276550172337454322659699387], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [136453088387764345787124003034617416831]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-273"}, .name = "testNP-273", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [157985805333154754199542315854719920445], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [184731771022276550172337454322659699387]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-274"}, .name = "testNP-274", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [321547543023437848811106824117497987275], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [157985805333154754199542315854719920445]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-275"}, .name = "testNP-275", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [321369933391693023813289760771402686256], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [321547543023437848811106824117497987275]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-276"}, .name = "testNP-276", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [214865031273587251322774421605536797293], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [321369933391693023813289760771402686256]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-277"}, .name = "testNP-277", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [192812925966794127159312995671770491559], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [214865031273587251322774421605536797293]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-278"}, .name = "testNP-278", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [242301727091993075644961042592813426762], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [192812925966794127159312995671770491559]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-279"}, .name = "testNP-279", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [13063196721853360374467798401377364568], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [242301727091993075644961042592813426762]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-280"}, .name = "testNP-280", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [277425362559311821121538083049028156518], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [13063196721853360374467798401377364568]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-281"}, .name = "testNP-281", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [269645923025042690683955849066564355999], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [277425362559311821121538083049028156518]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-282"}, .name = "testNP-282", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [183416497404506331845338707449675506127], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [269645923025042690683955849066564355999]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-283"}, .name = "testNP-283", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [269822968468005839286651474018888465459], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [183416497404506331845338707449675506127]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-284"}, .name = "testNP-284", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [20643700476799638026552884954771120321], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [269822968468005839286651474018888465459]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-285"}, .name = "testNP-285", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [232438921463616447694847912040201683335], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [20643700476799638026552884954771120321]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-286"}, .name = "testNP-286", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [70163950952673858484825929710071194438], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [232438921463616447694847912040201683335]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-287"}, .name = "testNP-287", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [131224120380189425830369655115866018529], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [70163950952673858484825929710071194438]}: -1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-256", .policy = k8spolicy.UID{.uid = "testNP-256"}, .node = "testNode-25"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-257", .policy = k8spolicy.UID{.uid = "testNP-257"}, .node = "testNode-25"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-258", .policy = k8spolicy.UID{.uid = "testNP-258"}, .node = "testNode-25"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-259", .policy = k8spolicy.UID{.uid = "testNP-259"}, .node = "testNode-25"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-260", .policy = k8spolicy.UID{.uid = "testNP-260"}, .node = "testNode-26"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-261", .policy = k8spolicy.UID{.uid = "testNP-261"}, .node = "testNode-26"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-262", .policy = k8spolicy.UID{.uid = "testNP-262"}, .node = "testNode-26"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-263", .policy = k8spolicy.UID{.uid = "testNP-263"}, .node = "testNode-26"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-264", .policy = k8spolicy.UID{.uid = "testNP-264"}, .node = "testNode-26"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-265", .policy = k8spolicy.UID{.uid = "testNP-265"}, .node = "testNode-26"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-266", .policy = k8spolicy.UID{.uid = "testNP-266"}, .node = "testNode-26"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-267", .policy = k8spolicy.UID{.uid = "testNP-267"}, .node = "testNode-26"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-268", .policy = k8spolicy.UID{.uid = "testNP-268"}, .node = "testNode-26"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-269", .policy = k8spolicy.UID{.uid = "testNP-269"}, .node = "testNode-26"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-270", .policy = k8spolicy.UID{.uid = "testNP-270"}, .node = "testNode-27"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-271", .policy = k8spolicy.UID{.uid = "testNP-271"}, .node = "testNode-27"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-272", .policy = k8spolicy.UID{.uid = "testNP-272"}, .node = "testNode-27"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-273", .policy = k8spolicy.UID{.uid = "testNP-273"}, .node = "testNode-27"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-274", .policy = k8spolicy.UID{.uid = "testNP-274"}, .node = "testNode-27"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-275", .policy = k8spolicy.UID{.uid = "testNP-275"}, .node = "testNode-27"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-276", .policy = k8spolicy.UID{.uid = "testNP-276"}, .node = "testNode-27"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-277", .policy = k8spolicy.UID{.uid = "testNP-277"}, .node = "testNode-27"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-278", .policy = k8spolicy.UID{.uid = "testNP-278"}, .node = "testNode-27"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-279", .policy = k8spolicy.UID{.uid = "testNP-279"}, .node = "testNode-27"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-280", .policy = k8spolicy.UID{.uid = "testNP-280"}, .node = "testNode-28"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-281", .policy = k8spolicy.UID{.uid = "testNP-281"}, .node = "testNode-28"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-282", .policy = k8spolicy.UID{.uid = "testNP-282"}, .node = "testNode-28"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-283", .policy = k8spolicy.UID{.uid = "testNP-283"}, .node = "testNode-28"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-284", .policy = k8spolicy.UID{.uid = "testNP-284"}, .node = "testNode-28"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-285", .policy = k8spolicy.UID{.uid = "testNP-285"}, .node = "testNode-28"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-286", .policy = k8spolicy.UID{.uid = "testNP-286"}, .node = "testNode-28"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-287", .policy = k8spolicy.UID{.uid = "testNP-287"}, .node = "testNode-28"}: -1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 5994427061800226586815451421652552954, .address = "10.10.30.7"}: -1
AddressGroupAddress{.addressGroup = 25776838531586682461538771612068601552, .address = "10.10.30.8"}: -1
AddressGroupAddress{.addressGroup = 27530921862935252534799180049655572714, .address = "10.10.31.7"}: -1
AddressGroupAddress{.addressGroup = 28869601861365477063779556370943800455, .address = "10.10.32.0"}: -1
AddressGroupAddress{.addressGroup = 35762860471077499685840254348633581967, .address = "10.10.31.1"}: -1
AddressGroupAddress{.addressGroup = 37101893999110050395633579124359121831, .address = "10.10.31.8"}: -1
AddressGroupAddress{.addressGroup = 41246345254696305760971905698180767005, .address = "10.10.30.3"}: -1
AddressGroupAddress{.addressGroup = 54683378670838485795879177152564505177, .address = "10.10.30.0"}: -1
AddressGroupAddress{.addressGroup = 55967920395794422184678399902202613465, .address = "10.10.29.0"}: -1
AddressGroupAddress{.addressGroup = 105706967529134367213049721578075792899, .address = "10.10.30.9"}: -1
AddressGroupAddress{.addressGroup = 111935742023978670976159712459023821177, .address = "10.10.30.2"}: -1
AddressGroupAddress{.addressGroup = 115377077972658836375393142367105958157, .address = "10.10.31.5"}: -1
AddressGroupAddress{.addressGroup = 122596521647577110332505315996673230654, .address = "10.10.31.4"}: -1
AddressGroupAddress{.addressGroup = 129941259765256992675750959742667487143, .address = "10.10.29.1"}: -1
AddressGroupAddress{.addressGroup = 131923400806131393205061476379246419448, .address = "10.10.30.4"}: -1
AddressGroupAddress{.addressGroup = 155016409356109289555387353065596389323, .address = "10.10.29.6"}: -1
AddressGroupAddress{.addressGroup = 168413022772138304027565386203917121313, .address = "10.10.31.6"}: -1
AddressGroupAddress{.addressGroup = 175559961848579729040136805394248481608, .address = "10.10.31.9"}: -1
AddressGroupAddress{.addressGroup = 219938126601821867630403718292135256456, .address = "10.10.31.2"}: -1
AddressGroupAddress{.addressGroup = 238971538721812420571683522231598345024, .address = "10.10.29.3"}: -1
AddressGroupAddress{.addressGroup = 247643503923191083486514487797088079446, .address = "10.10.31.3"}: -1
AddressGroupAddress{.addressGroup = 257809803475221422755912675022071734901, .address = "10.10.30.6"}: -1
AddressGroupAddress{.addressGroup = 263045864096191759121653481637612366223, .address = "10.10.29.9"}: -1
AddressGroupAddress{.addressGroup = 266084576073733227095844436111121558240, .address = "10.10.30.5"}: -1
AddressGroupAddress{.addressGroup = 275530979825018053405365799433013907949, .address = "10.10.29.7"}: -1
AddressGroupAddress{.addressGroup = 280666409729736315349642645790060205967, .address = "10.10.29.2"}: -1
AddressGroupAddress{.addressGroup = 291617151236401330171057537333451467162, .address = "10.10.29.4"}: -1
AddressGroupAddress{.addressGroup = 306066549893963261806772433662375248126, .address = "10.10.29.8"}: -1
AddressGroupAddress{.addressGroup = 313900485857729066910211956941039934847, .address = "10.10.28.9"}: -1
AddressGroupAddress{.addressGroup = 320041450872885727243994532644537387750, .address = "10.10.30.1"}: -1
AddressGroupAddress{.addressGroup = 320134717592557624172086165087398377265, .address = "10.10.29.5"}: -1
AddressGroupAddress{.addressGroup = 339916988078638417455167606718262270029, .address = "10.10.31.0"}: -1
AddressGroupDescr:
AddressGroupDescr{.name = "04827c12-8834-5b78-aaf4-13a23b580cfa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-307]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-307")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "13647042-d81e-5bc0-a488-6e89ffbdded0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-308]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-308")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "14b6433f-13ec-52f2-84ad-e1ac2264a8ea", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-317]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-317")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "15b81544-1fa6-52c1-8122-bf92b33b7487", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-320]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-320")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "1ae7ad27-c08a-5897-8f8e-53b3f0bc298f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-311]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-311")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "1be9909a-f805-5a65-a182-12dfdd134ba7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-318]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-318")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "1f07c1d4-1329-5b42-b57e-4d849cbe1d1d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-303]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-303")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "2923a2b9-94c5-58d4-9d3c-3cf29feb2a59", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-300]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-300")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "2a1b0785-8c58-523d-9f54-767680124ed9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-290]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-290")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "4f866be1-7dc0-5f46-a7d1-08e0e2752603", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-309]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-309")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "54360a2c-7954-5bdf-8772-3a22e051a979", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-302]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-302")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "56ccd122-bd82-5f69-9650-8ba3897dc10d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-315]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-315")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "5c3b3b30-b3a1-5a0c-b052-ca65f877c73e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-314]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-314")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "61c1c6bc-dd19-5e48-b06e-aecc4efc77a7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-291]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-291")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "633f85d6-137e-59cd-8d38-78ae94c35df8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-304]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-304")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "749f1310-23ed-5f5c-94e8-1bdc3af407cb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-296]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-296")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "7eb32b19-8544-5c7c-93e4-2b34b4eef721", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-316]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-316")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "84139e66-ca7e-595e-9b8d-56a4ffc9bb48", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-319]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-319")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "a5768ada-4cb4-5d11-b90d-72963504a188", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-312]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-312")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "b3c83e85-baf8-5ec6-922e-528d510c6b40", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-293]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-293")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "ba4e676a-d4cb-5006-bf88-ded93f6d4e56", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-313]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-313")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "c1f45caf-1be9-56e8-88f8-42b3b2a12275", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-306]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-306")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "c5e4ca67-72f4-5e68-b605-8f9396c4298f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-299]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-299")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "c82e0678-bfff-57a3-88a2-b806f1e5aae0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-305]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-305")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "cf495622-9442-57ec-a381-7588122951ed", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-297]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-297")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "d3266260-b666-54f8-8144-4db8db24578f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-292]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-292")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "db636b9e-6fe7-5d33-a6f8-3cccfcbea99a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-294]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-294")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "e64245f9-b730-56a4-b311-a818f36640fe", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-298]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-298")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "ec2708d6-c4c9-5490-a15c-686ece151d7f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-289]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-289")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "f0c5bdca-4d21-545a-88ff-12f1347a4ae6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-301]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-301")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "f0d7b431-cdc6-5739-ac1b-b3e4ec9bb731", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-295]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-295")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "ffb9a16e-a6c4-54f3-b569-9ed72b59d84d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-310]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-310")], .matchExpressions = []}}}}: -1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 5994427061800226586815451421652552954, .node = "testNode-30"}: -1
AddressGroupSpan{.addressGroup = 25776838531586682461538771612068601552, .node = "testNode-30"}: -1
AddressGroupSpan{.addressGroup = 27530921862935252534799180049655572714, .node = "testNode-31"}: -1
AddressGroupSpan{.addressGroup = 28869601861365477063779556370943800455, .node = "testNode-31"}: -1
AddressGroupSpan{.addressGroup = 35762860471077499685840254348633581967, .node = "testNode-31"}: -1
AddressGroupSpan{.addressGroup = 37101893999110050395633579124359121831, .node = "testNode-31"}: -1
AddressGroupSpan{.addressGroup = 41246345254696305760971905698180767005, .node = "testNode-30"}: -1
AddressGroupSpan{.addressGroup = 54683378670838485795879177152564505177, .node = "testNode-29"}: -1
AddressGroupSpan{.addressGroup = 55967920395794422184678399902202613465, .node = "testNode-28"}: -1
AddressGroupSpan{.addressGroup = 105706967529134367213049721578075792899, .node = "testNode-30"}: -1
AddressGroupSpan{.addressGroup = 111935742023978670976159712459023821177, .node = "testNode-30"}: -1
AddressGroupSpan{.addressGroup = 115377077972658836375393142367105958157, .node = "testNode-31"}: -1
AddressGroupSpan{.addressGroup = 122596521647577110332505315996673230654, .node = "testNode-31"}: -1
AddressGroupSpan{.addressGroup = 129941259765256992675750959742667487143, .node = "testNode-29"}: -1
AddressGroupSpan{.addressGroup = 131923400806131393205061476379246419448, .node = "testNode-30"}: -1
AddressGroupSpan{.addressGroup = 155016409356109289555387353065596389323, .node = "testNode-29"}: -1
AddressGroupSpan{.addressGroup = 168413022772138304027565386203917121313, .node = "testNode-31"}: -1
AddressGroupSpan{.addressGroup = 175559961848579729040136805394248481608, .node = "testNode-31"}: -1
AddressGroupSpan{.addressGroup = 219938126601821867630403718292135256456, .node = "testNode-31"}: -1
AddressGroupSpan{.addressGroup = 238971538721812420571683522231598345024, .node = "testNode-29"}: -1
AddressGroupSpan{.addressGroup = 247643503923191083486514487797088079446, .node = "testNode-31"}: -1
AddressGroupSpan{.addressGroup = 257809803475221422755912675022071734901, .node = "testNode-30"}: -1
AddressGroupSpan{.addressGroup = 263045864096191759121653481637612366223, .node = "testNode-29"}: -1
AddressGroupSpan{.addressGroup = 266084576073733227095844436111121558240, .node = "testNode-30"}: -1
AddressGroupSpan{.addressGroup = 275530979825018053405365799433013907949, .node = "testNode-29"}: -1
AddressGroupSpan{.addressGroup = 280666409729736315349642645790060205967, .node = "testNode-29"}: -1
AddressGroupSpan{.addressGroup = 291617151236401330171057537333451467162, .node = "testNode-29"}: -1
AddressGroupSpan{.addressGroup = 306066549893963261806772433662375248126, .node = "testNode-29"}: -1
AddressGroupSpan{.addressGroup = 313900485857729066910211956941039934847, .node = "testNode-28"}: -1
AddressGroupSpan{.addressGroup = 320041450872885727243994532644537387750, .node = "testNode-30"}: -1
AddressGroupSpan{.addressGroup = 320134717592557624172086165087398377265, .node = "testNode-29"}: -1
AddressGroupSpan{.addressGroup = 339916988078638417455167606718262270029, .node = "testNode-30"}: -1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "04827c12-8834-5b78-aaf4-13a23b580cfa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-307]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-307")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "13647042-d81e-5bc0-a488-6e89ffbdded0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-308]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-308")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "14b6433f-13ec-52f2-84ad-e1ac2264a8ea", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-317]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-317")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "1ae7ad27-c08a-5897-8f8e-53b3f0bc298f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-311]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-311")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "1be9909a-f805-5a65-a182-12dfdd134ba7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-318]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-318")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "1f07c1d4-1329-5b42-b57e-4d849cbe1d1d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-303]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-303")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "2923a2b9-94c5-58d4-9d3c-3cf29feb2a59", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-300]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-300")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "2a1b0785-8c58-523d-9f54-767680124ed9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-290]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-290")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "4f866be1-7dc0-5f46-a7d1-08e0e2752603", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-309]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-309")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "54360a2c-7954-5bdf-8772-3a22e051a979", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-302]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-302")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "56ccd122-bd82-5f69-9650-8ba3897dc10d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-315]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-315")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "5c3b3b30-b3a1-5a0c-b052-ca65f877c73e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-314]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-314")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "61c1c6bc-dd19-5e48-b06e-aecc4efc77a7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-291]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-291")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "62b8d8a6-3d39-5505-8060-58ec197192e1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-288]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-288")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "633f85d6-137e-59cd-8d38-78ae94c35df8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-304]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-304")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "749f1310-23ed-5f5c-94e8-1bdc3af407cb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-296]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-296")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "7eb32b19-8544-5c7c-93e4-2b34b4eef721", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-316]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-316")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "84139e66-ca7e-595e-9b8d-56a4ffc9bb48", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-319]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-319")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "a5768ada-4cb4-5d11-b90d-72963504a188", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-312]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-312")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "b3c83e85-baf8-5ec6-922e-528d510c6b40", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-293]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-293")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "ba4e676a-d4cb-5006-bf88-ded93f6d4e56", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-313]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-313")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "c1f45caf-1be9-56e8-88f8-42b3b2a12275", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-306]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-306")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "c5e4ca67-72f4-5e68-b605-8f9396c4298f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-299]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-299")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "c82e0678-bfff-57a3-88a2-b806f1e5aae0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-305]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-305")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "cf495622-9442-57ec-a381-7588122951ed", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-297]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-297")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "d3266260-b666-54f8-8144-4db8db24578f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-292]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-292")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "db636b9e-6fe7-5d33-a6f8-3cccfcbea99a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-294]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-294")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "e64245f9-b730-56a4-b311-a818f36640fe", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-298]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-298")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "ec2708d6-c4c9-5490-a15c-686ece151d7f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-289]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-289")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "f0c5bdca-4d21-545a-88ff-12f1347a4ae6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-301]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-301")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "f0d7b431-cdc6-5739-ac1b-b3e4ec9bb731", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-295]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-295")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "ffb9a16e-a6c4-54f3-b569-9ed72b59d84d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-310]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-310")], .matchExpressions = []}}}}: -1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 5994427061800226586815451421652552954, .node = "testNode-30", .pods = [k8spolicy.PodReference{.name = "testPod-307", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 25776838531586682461538771612068601552, .node = "testNode-30", .pods = [k8spolicy.PodReference{.name = "testPod-308", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 27530921862935252534799180049655572714, .node = "testNode-31", .pods = [k8spolicy.PodReference{.name = "testPod-317", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 35762860471077499685840254348633581967, .node = "testNode-31", .pods = [k8spolicy.PodReference{.name = "testPod-311", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 37101893999110050395633579124359121831, .node = "testNode-31", .pods = [k8spolicy.PodReference{.name = "testPod-318", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 41246345254696305760971905698180767005, .node = "testNode-30", .pods = [k8spolicy.PodReference{.name = "testPod-303", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 54683378670838485795879177152564505177, .node = "testNode-30", .pods = [k8spolicy.PodReference{.name = "testPod-300", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 55967920395794422184678399902202613465, .node = "testNode-29", .pods = [k8spolicy.PodReference{.name = "testPod-290", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 105706967529134367213049721578075792899, .node = "testNode-30", .pods = [k8spolicy.PodReference{.name = "testPod-309", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 111935742023978670976159712459023821177, .node = "testNode-30", .pods = [k8spolicy.PodReference{.name = "testPod-302", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 115377077972658836375393142367105958157, .node = "testNode-31", .pods = [k8spolicy.PodReference{.name = "testPod-315", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 122596521647577110332505315996673230654, .node = "testNode-31", .pods = [k8spolicy.PodReference{.name = "testPod-314", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 129941259765256992675750959742667487143, .node = "testNode-29", .pods = [k8spolicy.PodReference{.name = "testPod-291", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 131224120380189425830369655115866018529, .node = "testNode-28", .pods = [k8spolicy.PodReference{.name = "testPod-288", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 131923400806131393205061476379246419448, .node = "testNode-30", .pods = [k8spolicy.PodReference{.name = "testPod-304", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 155016409356109289555387353065596389323, .node = "testNode-29", .pods = [k8spolicy.PodReference{.name = "testPod-296", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 168413022772138304027565386203917121313, .node = "testNode-31", .pods = [k8spolicy.PodReference{.name = "testPod-316", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 175559961848579729040136805394248481608, .node = "testNode-31", .pods = [k8spolicy.PodReference{.name = "testPod-319", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 219938126601821867630403718292135256456, .node = "testNode-31", .pods = [k8spolicy.PodReference{.name = "testPod-312", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 238971538721812420571683522231598345024, .node = "testNode-29", .pods = [k8spolicy.PodReference{.name = "testPod-293", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 247643503923191083486514487797088079446, .node = "testNode-31", .pods = [k8spolicy.PodReference{.name = "testPod-313", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 257809803475221422755912675022071734901, .node = "testNode-30", .pods = [k8spolicy.PodReference{.name = "testPod-306", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 263045864096191759121653481637612366223, .node = "testNode-29", .pods = [k8spolicy.PodReference{.name = "testPod-299", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 266084576073733227095844436111121558240, .node = "testNode-30", .pods = [k8spolicy.PodReference{.name = "testPod-305", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 275530979825018053405365799433013907949, .node = "testNode-29", .pods = [k8spolicy.PodReference{.name = "testPod-297", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 280666409729736315349642645790060205967, .node = "testNode-29", .pods = [k8spolicy.PodReference{.name = "testPod-292", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 291617151236401330171057537333451467162, .node = "testNode-29", .pods = [k8spolicy.PodReference{.name = "testPod-294", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 306066549893963261806772433662375248126, .node = "testNode-29", .pods = [k8spolicy.PodReference{.name = "testPod-298", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 313900485857729066910211956941039934847, .node = "testNode-28", .pods = [k8spolicy.PodReference{.name = "testPod-289", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 320041450872885727243994532644537387750, .node = "testNode-30", .pods = [k8spolicy.PodReference{.name = "testPod-301", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 320134717592557624172086165087398377265, .node = "testNode-29", .pods = [k8spolicy.PodReference{.name = "testPod-295", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 339916988078638417455167606718262270029, .node = "testNode-31", .pods = [k8spolicy.PodReference{.name = "testPod-310", .namespace = "testNamespace"}]}: -1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 5994427061800226586815451421652552954, .span = "testNode-30"}: -1
AppliedToGroupSpan{.appliedToGroup = 25776838531586682461538771612068601552, .span = "testNode-30"}: -1
AppliedToGroupSpan{.appliedToGroup = 27530921862935252534799180049655572714, .span = "testNode-31"}: -1
AppliedToGroupSpan{.appliedToGroup = 35762860471077499685840254348633581967, .span = "testNode-31"}: -1
AppliedToGroupSpan{.appliedToGroup = 37101893999110050395633579124359121831, .span = "testNode-31"}: -1
AppliedToGroupSpan{.appliedToGroup = 41246345254696305760971905698180767005, .span = "testNode-30"}: -1
AppliedToGroupSpan{.appliedToGroup = 54683378670838485795879177152564505177, .span = "testNode-30"}: -1
AppliedToGroupSpan{.appliedToGroup = 55967920395794422184678399902202613465, .span = "testNode-29"}: -1
AppliedToGroupSpan{.appliedToGroup = 105706967529134367213049721578075792899, .span = "testNode-30"}: -1
AppliedToGroupSpan{.appliedToGroup = 111935742023978670976159712459023821177, .span = "testNode-30"}: -1
AppliedToGroupSpan{.appliedToGroup = 115377077972658836375393142367105958157, .span = "testNode-31"}: -1
AppliedToGroupSpan{.appliedToGroup = 122596521647577110332505315996673230654, .span = "testNode-31"}: -1
AppliedToGroupSpan{.appliedToGroup = 129941259765256992675750959742667487143, .span = "testNode-29"}: -1
AppliedToGroupSpan{.appliedToGroup = 131224120380189425830369655115866018529, .span = "testNode-28"}: -1
AppliedToGroupSpan{.appliedToGroup = 131923400806131393205061476379246419448, .span = "testNode-30"}: -1
AppliedToGroupSpan{.appliedToGroup = 155016409356109289555387353065596389323, .span = "testNode-29"}: -1
AppliedToGroupSpan{.appliedToGroup = 168413022772138304027565386203917121313, .span = "testNode-31"}: -1
AppliedToGroupSpan{.appliedToGroup = 175559961848579729040136805394248481608, .span = "testNode-31"}: -1
AppliedToGroupSpan{.appliedToGroup = 219938126601821867630403718292135256456, .span = "testNode-31"}: -1
AppliedToGroupSpan{.appliedToGroup = 238971538721812420571683522231598345024, .span = "testNode-29"}: -1
AppliedToGroupSpan{.appliedToGroup = 247643503923191083486514487797088079446, .span = "testNode-31"}: -1
AppliedToGroupSpan{.appliedToGroup = 257809803475221422755912675022071734901, .span = "testNode-30"}: -1
AppliedToGroupSpan{.appliedToGroup = 263045864096191759121653481637612366223, .span = "testNode-29"}: -1
AppliedToGroupSpan{.appliedToGroup = 266084576073733227095844436111121558240, .span = "testNode-30"}: -1
AppliedToGroupSpan{.appliedToGroup = 275530979825018053405365799433013907949, .span = "testNode-29"}: -1
AppliedToGroupSpan{.appliedToGroup = 280666409729736315349642645790060205967, .span = "testNode-29"}: -1
AppliedToGroupSpan{.appliedToGroup = 291617151236401330171057537333451467162, .span = "testNode-29"}: -1
AppliedToGroupSpan{.appliedToGroup = 306066549893963261806772433662375248126, .span = "testNode-29"}: -1
AppliedToGroupSpan{.appliedToGroup = 313900485857729066910211956941039934847, .span = "testNode-28"}: -1
AppliedToGroupSpan{.appliedToGroup = 320041450872885727243994532644537387750, .span = "testNode-30"}: -1
AppliedToGroupSpan{.appliedToGroup = 320134717592557624172086165087398377265, .span = "testNode-29"}: -1
AppliedToGroupSpan{.appliedToGroup = 339916988078638417455167606718262270029, .span = "testNode-31"}: -1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-288"}, .name = "testNP-288", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [313900485857729066910211956941039934847], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [131224120380189425830369655115866018529]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-289"}, .name = "testNP-289", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [55967920395794422184678399902202613465], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [313900485857729066910211956941039934847]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-290"}, .name = "testNP-290", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [129941259765256992675750959742667487143], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [55967920395794422184678399902202613465]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-291"}, .name = "testNP-291", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [280666409729736315349642645790060205967], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [129941259765256992675750959742667487143]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-292"}, .name = "testNP-292", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [238971538721812420571683522231598345024], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [280666409729736315349642645790060205967]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-293"}, .name = "testNP-293", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [291617151236401330171057537333451467162], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [238971538721812420571683522231598345024]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-294"}, .name = "testNP-294", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [320134717592557624172086165087398377265], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [291617151236401330171057537333451467162]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-295"}, .name = "testNP-295", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [155016409356109289555387353065596389323], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [320134717592557624172086165087398377265]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-296"}, .name = "testNP-296", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [275530979825018053405365799433013907949], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [155016409356109289555387353065596389323]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-297"}, .name = "testNP-297", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [306066549893963261806772433662375248126], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [275530979825018053405365799433013907949]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-298"}, .name = "testNP-298", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [263045864096191759121653481637612366223], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [306066549893963261806772433662375248126]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-299"}, .name = "testNP-299", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [54683378670838485795879177152564505177], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [263045864096191759121653481637612366223]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-300"}, .name = "testNP-300", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [320041450872885727243994532644537387750], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [54683378670838485795879177152564505177]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-301"}, .name = "testNP-301", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [111935742023978670976159712459023821177], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [320041450872885727243994532644537387750]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-302"}, .name = "testNP-302", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [41246345254696305760971905698180767005], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [111935742023978670976159712459023821177]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-303"}, .name = "testNP-303", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [131923400806131393205061476379246419448], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [41246345254696305760971905698180767005]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-304"}, .name = "testNP-304", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [266084576073733227095844436111121558240], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [131923400806131393205061476379246419448]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-305"}, .name = "testNP-305", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [257809803475221422755912675022071734901], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [266084576073733227095844436111121558240]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-306"}, .name = "testNP-306", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [5994427061800226586815451421652552954], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [257809803475221422755912675022071734901]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-307"}, .name = "testNP-307", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [25776838531586682461538771612068601552], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [5994427061800226586815451421652552954]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-308"}, .name = "testNP-308", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [105706967529134367213049721578075792899], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [25776838531586682461538771612068601552]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-309"}, .name = "testNP-309", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [339916988078638417455167606718262270029], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [105706967529134367213049721578075792899]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-310"}, .name = "testNP-310", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [35762860471077499685840254348633581967], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [339916988078638417455167606718262270029]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-311"}, .name = "testNP-311", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [219938126601821867630403718292135256456], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [35762860471077499685840254348633581967]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-312"}, .name = "testNP-312", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [247643503923191083486514487797088079446], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [219938126601821867630403718292135256456]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-313"}, .name = "testNP-313", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [122596521647577110332505315996673230654], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [247643503923191083486514487797088079446]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-314"}, .name = "testNP-314", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [115377077972658836375393142367105958157], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [122596521647577110332505315996673230654]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-315"}, .name = "testNP-315", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [168413022772138304027565386203917121313], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [115377077972658836375393142367105958157]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-316"}, .name = "testNP-316", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [27530921862935252534799180049655572714], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [168413022772138304027565386203917121313]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-317"}, .name = "testNP-317", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [37101893999110050395633579124359121831], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [27530921862935252534799180049655572714]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-318"}, .name = "testNP-318", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [175559961848579729040136805394248481608], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [37101893999110050395633579124359121831]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-319"}, .name = "testNP-319", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [28869601861365477063779556370943800455], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [175559961848579729040136805394248481608]}: -1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-288", .policy = k8spolicy.UID{.uid = "testNP-288"}, .node = "testNode-28"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-289", .policy = k8spolicy.UID{.uid = "testNP-289"}, .node = "testNode-28"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-290", .policy = k8spolicy.UID{.uid = "testNP-290"}, .node = "testNode-29"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-291", .policy = k8spolicy.UID{.uid = "testNP-291"}, .node = "testNode-29"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-292", .policy = k8spolicy.UID{.uid = "testNP-292"}, .node = "testNode-29"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-293", .policy = k8spolicy.UID{.uid = "testNP-293"}, .node = "testNode-29"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-294", .policy = k8spolicy.UID{.uid = "testNP-294"}, .node = "testNode-29"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-295", .policy = k8spolicy.UID{.uid = "testNP-295"}, .node = "testNode-29"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-296", .policy = k8spolicy.UID{.uid = "testNP-296"}, .node = "testNode-29"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-297", .policy = k8spolicy.UID{.uid = "testNP-297"}, .node = "testNode-29"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-298", .policy = k8spolicy.UID{.uid = "testNP-298"}, .node = "testNode-29"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-299", .policy = k8spolicy.UID{.uid = "testNP-299"}, .node = "testNode-29"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-300", .policy = k8spolicy.UID{.uid = "testNP-300"}, .node = "testNode-30"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-301", .policy = k8spolicy.UID{.uid = "testNP-301"}, .node = "testNode-30"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-302", .policy = k8spolicy.UID{.uid = "testNP-302"}, .node = "testNode-30"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-303", .policy = k8spolicy.UID{.uid = "testNP-303"}, .node = "testNode-30"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-304", .policy = k8spolicy.UID{.uid = "testNP-304"}, .node = "testNode-30"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-305", .policy = k8spolicy.UID{.uid = "testNP-305"}, .node = "testNode-30"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-306", .policy = k8spolicy.UID{.uid = "testNP-306"}, .node = "testNode-30"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-307", .policy = k8spolicy.UID{.uid = "testNP-307"}, .node = "testNode-30"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-308", .policy = k8spolicy.UID{.uid = "testNP-308"}, .node = "testNode-30"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-309", .policy = k8spolicy.UID{.uid = "testNP-309"}, .node = "testNode-30"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-310", .policy = k8spolicy.UID{.uid = "testNP-310"}, .node = "testNode-31"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-311", .policy = k8spolicy.UID{.uid = "testNP-311"}, .node = "testNode-31"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-312", .policy = k8spolicy.UID{.uid = "testNP-312"}, .node = "testNode-31"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-313", .policy = k8spolicy.UID{.uid = "testNP-313"}, .node = "testNode-31"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-314", .policy = k8spolicy.UID{.uid = "testNP-314"}, .node = "testNode-31"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-315", .policy = k8spolicy.UID{.uid = "testNP-315"}, .node = "testNode-31"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-316", .policy = k8spolicy.UID{.uid = "testNP-316"}, .node = "testNode-31"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-317", .policy = k8spolicy.UID{.uid = "testNP-317"}, .node = "testNode-31"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-318", .policy = k8spolicy.UID{.uid = "testNP-318"}, .node = "testNode-31"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-319", .policy = k8spolicy.UID{.uid = "testNP-319"}, .node = "testNode-31"}: -1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 8156012615375273075513316480127716116, .address = "10.10.34.1"}: -1
AddressGroupAddress{.addressGroup = 23289236440490671008988671773537245769, .address = "10.10.34.5"}: -1
AddressGroupAddress{.addressGroup = 27670302582832918617839987813308859682, .address = "10.10.33.6"}: -1
AddressGroupAddress{.addressGroup = 29962960726855158230239284836596500322, .address = "10.10.33.1"}: -1
AddressGroupAddress{.addressGroup = 42824286947216686958637470650615346814, .address = "10.10.35.0"}: -1
AddressGroupAddress{.addressGroup = 54609773851505128183449447279570162603, .address = "10.10.33.7"}: -1
AddressGroupAddress{.addressGroup = 72437780108526313005058184720248204368, .address = "10.10.34.6"}: -1
AddressGroupAddress{.addressGroup = 86317366871251654292583405593724506972, .address = "10.10.32.7"}: -1
AddressGroupAddress{.addressGroup = 103224286414000793094385267666221414198, .address = "10.10.34.3"}: -1
AddressGroupAddress{.addressGroup = 104446872545109095715253227764781230865, .address = "10.10.34.8"}: -1
AddressGroupAddress{.addressGroup = 109390521759681146293523854875194161876, .address = "10.10.33.9"}: -1
AddressGroupAddress{.addressGroup = 110797891148903104025131445562475916352, .address = "10.10.34.0"}: -1
AddressGroupAddress{.addressGroup = 111815955908526589360855961724276641702, .address = "10.10.32.2"}: -1
AddressGroupAddress{.addressGroup = 124080244502856558225174144264224848830, .address = "10.10.32.3"}: -1
AddressGroupAddress{.addressGroup = 125932286054285933888212199934725492300, .address = "10.10.33.8"}: -1
AddressGroupAddress{.addressGroup = 133745256079059968015248566816374212979, .address = "10.10.34.4"}: -1
AddressGroupAddress{.addressGroup = 134443069241623646215970611445040804591, .address = "10.10.32.8"}: -1
AddressGroupAddress{.addressGroup = 136232272814920806987539799605696569121, .address = "10.10.34.7"}: -1
AddressGroupAddress{.addressGroup = 142109813633545012082195008673714637464, .address = "10.10.35.1"}: -1
AddressGroupAddress{.addressGroup = 147312665898295197877079302766034569060, .address = "10.10.32.6"}: -1
AddressGroupAddress{.addressGroup = 149411521092005029786865768771049376072, .address = "10.10.33.0"}: -1
AddressGroupAddress{.addressGroup = 171181412114741709475660366741228345024, .address = "10.10.34.2"}: -1
AddressGroupAddress{.addressGroup = 174517760590703030369221808418215095444, .address = "10.10.34.9"}: -1
AddressGroupAddress{.addressGroup = 198910222485184959752366135926520783962, .address = "10.10.32.1"}: -1
AddressGroupAddress{.addressGroup = 222413691810441544435336615076498076445, .address = "10.10.33.4"}: -1
AddressGroupAddress{.addressGroup = 224152998295236335705923032191989609966, .address = "10.10.32.4"}: -1
AddressGroupAddress{.addressGroup = 274797038520641730978558992225041385791, .address = "10.10.32.5"}: -1
AddressGroupAddress{.addressGroup = 275281581386338180724032301588237661266, .address = "10.10.32.9"}: -1
AddressGroupAddress{.addressGroup = 294777063325130814998857042997978698093, .address = "10.10.35.2"}: -1
AddressGroupAddress{.addressGroup = 317498654831788743806531447942786958999, .address = "10.10.33.3"}: -1
AddressGroupAddress{.addressGroup = 332391932983323401294324192472142279524, .address = "10.10.33.5"}: -1
AddressGroupAddress{.addressGroup = 338893346122961319960526719884915482926, .address = "10.10.33.2"}: -1
AddressGroupDescr:
AddressGroupDescr{.name = "0622ca77-ea88-56f5-9b85-5d3e1949cb14", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-341]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-341")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "11855802-3ee1-5dfa-826b-b32f0fa49a49", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-345]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-345")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "14d11b3f-177b-5b7f-a489-faf82db28522", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-336]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-336")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "168aa805-2746-5c72-934e-eb04f710c762", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-331]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-331")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "2037a85c-4419-539f-9062-53066da2367e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-350]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-350")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "291575ba-268e-5347-88c2-4efe6d8793ab", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-337]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-337")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "367f024c-9e28-51b1-9440-f3610253ec50", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-346]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-346")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "40f01ec2-a95e-5c7e-85cb-8c9543bcd35c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-327]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-327")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "4da84640-576a-5937-b204-f52f78ea3736", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-343]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-343")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "4e93bc66-c667-59b8-83c7-4c2f0db92b11", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-348]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-348")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "524bd920-497c-5a79-9482-4730b381fad4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-339]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-339")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "535ae5cb-5535-5a53-a721-3fb07b71ac40", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-340]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-340")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "541ef843-2371-5bba-8ee4-f7763d970fa6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-322]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-322")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "5d58fc5f-fa22-552b-8d5c-fca0c86f3bbe", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-323]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-323")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "5ebdad12-c5fb-57e6-bc25-0c590fac8e4c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-338]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-338")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "649e663c-7902-5f6a-b621-2a2627cb4973", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-344]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-344")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "6524cb14-d79b-5c8d-9d5d-9c9b5051f2ef", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-328]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-328")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "667d61a0-d979-5f78-85a3-469b35bc9f21", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-347]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-347")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "6ae95ac3-9478-5ddb-b790-65b9bb698a98", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-351]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-351")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "6ed3632f-896b-5527-ba9f-a78568e64764", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-326]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-326")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "70679cbc-7724-55bf-972e-7cc0262e4948", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-330]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-330")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "80c8573b-7c4c-51dd-b183-2619e511d6c0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-342]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-342")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "834ae5e9-8c30-5d93-a80f-5024f4caec94", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-349]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-349")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "95a4b722-ad92-5054-8f8a-a1e6dee7a45a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-321]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-321")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "a75351a4-1505-59ff-b02a-61bc98a1731d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-334]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-334")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "a8a24c12-4a7b-5c3d-b44a-3bf6f18e75ee", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-324]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-324")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "cebbfc08-f37e-5e72-bbed-09c8bf14093f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-325]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-325")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "cf194dd7-bac5-5b8f-8f0a-53b725e63452", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-329]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-329")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "ddc3ff50-3578-5622-b267-07f75659916d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-352]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-352")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "eedc0444-1ce9-5021-9f14-95dce9a5c697", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-333]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-333")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "fa105b92-431e-5fed-ac1a-4021e55d7364", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-335]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-335")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "fef47bfc-bc28-5f02-9354-7ce265e5a12e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-332]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-332")], .matchExpressions = []}}}}: -1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 8156012615375273075513316480127716116, .node = "testNode-34"}: -1
AddressGroupSpan{.addressGroup = 23289236440490671008988671773537245769, .node = "testNode-34"}: -1
AddressGroupSpan{.addressGroup = 27670302582832918617839987813308859682, .node = "testNode-33"}: -1
AddressGroupSpan{.addressGroup = 29962960726855158230239284836596500322, .node = "testNode-33"}: -1
AddressGroupSpan{.addressGroup = 42824286947216686958637470650615346814, .node = "testNode-34"}: -1
AddressGroupSpan{.addressGroup = 54609773851505128183449447279570162603, .node = "testNode-33"}: -1
AddressGroupSpan{.addressGroup = 72437780108526313005058184720248204368, .node = "testNode-34"}: -1
AddressGroupSpan{.addressGroup = 86317366871251654292583405593724506972, .node = "testNode-32"}: -1
AddressGroupSpan{.addressGroup = 103224286414000793094385267666221414198, .node = "testNode-34"}: -1
AddressGroupSpan{.addressGroup = 104446872545109095715253227764781230865, .node = "testNode-34"}: -1
AddressGroupSpan{.addressGroup = 109390521759681146293523854875194161876, .node = "testNode-33"}: -1
AddressGroupSpan{.addressGroup = 110797891148903104025131445562475916352, .node = "testNode-33"}: -1
AddressGroupSpan{.addressGroup = 111815955908526589360855961724276641702, .node = "testNode-32"}: -1
AddressGroupSpan{.addressGroup = 124080244502856558225174144264224848830, .node = "testNode-32"}: -1
AddressGroupSpan{.addressGroup = 125932286054285933888212199934725492300, .node = "testNode-33"}: -1
AddressGroupSpan{.addressGroup = 133745256079059968015248566816374212979, .node = "testNode-34"}: -1
AddressGroupSpan{.addressGroup = 134443069241623646215970611445040804591, .node = "testNode-32"}: -1
AddressGroupSpan{.addressGroup = 136232272814920806987539799605696569121, .node = "testNode-34"}: -1
AddressGroupSpan{.addressGroup = 142109813633545012082195008673714637464, .node = "testNode-35"}: -1
AddressGroupSpan{.addressGroup = 147312665898295197877079302766034569060, .node = "testNode-32"}: -1
AddressGroupSpan{.addressGroup = 149411521092005029786865768771049376072, .node = "testNode-32"}: -1
AddressGroupSpan{.addressGroup = 171181412114741709475660366741228345024, .node = "testNode-34"}: -1
AddressGroupSpan{.addressGroup = 174517760590703030369221808418215095444, .node = "testNode-34"}: -1
AddressGroupSpan{.addressGroup = 198910222485184959752366135926520783962, .node = "testNode-32"}: -1
AddressGroupSpan{.addressGroup = 222413691810441544435336615076498076445, .node = "testNode-33"}: -1
AddressGroupSpan{.addressGroup = 224152998295236335705923032191989609966, .node = "testNode-32"}: -1
AddressGroupSpan{.addressGroup = 274797038520641730978558992225041385791, .node = "testNode-32"}: -1
AddressGroupSpan{.addressGroup = 275281581386338180724032301588237661266, .node = "testNode-32"}: -1
AddressGroupSpan{.addressGroup = 294777063325130814998857042997978698093, .node = "testNode-35"}: -1
AddressGroupSpan{.addressGroup = 317498654831788743806531447942786958999, .node = "testNode-33"}: -1
AddressGroupSpan{.addressGroup = 332391932983323401294324192472142279524, .node = "testNode-33"}: -1
AddressGroupSpan{.addressGroup = 338893346122961319960526719884915482926, .node = "testNode-33"}: -1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "0622ca77-ea88-56f5-9b85-5d3e1949cb14", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-341]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-341")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "11855802-3ee1-5dfa-826b-b32f0fa49a49", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-345]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-345")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "14d11b3f-177b-5b7f-a489-faf82db28522", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-336]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-336")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "15b81544-1fa6-52c1-8122-bf92b33b7487", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-320]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-320")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "168aa805-2746-5c72-934e-eb04f710c762", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-331]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-331")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "2037a85c-4419-539f-9062-53066da2367e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-350]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-350")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "291575ba-268e-5347-88c2-4efe6d8793ab", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-337]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-337")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "367f024c-9e28-51b1-9440-f3610253ec50", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-346]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-346")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "40f01ec2-a95e-5c7e-85cb-8c9543bcd35c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-327]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-327")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "4da84640-576a-5937-b204-f52f78ea3736", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-343]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-343")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "4e93bc66-c667-59b8-83c7-4c2f0db92b11", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-348]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-348")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "524bd920-497c-5a79-9482-4730b381fad4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-339]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-339")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "535ae5cb-5535-5a53-a721-3fb07b71ac40", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-340]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-340")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "541ef843-2371-5bba-8ee4-f7763d970fa6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-322]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-322")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "5d58fc5f-fa22-552b-8d5c-fca0c86f3bbe", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-323]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-323")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "5ebdad12-c5fb-57e6-bc25-0c590fac8e4c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-338]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-338")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "649e663c-7902-5f6a-b621-2a2627cb4973", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-344]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-344")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "6524cb14-d79b-5c8d-9d5d-9c9b5051f2ef", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-328]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-328")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "667d61a0-d979-5f78-85a3-469b35bc9f21", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-347]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-347")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "6ae95ac3-9478-5ddb-b790-65b9bb698a98", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-351]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-351")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "6ed3632f-896b-5527-ba9f-a78568e64764", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-326]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-326")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "70679cbc-7724-55bf-972e-7cc0262e4948", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-330]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-330")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "80c8573b-7c4c-51dd-b183-2619e511d6c0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-342]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-342")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "834ae5e9-8c30-5d93-a80f-5024f4caec94", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-349]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-349")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "95a4b722-ad92-5054-8f8a-a1e6dee7a45a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-321]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-321")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "a75351a4-1505-59ff-b02a-61bc98a1731d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-334]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-334")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "a8a24c12-4a7b-5c3d-b44a-3bf6f18e75ee", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-324]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-324")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "cebbfc08-f37e-5e72-bbed-09c8bf14093f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-325]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-325")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "cf194dd7-bac5-5b8f-8f0a-53b725e63452", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-329]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-329")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "eedc0444-1ce9-5021-9f14-95dce9a5c697", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-333]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-333")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "fa105b92-431e-5fed-ac1a-4021e55d7364", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-335]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-335")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "fef47bfc-bc28-5f02-9354-7ce265e5a12e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-332]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-332")], .matchExpressions = []}}}}: -1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 8156012615375273075513316480127716116, .node = "testNode-34", .pods = [k8spolicy.PodReference{.name = "testPod-341", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 23289236440490671008988671773537245769, .node = "testNode-34", .pods = [k8spolicy.PodReference{.name = "testPod-345", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 27670302582832918617839987813308859682, .node = "testNode-33", .pods = [k8spolicy.PodReference{.name = "testPod-336", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 28869601861365477063779556370943800455, .node = "testNode-32", .pods = [k8spolicy.PodReference{.name = "testPod-320", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 29962960726855158230239284836596500322, .node = "testNode-33", .pods = [k8spolicy.PodReference{.name = "testPod-331", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 42824286947216686958637470650615346814, .node = "testNode-35", .pods = [k8spolicy.PodReference{.name = "testPod-350", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 54609773851505128183449447279570162603, .node = "testNode-33", .pods = [k8spolicy.PodReference{.name = "testPod-337", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 72437780108526313005058184720248204368, .node = "testNode-34", .pods = [k8spolicy.PodReference{.name = "testPod-346", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 86317366871251654292583405593724506972, .node = "testNode-32", .pods = [k8spolicy.PodReference{.name = "testPod-327", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 103224286414000793094385267666221414198, .node = "testNode-34", .pods = [k8spolicy.PodReference{.name = "testPod-343", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 104446872545109095715253227764781230865, .node = "testNode-34", .pods = [k8spolicy.PodReference{.name = "testPod-348", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 109390521759681146293523854875194161876, .node = "testNode-33", .pods = [k8spolicy.PodReference{.name = "testPod-339", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 110797891148903104025131445562475916352, .node = "testNode-34", .pods = [k8spolicy.PodReference{.name = "testPod-340", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 111815955908526589360855961724276641702, .node = "testNode-32", .pods = [k8spolicy.PodReference{.name = "testPod-322", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 124080244502856558225174144264224848830, .node = "testNode-32", .pods = [k8spolicy.PodReference{.name = "testPod-323", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 125932286054285933888212199934725492300, .node = "testNode-33", .pods = [k8spolicy.PodReference{.name = "testPod-338", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 133745256079059968015248566816374212979, .node = "testNode-34", .pods = [k8spolicy.PodReference{.name = "testPod-344", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 134443069241623646215970611445040804591, .node = "testNode-32", .pods = [k8spolicy.PodReference{.name = "testPod-328", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 136232272814920806987539799605696569121, .node = "testNode-34", .pods = [k8spolicy.PodReference{.name = "testPod-347", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 142109813633545012082195008673714637464, .node = "testNode-35", .pods = [k8spolicy.PodReference{.name = "testPod-351", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 147312665898295197877079302766034569060, .node = "testNode-32", .pods = [k8spolicy.PodReference{.name = "testPod-326", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 149411521092005029786865768771049376072, .node = "testNode-33", .pods = [k8spolicy.PodReference{.name = "testPod-330", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 171181412114741709475660366741228345024, .node = "testNode-34", .pods = [k8spolicy.PodReference{.name = "testPod-342", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 174517760590703030369221808418215095444, .node = "testNode-34", .pods = [k8spolicy.PodReference{.name = "testPod-349", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 198910222485184959752366135926520783962, .node = "testNode-32", .pods = [k8spolicy.PodReference{.name = "testPod-321", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 222413691810441544435336615076498076445, .node = "testNode-33", .pods = [k8spolicy.PodReference{.name = "testPod-334", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 224152998295236335705923032191989609966, .node = "testNode-32", .pods = [k8spolicy.PodReference{.name = "testPod-324", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 274797038520641730978558992225041385791, .node = "testNode-32", .pods = [k8spolicy.PodReference{.name = "testPod-325", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 275281581386338180724032301588237661266, .node = "testNode-32", .pods = [k8spolicy.PodReference{.name = "testPod-329", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 317498654831788743806531447942786958999, .node = "testNode-33", .pods = [k8spolicy.PodReference{.name = "testPod-333", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 332391932983323401294324192472142279524, .node = "testNode-33", .pods = [k8spolicy.PodReference{.name = "testPod-335", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 338893346122961319960526719884915482926, .node = "testNode-33", .pods = [k8spolicy.PodReference{.name = "testPod-332", .namespace = "testNamespace"}]}: -1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 8156012615375273075513316480127716116, .span = "testNode-34"}: -1
AppliedToGroupSpan{.appliedToGroup = 23289236440490671008988671773537245769, .span = "testNode-34"}: -1
AppliedToGroupSpan{.appliedToGroup = 27670302582832918617839987813308859682, .span = "testNode-33"}: -1
AppliedToGroupSpan{.appliedToGroup = 28869601861365477063779556370943800455, .span = "testNode-32"}: -1
AppliedToGroupSpan{.appliedToGroup = 29962960726855158230239284836596500322, .span = "testNode-33"}: -1
AppliedToGroupSpan{.appliedToGroup = 42824286947216686958637470650615346814, .span = "testNode-35"}: -1
AppliedToGroupSpan{.appliedToGroup = 54609773851505128183449447279570162603, .span = "testNode-33"}: -1
AppliedToGroupSpan{.appliedToGroup = 72437780108526313005058184720248204368, .span = "testNode-34"}: -1
AppliedToGroupSpan{.appliedToGroup = 86317366871251654292583405593724506972, .span = "testNode-32"}: -1
AppliedToGroupSpan{.appliedToGroup = 103224286414000793094385267666221414198, .span = "testNode-34"}: -1
AppliedToGroupSpan{.appliedToGroup = 104446872545109095715253227764781230865, .span = "testNode-34"}: -1
AppliedToGroupSpan{.appliedToGroup = 109390521759681146293523854875194161876, .span = "testNode-33"}: -1
AppliedToGroupSpan{.appliedToGroup = 110797891148903104025131445562475916352, .span = "testNode-34"}: -1
AppliedToGroupSpan{.appliedToGroup = 111815955908526589360855961724276641702, .span = "testNode-32"}: -1
AppliedToGroupSpan{.appliedToGroup = 124080244502856558225174144264224848830, .span = "testNode-32"}: -1
AppliedToGroupSpan{.appliedToGroup = 125932286054285933888212199934725492300, .span = "testNode-33"}: -1
AppliedToGroupSpan{.appliedToGroup = 133745256079059968015248566816374212979, .span = "testNode-34"}: -1
AppliedToGroupSpan{.appliedToGroup = 134443069241623646215970611445040804591, .span = "testNode-32"}: -1
AppliedToGroupSpan{.appliedToGroup = 136232272814920806987539799605696569121, .span = "testNode-34"}: -1
AppliedToGroupSpan{.appliedToGroup = 142109813633545012082195008673714637464, .span = "testNode-35"}: -1
AppliedToGroupSpan{.appliedToGroup = 147312665898295197877079302766034569060, .span = "testNode-32"}: -1
AppliedToGroupSpan{.appliedToGroup = 149411521092005029786865768771049376072, .span = "testNode-33"}: -1
AppliedToGroupSpan{.appliedToGroup = 171181412114741709475660366741228345024, .span = "testNode-34"}: -1
AppliedToGroupSpan{.appliedToGroup = 174517760590703030369221808418215095444, .span = "testNode-34"}: -1
AppliedToGroupSpan{.appliedToGroup = 198910222485184959752366135926520783962, .span = "testNode-32"}: -1
AppliedToGroupSpan{.appliedToGroup = 222413691810441544435336615076498076445, .span = "testNode-33"}: -1
AppliedToGroupSpan{.appliedToGroup = 224152998295236335705923032191989609966, .span = "testNode-32"}: -1
AppliedToGroupSpan{.appliedToGroup = 274797038520641730978558992225041385791, .span = "testNode-32"}: -1
AppliedToGroupSpan{.appliedToGroup = 275281581386338180724032301588237661266, .span = "testNode-32"}: -1
AppliedToGroupSpan{.appliedToGroup = 317498654831788743806531447942786958999, .span = "testNode-33"}: -1
AppliedToGroupSpan{.appliedToGroup = 332391932983323401294324192472142279524, .span = "testNode-33"}: -1
AppliedToGroupSpan{.appliedToGroup = 338893346122961319960526719884915482926, .span = "testNode-33"}: -1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-320"}, .name = "testNP-320", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [198910222485184959752366135926520783962], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [28869601861365477063779556370943800455]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-321"}, .name = "testNP-321", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [111815955908526589360855961724276641702], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [198910222485184959752366135926520783962]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-322"}, .name = "testNP-322", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [124080244502856558225174144264224848830], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [111815955908526589360855961724276641702]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-323"}, .name = "testNP-323", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [224152998295236335705923032191989609966], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [124080244502856558225174144264224848830]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-324"}, .name = "testNP-324", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [274797038520641730978558992225041385791], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [224152998295236335705923032191989609966]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-325"}, .name = "testNP-325", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [147312665898295197877079302766034569060], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [274797038520641730978558992225041385791]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-326"}, .name = "testNP-326", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [86317366871251654292583405593724506972], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [147312665898295197877079302766034569060]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-327"}, .name = "testNP-327", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [134443069241623646215970611445040804591], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [86317366871251654292583405593724506972]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-328"}, .name = "testNP-328", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [275281581386338180724032301588237661266], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [134443069241623646215970611445040804591]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-329"}, .name = "testNP-329", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [149411521092005029786865768771049376072], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [275281581386338180724032301588237661266]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-330"}, .name = "testNP-330", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [29962960726855158230239284836596500322], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [149411521092005029786865768771049376072]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-331"}, .name = "testNP-331", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [338893346122961319960526719884915482926], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [29962960726855158230239284836596500322]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-332"}, .name = "testNP-332", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [317498654831788743806531447942786958999], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [338893346122961319960526719884915482926]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-333"}, .name = "testNP-333", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [222413691810441544435336615076498076445], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [317498654831788743806531447942786958999]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-334"}, .name = "testNP-334", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [332391932983323401294324192472142279524], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [222413691810441544435336615076498076445]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-335"}, .name = "testNP-335", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [27670302582832918617839987813308859682], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [332391932983323401294324192472142279524]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-336"}, .name = "testNP-336", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [54609773851505128183449447279570162603], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [27670302582832918617839987813308859682]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-337"}, .name = "testNP-337", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [125932286054285933888212199934725492300], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [54609773851505128183449447279570162603]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-338"}, .name = "testNP-338", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [109390521759681146293523854875194161876], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [125932286054285933888212199934725492300]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-339"}, .name = "testNP-339", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [110797891148903104025131445562475916352], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [109390521759681146293523854875194161876]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-340"}, .name = "testNP-340", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [8156012615375273075513316480127716116], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [110797891148903104025131445562475916352]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-341"}, .name = "testNP-341", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [171181412114741709475660366741228345024], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [8156012615375273075513316480127716116]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-342"}, .name = "testNP-342", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [103224286414000793094385267666221414198], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [171181412114741709475660366741228345024]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-343"}, .name = "testNP-343", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [133745256079059968015248566816374212979], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [103224286414000793094385267666221414198]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-344"}, .name = "testNP-344", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [23289236440490671008988671773537245769], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [133745256079059968015248566816374212979]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-345"}, .name = "testNP-345", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [72437780108526313005058184720248204368], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [23289236440490671008988671773537245769]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-346"}, .name = "testNP-346", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [136232272814920806987539799605696569121], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [72437780108526313005058184720248204368]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-347"}, .name = "testNP-347", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [104446872545109095715253227764781230865], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [136232272814920806987539799605696569121]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-348"}, .name = "testNP-348", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [174517760590703030369221808418215095444], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [104446872545109095715253227764781230865]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-349"}, .name = "testNP-349", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [42824286947216686958637470650615346814], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [174517760590703030369221808418215095444]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-350"}, .name = "testNP-350", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [142109813633545012082195008673714637464], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [42824286947216686958637470650615346814]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-351"}, .name = "testNP-351", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [294777063325130814998857042997978698093], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [142109813633545012082195008673714637464]}: -1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-320", .policy = k8spolicy.UID{.uid = "testNP-320"}, .node = "testNode-32"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-321", .policy = k8spolicy.UID{.uid = "testNP-321"}, .node = "testNode-32"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-322", .policy = k8spolicy.UID{.uid = "testNP-322"}, .node = "testNode-32"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-323", .policy = k8spolicy.UID{.uid = "testNP-323"}, .node = "testNode-32"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-324", .policy = k8spolicy.UID{.uid = "testNP-324"}, .node = "testNode-32"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-325", .policy = k8spolicy.UID{.uid = "testNP-325"}, .node = "testNode-32"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-326", .policy = k8spolicy.UID{.uid = "testNP-326"}, .node = "testNode-32"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-327", .policy = k8spolicy.UID{.uid = "testNP-327"}, .node = "testNode-32"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-328", .policy = k8spolicy.UID{.uid = "testNP-328"}, .node = "testNode-32"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-329", .policy = k8spolicy.UID{.uid = "testNP-329"}, .node = "testNode-32"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-330", .policy = k8spolicy.UID{.uid = "testNP-330"}, .node = "testNode-33"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-331", .policy = k8spolicy.UID{.uid = "testNP-331"}, .node = "testNode-33"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-332", .policy = k8spolicy.UID{.uid = "testNP-332"}, .node = "testNode-33"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-333", .policy = k8spolicy.UID{.uid = "testNP-333"}, .node = "testNode-33"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-334", .policy = k8spolicy.UID{.uid = "testNP-334"}, .node = "testNode-33"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-335", .policy = k8spolicy.UID{.uid = "testNP-335"}, .node = "testNode-33"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-336", .policy = k8spolicy.UID{.uid = "testNP-336"}, .node = "testNode-33"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-337", .policy = k8spolicy.UID{.uid = "testNP-337"}, .node = "testNode-33"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-338", .policy = k8spolicy.UID{.uid = "testNP-338"}, .node = "testNode-33"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-339", .policy = k8spolicy.UID{.uid = "testNP-339"}, .node = "testNode-33"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-340", .policy = k8spolicy.UID{.uid = "testNP-340"}, .node = "testNode-34"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-341", .policy = k8spolicy.UID{.uid = "testNP-341"}, .node = "testNode-34"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-342", .policy = k8spolicy.UID{.uid = "testNP-342"}, .node = "testNode-34"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-343", .policy = k8spolicy.UID{.uid = "testNP-343"}, .node = "testNode-34"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-344", .policy = k8spolicy.UID{.uid = "testNP-344"}, .node = "testNode-34"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-345", .policy = k8spolicy.UID{.uid = "testNP-345"}, .node = "testNode-34"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-346", .policy = k8spolicy.UID{.uid = "testNP-346"}, .node = "testNode-34"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-347", .policy = k8spolicy.UID{.uid = "testNP-347"}, .node = "testNode-34"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-348", .policy = k8spolicy.UID{.uid = "testNP-348"}, .node = "testNode-34"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-349", .policy = k8spolicy.UID{.uid = "testNP-349"}, .node = "testNode-34"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-350", .policy = k8spolicy.UID{.uid = "testNP-350"}, .node = "testNode-35"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-351", .policy = k8spolicy.UID{.uid = "testNP-351"}, .node = "testNode-35"}: -1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 6366398203500886159015268287054267487, .address = "10.10.37.9"}: -1
AddressGroupAddress{.addressGroup = 25728096772803730530097819510715318440, .address = "10.10.38.2"}: -1
AddressGroupAddress{.addressGroup = 39563579425363251010021501183360136453, .address = "10.10.36.4"}: -1
AddressGroupAddress{.addressGroup = 43807059977161073289472890775806665241, .address = "10.10.37.2"}: -1
AddressGroupAddress{.addressGroup = 70240193878856971722972774221044145240, .address = "10.10.38.1"}: -1
AddressGroupAddress{.addressGroup = 81192145682176396156133841162111391927, .address = "10.10.37.6"}: -1
AddressGroupAddress{.addressGroup = 88959728975593031522836386477491532536, .address = "10.10.37.7"}: -1
AddressGroupAddress{.addressGroup = 106187498583969152475652717203950076016, .address = "10.10.37.5"}: -1
AddressGroupAddress{.addressGroup = 109371540700279225899571308895405664759, .address = "10.10.35.3"}: -1
AddressGroupAddress{.addressGroup = 127540519359533634018201691059152237407, .address = "10.10.36.1"}: -1
AddressGroupAddress{.addressGroup = 150807549167585680368715919476962427228, .address = "10.10.36.0"}: -1
AddressGroupAddress{.addressGroup = 154257931395130954044404164861273830672, .address = "10.10.37.4"}: -1
AddressGroupAddress{.addressGroup = 161502882177064113748800817414401677268, .address = "10.10.35.8"}: -1
AddressGroupAddress{.addressGroup = 178256877441172842406234072943247700416, .address = "10.10.35.4"}: -1
AddressGroupAddress{.addressGroup = 199487636299424221536221472704617864021, .address = "10.10.35.7"}: -1
AddressGroupAddress{.addressGroup = 216995137289808744638771175156270837472, .address = "10.10.36.6"}: -1
AddressGroupAddress{.addressGroup = 222912033200703017039023335860053126690, .address = "10.10.35.5"}: -1
AddressGroupAddress{.addressGroup = 225614594314563370653787779745805398577, .address = "10.10.38.0"}: -1
AddressGroupAddress{.addressGroup = 235984494721957284391273911870943692802, .address = "10.10.35.6"}: -1
AddressGroupAddress{.addressGroup = 241675646095052571155624669839169783330, .address = "10.10.36.3"}: -1
AddressGroupAddress{.addressGroup = 249084012687177156949461076716756822526, .address = "10.10.37.8"}: -1
AddressGroupAddress{.addressGroup = 279423969213825284781734573277686487578, .address = "10.10.38.3"}: -1
AddressGroupAddress{.addressGroup = 279759141478477705901889363286752079720, .address = "10.10.36.8"}: -1
AddressGroupAddress{.addressGroup = 280418311285806928660563498291319384854, .address = "10.10.38.4"}: -1
AddressGroupAddress{.addressGroup = 289604564939442756424628922785112151181, .address = "10.10.36.2"}: -1
AddressGroupAddress{.addressGroup = 291779966422723611698741003262163667558, .address = "10.10.36.9"}: -1
AddressGroupAddress{.addressGroup = 319097179162881233309057408459821988975, .address = "10.10.37.0"}: -1
AddressGroupAddress{.addressGroup = 323613082206982824230896362683386657137, .address = "10.10.37.3"}: -1
AddressGroupAddress{.addressGroup = 324113510679508754845290643165218141943, .address = "10.10.35.9"}: -1
AddressGroupAddress{.addressGroup = 326741712428026666998935812082432165208, .address = "10.10.36.7"}: -1
AddressGroupAddress{.addressGroup = 333978821761015600771410415190035118242, .address = "10.10.36.5"}: -1
AddressGroupAddress{.addressGroup = 336365034612928243870868949808197599767, .address = "10.10.37.1"}: -1
AddressGroupDescr:
AddressGroupDescr{.name = "04ca1faa-65a0-5ba2-b304-d8187b0ec45f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-379]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-379")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "135b0d1b-5b5f-5d43-9c35-7664a89200a8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-382]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-382")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "1dc3ab11-44b6-562d-8368-ec8960367505", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-364]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-364")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "20f4eecf-d187-51b3-b3b5-acfa9207e219", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-372]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-372")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "34d7c4ee-d19c-55b7-a7e8-a201cce65c58", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-381]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-381")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "3d1509d8-a285-5518-be92-86414c6998b7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-376]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-376")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "42ed0545-3f16-5e73-8b34-6ae0b61ab2f8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-377]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-377")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "4fe2f7e4-1901-5cc4-b05f-0073bec70070", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-375]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-375")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "52483149-a2c5-5e14-8ce0-87292d78e9f7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-353]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-353")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "5ff36918-de7e-50f8-b674-89b7896c335f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-361]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-361")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "71747a3c-0210-5ca6-b9d9-06d219e1015c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-360]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-360")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "740cff36-5dbb-576d-a05e-1a43aa5bf510", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-374]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-374")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "798052dd-47af-5971-9527-c1b7902bd7d4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-358]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-358")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "861b069b-33ab-550d-b698-2d04d0a731c0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-354]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-354")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "9613ebd5-a001-5394-99d1-785aa7b15b55", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-357]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-357")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "a33fbe46-e55c-55c1-b5da-11027d592ee0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-366]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-366")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "a7b34bc4-b9ce-5d27-a937-262e38daae22", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-355]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-355")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "a9bbca51-a207-5d2c-8caf-1ba1264e7231", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-380]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-380")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "b188f5e1-fde5-5a4e-a352-41509f988802", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-356]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-356")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "b5d1094f-2cb6-510d-9805-da70ee098622", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-363]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-363")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "bb63d5fb-9781-514f-ab4f-cff5d4b269fe", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-378]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-378")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "d2371954-b622-588e-81e9-5434d4935a1a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-383]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-383")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "d277a699-72f4-5235-b75b-d30225b5af68", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-368]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-368")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "d2f69a2e-1a7f-5e6c-a0f0-86875d71ab16", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-384]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-384")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "d9dfcf74-1179-5764-9b7f-de3f7de2548d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-362]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-362")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "db82c707-005a-5d3e-9ca4-37b2dc33ca66", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-369]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-369")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "f00fe199-b9f7-513a-ba79-1777f31ebc6f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-370]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-370")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "f3759ccf-89e1-5a87-9b66-2d1e42057971", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-373]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-373")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "f3d5fdd6-dd2c-5432-a528-b3a0c78cf6f7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-359]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-359")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "f5d02a30-a188-5059-a878-fd0f73fb4558", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-367]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-367")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "fb41fb3a-8b6f-5569-971d-88811ca3b8a2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-365]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-365")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "fd0d8c9b-07fe-5743-babc-94fd14fb0217", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-371]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-371")], .matchExpressions = []}}}}: -1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 6366398203500886159015268287054267487, .node = "testNode-37"}: -1
AddressGroupSpan{.addressGroup = 25728096772803730530097819510715318440, .node = "testNode-38"}: -1
AddressGroupSpan{.addressGroup = 39563579425363251010021501183360136453, .node = "testNode-36"}: -1
AddressGroupSpan{.addressGroup = 43807059977161073289472890775806665241, .node = "testNode-37"}: -1
AddressGroupSpan{.addressGroup = 70240193878856971722972774221044145240, .node = "testNode-38"}: -1
AddressGroupSpan{.addressGroup = 81192145682176396156133841162111391927, .node = "testNode-37"}: -1
AddressGroupSpan{.addressGroup = 88959728975593031522836386477491532536, .node = "testNode-37"}: -1
AddressGroupSpan{.addressGroup = 106187498583969152475652717203950076016, .node = "testNode-37"}: -1
AddressGroupSpan{.addressGroup = 109371540700279225899571308895405664759, .node = "testNode-35"}: -1
AddressGroupSpan{.addressGroup = 127540519359533634018201691059152237407, .node = "testNode-36"}: -1
AddressGroupSpan{.addressGroup = 150807549167585680368715919476962427228, .node = "testNode-35"}: -1
AddressGroupSpan{.addressGroup = 154257931395130954044404164861273830672, .node = "testNode-37"}: -1
AddressGroupSpan{.addressGroup = 161502882177064113748800817414401677268, .node = "testNode-35"}: -1
AddressGroupSpan{.addressGroup = 178256877441172842406234072943247700416, .node = "testNode-35"}: -1
AddressGroupSpan{.addressGroup = 199487636299424221536221472704617864021, .node = "testNode-35"}: -1
AddressGroupSpan{.addressGroup = 216995137289808744638771175156270837472, .node = "testNode-36"}: -1
AddressGroupSpan{.addressGroup = 222912033200703017039023335860053126690, .node = "testNode-35"}: -1
AddressGroupSpan{.addressGroup = 225614594314563370653787779745805398577, .node = "testNode-37"}: -1
AddressGroupSpan{.addressGroup = 235984494721957284391273911870943692802, .node = "testNode-35"}: -1
AddressGroupSpan{.addressGroup = 241675646095052571155624669839169783330, .node = "testNode-36"}: -1
AddressGroupSpan{.addressGroup = 249084012687177156949461076716756822526, .node = "testNode-37"}: -1
AddressGroupSpan{.addressGroup = 279423969213825284781734573277686487578, .node = "testNode-38"}: -1
AddressGroupSpan{.addressGroup = 279759141478477705901889363286752079720, .node = "testNode-36"}: -1
AddressGroupSpan{.addressGroup = 280418311285806928660563498291319384854, .node = "testNode-38"}: -1
AddressGroupSpan{.addressGroup = 289604564939442756424628922785112151181, .node = "testNode-36"}: -1
AddressGroupSpan{.addressGroup = 291779966422723611698741003262163667558, .node = "testNode-36"}: -1
AddressGroupSpan{.addressGroup = 319097179162881233309057408459821988975, .node = "testNode-36"}: -1
AddressGroupSpan{.addressGroup = 323613082206982824230896362683386657137, .node = "testNode-37"}: -1
AddressGroupSpan{.addressGroup = 324113510679508754845290643165218141943, .node = "testNode-35"}: -1
AddressGroupSpan{.addressGroup = 326741712428026666998935812082432165208, .node = "testNode-36"}: -1
AddressGroupSpan{.addressGroup = 333978821761015600771410415190035118242, .node = "testNode-36"}: -1
AddressGroupSpan{.addressGroup = 336365034612928243870868949808197599767, .node = "testNode-37"}: -1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "04ca1faa-65a0-5ba2-b304-d8187b0ec45f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-379]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-379")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "135b0d1b-5b5f-5d43-9c35-7664a89200a8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-382]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-382")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "1dc3ab11-44b6-562d-8368-ec8960367505", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-364]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-364")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "20f4eecf-d187-51b3-b3b5-acfa9207e219", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-372]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-372")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "34d7c4ee-d19c-55b7-a7e8-a201cce65c58", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-381]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-381")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "3d1509d8-a285-5518-be92-86414c6998b7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-376]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-376")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "42ed0545-3f16-5e73-8b34-6ae0b61ab2f8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-377]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-377")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "4fe2f7e4-1901-5cc4-b05f-0073bec70070", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-375]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-375")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "52483149-a2c5-5e14-8ce0-87292d78e9f7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-353]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-353")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "5ff36918-de7e-50f8-b674-89b7896c335f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-361]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-361")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "71747a3c-0210-5ca6-b9d9-06d219e1015c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-360]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-360")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "740cff36-5dbb-576d-a05e-1a43aa5bf510", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-374]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-374")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "798052dd-47af-5971-9527-c1b7902bd7d4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-358]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-358")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "861b069b-33ab-550d-b698-2d04d0a731c0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-354]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-354")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "9613ebd5-a001-5394-99d1-785aa7b15b55", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-357]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-357")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "a33fbe46-e55c-55c1-b5da-11027d592ee0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-366]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-366")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "a7b34bc4-b9ce-5d27-a937-262e38daae22", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-355]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-355")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "a9bbca51-a207-5d2c-8caf-1ba1264e7231", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-380]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-380")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "b188f5e1-fde5-5a4e-a352-41509f988802", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-356]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-356")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "b5d1094f-2cb6-510d-9805-da70ee098622", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-363]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-363")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "bb63d5fb-9781-514f-ab4f-cff5d4b269fe", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-378]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-378")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "d2371954-b622-588e-81e9-5434d4935a1a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-383]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-383")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "d277a699-72f4-5235-b75b-d30225b5af68", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-368]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-368")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "d9dfcf74-1179-5764-9b7f-de3f7de2548d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-362]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-362")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "db82c707-005a-5d3e-9ca4-37b2dc33ca66", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-369]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-369")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "ddc3ff50-3578-5622-b267-07f75659916d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-352]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-352")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "f00fe199-b9f7-513a-ba79-1777f31ebc6f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-370]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-370")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "f3759ccf-89e1-5a87-9b66-2d1e42057971", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-373]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-373")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "f3d5fdd6-dd2c-5432-a528-b3a0c78cf6f7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-359]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-359")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "f5d02a30-a188-5059-a878-fd0f73fb4558", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-367]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-367")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "fb41fb3a-8b6f-5569-971d-88811ca3b8a2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-365]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-365")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "fd0d8c9b-07fe-5743-babc-94fd14fb0217", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-371]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-371")], .matchExpressions = []}}}}: -1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 6366398203500886159015268287054267487, .node = "testNode-37", .pods = [k8spolicy.PodReference{.name = "testPod-379", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 25728096772803730530097819510715318440, .node = "testNode-38", .pods = [k8spolicy.PodReference{.name = "testPod-382", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 39563579425363251010021501183360136453, .node = "testNode-36", .pods = [k8spolicy.PodReference{.name = "testPod-364", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 43807059977161073289472890775806665241, .node = "testNode-37", .pods = [k8spolicy.PodReference{.name = "testPod-372", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 70240193878856971722972774221044145240, .node = "testNode-38", .pods = [k8spolicy.PodReference{.name = "testPod-381", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 81192145682176396156133841162111391927, .node = "testNode-37", .pods = [k8spolicy.PodReference{.name = "testPod-376", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 88959728975593031522836386477491532536, .node = "testNode-37", .pods = [k8spolicy.PodReference{.name = "testPod-377", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 106187498583969152475652717203950076016, .node = "testNode-37", .pods = [k8spolicy.PodReference{.name = "testPod-375", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 109371540700279225899571308895405664759, .node = "testNode-35", .pods = [k8spolicy.PodReference{.name = "testPod-353", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 127540519359533634018201691059152237407, .node = "testNode-36", .pods = [k8spolicy.PodReference{.name = "testPod-361", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 150807549167585680368715919476962427228, .node = "testNode-36", .pods = [k8spolicy.PodReference{.name = "testPod-360", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 154257931395130954044404164861273830672, .node = "testNode-37", .pods = [k8spolicy.PodReference{.name = "testPod-374", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 161502882177064113748800817414401677268, .node = "testNode-35", .pods = [k8spolicy.PodReference{.name = "testPod-358", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 178256877441172842406234072943247700416, .node = "testNode-35", .pods = [k8spolicy.PodReference{.name = "testPod-354", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 199487636299424221536221472704617864021, .node = "testNode-35", .pods = [k8spolicy.PodReference{.name = "testPod-357", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 216995137289808744638771175156270837472, .node = "testNode-36", .pods = [k8spolicy.PodReference{.name = "testPod-366", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 222912033200703017039023335860053126690, .node = "testNode-35", .pods = [k8spolicy.PodReference{.name = "testPod-355", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 225614594314563370653787779745805398577, .node = "testNode-38", .pods = [k8spolicy.PodReference{.name = "testPod-380", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 235984494721957284391273911870943692802, .node = "testNode-35", .pods = [k8spolicy.PodReference{.name = "testPod-356", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 241675646095052571155624669839169783330, .node = "testNode-36", .pods = [k8spolicy.PodReference{.name = "testPod-363", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 249084012687177156949461076716756822526, .node = "testNode-37", .pods = [k8spolicy.PodReference{.name = "testPod-378", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 279423969213825284781734573277686487578, .node = "testNode-38", .pods = [k8spolicy.PodReference{.name = "testPod-383", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 279759141478477705901889363286752079720, .node = "testNode-36", .pods = [k8spolicy.PodReference{.name = "testPod-368", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 289604564939442756424628922785112151181, .node = "testNode-36", .pods = [k8spolicy.PodReference{.name = "testPod-362", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 291779966422723611698741003262163667558, .node = "testNode-36", .pods = [k8spolicy.PodReference{.name = "testPod-369", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 294777063325130814998857042997978698093, .node = "testNode-35", .pods = [k8spolicy.PodReference{.name = "testPod-352", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 319097179162881233309057408459821988975, .node = "testNode-37", .pods = [k8spolicy.PodReference{.name = "testPod-370", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 323613082206982824230896362683386657137, .node = "testNode-37", .pods = [k8spolicy.PodReference{.name = "testPod-373", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 324113510679508754845290643165218141943, .node = "testNode-35", .pods = [k8spolicy.PodReference{.name = "testPod-359", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 326741712428026666998935812082432165208, .node = "testNode-36", .pods = [k8spolicy.PodReference{.name = "testPod-367", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 333978821761015600771410415190035118242, .node = "testNode-36", .pods = [k8spolicy.PodReference{.name = "testPod-365", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 336365034612928243870868949808197599767, .node = "testNode-37", .pods = [k8spolicy.PodReference{.name = "testPod-371", .namespace = "testNamespace"}]}: -1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 6366398203500886159015268287054267487, .span = "testNode-37"}: -1
AppliedToGroupSpan{.appliedToGroup = 25728096772803730530097819510715318440, .span = "testNode-38"}: -1
AppliedToGroupSpan{.appliedToGroup = 39563579425363251010021501183360136453, .span = "testNode-36"}: -1
AppliedToGroupSpan{.appliedToGroup = 43807059977161073289472890775806665241, .span = "testNode-37"}: -1
AppliedToGroupSpan{.appliedToGroup = 70240193878856971722972774221044145240, .span = "testNode-38"}: -1
AppliedToGroupSpan{.appliedToGroup = 81192145682176396156133841162111391927, .span = "testNode-37"}: -1
AppliedToGroupSpan{.appliedToGroup = 88959728975593031522836386477491532536, .span = "testNode-37"}: -1
AppliedToGroupSpan{.appliedToGroup = 106187498583969152475652717203950076016, .span = "testNode-37"}: -1
AppliedToGroupSpan{.appliedToGroup = 109371540700279225899571308895405664759, .span = "testNode-35"}: -1
AppliedToGroupSpan{.appliedToGroup = 127540519359533634018201691059152237407, .span = "testNode-36"}: -1
AppliedToGroupSpan{.appliedToGroup = 150807549167585680368715919476962427228, .span = "testNode-36"}: -1
AppliedToGroupSpan{.appliedToGroup = 154257931395130954044404164861273830672, .span = "testNode-37"}: -1
AppliedToGroupSpan{.appliedToGroup = 161502882177064113748800817414401677268, .span = "testNode-35"}: -1
AppliedToGroupSpan{.appliedToGroup = 178256877441172842406234072943247700416, .span = "testNode-35"}: -1
AppliedToGroupSpan{.appliedToGroup = 199487636299424221536221472704617864021, .span = "testNode-35"}: -1
AppliedToGroupSpan{.appliedToGroup = 216995137289808744638771175156270837472, .span = "testNode-36"}: -1
AppliedToGroupSpan{.appliedToGroup = 222912033200703017039023335860053126690, .span = "testNode-35"}: -1
AppliedToGroupSpan{.appliedToGroup = 225614594314563370653787779745805398577, .span = "testNode-38"}: -1
AppliedToGroupSpan{.appliedToGroup = 235984494721957284391273911870943692802, .span = "testNode-35"}: -1
AppliedToGroupSpan{.appliedToGroup = 241675646095052571155624669839169783330, .span = "testNode-36"}: -1
AppliedToGroupSpan{.appliedToGroup = 249084012687177156949461076716756822526, .span = "testNode-37"}: -1
AppliedToGroupSpan{.appliedToGroup = 279423969213825284781734573277686487578, .span = "testNode-38"}: -1
AppliedToGroupSpan{.appliedToGroup = 279759141478477705901889363286752079720, .span = "testNode-36"}: -1
AppliedToGroupSpan{.appliedToGroup = 289604564939442756424628922785112151181, .span = "testNode-36"}: -1
AppliedToGroupSpan{.appliedToGroup = 291779966422723611698741003262163667558, .span = "testNode-36"}: -1
AppliedToGroupSpan{.appliedToGroup = 294777063325130814998857042997978698093, .span = "testNode-35"}: -1
AppliedToGroupSpan{.appliedToGroup = 319097179162881233309057408459821988975, .span = "testNode-37"}: -1
AppliedToGroupSpan{.appliedToGroup = 323613082206982824230896362683386657137, .span = "testNode-37"}: -1
AppliedToGroupSpan{.appliedToGroup = 324113510679508754845290643165218141943, .span = "testNode-35"}: -1
AppliedToGroupSpan{.appliedToGroup = 326741712428026666998935812082432165208, .span = "testNode-36"}: -1
AppliedToGroupSpan{.appliedToGroup = 333978821761015600771410415190035118242, .span = "testNode-36"}: -1
AppliedToGroupSpan{.appliedToGroup = 336365034612928243870868949808197599767, .span = "testNode-37"}: -1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-352"}, .name = "testNP-352", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [109371540700279225899571308895405664759], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [294777063325130814998857042997978698093]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-353"}, .name = "testNP-353", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [178256877441172842406234072943247700416], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [109371540700279225899571308895405664759]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-354"}, .name = "testNP-354", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [222912033200703017039023335860053126690], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [178256877441172842406234072943247700416]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-355"}, .name = "testNP-355", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [235984494721957284391273911870943692802], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [222912033200703017039023335860053126690]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-356"}, .name = "testNP-356", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [199487636299424221536221472704617864021], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [235984494721957284391273911870943692802]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-357"}, .name = "testNP-357", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [161502882177064113748800817414401677268], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [199487636299424221536221472704617864021]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-358"}, .name = "testNP-358", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [324113510679508754845290643165218141943], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [161502882177064113748800817414401677268]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-359"}, .name = "testNP-359", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [150807549167585680368715919476962427228], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [324113510679508754845290643165218141943]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-360"}, .name = "testNP-360", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [127540519359533634018201691059152237407], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [150807549167585680368715919476962427228]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-361"}, .name = "testNP-361", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [289604564939442756424628922785112151181], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [127540519359533634018201691059152237407]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-362"}, .name = "testNP-362", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [241675646095052571155624669839169783330], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [289604564939442756424628922785112151181]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-363"}, .name = "testNP-363", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [39563579425363251010021501183360136453], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [241675646095052571155624669839169783330]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-364"}, .name = "testNP-364", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [333978821761015600771410415190035118242], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [39563579425363251010021501183360136453]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-365"}, .name = "testNP-365", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [216995137289808744638771175156270837472], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [333978821761015600771410415190035118242]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-366"}, .name = "testNP-366", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [326741712428026666998935812082432165208], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [216995137289808744638771175156270837472]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-367"}, .name = "testNP-367", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [279759141478477705901889363286752079720], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [326741712428026666998935812082432165208]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-368"}, .name = "testNP-368", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [291779966422723611698741003262163667558], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [279759141478477705901889363286752079720]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-369"}, .name = "testNP-369", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [319097179162881233309057408459821988975], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [291779966422723611698741003262163667558]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-370"}, .name = "testNP-370", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [336365034612928243870868949808197599767], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [319097179162881233309057408459821988975]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-371"}, .name = "testNP-371", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [43807059977161073289472890775806665241], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [336365034612928243870868949808197599767]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-372"}, .name = "testNP-372", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [323613082206982824230896362683386657137], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [43807059977161073289472890775806665241]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-373"}, .name = "testNP-373", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [154257931395130954044404164861273830672], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [323613082206982824230896362683386657137]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-374"}, .name = "testNP-374", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [106187498583969152475652717203950076016], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [154257931395130954044404164861273830672]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-375"}, .name = "testNP-375", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [81192145682176396156133841162111391927], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [106187498583969152475652717203950076016]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-376"}, .name = "testNP-376", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [88959728975593031522836386477491532536], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [81192145682176396156133841162111391927]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-377"}, .name = "testNP-377", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [249084012687177156949461076716756822526], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [88959728975593031522836386477491532536]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-378"}, .name = "testNP-378", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [6366398203500886159015268287054267487], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [249084012687177156949461076716756822526]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-379"}, .name = "testNP-379", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [225614594314563370653787779745805398577], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [6366398203500886159015268287054267487]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-380"}, .name = "testNP-380", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [70240193878856971722972774221044145240], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [225614594314563370653787779745805398577]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-381"}, .name = "testNP-381", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [25728096772803730530097819510715318440], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [70240193878856971722972774221044145240]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-382"}, .name = "testNP-382", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [279423969213825284781734573277686487578], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [25728096772803730530097819510715318440]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-383"}, .name = "testNP-383", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [280418311285806928660563498291319384854], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [279423969213825284781734573277686487578]}: -1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-352", .policy = k8spolicy.UID{.uid = "testNP-352"}, .node = "testNode-35"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-353", .policy = k8spolicy.UID{.uid = "testNP-353"}, .node = "testNode-35"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-354", .policy = k8spolicy.UID{.uid = "testNP-354"}, .node = "testNode-35"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-355", .policy = k8spolicy.UID{.uid = "testNP-355"}, .node = "testNode-35"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-356", .policy = k8spolicy.UID{.uid = "testNP-356"}, .node = "testNode-35"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-357", .policy = k8spolicy.UID{.uid = "testNP-357"}, .node = "testNode-35"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-358", .policy = k8spolicy.UID{.uid = "testNP-358"}, .node = "testNode-35"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-359", .policy = k8spolicy.UID{.uid = "testNP-359"}, .node = "testNode-35"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-360", .policy = k8spolicy.UID{.uid = "testNP-360"}, .node = "testNode-36"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-361", .policy = k8spolicy.UID{.uid = "testNP-361"}, .node = "testNode-36"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-362", .policy = k8spolicy.UID{.uid = "testNP-362"}, .node = "testNode-36"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-363", .policy = k8spolicy.UID{.uid = "testNP-363"}, .node = "testNode-36"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-364", .policy = k8spolicy.UID{.uid = "testNP-364"}, .node = "testNode-36"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-365", .policy = k8spolicy.UID{.uid = "testNP-365"}, .node = "testNode-36"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-366", .policy = k8spolicy.UID{.uid = "testNP-366"}, .node = "testNode-36"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-367", .policy = k8spolicy.UID{.uid = "testNP-367"}, .node = "testNode-36"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-368", .policy = k8spolicy.UID{.uid = "testNP-368"}, .node = "testNode-36"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-369", .policy = k8spolicy.UID{.uid = "testNP-369"}, .node = "testNode-36"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-370", .policy = k8spolicy.UID{.uid = "testNP-370"}, .node = "testNode-37"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-371", .policy = k8spolicy.UID{.uid = "testNP-371"}, .node = "testNode-37"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-372", .policy = k8spolicy.UID{.uid = "testNP-372"}, .node = "testNode-37"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-373", .policy = k8spolicy.UID{.uid = "testNP-373"}, .node = "testNode-37"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-374", .policy = k8spolicy.UID{.uid = "testNP-374"}, .node = "testNode-37"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-375", .policy = k8spolicy.UID{.uid = "testNP-375"}, .node = "testNode-37"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-376", .policy = k8spolicy.UID{.uid = "testNP-376"}, .node = "testNode-37"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-377", .policy = k8spolicy.UID{.uid = "testNP-377"}, .node = "testNode-37"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-378", .policy = k8spolicy.UID{.uid = "testNP-378"}, .node = "testNode-37"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-379", .policy = k8spolicy.UID{.uid = "testNP-379"}, .node = "testNode-37"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-380", .policy = k8spolicy.UID{.uid = "testNP-380"}, .node = "testNode-38"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-381", .policy = k8spolicy.UID{.uid = "testNP-381"}, .node = "testNode-38"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-382", .policy = k8spolicy.UID{.uid = "testNP-382"}, .node = "testNode-38"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-383", .policy = k8spolicy.UID{.uid = "testNP-383"}, .node = "testNode-38"}: -1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 25351671292287421659159263303895047133, .address = "10.10.41.0"}: -1
AddressGroupAddress{.addressGroup = 35179552136046811557645183480294644329, .address = "10.10.41.5"}: -1
AddressGroupAddress{.addressGroup = 94880436684849212255742222845112811648, .address = "10.10.41.3"}: -1
AddressGroupAddress{.addressGroup = 96455934073274139366776967175508708290, .address = "10.10.39.9"}: -1
AddressGroupAddress{.addressGroup = 102472280474829765366675501330267830253, .address = "10.10.38.6"}: -1
AddressGroupAddress{.addressGroup = 113151575205202429271836850776786938272, .address = "10.10.39.8"}: -1
AddressGroupAddress{.addressGroup = 114365328651691316916108387575310070430, .address = "10.10.40.8"}: -1
AddressGroupAddress{.addressGroup = 119485370430696960609980679788983442772, .address = "10.10.41.6"}: -1
AddressGroupAddress{.addressGroup = 135758365032620222546791899774945341289, .address = "10.10.40.7"}: -1
AddressGroupAddress{.addressGroup = 150804780325762926378875021364202129550, .address = "10.10.39.2"}: -1
AddressGroupAddress{.addressGroup = 158825345343546986895349479192097929976, .address = "10.10.38.5"}: -1
AddressGroupAddress{.addressGroup = 160888049551821204096036415576342894872, .address = "10.10.38.9"}: -1
AddressGroupAddress{.addressGroup = 167088586504501757807210819165564476052, .address = "10.10.38.8"}: -1
AddressGroupAddress{.addressGroup = 167691916116213392765788931806582582797, .address = "10.10.40.6"}: -1
AddressGroupAddress{.addressGroup = 187562125794245904875109112557074340532, .address = "10.10.40.9"}: -1
AddressGroupAddress{.addressGroup = 187746292700066864965007536522164918112, .address = "10.10.39.3"}: -1
AddressGroupAddress{.addressGroup = 196714686800858753802624815818181209830, .address = "10.10.40.1"}: -1
AddressGroupAddress{.addressGroup = 200192873178445774821574365696760845361, .address = "10.10.41.4"}: -1
AddressGroupAddress{.addressGroup = 208109524417309464812876171939933000687, .address = "10.10.40.0"}: -1
AddressGroupAddress{.addressGroup = 218515741281349171285900608511266032437, .address = "10.10.39.5"}: -1
AddressGroupAddress{.addressGroup = 224312264982048958246471268310097507188, .address = "10.10.40.3"}: -1
AddressGroupAddress{.addressGroup = 261110794643404729047482385275926030618, .address = "10.10.38.7"}: -1
AddressGroupAddress{.addressGroup = 261647544234304440906914305731756822470, .address = "10.10.40.5"}: -1
AddressGroupAddress{.addressGroup = 275640580799196130534836568800585547003, .address = "10.10.39.0"}: -1
AddressGroupAddress{.addressGroup = 277403914975466460882108524976094143994, .address = "10.10.40.2"}: -1
AddressGroupAddress{.addressGroup = 286622438269697018265238984085970045668, .address = "10.10.39.4"}: -1
AddressGroupAddress{.addressGroup = 291030460754200400425402328634757153201, .address = "10.10.41.2"}: -1
AddressGroupAddress{.addressGroup = 292284333795275210980546581304906260779, .address = "10.10.39.1"}: -1
AddressGroupAddress{.addressGroup = 308924855250818400825520085660849173270, .address = "10.10.40.4"}: -1
AddressGroupAddress{.addressGroup = 318160501126163702843576787236219041122, .address = "10.10.41.1"}: -1
AddressGroupAddress{.addressGroup = 318705169350241701572696863870947720484, .address = "10.10.39.7"}: -1
AddressGroupAddress{.addressGroup = 331638862245046014393250665630441823458, .address = "10.10.39.6"}: -1
AddressGroupDescr:
AddressGroupDescr{.name = "13128de5-d4fd-50ef-a6fa-e02470f75bdd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-410]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-410")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "1a7755d5-7e34-5ff0-a562-8906a55d9a69", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-415]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-415")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "47614eb2-bc50-546e-8fa5-9c92ad3d0080", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-413]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-413")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "4890bcb7-78c1-5b3c-96fb-47f0be2dcbc2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-399]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-399")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "4d17717e-f78b-57c9-b591-db530602f7ed", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-386]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-386")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "55203360-b26b-52d5-a9ab-627fd76129a0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-398]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-398")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "5609f60a-fa26-59a3-8e17-03ce36bc329e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-408]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-408")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "59e40b97-a875-5501-8367-2dc471a75d54", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-416]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-416")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "66221c2b-b200-541f-aa2b-c0908d5c2f69", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-407]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-407")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "7173f1b8-4f9d-5a94-bc8b-d772a28d488e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-392]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-392")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "777ca61b-322d-5bba-a70b-b7e1623f3af8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-385]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-385")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "7909e946-8a01-5551-a3d0-54852e359918", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-389]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-389")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "7db41759-a1f5-5138-9e53-f36553ac9a94", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-388]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-388")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "7e2849cb-ee50-53eb-b072-4e0f8330ae0d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-406]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-406")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "8d1b26c5-6d78-5c28-a228-d46a11bf5ab4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-409]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-409")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "8d3e9ee6-9489-5667-bb55-4c45886f5760", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-393]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-393")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "93fddede-665f-54fa-b60f-1b2172a46ee6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-401]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-401")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "969bbeb2-7831-5c43-87b1-2434370d9431", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-414]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-414")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "9c906fbd-123d-501a-80d1-7bfd6a0f13ef", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-400]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-400")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "a46499d7-8e51-52f2-8e00-7670cfe88b35", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-395]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-395")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "a8c0f886-7ea0-510f-9c2b-f5140e1ab374", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-403]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-403")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "c4701c1d-34bb-5757-bf28-dc70456f291a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-387]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-387")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "c4d77be9-7f17-5a12-ac01-ed5650600fc6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-405]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-405")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "cf5e71e1-5bbf-5fb5-8363-120ee0eb7cfb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-390]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-390")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "d0b20cf7-ab9e-5aac-a853-9153f16165fa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-402]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-402")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "d7a17941-c2ea-575a-8d95-0a951dfb4ae4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-394]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-394")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "daf26d8b-7aa9-5e29-9827-f97fd4af01b1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-412]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-412")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "dbe3ea42-3c0d-5b74-91c2-14501cdea12b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-391]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-391")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "e868c34f-55bb-5f69-9952-a0c438f47316", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-404]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-404")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "ef5b7bce-c886-57d5-aaee-fff719dcb562", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-411]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-411")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "efc46206-46a5-5a11-895f-6d443d347d24", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-397]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-397")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "f97f5251-3bc6-5335-b68e-ba0aaf265ce2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-396]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-396")], .matchExpressions = []}}}}: -1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 25351671292287421659159263303895047133, .node = "testNode-40"}: -1
AddressGroupSpan{.addressGroup = 35179552136046811557645183480294644329, .node = "testNode-41"}: -1
AddressGroupSpan{.addressGroup = 94880436684849212255742222845112811648, .node = "testNode-41"}: -1
AddressGroupSpan{.addressGroup = 96455934073274139366776967175508708290, .node = "testNode-39"}: -1
AddressGroupSpan{.addressGroup = 102472280474829765366675501330267830253, .node = "testNode-38"}: -1
AddressGroupSpan{.addressGroup = 113151575205202429271836850776786938272, .node = "testNode-39"}: -1
AddressGroupSpan{.addressGroup = 114365328651691316916108387575310070430, .node = "testNode-40"}: -1
AddressGroupSpan{.addressGroup = 119485370430696960609980679788983442772, .node = "testNode-41"}: -1
AddressGroupSpan{.addressGroup = 135758365032620222546791899774945341289, .node = "testNode-40"}: -1
AddressGroupSpan{.addressGroup = 150804780325762926378875021364202129550, .node = "testNode-39"}: -1
AddressGroupSpan{.addressGroup = 158825345343546986895349479192097929976, .node = "testNode-38"}: -1
AddressGroupSpan{.addressGroup = 160888049551821204096036415576342894872, .node = "testNode-38"}: -1
AddressGroupSpan{.addressGroup = 167088586504501757807210819165564476052, .node = "testNode-38"}: -1
AddressGroupSpan{.addressGroup = 167691916116213392765788931806582582797, .node = "testNode-40"}: -1
AddressGroupSpan{.addressGroup = 187562125794245904875109112557074340532, .node = "testNode-40"}: -1
AddressGroupSpan{.addressGroup = 187746292700066864965007536522164918112, .node = "testNode-39"}: -1
AddressGroupSpan{.addressGroup = 196714686800858753802624815818181209830, .node = "testNode-40"}: -1
AddressGroupSpan{.addressGroup = 200192873178445774821574365696760845361, .node = "testNode-41"}: -1
AddressGroupSpan{.addressGroup = 208109524417309464812876171939933000687, .node = "testNode-39"}: -1
AddressGroupSpan{.addressGroup = 218515741281349171285900608511266032437, .node = "testNode-39"}: -1
AddressGroupSpan{.addressGroup = 224312264982048958246471268310097507188, .node = "testNode-40"}: -1
AddressGroupSpan{.addressGroup = 261110794643404729047482385275926030618, .node = "testNode-38"}: -1
AddressGroupSpan{.addressGroup = 261647544234304440906914305731756822470, .node = "testNode-40"}: -1
AddressGroupSpan{.addressGroup = 275640580799196130534836568800585547003, .node = "testNode-38"}: -1
AddressGroupSpan{.addressGroup = 277403914975466460882108524976094143994, .node = "testNode-40"}: -1
AddressGroupSpan{.addressGroup = 286622438269697018265238984085970045668, .node = "testNode-39"}: -1
AddressGroupSpan{.addressGroup = 291030460754200400425402328634757153201, .node = "testNode-41"}: -1
AddressGroupSpan{.addressGroup = 292284333795275210980546581304906260779, .node = "testNode-39"}: -1
AddressGroupSpan{.addressGroup = 308924855250818400825520085660849173270, .node = "testNode-40"}: -1
AddressGroupSpan{.addressGroup = 318160501126163702843576787236219041122, .node = "testNode-41"}: -1
AddressGroupSpan{.addressGroup = 318705169350241701572696863870947720484, .node = "testNode-39"}: -1
AddressGroupSpan{.addressGroup = 331638862245046014393250665630441823458, .node = "testNode-39"}: -1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "13128de5-d4fd-50ef-a6fa-e02470f75bdd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-410]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-410")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "1a7755d5-7e34-5ff0-a562-8906a55d9a69", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-415]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-415")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "47614eb2-bc50-546e-8fa5-9c92ad3d0080", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-413]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-413")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "4890bcb7-78c1-5b3c-96fb-47f0be2dcbc2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-399]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-399")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "4d17717e-f78b-57c9-b591-db530602f7ed", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-386]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-386")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "55203360-b26b-52d5-a9ab-627fd76129a0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-398]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-398")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "5609f60a-fa26-59a3-8e17-03ce36bc329e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-408]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-408")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "66221c2b-b200-541f-aa2b-c0908d5c2f69", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-407]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-407")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "7173f1b8-4f9d-5a94-bc8b-d772a28d488e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-392]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-392")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "777ca61b-322d-5bba-a70b-b7e1623f3af8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-385]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-385")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "7909e946-8a01-5551-a3d0-54852e359918", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-389]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-389")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "7db41759-a1f5-5138-9e53-f36553ac9a94", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-388]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-388")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "7e2849cb-ee50-53eb-b072-4e0f8330ae0d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-406]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-406")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "8d1b26c5-6d78-5c28-a228-d46a11bf5ab4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-409]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-409")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "8d3e9ee6-9489-5667-bb55-4c45886f5760", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-393]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-393")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "93fddede-665f-54fa-b60f-1b2172a46ee6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-401]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-401")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "969bbeb2-7831-5c43-87b1-2434370d9431", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-414]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-414")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "9c906fbd-123d-501a-80d1-7bfd6a0f13ef", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-400]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-400")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "a46499d7-8e51-52f2-8e00-7670cfe88b35", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-395]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-395")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "a8c0f886-7ea0-510f-9c2b-f5140e1ab374", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-403]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-403")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "c4701c1d-34bb-5757-bf28-dc70456f291a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-387]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-387")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "c4d77be9-7f17-5a12-ac01-ed5650600fc6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-405]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-405")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "cf5e71e1-5bbf-5fb5-8363-120ee0eb7cfb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-390]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-390")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "d0b20cf7-ab9e-5aac-a853-9153f16165fa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-402]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-402")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "d2f69a2e-1a7f-5e6c-a0f0-86875d71ab16", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-384]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-384")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "d7a17941-c2ea-575a-8d95-0a951dfb4ae4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-394]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-394")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "daf26d8b-7aa9-5e29-9827-f97fd4af01b1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-412]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-412")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "dbe3ea42-3c0d-5b74-91c2-14501cdea12b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-391]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-391")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "e868c34f-55bb-5f69-9952-a0c438f47316", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-404]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-404")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "ef5b7bce-c886-57d5-aaee-fff719dcb562", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-411]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-411")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "efc46206-46a5-5a11-895f-6d443d347d24", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-397]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-397")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "f97f5251-3bc6-5335-b68e-ba0aaf265ce2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-396]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-396")], .matchExpressions = []}}}}: -1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 25351671292287421659159263303895047133, .node = "testNode-41", .pods = [k8spolicy.PodReference{.name = "testPod-410", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 35179552136046811557645183480294644329, .node = "testNode-41", .pods = [k8spolicy.PodReference{.name = "testPod-415", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 94880436684849212255742222845112811648, .node = "testNode-41", .pods = [k8spolicy.PodReference{.name = "testPod-413", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 96455934073274139366776967175508708290, .node = "testNode-39", .pods = [k8spolicy.PodReference{.name = "testPod-399", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 102472280474829765366675501330267830253, .node = "testNode-38", .pods = [k8spolicy.PodReference{.name = "testPod-386", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 113151575205202429271836850776786938272, .node = "testNode-39", .pods = [k8spolicy.PodReference{.name = "testPod-398", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 114365328651691316916108387575310070430, .node = "testNode-40", .pods = [k8spolicy.PodReference{.name = "testPod-408", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 135758365032620222546791899774945341289, .node = "testNode-40", .pods = [k8spolicy.PodReference{.name = "testPod-407", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 150804780325762926378875021364202129550, .node = "testNode-39", .pods = [k8spolicy.PodReference{.name = "testPod-392", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 158825345343546986895349479192097929976, .node = "testNode-38", .pods = [k8spolicy.PodReference{.name = "testPod-385", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 160888049551821204096036415576342894872, .node = "testNode-38", .pods = [k8spolicy.PodReference{.name = "testPod-389", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 167088586504501757807210819165564476052, .node = "testNode-38", .pods = [k8spolicy.PodReference{.name = "testPod-388", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 167691916116213392765788931806582582797, .node = "testNode-40", .pods = [k8spolicy.PodReference{.name = "testPod-406", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 187562125794245904875109112557074340532, .node = "testNode-40", .pods = [k8spolicy.PodReference{.name = "testPod-409", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 187746292700066864965007536522164918112, .node = "testNode-39", .pods = [k8spolicy.PodReference{.name = "testPod-393", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 196714686800858753802624815818181209830, .node = "testNode-40", .pods = [k8spolicy.PodReference{.name = "testPod-401", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 200192873178445774821574365696760845361, .node = "testNode-41", .pods = [k8spolicy.PodReference{.name = "testPod-414", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 208109524417309464812876171939933000687, .node = "testNode-40", .pods = [k8spolicy.PodReference{.name = "testPod-400", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 218515741281349171285900608511266032437, .node = "testNode-39", .pods = [k8spolicy.PodReference{.name = "testPod-395", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 224312264982048958246471268310097507188, .node = "testNode-40", .pods = [k8spolicy.PodReference{.name = "testPod-403", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 261110794643404729047482385275926030618, .node = "testNode-38", .pods = [k8spolicy.PodReference{.name = "testPod-387", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 261647544234304440906914305731756822470, .node = "testNode-40", .pods = [k8spolicy.PodReference{.name = "testPod-405", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 275640580799196130534836568800585547003, .node = "testNode-39", .pods = [k8spolicy.PodReference{.name = "testPod-390", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 277403914975466460882108524976094143994, .node = "testNode-40", .pods = [k8spolicy.PodReference{.name = "testPod-402", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 280418311285806928660563498291319384854, .node = "testNode-38", .pods = [k8spolicy.PodReference{.name = "testPod-384", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 286622438269697018265238984085970045668, .node = "testNode-39", .pods = [k8spolicy.PodReference{.name = "testPod-394", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 291030460754200400425402328634757153201, .node = "testNode-41", .pods = [k8spolicy.PodReference{.name = "testPod-412", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 292284333795275210980546581304906260779, .node = "testNode-39", .pods = [k8spolicy.PodReference{.name = "testPod-391", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 308924855250818400825520085660849173270, .node = "testNode-40", .pods = [k8spolicy.PodReference{.name = "testPod-404", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 318160501126163702843576787236219041122, .node = "testNode-41", .pods = [k8spolicy.PodReference{.name = "testPod-411", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 318705169350241701572696863870947720484, .node = "testNode-39", .pods = [k8spolicy.PodReference{.name = "testPod-397", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 331638862245046014393250665630441823458, .node = "testNode-39", .pods = [k8spolicy.PodReference{.name = "testPod-396", .namespace = "testNamespace"}]}: -1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 25351671292287421659159263303895047133, .span = "testNode-41"}: -1
AppliedToGroupSpan{.appliedToGroup = 35179552136046811557645183480294644329, .span = "testNode-41"}: -1
AppliedToGroupSpan{.appliedToGroup = 94880436684849212255742222845112811648, .span = "testNode-41"}: -1
AppliedToGroupSpan{.appliedToGroup = 96455934073274139366776967175508708290, .span = "testNode-39"}: -1
AppliedToGroupSpan{.appliedToGroup = 102472280474829765366675501330267830253, .span = "testNode-38"}: -1
AppliedToGroupSpan{.appliedToGroup = 113151575205202429271836850776786938272, .span = "testNode-39"}: -1
AppliedToGroupSpan{.appliedToGroup = 114365328651691316916108387575310070430, .span = "testNode-40"}: -1
AppliedToGroupSpan{.appliedToGroup = 135758365032620222546791899774945341289, .span = "testNode-40"}: -1
AppliedToGroupSpan{.appliedToGroup = 150804780325762926378875021364202129550, .span = "testNode-39"}: -1
AppliedToGroupSpan{.appliedToGroup = 158825345343546986895349479192097929976, .span = "testNode-38"}: -1
AppliedToGroupSpan{.appliedToGroup = 160888049551821204096036415576342894872, .span = "testNode-38"}: -1
AppliedToGroupSpan{.appliedToGroup = 167088586504501757807210819165564476052, .span = "testNode-38"}: -1
AppliedToGroupSpan{.appliedToGroup = 167691916116213392765788931806582582797, .span = "testNode-40"}: -1
AppliedToGroupSpan{.appliedToGroup = 187562125794245904875109112557074340532, .span = "testNode-40"}: -1
AppliedToGroupSpan{.appliedToGroup = 187746292700066864965007536522164918112, .span = "testNode-39"}: -1
AppliedToGroupSpan{.appliedToGroup = 196714686800858753802624815818181209830, .span = "testNode-40"}: -1
AppliedToGroupSpan{.appliedToGroup = 200192873178445774821574365696760845361, .span = "testNode-41"}: -1
AppliedToGroupSpan{.appliedToGroup = 208109524417309464812876171939933000687, .span = "testNode-40"}: -1
AppliedToGroupSpan{.appliedToGroup = 218515741281349171285900608511266032437, .span = "testNode-39"}: -1
AppliedToGroupSpan{.appliedToGroup = 224312264982048958246471268310097507188, .span = "testNode-40"}: -1
AppliedToGroupSpan{.appliedToGroup = 261110794643404729047482385275926030618, .span = "testNode-38"}: -1
AppliedToGroupSpan{.appliedToGroup = 261647544234304440906914305731756822470, .span = "testNode-40"}: -1
AppliedToGroupSpan{.appliedToGroup = 275640580799196130534836568800585547003, .span = "testNode-39"}: -1
AppliedToGroupSpan{.appliedToGroup = 277403914975466460882108524976094143994, .span = "testNode-40"}: -1
AppliedToGroupSpan{.appliedToGroup = 280418311285806928660563498291319384854, .span = "testNode-38"}: -1
AppliedToGroupSpan{.appliedToGroup = 286622438269697018265238984085970045668, .span = "testNode-39"}: -1
AppliedToGroupSpan{.appliedToGroup = 291030460754200400425402328634757153201, .span = "testNode-41"}: -1
AppliedToGroupSpan{.appliedToGroup = 292284333795275210980546581304906260779, .span = "testNode-39"}: -1
AppliedToGroupSpan{.appliedToGroup = 308924855250818400825520085660849173270, .span = "testNode-40"}: -1
AppliedToGroupSpan{.appliedToGroup = 318160501126163702843576787236219041122, .span = "testNode-41"}: -1
AppliedToGroupSpan{.appliedToGroup = 318705169350241701572696863870947720484, .span = "testNode-39"}: -1
AppliedToGroupSpan{.appliedToGroup = 331638862245046014393250665630441823458, .span = "testNode-39"}: -1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-384"}, .name = "testNP-384", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [158825345343546986895349479192097929976], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [280418311285806928660563498291319384854]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-385"}, .name = "testNP-385", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [102472280474829765366675501330267830253], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [158825345343546986895349479192097929976]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-386"}, .name = "testNP-386", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [261110794643404729047482385275926030618], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [102472280474829765366675501330267830253]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-387"}, .name = "testNP-387", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [167088586504501757807210819165564476052], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [261110794643404729047482385275926030618]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-388"}, .name = "testNP-388", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [160888049551821204096036415576342894872], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [167088586504501757807210819165564476052]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-389"}, .name = "testNP-389", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [275640580799196130534836568800585547003], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [160888049551821204096036415576342894872]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-390"}, .name = "testNP-390", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [292284333795275210980546581304906260779], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [275640580799196130534836568800585547003]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-391"}, .name = "testNP-391", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [150804780325762926378875021364202129550], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [292284333795275210980546581304906260779]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-392"}, .name = "testNP-392", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [187746292700066864965007536522164918112], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [150804780325762926378875021364202129550]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-393"}, .name = "testNP-393", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [286622438269697018265238984085970045668], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [187746292700066864965007536522164918112]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-394"}, .name = "testNP-394", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [218515741281349171285900608511266032437], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [286622438269697018265238984085970045668]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-395"}, .name = "testNP-395", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [331638862245046014393250665630441823458], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [218515741281349171285900608511266032437]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-396"}, .name = "testNP-396", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [318705169350241701572696863870947720484], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [331638862245046014393250665630441823458]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-397"}, .name = "testNP-397", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [113151575205202429271836850776786938272], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [318705169350241701572696863870947720484]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-398"}, .name = "testNP-398", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [96455934073274139366776967175508708290], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [113151575205202429271836850776786938272]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-399"}, .name = "testNP-399", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [208109524417309464812876171939933000687], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [96455934073274139366776967175508708290]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-400"}, .name = "testNP-400", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [196714686800858753802624815818181209830], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [208109524417309464812876171939933000687]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-401"}, .name = "testNP-401", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [277403914975466460882108524976094143994], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [196714686800858753802624815818181209830]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-402"}, .name = "testNP-402", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [224312264982048958246471268310097507188], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [277403914975466460882108524976094143994]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-403"}, .name = "testNP-403", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [308924855250818400825520085660849173270], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [224312264982048958246471268310097507188]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-404"}, .name = "testNP-404", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [261647544234304440906914305731756822470], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [308924855250818400825520085660849173270]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-405"}, .name = "testNP-405", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [167691916116213392765788931806582582797], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [261647544234304440906914305731756822470]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-406"}, .name = "testNP-406", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [135758365032620222546791899774945341289], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [167691916116213392765788931806582582797]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-407"}, .name = "testNP-407", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [114365328651691316916108387575310070430], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [135758365032620222546791899774945341289]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-408"}, .name = "testNP-408", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [187562125794245904875109112557074340532], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [114365328651691316916108387575310070430]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-409"}, .name = "testNP-409", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [25351671292287421659159263303895047133], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [187562125794245904875109112557074340532]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-410"}, .name = "testNP-410", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [318160501126163702843576787236219041122], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [25351671292287421659159263303895047133]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-411"}, .name = "testNP-411", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [291030460754200400425402328634757153201], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [318160501126163702843576787236219041122]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-412"}, .name = "testNP-412", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [94880436684849212255742222845112811648], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [291030460754200400425402328634757153201]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-413"}, .name = "testNP-413", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [200192873178445774821574365696760845361], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [94880436684849212255742222845112811648]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-414"}, .name = "testNP-414", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [35179552136046811557645183480294644329], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [200192873178445774821574365696760845361]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-415"}, .name = "testNP-415", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [119485370430696960609980679788983442772], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [35179552136046811557645183480294644329]}: -1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-384", .policy = k8spolicy.UID{.uid = "testNP-384"}, .node = "testNode-38"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-385", .policy = k8spolicy.UID{.uid = "testNP-385"}, .node = "testNode-38"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-386", .policy = k8spolicy.UID{.uid = "testNP-386"}, .node = "testNode-38"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-387", .policy = k8spolicy.UID{.uid = "testNP-387"}, .node = "testNode-38"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-388", .policy = k8spolicy.UID{.uid = "testNP-388"}, .node = "testNode-38"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-389", .policy = k8spolicy.UID{.uid = "testNP-389"}, .node = "testNode-38"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-390", .policy = k8spolicy.UID{.uid = "testNP-390"}, .node = "testNode-39"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-391", .policy = k8spolicy.UID{.uid = "testNP-391"}, .node = "testNode-39"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-392", .policy = k8spolicy.UID{.uid = "testNP-392"}, .node = "testNode-39"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-393", .policy = k8spolicy.UID{.uid = "testNP-393"}, .node = "testNode-39"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-394", .policy = k8spolicy.UID{.uid = "testNP-394"}, .node = "testNode-39"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-395", .policy = k8spolicy.UID{.uid = "testNP-395"}, .node = "testNode-39"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-396", .policy = k8spolicy.UID{.uid = "testNP-396"}, .node = "testNode-39"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-397", .policy = k8spolicy.UID{.uid = "testNP-397"}, .node = "testNode-39"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-398", .policy = k8spolicy.UID{.uid = "testNP-398"}, .node = "testNode-39"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-399", .policy = k8spolicy.UID{.uid = "testNP-399"}, .node = "testNode-39"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-400", .policy = k8spolicy.UID{.uid = "testNP-400"}, .node = "testNode-40"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-401", .policy = k8spolicy.UID{.uid = "testNP-401"}, .node = "testNode-40"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-402", .policy = k8spolicy.UID{.uid = "testNP-402"}, .node = "testNode-40"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-403", .policy = k8spolicy.UID{.uid = "testNP-403"}, .node = "testNode-40"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-404", .policy = k8spolicy.UID{.uid = "testNP-404"}, .node = "testNode-40"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-405", .policy = k8spolicy.UID{.uid = "testNP-405"}, .node = "testNode-40"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-406", .policy = k8spolicy.UID{.uid = "testNP-406"}, .node = "testNode-40"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-407", .policy = k8spolicy.UID{.uid = "testNP-407"}, .node = "testNode-40"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-408", .policy = k8spolicy.UID{.uid = "testNP-408"}, .node = "testNode-40"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-409", .policy = k8spolicy.UID{.uid = "testNP-409"}, .node = "testNode-40"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-410", .policy = k8spolicy.UID{.uid = "testNP-410"}, .node = "testNode-41"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-411", .policy = k8spolicy.UID{.uid = "testNP-411"}, .node = "testNode-41"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-412", .policy = k8spolicy.UID{.uid = "testNP-412"}, .node = "testNode-41"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-413", .policy = k8spolicy.UID{.uid = "testNP-413"}, .node = "testNode-41"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-414", .policy = k8spolicy.UID{.uid = "testNP-414"}, .node = "testNode-41"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-415", .policy = k8spolicy.UID{.uid = "testNP-415"}, .node = "testNode-41"}: -1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 8392899131139043348355500919486284324, .address = "10.10.41.8"}: -1
AddressGroupAddress{.addressGroup = 31814857325643986342771264956990453613, .address = "10.10.42.5"}: -1
AddressGroupAddress{.addressGroup = 40521318839038397523258580630990502412, .address = "10.10.42.9"}: -1
AddressGroupAddress{.addressGroup = 44173417569196170139233651473572539223, .address = "10.10.43.0"}: -1
AddressGroupAddress{.addressGroup = 45349213787551863913945602237432171161, .address = "10.10.44.4"}: -1
AddressGroupAddress{.addressGroup = 51141368371469705363359893984678817184, .address = "10.10.42.2"}: -1
AddressGroupAddress{.addressGroup = 61728385544145040418177698843719512097, .address = "10.10.44.3"}: -1
AddressGroupAddress{.addressGroup = 68655119736190326377350002205809670214, .address = "10.10.43.1"}: -1
AddressGroupAddress{.addressGroup = 89966599569391683095747004305785034790, .address = "10.10.41.9"}: -1
AddressGroupAddress{.addressGroup = 93558576737193692548196584403547756583, .address = "10.10.43.4"}: -1
AddressGroupAddress{.addressGroup = 98233426316474802142212382121144761325, .address = "10.10.43.8"}: -1
AddressGroupAddress{.addressGroup = 100675962110545384859717753829972156072, .address = "10.10.43.9"}: -1
AddressGroupAddress{.addressGroup = 104470958124797069264185854966208394446, .address = "10.10.42.4"}: -1
AddressGroupAddress{.addressGroup = 109766766913591882001478462461559678736, .address = "10.10.43.7"}: -1
AddressGroupAddress{.addressGroup = 110848293340619485159525724483314232002, .address = "10.10.41.7"}: -1
AddressGroupAddress{.addressGroup = 117827446475839878486084874479850248172, .address = "10.10.44.8"}: -1
AddressGroupAddress{.addressGroup = 118458407959584270580530677874245536867, .address = "10.10.43.5"}: -1
AddressGroupAddress{.addressGroup = 122056988029455207163504540648586940143, .address = "10.10.42.7"}: -1
AddressGroupAddress{.addressGroup = 133259005093568862604505780749227270994, .address = "10.10.44.5"}: -1
AddressGroupAddress{.addressGroup = 141567980840173912161294641659076747449, .address = "10.10.42.1"}: -1
AddressGroupAddress{.addressGroup = 153230030309926901947333102261066015619, .address = "10.10.44.7"}: -1
AddressGroupAddress{.addressGroup = 206285954147957614071135240477338500187, .address = "10.10.44.2"}: -1
AddressGroupAddress{.addressGroup = 208200981325991774672117057795451966950, .address = "10.10.44.1"}: -1
AddressGroupAddress{.addressGroup = 211620089346190531603012196332160099661, .address = "10.10.43.2"}: -1
AddressGroupAddress{.addressGroup = 217256471936766674945257828889501121014, .address = "10.10.42.0"}: -1
AddressGroupAddress{.addressGroup = 229916692294792363993166726025910188662, .address = "10.10.42.6"}: -1
AddressGroupAddress{.addressGroup = 246945657588344890085307602799380473640, .address = "10.10.44.6"}: -1
AddressGroupAddress{.addressGroup = 250135802605338744757556750747350467130, .address = "10.10.42.3"}: -1
AddressGroupAddress{.addressGroup = 263121567407985637932272979133791258611, .address = "10.10.43.3"}: -1
AddressGroupAddress{.addressGroup = 269349424788233111048069344507915423385, .address = "10.10.42.8"}: -1
AddressGroupAddress{.addressGroup = 298859621386881247921788046968805647912, .address = "10.10.44.0"}: -1
AddressGroupAddress{.addressGroup = 330183365161104381859084212366870728800, .address = "10.10.43.6"}: -1
AddressGroupDescr:
AddressGroupDescr{.name = "065069e0-18a7-5e1c-bb52-4c47bb1e0224", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-418]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-418")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "17ef5192-63e1-5f5b-8637-2d9b9bf7776d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-425]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-425")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "1e7c1f44-296c-5267-b707-c44fb5683a0c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-429]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-429")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "213b7da2-b9b8-5cde-b512-061be115ab57", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-430]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-430")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "221df0dd-6ea1-5be9-89af-2e070cf98a99", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-444]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-444")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "26797822-5d38-58a4-a2b6-555eb800ada0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-422]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-422")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "2e707461-922b-5a63-82d0-f4f9b42e3021", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-443]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-443")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "33a67ebe-734b-5fbb-a5b1-5be41be77846", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-431]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-431")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "43aeefd2-d0c2-5e46-bb9c-d9c1b5fd1826", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-419]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-419")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "4662b9f8-93d5-52ec-8a19-721399689827", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-434]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-434")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "49e711d9-b62c-55fb-8332-a9273c323bed", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-438]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-438")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "4bbd7c29-ac1e-561a-9b1c-46e0c5369ea8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-439]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-439")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "4e985fe9-87b7-57db-80c6-bc7b25d7f4ce", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-424]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-424")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "52944f71-c52e-580d-8a02-b7f52543a710", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-437]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-437")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "53649ad0-6e1f-52f9-b9b7-7ba93ce7aac2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-417]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-417")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "58a4bda1-6394-500a-8801-381bb59057ec", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-448]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-448")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "591e426e-f1d1-5dba-83b2-e15f33e08c63", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-435]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-435")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "5bd35221-0c26-5317-a9f1-018cfcd10eef", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-427]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-427")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "6440c036-3101-53a7-9611-be6ab29c2352", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-445]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-445")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "6a810058-4116-5795-b850-070e8e3120b9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-421]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-421")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "734707c6-ad64-54f1-8e05-a8ca7ec42383", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-447]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-447")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "9b313ac8-6069-5bfd-9b92-9827587ffc5b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-442]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-442")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "9ca20ce9-8c2f-5a2f-9b15-03f4615ad5e6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-441]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-441")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "9f348bf3-e9d4-546b-9f59-d69f3a63254d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-432]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-432")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "a3721311-dfe4-5333-bfc6-946712f039f6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-420]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-420")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "acf85820-253c-5368-97bd-d6486cf47a76", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-426]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-426")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "b9c800ef-c4c5-5a63-ae54-0959c9712728", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-446]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-446")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "bc2e673a-be2f-5194-8a42-939931f6023a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-423]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-423")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "c5f35edd-9402-5282-86f6-1e9ed9e8c7f3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-433]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-433")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "caa2cff0-f280-5241-a247-831efc8c4e99", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-428]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-428")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "e0d644f7-6156-5c67-9981-08d21e1fe628", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-440]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-440")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "f86700c5-474e-5703-93e6-179d25b25060", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-436]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-436")], .matchExpressions = []}}}}: -1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 8392899131139043348355500919486284324, .node = "testNode-41"}: -1
AddressGroupSpan{.addressGroup = 31814857325643986342771264956990453613, .node = "testNode-42"}: -1
AddressGroupSpan{.addressGroup = 40521318839038397523258580630990502412, .node = "testNode-42"}: -1
AddressGroupSpan{.addressGroup = 44173417569196170139233651473572539223, .node = "testNode-42"}: -1
AddressGroupSpan{.addressGroup = 45349213787551863913945602237432171161, .node = "testNode-44"}: -1
AddressGroupSpan{.addressGroup = 51141368371469705363359893984678817184, .node = "testNode-42"}: -1
AddressGroupSpan{.addressGroup = 61728385544145040418177698843719512097, .node = "testNode-44"}: -1
AddressGroupSpan{.addressGroup = 68655119736190326377350002205809670214, .node = "testNode-43"}: -1
AddressGroupSpan{.addressGroup = 89966599569391683095747004305785034790, .node = "testNode-41"}: -1
AddressGroupSpan{.addressGroup = 93558576737193692548196584403547756583, .node = "testNode-43"}: -1
AddressGroupSpan{.addressGroup = 98233426316474802142212382121144761325, .node = "testNode-43"}: -1
AddressGroupSpan{.addressGroup = 100675962110545384859717753829972156072, .node = "testNode-43"}: -1
AddressGroupSpan{.addressGroup = 104470958124797069264185854966208394446, .node = "testNode-42"}: -1
AddressGroupSpan{.addressGroup = 109766766913591882001478462461559678736, .node = "testNode-43"}: -1
AddressGroupSpan{.addressGroup = 110848293340619485159525724483314232002, .node = "testNode-41"}: -1
AddressGroupSpan{.addressGroup = 117827446475839878486084874479850248172, .node = "testNode-44"}: -1
AddressGroupSpan{.addressGroup = 118458407959584270580530677874245536867, .node = "testNode-43"}: -1
AddressGroupSpan{.addressGroup = 122056988029455207163504540648586940143, .node = "testNode-42"}: -1
AddressGroupSpan{.addressGroup = 133259005093568862604505780749227270994, .node = "testNode-44"}: -1
AddressGroupSpan{.addressGroup = 141567980840173912161294641659076747449, .node = "testNode-42"}: -1
AddressGroupSpan{.addressGroup = 153230030309926901947333102261066015619, .node = "testNode-44"}: -1
AddressGroupSpan{.addressGroup = 206285954147957614071135240477338500187, .node = "testNode-44"}: -1
AddressGroupSpan{.addressGroup = 208200981325991774672117057795451966950, .node = "testNode-44"}: -1
AddressGroupSpan{.addressGroup = 211620089346190531603012196332160099661, .node = "testNode-43"}: -1
AddressGroupSpan{.addressGroup = 217256471936766674945257828889501121014, .node = "testNode-41"}: -1
AddressGroupSpan{.addressGroup = 229916692294792363993166726025910188662, .node = "testNode-42"}: -1
AddressGroupSpan{.addressGroup = 246945657588344890085307602799380473640, .node = "testNode-44"}: -1
AddressGroupSpan{.addressGroup = 250135802605338744757556750747350467130, .node = "testNode-42"}: -1
AddressGroupSpan{.addressGroup = 263121567407985637932272979133791258611, .node = "testNode-43"}: -1
AddressGroupSpan{.addressGroup = 269349424788233111048069344507915423385, .node = "testNode-42"}: -1
AddressGroupSpan{.addressGroup = 298859621386881247921788046968805647912, .node = "testNode-43"}: -1
AddressGroupSpan{.addressGroup = 330183365161104381859084212366870728800, .node = "testNode-43"}: -1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "065069e0-18a7-5e1c-bb52-4c47bb1e0224", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-418]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-418")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "17ef5192-63e1-5f5b-8637-2d9b9bf7776d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-425]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-425")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "1e7c1f44-296c-5267-b707-c44fb5683a0c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-429]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-429")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "213b7da2-b9b8-5cde-b512-061be115ab57", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-430]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-430")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "221df0dd-6ea1-5be9-89af-2e070cf98a99", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-444]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-444")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "26797822-5d38-58a4-a2b6-555eb800ada0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-422]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-422")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "2e707461-922b-5a63-82d0-f4f9b42e3021", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-443]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-443")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "33a67ebe-734b-5fbb-a5b1-5be41be77846", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-431]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-431")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "43aeefd2-d0c2-5e46-bb9c-d9c1b5fd1826", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-419]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-419")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "4662b9f8-93d5-52ec-8a19-721399689827", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-434]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-434")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "49e711d9-b62c-55fb-8332-a9273c323bed", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-438]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-438")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "4bbd7c29-ac1e-561a-9b1c-46e0c5369ea8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-439]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-439")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "4e985fe9-87b7-57db-80c6-bc7b25d7f4ce", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-424]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-424")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "52944f71-c52e-580d-8a02-b7f52543a710", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-437]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-437")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "53649ad0-6e1f-52f9-b9b7-7ba93ce7aac2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-417]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-417")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "591e426e-f1d1-5dba-83b2-e15f33e08c63", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-435]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-435")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "59e40b97-a875-5501-8367-2dc471a75d54", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-416]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-416")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "5bd35221-0c26-5317-a9f1-018cfcd10eef", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-427]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-427")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "6440c036-3101-53a7-9611-be6ab29c2352", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-445]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-445")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "6a810058-4116-5795-b850-070e8e3120b9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-421]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-421")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "734707c6-ad64-54f1-8e05-a8ca7ec42383", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-447]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-447")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "9b313ac8-6069-5bfd-9b92-9827587ffc5b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-442]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-442")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "9ca20ce9-8c2f-5a2f-9b15-03f4615ad5e6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-441]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-441")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "9f348bf3-e9d4-546b-9f59-d69f3a63254d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-432]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-432")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "a3721311-dfe4-5333-bfc6-946712f039f6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-420]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-420")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "acf85820-253c-5368-97bd-d6486cf47a76", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-426]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-426")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "b9c800ef-c4c5-5a63-ae54-0959c9712728", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-446]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-446")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "bc2e673a-be2f-5194-8a42-939931f6023a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-423]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-423")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "c5f35edd-9402-5282-86f6-1e9ed9e8c7f3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-433]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-433")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "caa2cff0-f280-5241-a247-831efc8c4e99", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-428]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-428")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "e0d644f7-6156-5c67-9981-08d21e1fe628", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-440]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-440")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "f86700c5-474e-5703-93e6-179d25b25060", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-436]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-436")], .matchExpressions = []}}}}: -1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 8392899131139043348355500919486284324, .node = "testNode-41", .pods = [k8spolicy.PodReference{.name = "testPod-418", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 31814857325643986342771264956990453613, .node = "testNode-42", .pods = [k8spolicy.PodReference{.name = "testPod-425", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 40521318839038397523258580630990502412, .node = "testNode-42", .pods = [k8spolicy.PodReference{.name = "testPod-429", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 44173417569196170139233651473572539223, .node = "testNode-43", .pods = [k8spolicy.PodReference{.name = "testPod-430", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 45349213787551863913945602237432171161, .node = "testNode-44", .pods = [k8spolicy.PodReference{.name = "testPod-444", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 51141368371469705363359893984678817184, .node = "testNode-42", .pods = [k8spolicy.PodReference{.name = "testPod-422", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 61728385544145040418177698843719512097, .node = "testNode-44", .pods = [k8spolicy.PodReference{.name = "testPod-443", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 68655119736190326377350002205809670214, .node = "testNode-43", .pods = [k8spolicy.PodReference{.name = "testPod-431", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 89966599569391683095747004305785034790, .node = "testNode-41", .pods = [k8spolicy.PodReference{.name = "testPod-419", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 93558576737193692548196584403547756583, .node = "testNode-43", .pods = [k8spolicy.PodReference{.name = "testPod-434", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 98233426316474802142212382121144761325, .node = "testNode-43", .pods = [k8spolicy.PodReference{.name = "testPod-438", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 100675962110545384859717753829972156072, .node = "testNode-43", .pods = [k8spolicy.PodReference{.name = "testPod-439", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 104470958124797069264185854966208394446, .node = "testNode-42", .pods = [k8spolicy.PodReference{.name = "testPod-424", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 109766766913591882001478462461559678736, .node = "testNode-43", .pods = [k8spolicy.PodReference{.name = "testPod-437", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 110848293340619485159525724483314232002, .node = "testNode-41", .pods = [k8spolicy.PodReference{.name = "testPod-417", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 118458407959584270580530677874245536867, .node = "testNode-43", .pods = [k8spolicy.PodReference{.name = "testPod-435", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 119485370430696960609980679788983442772, .node = "testNode-41", .pods = [k8spolicy.PodReference{.name = "testPod-416", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 122056988029455207163504540648586940143, .node = "testNode-42", .pods = [k8spolicy.PodReference{.name = "testPod-427", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 133259005093568862604505780749227270994, .node = "testNode-44", .pods = [k8spolicy.PodReference{.name = "testPod-445", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 141567980840173912161294641659076747449, .node = "testNode-42", .pods = [k8spolicy.PodReference{.name = "testPod-421", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 153230030309926901947333102261066015619, .node = "testNode-44", .pods = [k8spolicy.PodReference{.name = "testPod-447", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 206285954147957614071135240477338500187, .node = "testNode-44", .pods = [k8spolicy.PodReference{.name = "testPod-442", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 208200981325991774672117057795451966950, .node = "testNode-44", .pods = [k8spolicy.PodReference{.name = "testPod-441", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 211620089346190531603012196332160099661, .node = "testNode-43", .pods = [k8spolicy.PodReference{.name = "testPod-432", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 217256471936766674945257828889501121014, .node = "testNode-42", .pods = [k8spolicy.PodReference{.name = "testPod-420", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 229916692294792363993166726025910188662, .node = "testNode-42", .pods = [k8spolicy.PodReference{.name = "testPod-426", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 246945657588344890085307602799380473640, .node = "testNode-44", .pods = [k8spolicy.PodReference{.name = "testPod-446", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 250135802605338744757556750747350467130, .node = "testNode-42", .pods = [k8spolicy.PodReference{.name = "testPod-423", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 263121567407985637932272979133791258611, .node = "testNode-43", .pods = [k8spolicy.PodReference{.name = "testPod-433", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 269349424788233111048069344507915423385, .node = "testNode-42", .pods = [k8spolicy.PodReference{.name = "testPod-428", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 298859621386881247921788046968805647912, .node = "testNode-44", .pods = [k8spolicy.PodReference{.name = "testPod-440", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 330183365161104381859084212366870728800, .node = "testNode-43", .pods = [k8spolicy.PodReference{.name = "testPod-436", .namespace = "testNamespace"}]}: -1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 8392899131139043348355500919486284324, .span = "testNode-41"}: -1
AppliedToGroupSpan{.appliedToGroup = 31814857325643986342771264956990453613, .span = "testNode-42"}: -1
AppliedToGroupSpan{.appliedToGroup = 40521318839038397523258580630990502412, .span = "testNode-42"}: -1
AppliedToGroupSpan{.appliedToGroup = 44173417569196170139233651473572539223, .span = "testNode-43"}: -1
AppliedToGroupSpan{.appliedToGroup = 45349213787551863913945602237432171161, .span = "testNode-44"}: -1
AppliedToGroupSpan{.appliedToGroup = 51141368371469705363359893984678817184, .span = "testNode-42"}: -1
AppliedToGroupSpan{.appliedToGroup = 61728385544145040418177698843719512097, .span = "testNode-44"}: -1
AppliedToGroupSpan{.appliedToGroup = 68655119736190326377350002205809670214, .span = "testNode-43"}: -1
AppliedToGroupSpan{.appliedToGroup = 89966599569391683095747004305785034790, .span = "testNode-41"}: -1
AppliedToGroupSpan{.appliedToGroup = 93558576737193692548196584403547756583, .span = "testNode-43"}: -1
AppliedToGroupSpan{.appliedToGroup = 98233426316474802142212382121144761325, .span = "testNode-43"}: -1
AppliedToGroupSpan{.appliedToGroup = 100675962110545384859717753829972156072, .span = "testNode-43"}: -1
AppliedToGroupSpan{.appliedToGroup = 104470958124797069264185854966208394446, .span = "testNode-42"}: -1
AppliedToGroupSpan{.appliedToGroup = 109766766913591882001478462461559678736, .span = "testNode-43"}: -1
AppliedToGroupSpan{.appliedToGroup = 110848293340619485159525724483314232002, .span = "testNode-41"}: -1
AppliedToGroupSpan{.appliedToGroup = 118458407959584270580530677874245536867, .span = "testNode-43"}: -1
AppliedToGroupSpan{.appliedToGroup = 119485370430696960609980679788983442772, .span = "testNode-41"}: -1
AppliedToGroupSpan{.appliedToGroup = 122056988029455207163504540648586940143, .span = "testNode-42"}: -1
AppliedToGroupSpan{.appliedToGroup = 133259005093568862604505780749227270994, .span = "testNode-44"}: -1
AppliedToGroupSpan{.appliedToGroup = 141567980840173912161294641659076747449, .span = "testNode-42"}: -1
AppliedToGroupSpan{.appliedToGroup = 153230030309926901947333102261066015619, .span = "testNode-44"}: -1
AppliedToGroupSpan{.appliedToGroup = 206285954147957614071135240477338500187, .span = "testNode-44"}: -1
AppliedToGroupSpan{.appliedToGroup = 208200981325991774672117057795451966950, .span = "testNode-44"}: -1
AppliedToGroupSpan{.appliedToGroup = 211620089346190531603012196332160099661, .span = "testNode-43"}: -1
AppliedToGroupSpan{.appliedToGroup = 217256471936766674945257828889501121014, .span = "testNode-42"}: -1
AppliedToGroupSpan{.appliedToGroup = 229916692294792363993166726025910188662, .span = "testNode-42"}: -1
AppliedToGroupSpan{.appliedToGroup = 246945657588344890085307602799380473640, .span = "testNode-44"}: -1
AppliedToGroupSpan{.appliedToGroup = 250135802605338744757556750747350467130, .span = "testNode-42"}: -1
AppliedToGroupSpan{.appliedToGroup = 263121567407985637932272979133791258611, .span = "testNode-43"}: -1
AppliedToGroupSpan{.appliedToGroup = 269349424788233111048069344507915423385, .span = "testNode-42"}: -1
AppliedToGroupSpan{.appliedToGroup = 298859621386881247921788046968805647912, .span = "testNode-44"}: -1
AppliedToGroupSpan{.appliedToGroup = 330183365161104381859084212366870728800, .span = "testNode-43"}: -1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-416"}, .name = "testNP-416", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [110848293340619485159525724483314232002], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [119485370430696960609980679788983442772]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-417"}, .name = "testNP-417", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [8392899131139043348355500919486284324], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [110848293340619485159525724483314232002]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-418"}, .name = "testNP-418", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [89966599569391683095747004305785034790], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [8392899131139043348355500919486284324]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-419"}, .name = "testNP-419", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [217256471936766674945257828889501121014], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [89966599569391683095747004305785034790]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-420"}, .name = "testNP-420", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [141567980840173912161294641659076747449], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [217256471936766674945257828889501121014]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-421"}, .name = "testNP-421", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [51141368371469705363359893984678817184], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [141567980840173912161294641659076747449]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-422"}, .name = "testNP-422", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [250135802605338744757556750747350467130], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [51141368371469705363359893984678817184]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-423"}, .name = "testNP-423", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [104470958124797069264185854966208394446], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [250135802605338744757556750747350467130]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-424"}, .name = "testNP-424", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [31814857325643986342771264956990453613], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [104470958124797069264185854966208394446]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-425"}, .name = "testNP-425", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [229916692294792363993166726025910188662], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [31814857325643986342771264956990453613]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-426"}, .name = "testNP-426", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [122056988029455207163504540648586940143], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [229916692294792363993166726025910188662]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-427"}, .name = "testNP-427", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [269349424788233111048069344507915423385], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [122056988029455207163504540648586940143]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-428"}, .name = "testNP-428", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [40521318839038397523258580630990502412], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [269349424788233111048069344507915423385]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-429"}, .name = "testNP-429", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [44173417569196170139233651473572539223], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [40521318839038397523258580630990502412]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-430"}, .name = "testNP-430", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [68655119736190326377350002205809670214], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [44173417569196170139233651473572539223]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-431"}, .name = "testNP-431", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [211620089346190531603012196332160099661], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [68655119736190326377350002205809670214]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-432"}, .name = "testNP-432", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [263121567407985637932272979133791258611], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [211620089346190531603012196332160099661]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-433"}, .name = "testNP-433", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [93558576737193692548196584403547756583], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [263121567407985637932272979133791258611]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-434"}, .name = "testNP-434", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [118458407959584270580530677874245536867], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [93558576737193692548196584403547756583]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-435"}, .name = "testNP-435", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [330183365161104381859084212366870728800], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [118458407959584270580530677874245536867]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-436"}, .name = "testNP-436", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [109766766913591882001478462461559678736], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [330183365161104381859084212366870728800]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-437"}, .name = "testNP-437", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [98233426316474802142212382121144761325], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [109766766913591882001478462461559678736]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-438"}, .name = "testNP-438", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [100675962110545384859717753829972156072], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [98233426316474802142212382121144761325]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-439"}, .name = "testNP-439", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [298859621386881247921788046968805647912], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [100675962110545384859717753829972156072]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-440"}, .name = "testNP-440", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [208200981325991774672117057795451966950], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [298859621386881247921788046968805647912]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-441"}, .name = "testNP-441", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [206285954147957614071135240477338500187], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [208200981325991774672117057795451966950]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-442"}, .name = "testNP-442", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [61728385544145040418177698843719512097], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [206285954147957614071135240477338500187]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-443"}, .name = "testNP-443", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [45349213787551863913945602237432171161], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [61728385544145040418177698843719512097]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-444"}, .name = "testNP-444", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [133259005093568862604505780749227270994], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [45349213787551863913945602237432171161]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-445"}, .name = "testNP-445", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [246945657588344890085307602799380473640], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [133259005093568862604505780749227270994]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-446"}, .name = "testNP-446", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [153230030309926901947333102261066015619], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [246945657588344890085307602799380473640]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-447"}, .name = "testNP-447", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [117827446475839878486084874479850248172], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [153230030309926901947333102261066015619]}: -1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-416", .policy = k8spolicy.UID{.uid = "testNP-416"}, .node = "testNode-41"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-417", .policy = k8spolicy.UID{.uid = "testNP-417"}, .node = "testNode-41"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-418", .policy = k8spolicy.UID{.uid = "testNP-418"}, .node = "testNode-41"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-419", .policy = k8spolicy.UID{.uid = "testNP-419"}, .node = "testNode-41"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-420", .policy = k8spolicy.UID{.uid = "testNP-420"}, .node = "testNode-42"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-421", .policy = k8spolicy.UID{.uid = "testNP-421"}, .node = "testNode-42"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-422", .policy = k8spolicy.UID{.uid = "testNP-422"}, .node = "testNode-42"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-423", .policy = k8spolicy.UID{.uid = "testNP-423"}, .node = "testNode-42"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-424", .policy = k8spolicy.UID{.uid = "testNP-424"}, .node = "testNode-42"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-425", .policy = k8spolicy.UID{.uid = "testNP-425"}, .node = "testNode-42"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-426", .policy = k8spolicy.UID{.uid = "testNP-426"}, .node = "testNode-42"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-427", .policy = k8spolicy.UID{.uid = "testNP-427"}, .node = "testNode-42"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-428", .policy = k8spolicy.UID{.uid = "testNP-428"}, .node = "testNode-42"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-429", .policy = k8spolicy.UID{.uid = "testNP-429"}, .node = "testNode-42"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-430", .policy = k8spolicy.UID{.uid = "testNP-430"}, .node = "testNode-43"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-431", .policy = k8spolicy.UID{.uid = "testNP-431"}, .node = "testNode-43"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-432", .policy = k8spolicy.UID{.uid = "testNP-432"}, .node = "testNode-43"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-433", .policy = k8spolicy.UID{.uid = "testNP-433"}, .node = "testNode-43"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-434", .policy = k8spolicy.UID{.uid = "testNP-434"}, .node = "testNode-43"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-435", .policy = k8spolicy.UID{.uid = "testNP-435"}, .node = "testNode-43"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-436", .policy = k8spolicy.UID{.uid = "testNP-436"}, .node = "testNode-43"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-437", .policy = k8spolicy.UID{.uid = "testNP-437"}, .node = "testNode-43"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-438", .policy = k8spolicy.UID{.uid = "testNP-438"}, .node = "testNode-43"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-439", .policy = k8spolicy.UID{.uid = "testNP-439"}, .node = "testNode-43"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-440", .policy = k8spolicy.UID{.uid = "testNP-440"}, .node = "testNode-44"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-441", .policy = k8spolicy.UID{.uid = "testNP-441"}, .node = "testNode-44"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-442", .policy = k8spolicy.UID{.uid = "testNP-442"}, .node = "testNode-44"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-443", .policy = k8spolicy.UID{.uid = "testNP-443"}, .node = "testNode-44"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-444", .policy = k8spolicy.UID{.uid = "testNP-444"}, .node = "testNode-44"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-445", .policy = k8spolicy.UID{.uid = "testNP-445"}, .node = "testNode-44"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-446", .policy = k8spolicy.UID{.uid = "testNP-446"}, .node = "testNode-44"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-447", .policy = k8spolicy.UID{.uid = "testNP-447"}, .node = "testNode-44"}: -1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 10398742538421044264815556624684022683, .address = "10.10.47.9"}: -1
AddressGroupAddress{.addressGroup = 17528774242580328029912038629490225240, .address = "10.10.47.8"}: -1
AddressGroupAddress{.addressGroup = 27058181730611473933030209998052762202, .address = "10.10.47.7"}: -1
AddressGroupAddress{.addressGroup = 38375966268241481767006751780948444872, .address = "10.10.45.5"}: -1
AddressGroupAddress{.addressGroup = 56336623149793606332188757477805102850, .address = "10.10.46.2"}: -1
AddressGroupAddress{.addressGroup = 58469796950497130529538370291876307573, .address = "10.10.46.6"}: -1
AddressGroupAddress{.addressGroup = 62600887137200392690002037255951829310, .address = "10.10.47.3"}: -1
AddressGroupAddress{.addressGroup = 76391205487177098321212878075574806639, .address = "10.10.46.3"}: -1
AddressGroupAddress{.addressGroup = 90544106058764733507855193994038428218, .address = "10.10.47.5"}: -1
AddressGroupAddress{.addressGroup = 91691608888291201794127747460254066432, .address = "10.10.45.7"}: -1
AddressGroupAddress{.addressGroup = 91984765255250255059535198568016548246, .address = "10.10.46.7"}: -1
AddressGroupAddress{.addressGroup = 101095752346530535164915651636984381570, .address = "10.10.47.6"}: -1
AddressGroupAddress{.addressGroup = 120182677709371850876551659521020384282, .address = "10.10.44.9"}: -1
AddressGroupAddress{.addressGroup = 125040544397884692449282467374989187239, .address = "10.10.46.9"}: -1
AddressGroupAddress{.addressGroup = 155543750420087640908644874525367673188, .address = "10.10.45.4"}: -1
AddressGroupAddress{.addressGroup = 156294920451355972805306528055678722450, .address = "10.10.46.5"}: -1
AddressGroupAddress{.addressGroup = 205196007965576302795668046715118011338, .address = "10.10.46.1"}: -1
AddressGroupAddress{.addressGroup = 217531119462777736934189280790313345837, .address = "10.10.46.4"}: -1
AddressGroupAddress{.addressGroup = 223214646752105529115657412587042174882, .address = "10.10.48.0"}: -1
AddressGroupAddress{.addressGroup = 227469615519532210782975223061687836636, .address = "10.10.47.0"}: -1
AddressGroupAddress{.addressGroup = 227866099958799700876732017397099310818, .address = "10.10.46.0"}: -1
AddressGroupAddress{.addressGroup = 230618493681980695464795362108935057042, .address = "10.10.47.2"}: -1
AddressGroupAddress{.addressGroup = 260936513634779486466878529184415766280, .address = "10.10.47.4"}: -1
AddressGroupAddress{.addressGroup = 269997189792379274017344001964798849203, .address = "10.10.47.1"}: -1
AddressGroupAddress{.addressGroup = 274045377450439623966059517873767519101, .address = "10.10.45.6"}: -1
AddressGroupAddress{.addressGroup = 279847031786431905870342764360009201452, .address = "10.10.45.2"}: -1
AddressGroupAddress{.addressGroup = 280360108893987796589645554088970129686, .address = "10.10.45.3"}: -1
AddressGroupAddress{.addressGroup = 287737120192732147553967459408904233043, .address = "10.10.45.0"}: -1
AddressGroupAddress{.addressGroup = 288362176878031203257646282110720347129, .address = "10.10.45.9"}: -1
AddressGroupAddress{.addressGroup = 304065407044425188152218116774106395755, .address = "10.10.45.8"}: -1
AddressGroupAddress{.addressGroup = 306997748721037595890290579831172821562, .address = "10.10.45.1"}: -1
AddressGroupAddress{.addressGroup = 334974904332289858500896498438411491849, .address = "10.10.46.8"}: -1
AddressGroupDescr:
AddressGroupDescr{.name = "07d2b997-3b78-5866-a575-8f9f9421fb9b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-479]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-479")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "0d2feb4b-7671-5457-997d-b90deb86f058", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-478]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-478")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "145b375b-bd02-576a-a29c-a996c2ada25a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-477]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-477")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "1cdef137-d356-5102-bdef-c72a414486c8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-455]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-455")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "2a6209f8-8f87-5acb-aa49-9a8ba2b59702", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-462]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-462")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "2bfcdf8f-3513-5db1-be65-c75108cd2275", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-466]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-466")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "2f187e07-ea40-5f31-954c-ba475ddb493e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-473]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-473")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "39786938-2f43-5c70-95f5-564461bee86f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-463]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-463")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "441e2917-7cb3-5111-8ca9-2e9a93e1423a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-475]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-475")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "44fb2959-6bad-5a6b-82e5-0b9d202ee700", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-457]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-457")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "45339f12-f908-5cf0-9541-e69efa589196", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-467]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-467")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "4c0e556b-5c80-5021-af27-40565ee58082", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-476]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-476")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "5a6a577e-e00d-5003-bd84-a74d6fd1d41a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-449]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-449")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "5e11eed0-b04e-501c-bf44-abb6d5c218a7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-469]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-469")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "7504a2fc-2033-59bc-bb01-f7b4eeed2164", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-454]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-454")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "75954e86-dbf7-5dc3-a211-e5c0205fe192", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-465]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-465")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "9a5f5049-76a1-5a2d-8912-d168a845c3ca", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-461]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-461")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "a3a6f83d-02a6-5430-8dc6-4f8f1946a32d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-464]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-464")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "a7ed93c4-ba2e-5748-b2ae-88a30d10f7a2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-480]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-480")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "ab210dec-f1b8-583a-940e-90ddc7641fdc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-470]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-470")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "ab6d6a1e-1f75-5eec-ac9e-7fefb232aee2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-460]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-460")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "ad7f819a-fc9d-559a-960e-15c148812e92", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-472]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-472")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "c44e8b65-9e4c-5a80-a0d7-fb788cb25708", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-474]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-474")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "cb1f9138-bf78-5be1-8e95-bb9ba1c330b3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-471]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-471")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "ce2b3848-6f5c-5362-83d5-360c6d6b137d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-456]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-456")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "d28893ed-1867-59ba-8b0a-145f907b372c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-452]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-452")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "d2eb6494-a3ba-5e2b-8aa3-f1a269f19116", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-453]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-453")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "d8782751-9d64-5389-b796-a396ab3ca053", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-450]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-450")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "d8f088fe-22d6-5d40-8080-254495710bf9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-459]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-459")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "e4c0de03-f599-52c9-b982-80f5b20a746b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-458]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-458")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "e6f59d9f-4f6c-58d5-9d32-09b02c7af23a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-451]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-451")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "fc01d1e4-2053-5e76-bd5b-f20127c59a09", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-468]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-468")], .matchExpressions = []}}}}: -1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 10398742538421044264815556624684022683, .node = "testNode-47"}: -1
AddressGroupSpan{.addressGroup = 17528774242580328029912038629490225240, .node = "testNode-47"}: -1
AddressGroupSpan{.addressGroup = 27058181730611473933030209998052762202, .node = "testNode-47"}: -1
AddressGroupSpan{.addressGroup = 38375966268241481767006751780948444872, .node = "testNode-45"}: -1
AddressGroupSpan{.addressGroup = 56336623149793606332188757477805102850, .node = "testNode-46"}: -1
AddressGroupSpan{.addressGroup = 58469796950497130529538370291876307573, .node = "testNode-46"}: -1
AddressGroupSpan{.addressGroup = 62600887137200392690002037255951829310, .node = "testNode-47"}: -1
AddressGroupSpan{.addressGroup = 76391205487177098321212878075574806639, .node = "testNode-46"}: -1
AddressGroupSpan{.addressGroup = 90544106058764733507855193994038428218, .node = "testNode-47"}: -1
AddressGroupSpan{.addressGroup = 91691608888291201794127747460254066432, .node = "testNode-45"}: -1
AddressGroupSpan{.addressGroup = 91984765255250255059535198568016548246, .node = "testNode-46"}: -1
AddressGroupSpan{.addressGroup = 101095752346530535164915651636984381570, .node = "testNode-47"}: -1
AddressGroupSpan{.addressGroup = 120182677709371850876551659521020384282, .node = "testNode-44"}: -1
AddressGroupSpan{.addressGroup = 125040544397884692449282467374989187239, .node = "testNode-46"}: -1
AddressGroupSpan{.addressGroup = 155543750420087640908644874525367673188, .node = "testNode-45"}: -1
AddressGroupSpan{.addressGroup = 156294920451355972805306528055678722450, .node = "testNode-46"}: -1
AddressGroupSpan{.addressGroup = 205196007965576302795668046715118011338, .node = "testNode-46"}: -1
AddressGroupSpan{.addressGroup = 217531119462777736934189280790313345837, .node = "testNode-46"}: -1
AddressGroupSpan{.addressGroup = 223214646752105529115657412587042174882, .node = "testNode-47"}: -1
AddressGroupSpan{.addressGroup = 227469615519532210782975223061687836636, .node = "testNode-46"}: -1
AddressGroupSpan{.addressGroup = 227866099958799700876732017397099310818, .node = "testNode-45"}: -1
AddressGroupSpan{.addressGroup = 230618493681980695464795362108935057042, .node = "testNode-47"}: -1
AddressGroupSpan{.addressGroup = 260936513634779486466878529184415766280, .node = "testNode-47"}: -1
AddressGroupSpan{.addressGroup = 269997189792379274017344001964798849203, .node = "testNode-47"}: -1
AddressGroupSpan{.addressGroup = 274045377450439623966059517873767519101, .node = "testNode-45"}: -1
AddressGroupSpan{.addressGroup = 279847031786431905870342764360009201452, .node = "testNode-45"}: -1
AddressGroupSpan{.addressGroup = 280360108893987796589645554088970129686, .node = "testNode-45"}: -1
AddressGroupSpan{.addressGroup = 287737120192732147553967459408904233043, .node = "testNode-44"}: -1
AddressGroupSpan{.addressGroup = 288362176878031203257646282110720347129, .node = "testNode-45"}: -1
AddressGroupSpan{.addressGroup = 304065407044425188152218116774106395755, .node = "testNode-45"}: -1
AddressGroupSpan{.addressGroup = 306997748721037595890290579831172821562, .node = "testNode-45"}: -1
AddressGroupSpan{.addressGroup = 334974904332289858500896498438411491849, .node = "testNode-46"}: -1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "07d2b997-3b78-5866-a575-8f9f9421fb9b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-479]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-479")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "0d2feb4b-7671-5457-997d-b90deb86f058", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-478]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-478")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "145b375b-bd02-576a-a29c-a996c2ada25a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-477]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-477")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "1cdef137-d356-5102-bdef-c72a414486c8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-455]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-455")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "2a6209f8-8f87-5acb-aa49-9a8ba2b59702", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-462]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-462")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "2bfcdf8f-3513-5db1-be65-c75108cd2275", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-466]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-466")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "2f187e07-ea40-5f31-954c-ba475ddb493e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-473]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-473")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "39786938-2f43-5c70-95f5-564461bee86f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-463]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-463")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "441e2917-7cb3-5111-8ca9-2e9a93e1423a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-475]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-475")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "44fb2959-6bad-5a6b-82e5-0b9d202ee700", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-457]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-457")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "45339f12-f908-5cf0-9541-e69efa589196", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-467]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-467")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "4c0e556b-5c80-5021-af27-40565ee58082", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-476]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-476")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "58a4bda1-6394-500a-8801-381bb59057ec", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-448]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-448")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "5a6a577e-e00d-5003-bd84-a74d6fd1d41a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-449]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-449")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "5e11eed0-b04e-501c-bf44-abb6d5c218a7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-469]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-469")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "7504a2fc-2033-59bc-bb01-f7b4eeed2164", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-454]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-454")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "75954e86-dbf7-5dc3-a211-e5c0205fe192", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-465]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-465")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "9a5f5049-76a1-5a2d-8912-d168a845c3ca", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-461]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-461")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "a3a6f83d-02a6-5430-8dc6-4f8f1946a32d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-464]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-464")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "ab210dec-f1b8-583a-940e-90ddc7641fdc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-470]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-470")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "ab6d6a1e-1f75-5eec-ac9e-7fefb232aee2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-460]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-460")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "ad7f819a-fc9d-559a-960e-15c148812e92", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-472]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-472")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "c44e8b65-9e4c-5a80-a0d7-fb788cb25708", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-474]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-474")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "cb1f9138-bf78-5be1-8e95-bb9ba1c330b3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-471]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-471")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "ce2b3848-6f5c-5362-83d5-360c6d6b137d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-456]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-456")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "d28893ed-1867-59ba-8b0a-145f907b372c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-452]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-452")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "d2eb6494-a3ba-5e2b-8aa3-f1a269f19116", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-453]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-453")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "d8782751-9d64-5389-b796-a396ab3ca053", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-450]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-450")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "d8f088fe-22d6-5d40-8080-254495710bf9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-459]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-459")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "e4c0de03-f599-52c9-b982-80f5b20a746b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-458]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-458")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "e6f59d9f-4f6c-58d5-9d32-09b02c7af23a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-451]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-451")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "fc01d1e4-2053-5e76-bd5b-f20127c59a09", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-468]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-468")], .matchExpressions = []}}}}: -1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 10398742538421044264815556624684022683, .node = "testNode-47", .pods = [k8spolicy.PodReference{.name = "testPod-479", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 17528774242580328029912038629490225240, .node = "testNode-47", .pods = [k8spolicy.PodReference{.name = "testPod-478", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 27058181730611473933030209998052762202, .node = "testNode-47", .pods = [k8spolicy.PodReference{.name = "testPod-477", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 38375966268241481767006751780948444872, .node = "testNode-45", .pods = [k8spolicy.PodReference{.name = "testPod-455", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 56336623149793606332188757477805102850, .node = "testNode-46", .pods = [k8spolicy.PodReference{.name = "testPod-462", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 58469796950497130529538370291876307573, .node = "testNode-46", .pods = [k8spolicy.PodReference{.name = "testPod-466", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 62600887137200392690002037255951829310, .node = "testNode-47", .pods = [k8spolicy.PodReference{.name = "testPod-473", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 76391205487177098321212878075574806639, .node = "testNode-46", .pods = [k8spolicy.PodReference{.name = "testPod-463", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 90544106058764733507855193994038428218, .node = "testNode-47", .pods = [k8spolicy.PodReference{.name = "testPod-475", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 91691608888291201794127747460254066432, .node = "testNode-45", .pods = [k8spolicy.PodReference{.name = "testPod-457", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 91984765255250255059535198568016548246, .node = "testNode-46", .pods = [k8spolicy.PodReference{.name = "testPod-467", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 101095752346530535164915651636984381570, .node = "testNode-47", .pods = [k8spolicy.PodReference{.name = "testPod-476", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 117827446475839878486084874479850248172, .node = "testNode-44", .pods = [k8spolicy.PodReference{.name = "testPod-448", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 120182677709371850876551659521020384282, .node = "testNode-44", .pods = [k8spolicy.PodReference{.name = "testPod-449", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 125040544397884692449282467374989187239, .node = "testNode-46", .pods = [k8spolicy.PodReference{.name = "testPod-469", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 155543750420087640908644874525367673188, .node = "testNode-45", .pods = [k8spolicy.PodReference{.name = "testPod-454", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 156294920451355972805306528055678722450, .node = "testNode-46", .pods = [k8spolicy.PodReference{.name = "testPod-465", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 205196007965576302795668046715118011338, .node = "testNode-46", .pods = [k8spolicy.PodReference{.name = "testPod-461", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 217531119462777736934189280790313345837, .node = "testNode-46", .pods = [k8spolicy.PodReference{.name = "testPod-464", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 227469615519532210782975223061687836636, .node = "testNode-47", .pods = [k8spolicy.PodReference{.name = "testPod-470", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 227866099958799700876732017397099310818, .node = "testNode-46", .pods = [k8spolicy.PodReference{.name = "testPod-460", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 230618493681980695464795362108935057042, .node = "testNode-47", .pods = [k8spolicy.PodReference{.name = "testPod-472", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 260936513634779486466878529184415766280, .node = "testNode-47", .pods = [k8spolicy.PodReference{.name = "testPod-474", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 269997189792379274017344001964798849203, .node = "testNode-47", .pods = [k8spolicy.PodReference{.name = "testPod-471", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 274045377450439623966059517873767519101, .node = "testNode-45", .pods = [k8spolicy.PodReference{.name = "testPod-456", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 279847031786431905870342764360009201452, .node = "testNode-45", .pods = [k8spolicy.PodReference{.name = "testPod-452", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 280360108893987796589645554088970129686, .node = "testNode-45", .pods = [k8spolicy.PodReference{.name = "testPod-453", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 287737120192732147553967459408904233043, .node = "testNode-45", .pods = [k8spolicy.PodReference{.name = "testPod-450", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 288362176878031203257646282110720347129, .node = "testNode-45", .pods = [k8spolicy.PodReference{.name = "testPod-459", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 304065407044425188152218116774106395755, .node = "testNode-45", .pods = [k8spolicy.PodReference{.name = "testPod-458", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 306997748721037595890290579831172821562, .node = "testNode-45", .pods = [k8spolicy.PodReference{.name = "testPod-451", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 334974904332289858500896498438411491849, .node = "testNode-46", .pods = [k8spolicy.PodReference{.name = "testPod-468", .namespace = "testNamespace"}]}: -1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 10398742538421044264815556624684022683, .span = "testNode-47"}: -1
AppliedToGroupSpan{.appliedToGroup = 17528774242580328029912038629490225240, .span = "testNode-47"}: -1
AppliedToGroupSpan{.appliedToGroup = 27058181730611473933030209998052762202, .span = "testNode-47"}: -1
AppliedToGroupSpan{.appliedToGroup = 38375966268241481767006751780948444872, .span = "testNode-45"}: -1
AppliedToGroupSpan{.appliedToGroup = 56336623149793606332188757477805102850, .span = "testNode-46"}: -1
AppliedToGroupSpan{.appliedToGroup = 58469796950497130529538370291876307573, .span = "testNode-46"}: -1
AppliedToGroupSpan{.appliedToGroup = 62600887137200392690002037255951829310, .span = "testNode-47"}: -1
AppliedToGroupSpan{.appliedToGroup = 76391205487177098321212878075574806639, .span = "testNode-46"}: -1
AppliedToGroupSpan{.appliedToGroup = 90544106058764733507855193994038428218, .span = "testNode-47"}: -1
AppliedToGroupSpan{.appliedToGroup = 91691608888291201794127747460254066432, .span = "testNode-45"}: -1
AppliedToGroupSpan{.appliedToGroup = 91984765255250255059535198568016548246, .span = "testNode-46"}: -1
AppliedToGroupSpan{.appliedToGroup = 101095752346530535164915651636984381570, .span = "testNode-47"}: -1
AppliedToGroupSpan{.appliedToGroup = 117827446475839878486084874479850248172, .span = "testNode-44"}: -1
AppliedToGroupSpan{.appliedToGroup = 120182677709371850876551659521020384282, .span = "testNode-44"}: -1
AppliedToGroupSpan{.appliedToGroup = 125040544397884692449282467374989187239, .span = "testNode-46"}: -1
AppliedToGroupSpan{.appliedToGroup = 155543750420087640908644874525367673188, .span = "testNode-45"}: -1
AppliedToGroupSpan{.appliedToGroup = 156294920451355972805306528055678722450, .span = "testNode-46"}: -1
AppliedToGroupSpan{.appliedToGroup = 205196007965576302795668046715118011338, .span = "testNode-46"}: -1
AppliedToGroupSpan{.appliedToGroup = 217531119462777736934189280790313345837, .span = "testNode-46"}: -1
AppliedToGroupSpan{.appliedToGroup = 227469615519532210782975223061687836636, .span = "testNode-47"}: -1
AppliedToGroupSpan{.appliedToGroup = 227866099958799700876732017397099310818, .span = "testNode-46"}: -1
AppliedToGroupSpan{.appliedToGroup = 230618493681980695464795362108935057042, .span = "testNode-47"}: -1
AppliedToGroupSpan{.appliedToGroup = 260936513634779486466878529184415766280, .span = "testNode-47"}: -1
AppliedToGroupSpan{.appliedToGroup = 269997189792379274017344001964798849203, .span = "testNode-47"}: -1
AppliedToGroupSpan{.appliedToGroup = 274045377450439623966059517873767519101, .span = "testNode-45"}: -1
AppliedToGroupSpan{.appliedToGroup = 279847031786431905870342764360009201452, .span = "testNode-45"}: -1
AppliedToGroupSpan{.appliedToGroup = 280360108893987796589645554088970129686, .span = "testNode-45"}: -1
AppliedToGroupSpan{.appliedToGroup = 287737120192732147553967459408904233043, .span = "testNode-45"}: -1
AppliedToGroupSpan{.appliedToGroup = 288362176878031203257646282110720347129, .span = "testNode-45"}: -1
AppliedToGroupSpan{.appliedToGroup = 304065407044425188152218116774106395755, .span = "testNode-45"}: -1
AppliedToGroupSpan{.appliedToGroup = 306997748721037595890290579831172821562, .span = "testNode-45"}: -1
AppliedToGroupSpan{.appliedToGroup = 334974904332289858500896498438411491849, .span = "testNode-46"}: -1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-448"}, .name = "testNP-448", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [120182677709371850876551659521020384282], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [117827446475839878486084874479850248172]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-449"}, .name = "testNP-449", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [287737120192732147553967459408904233043], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [120182677709371850876551659521020384282]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-450"}, .name = "testNP-450", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [306997748721037595890290579831172821562], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [287737120192732147553967459408904233043]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-451"}, .name = "testNP-451", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [279847031786431905870342764360009201452], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [306997748721037595890290579831172821562]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-452"}, .name = "testNP-452", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [280360108893987796589645554088970129686], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [279847031786431905870342764360009201452]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-453"}, .name = "testNP-453", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [155543750420087640908644874525367673188], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [280360108893987796589645554088970129686]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-454"}, .name = "testNP-454", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [38375966268241481767006751780948444872], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [155543750420087640908644874525367673188]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-455"}, .name = "testNP-455", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [274045377450439623966059517873767519101], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [38375966268241481767006751780948444872]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-456"}, .name = "testNP-456", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [91691608888291201794127747460254066432], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [274045377450439623966059517873767519101]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-457"}, .name = "testNP-457", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [304065407044425188152218116774106395755], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [91691608888291201794127747460254066432]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-458"}, .name = "testNP-458", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [288362176878031203257646282110720347129], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [304065407044425188152218116774106395755]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-459"}, .name = "testNP-459", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [227866099958799700876732017397099310818], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [288362176878031203257646282110720347129]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-460"}, .name = "testNP-460", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [205196007965576302795668046715118011338], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [227866099958799700876732017397099310818]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-461"}, .name = "testNP-461", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [56336623149793606332188757477805102850], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [205196007965576302795668046715118011338]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-462"}, .name = "testNP-462", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [76391205487177098321212878075574806639], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [56336623149793606332188757477805102850]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-463"}, .name = "testNP-463", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [217531119462777736934189280790313345837], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [76391205487177098321212878075574806639]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-464"}, .name = "testNP-464", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [156294920451355972805306528055678722450], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [217531119462777736934189280790313345837]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-465"}, .name = "testNP-465", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [58469796950497130529538370291876307573], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [156294920451355972805306528055678722450]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-466"}, .name = "testNP-466", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [91984765255250255059535198568016548246], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [58469796950497130529538370291876307573]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-467"}, .name = "testNP-467", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [334974904332289858500896498438411491849], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [91984765255250255059535198568016548246]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-468"}, .name = "testNP-468", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [125040544397884692449282467374989187239], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [334974904332289858500896498438411491849]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-469"}, .name = "testNP-469", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [227469615519532210782975223061687836636], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [125040544397884692449282467374989187239]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-470"}, .name = "testNP-470", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [269997189792379274017344001964798849203], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [227469615519532210782975223061687836636]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-471"}, .name = "testNP-471", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [230618493681980695464795362108935057042], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [269997189792379274017344001964798849203]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-472"}, .name = "testNP-472", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [62600887137200392690002037255951829310], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [230618493681980695464795362108935057042]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-473"}, .name = "testNP-473", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [260936513634779486466878529184415766280], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [62600887137200392690002037255951829310]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-474"}, .name = "testNP-474", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [90544106058764733507855193994038428218], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [260936513634779486466878529184415766280]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-475"}, .name = "testNP-475", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [101095752346530535164915651636984381570], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [90544106058764733507855193994038428218]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-476"}, .name = "testNP-476", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [27058181730611473933030209998052762202], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [101095752346530535164915651636984381570]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-477"}, .name = "testNP-477", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [17528774242580328029912038629490225240], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [27058181730611473933030209998052762202]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-478"}, .name = "testNP-478", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [10398742538421044264815556624684022683], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [17528774242580328029912038629490225240]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-479"}, .name = "testNP-479", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [223214646752105529115657412587042174882], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [10398742538421044264815556624684022683]}: -1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-448", .policy = k8spolicy.UID{.uid = "testNP-448"}, .node = "testNode-44"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-449", .policy = k8spolicy.UID{.uid = "testNP-449"}, .node = "testNode-44"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-450", .policy = k8spolicy.UID{.uid = "testNP-450"}, .node = "testNode-45"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-451", .policy = k8spolicy.UID{.uid = "testNP-451"}, .node = "testNode-45"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-452", .policy = k8spolicy.UID{.uid = "testNP-452"}, .node = "testNode-45"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-453", .policy = k8spolicy.UID{.uid = "testNP-453"}, .node = "testNode-45"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-454", .policy = k8spolicy.UID{.uid = "testNP-454"}, .node = "testNode-45"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-455", .policy = k8spolicy.UID{.uid = "testNP-455"}, .node = "testNode-45"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-456", .policy = k8spolicy.UID{.uid = "testNP-456"}, .node = "testNode-45"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-457", .policy = k8spolicy.UID{.uid = "testNP-457"}, .node = "testNode-45"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-458", .policy = k8spolicy.UID{.uid = "testNP-458"}, .node = "testNode-45"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-459", .policy = k8spolicy.UID{.uid = "testNP-459"}, .node = "testNode-45"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-460", .policy = k8spolicy.UID{.uid = "testNP-460"}, .node = "testNode-46"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-461", .policy = k8spolicy.UID{.uid = "testNP-461"}, .node = "testNode-46"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-462", .policy = k8spolicy.UID{.uid = "testNP-462"}, .node = "testNode-46"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-463", .policy = k8spolicy.UID{.uid = "testNP-463"}, .node = "testNode-46"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-464", .policy = k8spolicy.UID{.uid = "testNP-464"}, .node = "testNode-46"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-465", .policy = k8spolicy.UID{.uid = "testNP-465"}, .node = "testNode-46"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-466", .policy = k8spolicy.UID{.uid = "testNP-466"}, .node = "testNode-46"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-467", .policy = k8spolicy.UID{.uid = "testNP-467"}, .node = "testNode-46"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-468", .policy = k8spolicy.UID{.uid = "testNP-468"}, .node = "testNode-46"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-469", .policy = k8spolicy.UID{.uid = "testNP-469"}, .node = "testNode-46"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-470", .policy = k8spolicy.UID{.uid = "testNP-470"}, .node = "testNode-47"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-471", .policy = k8spolicy.UID{.uid = "testNP-471"}, .node = "testNode-47"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-472", .policy = k8spolicy.UID{.uid = "testNP-472"}, .node = "testNode-47"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-473", .policy = k8spolicy.UID{.uid = "testNP-473"}, .node = "testNode-47"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-474", .policy = k8spolicy.UID{.uid = "testNP-474"}, .node = "testNode-47"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-475", .policy = k8spolicy.UID{.uid = "testNP-475"}, .node = "testNode-47"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-476", .policy = k8spolicy.UID{.uid = "testNP-476"}, .node = "testNode-47"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-477", .policy = k8spolicy.UID{.uid = "testNP-477"}, .node = "testNode-47"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-478", .policy = k8spolicy.UID{.uid = "testNP-478"}, .node = "testNode-47"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-479", .policy = k8spolicy.UID{.uid = "testNP-479"}, .node = "testNode-47"}: -1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 15285939464778960935441106852144703836, .address = "10.10.48.9"}: -1
AddressGroupAddress{.addressGroup = 20765226908120027851174659223444490835, .address = "10.10.49.5"}: -1
AddressGroupAddress{.addressGroup = 32467039824443061879633881427199357722, .address = "10.10.49.2"}: -1
AddressGroupAddress{.addressGroup = 36809573850335376007923764512144127569, .address = "10.10.50.6"}: -1
AddressGroupAddress{.addressGroup = 43594847321568024972030832253467524147, .address = "10.10.50.0"}: -1
AddressGroupAddress{.addressGroup = 62341031866340521150147631079796698722, .address = "10.10.51.2"}: -1
AddressGroupAddress{.addressGroup = 66927369159555061421903542969454638567, .address = "10.10.50.7"}: -1
AddressGroupAddress{.addressGroup = 68271250420901333888645536827117596867, .address = "10.10.50.9"}: -1
AddressGroupAddress{.addressGroup = 112672880072235221701653286541383835910, .address = "10.10.49.7"}: -1
AddressGroupAddress{.addressGroup = 116031467470099154839321687713899067637, .address = "10.10.49.9"}: -1
AddressGroupAddress{.addressGroup = 116492568212039708824803804426363964310, .address = "10.10.51.1"}: -1
AddressGroupAddress{.addressGroup = 124264996953399756515883770719624033599, .address = "10.10.49.3"}: -1
AddressGroupAddress{.addressGroup = 131397115533833478951658092594978071468, .address = "10.10.48.1"}: -1
AddressGroupAddress{.addressGroup = 139404679717645147853029719067887386584, .address = "10.10.48.6"}: -1
AddressGroupAddress{.addressGroup = 145049859127643291158427056828983572457, .address = "10.10.48.4"}: -1
AddressGroupAddress{.addressGroup = 159379537364512178039209337464128590911, .address = "10.10.50.5"}: -1
AddressGroupAddress{.addressGroup = 170814458879235919546793320233963616342, .address = "10.10.50.1"}: -1
AddressGroupAddress{.addressGroup = 176222550332599395914515466248412980097, .address = "10.10.50.4"}: -1
AddressGroupAddress{.addressGroup = 191237941306182904637223214367089033722, .address = "10.10.49.1"}: -1
AddressGroupAddress{.addressGroup = 191666996465132554203310298692592636053, .address = "10.10.51.0"}: -1
AddressGroupAddress{.addressGroup = 192997154846823932430444027486549664749, .address = "10.10.48.5"}: -1
AddressGroupAddress{.addressGroup = 193512303236577385511766869180978382881, .address = "10.10.49.6"}: -1
AddressGroupAddress{.addressGroup = 196410774068037176278392170910557362834, .address = "10.10.48.7"}: -1
AddressGroupAddress{.addressGroup = 199908900147595800825852814881020681811, .address = "10.10.50.3"}: -1
AddressGroupAddress{.addressGroup = 204719468512002355151148736197610861336, .address = "10.10.49.8"}: -1
AddressGroupAddress{.addressGroup = 261573942032461131498792619653509043863, .address = "10.10.48.8"}: -1
AddressGroupAddress{.addressGroup = 283949543804316592665011763622762819468, .address = "10.10.50.2"}: -1
AddressGroupAddress{.addressGroup = 289230956037387926968456551129169380093, .address = "10.10.48.3"}: -1
AddressGroupAddress{.addressGroup = 293943541870597479161044488294921897506, .address = "10.10.48.2"}: -1
AddressGroupAddress{.addressGroup = 305238393628597377001513190946135696686, .address = "10.10.49.4"}: -1
AddressGroupAddress{.addressGroup = 308594811633025638703266067092239201868, .address = "10.10.49.0"}: -1
AddressGroupAddress{.addressGroup = 324097894006209167139251399443933610346, .address = "10.10.50.8"}: -1
AddressGroupDescr:
AddressGroupDescr{.name = "0b7ff700-b184-5c64-b61e-9f5e0e4f695c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-489]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-489")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "0f9f3cbb-223d-566a-8017-99102e738a53", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-495]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-495")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "186ceca6-cfe6-5b24-b464-51fc996b731a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-492]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-492")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "1bb1441b-f958-5365-b979-a3d1c0327651", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-506]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-506")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "20cc0feb-897a-5b53-bf0b-20fbba3e7c33", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-500]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-500")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "2ee6722d-49b3-5ed1-b72b-c5d7e14eee62", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-512]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-512")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "3259be10-4eeb-5e63-882d-6c1fdc3935e7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-507]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-507")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "335c9086-858a-5057-b7a5-ccbef3c6f0c3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-509]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-509")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "54c401e2-aea9-5b14-9090-d42883ae2106", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-497]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-497")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "574ad907-66bf-52c1-aa00-f896f38bb8f5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-499]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-499")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "57a3a70c-faf6-5dc2-b2b2-ae3619af8b96", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-511]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-511")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "5d7c915f-be3d-5412-945b-db1343c0f53f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-493]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-493")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "62da29f8-0e21-533a-a892-7487a537a3ac", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-481]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-481")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "68e05d5d-5880-58b3-9750-b1a5778fbfd8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-486]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-486")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "6d1f9632-c71e-599b-b0ec-adcaf91077e9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-484]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-484")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "77e761e1-e7bb-5871-8def-353def0cd43f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-505]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-505")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "8081ab0a-8040-5336-933e-1bcfc92ff856", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-501]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-501")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "84933a89-3630-51b2-bfcb-fd7ea143e381", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-504]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-504")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "8fdf1677-dcc4-5416-93e7-b90771ef01fa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-491]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-491")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "9031b885-51d3-5614-97ac-172b40cc9095", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-510]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-510")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "9131e664-70d3-5abf-94cb-98daedc563ed", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-485]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-485")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "91951d2b-3de3-5257-b6f0-31b371a54821", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-496]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-496")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "93c356d0-6c6d-5097-bb7d-bb85c09b5a92", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-487]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-487")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "96650dbe-ea2a-56ce-a24d-89a33aab9e53", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-503]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-503")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "9a038913-f2a8-5e80-b5fa-9de255b27318", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-498]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-498")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "c4c94f0b-1a71-5a01-b4f3-bd4e12ce5697", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-488]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-488")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "d59eb162-99df-5d04-b8c1-e86f9cd0af8c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-502]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-502")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "d997db1c-c2f0-5d09-b50c-8ebc67d1c2fd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-483]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-483")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "dd237788-61ef-5c72-820a-fe6a4fbf8622", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-482]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-482")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "e5a2c6b8-18d5-5bad-ba1b-b514a461652e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-494]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-494")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "e82932e7-38ac-56a0-aa33-7870f6b2b64c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-490]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-490")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "f3d2fbe0-bc42-55de-8f18-ac99d710c16a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-508]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-508")], .matchExpressions = []}}}}: -1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 15285939464778960935441106852144703836, .node = "testNode-48"}: -1
AddressGroupSpan{.addressGroup = 20765226908120027851174659223444490835, .node = "testNode-49"}: -1
AddressGroupSpan{.addressGroup = 32467039824443061879633881427199357722, .node = "testNode-49"}: -1
AddressGroupSpan{.addressGroup = 36809573850335376007923764512144127569, .node = "testNode-50"}: -1
AddressGroupSpan{.addressGroup = 43594847321568024972030832253467524147, .node = "testNode-49"}: -1
AddressGroupSpan{.addressGroup = 62341031866340521150147631079796698722, .node = "testNode-51"}: -1
AddressGroupSpan{.addressGroup = 66927369159555061421903542969454638567, .node = "testNode-50"}: -1
AddressGroupSpan{.addressGroup = 68271250420901333888645536827117596867, .node = "testNode-50"}: -1
AddressGroupSpan{.addressGroup = 112672880072235221701653286541383835910, .node = "testNode-49"}: -1
AddressGroupSpan{.addressGroup = 116031467470099154839321687713899067637, .node = "testNode-49"}: -1
AddressGroupSpan{.addressGroup = 116492568212039708824803804426363964310, .node = "testNode-51"}: -1
AddressGroupSpan{.addressGroup = 124264996953399756515883770719624033599, .node = "testNode-49"}: -1
AddressGroupSpan{.addressGroup = 131397115533833478951658092594978071468, .node = "testNode-48"}: -1
AddressGroupSpan{.addressGroup = 139404679717645147853029719067887386584, .node = "testNode-48"}: -1
AddressGroupSpan{.addressGroup = 145049859127643291158427056828983572457, .node = "testNode-48"}: -1
AddressGroupSpan{.addressGroup = 159379537364512178039209337464128590911, .node = "testNode-50"}: -1
AddressGroupSpan{.addressGroup = 170814458879235919546793320233963616342, .node = "testNode-50"}: -1
AddressGroupSpan{.addressGroup = 176222550332599395914515466248412980097, .node = "testNode-50"}: -1
AddressGroupSpan{.addressGroup = 191237941306182904637223214367089033722, .node = "testNode-49"}: -1
AddressGroupSpan{.addressGroup = 191666996465132554203310298692592636053, .node = "testNode-50"}: -1
AddressGroupSpan{.addressGroup = 192997154846823932430444027486549664749, .node = "testNode-48"}: -1
AddressGroupSpan{.addressGroup = 193512303236577385511766869180978382881, .node = "testNode-49"}: -1
AddressGroupSpan{.addressGroup = 196410774068037176278392170910557362834, .node = "testNode-48"}: -1
AddressGroupSpan{.addressGroup = 199908900147595800825852814881020681811, .node = "testNode-50"}: -1
AddressGroupSpan{.addressGroup = 204719468512002355151148736197610861336, .node = "testNode-49"}: -1
AddressGroupSpan{.addressGroup = 261573942032461131498792619653509043863, .node = "testNode-48"}: -1
AddressGroupSpan{.addressGroup = 283949543804316592665011763622762819468, .node = "testNode-50"}: -1
AddressGroupSpan{.addressGroup = 289230956037387926968456551129169380093, .node = "testNode-48"}: -1
AddressGroupSpan{.addressGroup = 293943541870597479161044488294921897506, .node = "testNode-48"}: -1
AddressGroupSpan{.addressGroup = 305238393628597377001513190946135696686, .node = "testNode-49"}: -1
AddressGroupSpan{.addressGroup = 308594811633025638703266067092239201868, .node = "testNode-48"}: -1
AddressGroupSpan{.addressGroup = 324097894006209167139251399443933610346, .node = "testNode-50"}: -1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "0b7ff700-b184-5c64-b61e-9f5e0e4f695c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-489]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-489")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "0f9f3cbb-223d-566a-8017-99102e738a53", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-495]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-495")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "186ceca6-cfe6-5b24-b464-51fc996b731a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-492]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-492")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "1bb1441b-f958-5365-b979-a3d1c0327651", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-506]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-506")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "20cc0feb-897a-5b53-bf0b-20fbba3e7c33", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-500]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-500")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "3259be10-4eeb-5e63-882d-6c1fdc3935e7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-507]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-507")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "335c9086-858a-5057-b7a5-ccbef3c6f0c3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-509]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-509")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "54c401e2-aea9-5b14-9090-d42883ae2106", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-497]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-497")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "574ad907-66bf-52c1-aa00-f896f38bb8f5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-499]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-499")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "57a3a70c-faf6-5dc2-b2b2-ae3619af8b96", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-511]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-511")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "5d7c915f-be3d-5412-945b-db1343c0f53f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-493]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-493")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "62da29f8-0e21-533a-a892-7487a537a3ac", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-481]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-481")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "68e05d5d-5880-58b3-9750-b1a5778fbfd8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-486]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-486")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "6d1f9632-c71e-599b-b0ec-adcaf91077e9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-484]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-484")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "77e761e1-e7bb-5871-8def-353def0cd43f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-505]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-505")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "8081ab0a-8040-5336-933e-1bcfc92ff856", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-501]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-501")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "84933a89-3630-51b2-bfcb-fd7ea143e381", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-504]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-504")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "8fdf1677-dcc4-5416-93e7-b90771ef01fa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-491]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-491")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "9031b885-51d3-5614-97ac-172b40cc9095", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-510]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-510")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "9131e664-70d3-5abf-94cb-98daedc563ed", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-485]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-485")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "91951d2b-3de3-5257-b6f0-31b371a54821", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-496]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-496")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "93c356d0-6c6d-5097-bb7d-bb85c09b5a92", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-487]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-487")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "96650dbe-ea2a-56ce-a24d-89a33aab9e53", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-503]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-503")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "9a038913-f2a8-5e80-b5fa-9de255b27318", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-498]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-498")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "a7ed93c4-ba2e-5748-b2ae-88a30d10f7a2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-480]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-480")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "c4c94f0b-1a71-5a01-b4f3-bd4e12ce5697", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-488]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-488")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "d59eb162-99df-5d04-b8c1-e86f9cd0af8c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-502]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-502")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "d997db1c-c2f0-5d09-b50c-8ebc67d1c2fd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-483]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-483")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "dd237788-61ef-5c72-820a-fe6a4fbf8622", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-482]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-482")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "e5a2c6b8-18d5-5bad-ba1b-b514a461652e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-494]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-494")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "e82932e7-38ac-56a0-aa33-7870f6b2b64c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-490]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-490")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "f3d2fbe0-bc42-55de-8f18-ac99d710c16a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-508]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-508")], .matchExpressions = []}}}}: -1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 15285939464778960935441106852144703836, .node = "testNode-48", .pods = [k8spolicy.PodReference{.name = "testPod-489", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 20765226908120027851174659223444490835, .node = "testNode-49", .pods = [k8spolicy.PodReference{.name = "testPod-495", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 32467039824443061879633881427199357722, .node = "testNode-49", .pods = [k8spolicy.PodReference{.name = "testPod-492", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 36809573850335376007923764512144127569, .node = "testNode-50", .pods = [k8spolicy.PodReference{.name = "testPod-506", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 43594847321568024972030832253467524147, .node = "testNode-50", .pods = [k8spolicy.PodReference{.name = "testPod-500", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 66927369159555061421903542969454638567, .node = "testNode-50", .pods = [k8spolicy.PodReference{.name = "testPod-507", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 68271250420901333888645536827117596867, .node = "testNode-50", .pods = [k8spolicy.PodReference{.name = "testPod-509", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 112672880072235221701653286541383835910, .node = "testNode-49", .pods = [k8spolicy.PodReference{.name = "testPod-497", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 116031467470099154839321687713899067637, .node = "testNode-49", .pods = [k8spolicy.PodReference{.name = "testPod-499", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 116492568212039708824803804426363964310, .node = "testNode-51", .pods = [k8spolicy.PodReference{.name = "testPod-511", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 124264996953399756515883770719624033599, .node = "testNode-49", .pods = [k8spolicy.PodReference{.name = "testPod-493", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 131397115533833478951658092594978071468, .node = "testNode-48", .pods = [k8spolicy.PodReference{.name = "testPod-481", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 139404679717645147853029719067887386584, .node = "testNode-48", .pods = [k8spolicy.PodReference{.name = "testPod-486", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 145049859127643291158427056828983572457, .node = "testNode-48", .pods = [k8spolicy.PodReference{.name = "testPod-484", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 159379537364512178039209337464128590911, .node = "testNode-50", .pods = [k8spolicy.PodReference{.name = "testPod-505", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 170814458879235919546793320233963616342, .node = "testNode-50", .pods = [k8spolicy.PodReference{.name = "testPod-501", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 176222550332599395914515466248412980097, .node = "testNode-50", .pods = [k8spolicy.PodReference{.name = "testPod-504", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 191237941306182904637223214367089033722, .node = "testNode-49", .pods = [k8spolicy.PodReference{.name = "testPod-491", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 191666996465132554203310298692592636053, .node = "testNode-51", .pods = [k8spolicy.PodReference{.name = "testPod-510", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 192997154846823932430444027486549664749, .node = "testNode-48", .pods = [k8spolicy.PodReference{.name = "testPod-485", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 193512303236577385511766869180978382881, .node = "testNode-49", .pods = [k8spolicy.PodReference{.name = "testPod-496", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 196410774068037176278392170910557362834, .node = "testNode-48", .pods = [k8spolicy.PodReference{.name = "testPod-487", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 199908900147595800825852814881020681811, .node = "testNode-50", .pods = [k8spolicy.PodReference{.name = "testPod-503", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 204719468512002355151148736197610861336, .node = "testNode-49", .pods = [k8spolicy.PodReference{.name = "testPod-498", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 223214646752105529115657412587042174882, .node = "testNode-48", .pods = [k8spolicy.PodReference{.name = "testPod-480", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 261573942032461131498792619653509043863, .node = "testNode-48", .pods = [k8spolicy.PodReference{.name = "testPod-488", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 283949543804316592665011763622762819468, .node = "testNode-50", .pods = [k8spolicy.PodReference{.name = "testPod-502", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 289230956037387926968456551129169380093, .node = "testNode-48", .pods = [k8spolicy.PodReference{.name = "testPod-483", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 293943541870597479161044488294921897506, .node = "testNode-48", .pods = [k8spolicy.PodReference{.name = "testPod-482", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 305238393628597377001513190946135696686, .node = "testNode-49", .pods = [k8spolicy.PodReference{.name = "testPod-494", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 308594811633025638703266067092239201868, .node = "testNode-49", .pods = [k8spolicy.PodReference{.name = "testPod-490", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 324097894006209167139251399443933610346, .node = "testNode-50", .pods = [k8spolicy.PodReference{.name = "testPod-508", .namespace = "testNamespace"}]}: -1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 15285939464778960935441106852144703836, .span = "testNode-48"}: -1
AppliedToGroupSpan{.appliedToGroup = 20765226908120027851174659223444490835, .span = "testNode-49"}: -1
AppliedToGroupSpan{.appliedToGroup = 32467039824443061879633881427199357722, .span = "testNode-49"}: -1
AppliedToGroupSpan{.appliedToGroup = 36809573850335376007923764512144127569, .span = "testNode-50"}: -1
AppliedToGroupSpan{.appliedToGroup = 43594847321568024972030832253467524147, .span = "testNode-50"}: -1
AppliedToGroupSpan{.appliedToGroup = 66927369159555061421903542969454638567, .span = "testNode-50"}: -1
AppliedToGroupSpan{.appliedToGroup = 68271250420901333888645536827117596867, .span = "testNode-50"}: -1
AppliedToGroupSpan{.appliedToGroup = 112672880072235221701653286541383835910, .span = "testNode-49"}: -1
AppliedToGroupSpan{.appliedToGroup = 116031467470099154839321687713899067637, .span = "testNode-49"}: -1
AppliedToGroupSpan{.appliedToGroup = 116492568212039708824803804426363964310, .span = "testNode-51"}: -1
AppliedToGroupSpan{.appliedToGroup = 124264996953399756515883770719624033599, .span = "testNode-49"}: -1
AppliedToGroupSpan{.appliedToGroup = 131397115533833478951658092594978071468, .span = "testNode-48"}: -1
AppliedToGroupSpan{.appliedToGroup = 139404679717645147853029719067887386584, .span = "testNode-48"}: -1
AppliedToGroupSpan{.appliedToGroup = 145049859127643291158427056828983572457, .span = "testNode-48"}: -1
AppliedToGroupSpan{.appliedToGroup = 159379537364512178039209337464128590911, .span = "testNode-50"}: -1
AppliedToGroupSpan{.appliedToGroup = 170814458879235919546793320233963616342, .span = "testNode-50"}: -1
AppliedToGroupSpan{.appliedToGroup = 176222550332599395914515466248412980097, .span = "testNode-50"}: -1
AppliedToGroupSpan{.appliedToGroup = 191237941306182904637223214367089033722, .span = "testNode-49"}: -1
AppliedToGroupSpan{.appliedToGroup = 191666996465132554203310298692592636053, .span = "testNode-51"}: -1
AppliedToGroupSpan{.appliedToGroup = 192997154846823932430444027486549664749, .span = "testNode-48"}: -1
AppliedToGroupSpan{.appliedToGroup = 193512303236577385511766869180978382881, .span = "testNode-49"}: -1
AppliedToGroupSpan{.appliedToGroup = 196410774068037176278392170910557362834, .span = "testNode-48"}: -1
AppliedToGroupSpan{.appliedToGroup = 199908900147595800825852814881020681811, .span = "testNode-50"}: -1
AppliedToGroupSpan{.appliedToGroup = 204719468512002355151148736197610861336, .span = "testNode-49"}: -1
AppliedToGroupSpan{.appliedToGroup = 223214646752105529115657412587042174882, .span = "testNode-48"}: -1
AppliedToGroupSpan{.appliedToGroup = 261573942032461131498792619653509043863, .span = "testNode-48"}: -1
AppliedToGroupSpan{.appliedToGroup = 283949543804316592665011763622762819468, .span = "testNode-50"}: -1
AppliedToGroupSpan{.appliedToGroup = 289230956037387926968456551129169380093, .span = "testNode-48"}: -1
AppliedToGroupSpan{.appliedToGroup = 293943541870597479161044488294921897506, .span = "testNode-48"}: -1
AppliedToGroupSpan{.appliedToGroup = 305238393628597377001513190946135696686, .span = "testNode-49"}: -1
AppliedToGroupSpan{.appliedToGroup = 308594811633025638703266067092239201868, .span = "testNode-49"}: -1
AppliedToGroupSpan{.appliedToGroup = 324097894006209167139251399443933610346, .span = "testNode-50"}: -1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-480"}, .name = "testNP-480", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [131397115533833478951658092594978071468], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [223214646752105529115657412587042174882]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-481"}, .name = "testNP-481", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [293943541870597479161044488294921897506], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [131397115533833478951658092594978071468]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-482"}, .name = "testNP-482", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [289230956037387926968456551129169380093], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [293943541870597479161044488294921897506]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-483"}, .name = "testNP-483", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [145049859127643291158427056828983572457], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [289230956037387926968456551129169380093]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-484"}, .name = "testNP-484", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [192997154846823932430444027486549664749], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [145049859127643291158427056828983572457]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-485"}, .name = "testNP-485", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [139404679717645147853029719067887386584], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [192997154846823932430444027486549664749]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-486"}, .name = "testNP-486", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [196410774068037176278392170910557362834], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [139404679717645147853029719067887386584]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-487"}, .name = "testNP-487", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [261573942032461131498792619653509043863], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [196410774068037176278392170910557362834]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-488"}, .name = "testNP-488", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [15285939464778960935441106852144703836], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [261573942032461131498792619653509043863]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-489"}, .name = "testNP-489", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [308594811633025638703266067092239201868], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [15285939464778960935441106852144703836]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-490"}, .name = "testNP-490", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [191237941306182904637223214367089033722], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [308594811633025638703266067092239201868]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-491"}, .name = "testNP-491", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [32467039824443061879633881427199357722], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [191237941306182904637223214367089033722]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-492"}, .name = "testNP-492", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [124264996953399756515883770719624033599], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [32467039824443061879633881427199357722]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-493"}, .name = "testNP-493", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [305238393628597377001513190946135696686], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [124264996953399756515883770719624033599]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-494"}, .name = "testNP-494", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [20765226908120027851174659223444490835], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [305238393628597377001513190946135696686]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-495"}, .name = "testNP-495", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [193512303236577385511766869180978382881], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [20765226908120027851174659223444490835]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-496"}, .name = "testNP-496", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [112672880072235221701653286541383835910], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [193512303236577385511766869180978382881]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-497"}, .name = "testNP-497", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [204719468512002355151148736197610861336], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [112672880072235221701653286541383835910]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-498"}, .name = "testNP-498", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [116031467470099154839321687713899067637], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [204719468512002355151148736197610861336]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-499"}, .name = "testNP-499", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [43594847321568024972030832253467524147], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [116031467470099154839321687713899067637]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-500"}, .name = "testNP-500", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [170814458879235919546793320233963616342], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [43594847321568024972030832253467524147]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-501"}, .name = "testNP-501", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [283949543804316592665011763622762819468], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [170814458879235919546793320233963616342]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-502"}, .name = "testNP-502", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [199908900147595800825852814881020681811], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [283949543804316592665011763622762819468]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-503"}, .name = "testNP-503", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [176222550332599395914515466248412980097], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [199908900147595800825852814881020681811]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-504"}, .name = "testNP-504", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [159379537364512178039209337464128590911], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [176222550332599395914515466248412980097]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-505"}, .name = "testNP-505", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [36809573850335376007923764512144127569], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [159379537364512178039209337464128590911]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-506"}, .name = "testNP-506", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [66927369159555061421903542969454638567], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [36809573850335376007923764512144127569]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-507"}, .name = "testNP-507", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [324097894006209167139251399443933610346], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [66927369159555061421903542969454638567]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-508"}, .name = "testNP-508", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [68271250420901333888645536827117596867], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [324097894006209167139251399443933610346]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-509"}, .name = "testNP-509", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [191666996465132554203310298692592636053], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [68271250420901333888645536827117596867]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-510"}, .name = "testNP-510", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [116492568212039708824803804426363964310], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [191666996465132554203310298692592636053]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-511"}, .name = "testNP-511", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [62341031866340521150147631079796698722], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [116492568212039708824803804426363964310]}: -1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-480", .policy = k8spolicy.UID{.uid = "testNP-480"}, .node = "testNode-48"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-481", .policy = k8spolicy.UID{.uid = "testNP-481"}, .node = "testNode-48"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-482", .policy = k8spolicy.UID{.uid = "testNP-482"}, .node = "testNode-48"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-483", .policy = k8spolicy.UID{.uid = "testNP-483"}, .node = "testNode-48"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-484", .policy = k8spolicy.UID{.uid = "testNP-484"}, .node = "testNode-48"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-485", .policy = k8spolicy.UID{.uid = "testNP-485"}, .node = "testNode-48"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-486", .policy = k8spolicy.UID{.uid = "testNP-486"}, .node = "testNode-48"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-487", .policy = k8spolicy.UID{.uid = "testNP-487"}, .node = "testNode-48"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-488", .policy = k8spolicy.UID{.uid = "testNP-488"}, .node = "testNode-48"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-489", .policy = k8spolicy.UID{.uid = "testNP-489"}, .node = "testNode-48"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-490", .policy = k8spolicy.UID{.uid = "testNP-490"}, .node = "testNode-49"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-491", .policy = k8spolicy.UID{.uid = "testNP-491"}, .node = "testNode-49"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-492", .policy = k8spolicy.UID{.uid = "testNP-492"}, .node = "testNode-49"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-493", .policy = k8spolicy.UID{.uid = "testNP-493"}, .node = "testNode-49"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-494", .policy = k8spolicy.UID{.uid = "testNP-494"}, .node = "testNode-49"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-495", .policy = k8spolicy.UID{.uid = "testNP-495"}, .node = "testNode-49"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-496", .policy = k8spolicy.UID{.uid = "testNP-496"}, .node = "testNode-49"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-497", .policy = k8spolicy.UID{.uid = "testNP-497"}, .node = "testNode-49"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-498", .policy = k8spolicy.UID{.uid = "testNP-498"}, .node = "testNode-49"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-499", .policy = k8spolicy.UID{.uid = "testNP-499"}, .node = "testNode-49"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-500", .policy = k8spolicy.UID{.uid = "testNP-500"}, .node = "testNode-50"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-501", .policy = k8spolicy.UID{.uid = "testNP-501"}, .node = "testNode-50"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-502", .policy = k8spolicy.UID{.uid = "testNP-502"}, .node = "testNode-50"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-503", .policy = k8spolicy.UID{.uid = "testNP-503"}, .node = "testNode-50"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-504", .policy = k8spolicy.UID{.uid = "testNP-504"}, .node = "testNode-50"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-505", .policy = k8spolicy.UID{.uid = "testNP-505"}, .node = "testNode-50"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-506", .policy = k8spolicy.UID{.uid = "testNP-506"}, .node = "testNode-50"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-507", .policy = k8spolicy.UID{.uid = "testNP-507"}, .node = "testNode-50"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-508", .policy = k8spolicy.UID{.uid = "testNP-508"}, .node = "testNode-50"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-509", .policy = k8spolicy.UID{.uid = "testNP-509"}, .node = "testNode-50"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-510", .policy = k8spolicy.UID{.uid = "testNP-510"}, .node = "testNode-51"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-511", .policy = k8spolicy.UID{.uid = "testNP-511"}, .node = "testNode-51"}: -1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 8229634560702391052776241933250494386, .address = "10.10.51.3"}: -1
AddressGroupAddress{.addressGroup = 14232468071222614535348801982135914749, .address = "10.10.54.3"}: -1
AddressGroupAddress{.addressGroup = 29435536122020052906747503909488473132, .address = "10.10.51.5"}: -1
AddressGroupAddress{.addressGroup = 29644515621417994721099823014874944300, .address = "10.10.51.6"}: -1
AddressGroupAddress{.addressGroup = 30436074364170848456919083761972781581, .address = "10.10.51.7"}: -1
AddressGroupAddress{.addressGroup = 65686884614282637257819458160059442230, .address = "10.10.53.5"}: -1
AddressGroupAddress{.addressGroup = 76658063762570752824355365434268741433, .address = "10.10.52.9"}: -1
AddressGroupAddress{.addressGroup = 105144560902369795861541564827746555151, .address = "10.10.53.0"}: -1
AddressGroupAddress{.addressGroup = 105656523857835973839951521763213982718, .address = "10.10.52.8"}: -1
AddressGroupAddress{.addressGroup = 108380654399831200078489882286633731861, .address = "10.10.52.1"}: -1
AddressGroupAddress{.addressGroup = 117676483127412805788601290616644530698, .address = "10.10.53.9"}: -1
AddressGroupAddress{.addressGroup = 131038245757410914016332923977725876785, .address = "10.10.53.2"}: -1
AddressGroupAddress{.addressGroup = 135810808942849378079330740019976198836, .address = "10.10.52.4"}: -1
AddressGroupAddress{.addressGroup = 158133749367560097904430833580574841052, .address = "10.10.51.9"}: -1
AddressGroupAddress{.addressGroup = 180866885775410243234165659278417624984, .address = "10.10.53.4"}: -1
AddressGroupAddress{.addressGroup = 184940591344517749211680088744131752436, .address = "10.10.52.7"}: -1
AddressGroupAddress{.addressGroup = 202989777748868913166239784758271932177, .address = "10.10.52.3"}: -1
AddressGroupAddress{.addressGroup = 203581441134047263832995090408603302366, .address = "10.10.51.4"}: -1
AddressGroupAddress{.addressGroup = 206404755120438934982652359893890714737, .address = "10.10.53.8"}: -1
AddressGroupAddress{.addressGroup = 218579834805490671634088408900231169156, .address = "10.10.54.4"}: -1
AddressGroupAddress{.addressGroup = 265577046745515205117160323215846862496, .address = "10.10.54.1"}: -1
AddressGroupAddress{.addressGroup = 268347418753327609134490422488782959401, .address = "10.10.52.0"}: -1
AddressGroupAddress{.addressGroup = 274415759412709511005621901501881015976, .address = "10.10.54.0"}: -1
AddressGroupAddress{.addressGroup = 275747909460525591475300468029188304250, .address = "10.10.52.2"}: -1
AddressGroupAddress{.addressGroup = 284549977203716569020171603229041009923, .address = "10.10.52.5"}: -1
AddressGroupAddress{.addressGroup = 298227549455423226500089697378161435076, .address = "10.10.53.7"}: -1
AddressGroupAddress{.addressGroup = 304827560790700988838046432387498807779, .address = "10.10.53.1"}: -1
AddressGroupAddress{.addressGroup = 311121656649555847997742035748626697827, .address = "10.10.53.3"}: -1
AddressGroupAddress{.addressGroup = 314967130113970593020714715183317001607, .address = "10.10.53.6"}: -1
AddressGroupAddress{.addressGroup = 325262480681412789558031267748123539468, .address = "10.10.52.6"}: -1
AddressGroupAddress{.addressGroup = 325904340575242165169053829298169979284, .address = "10.10.51.8"}: -1
AddressGroupAddress{.addressGroup = 328941688096963611315068354625204495198, .address = "10.10.54.2"}: -1
AddressGroupDescr:
AddressGroupDescr{.name = "0630f84f-81d1-5ee2-b98a-611177d87fb2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-513]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-513")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "0ab512da-56cf-54a2-8275-36b7bde5d0fd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-543]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-543")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "162513fa-bbef-51f4-af13-87b325aeb42c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-515]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-515")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "164d5376-d8e2-55b0-bc31-79ce70eb932c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-516]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-516")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "16e5c652-c9e8-5840-aed9-3048c557a20d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-517]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-517")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "316ad574-20a6-5c63-a8c8-5129a4276436", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-535]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-535")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "39abce59-27dc-542a-bff0-cdf854ea6f39", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-529]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-529")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "4f1a1b17-e151-5f3d-81e2-42c643e1d50f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-530]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-530")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "4f7cb4d0-d914-57f3-9718-0792de483bfe", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-528]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-528")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "51895ad2-3676-5db7-82b8-f6fdc1074715", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-521]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-521")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "5887aa90-0cc3-59bb-ab3c-6d2a8ccf720a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-539]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-539")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "62950c52-ab11-56fa-a3c5-a2d0750f9a31", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-532]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-532")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "662c35da-e73c-5b83-8481-5885bccbdab4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-524]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-524")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "76f773ca-c0dd-5080-a26f-50cc5b3918dc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-519]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-519")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "8811b1f3-cbf6-5535-bb08-341f311c7f98", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-534]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-534")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "8b224324-cd65-5c1f-adce-34db0042f1f4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-527]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-527")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "98b668bd-3598-55af-ab42-f60f22d1f711", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-523]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-523")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "99285bff-06f9-5c5b-87a5-eb084e92b9de", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-514]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-514")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "9b481c1f-75ae-5a8f-a340-8a8d48694c71", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-538]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-538")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "a470f1e5-9041-5f5e-b479-f8ba6a4b0484", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-544]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-544")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "c7cc4758-0683-5510-a151-4927dba0eea0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-541]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-541")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "c9e1d53a-be59-5b99-84d2-b4e181bd7329", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-520]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-520")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "ce728d86-0919-52c1-aff3-0596a43a5ea8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-540]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-540")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "cf731d97-846e-5fb2-8618-a320790d6d7a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-522]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-522")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "d6125509-8f88-551f-a8ba-b129aebca503", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-525]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-525")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "e05c896a-0105-56e7-b8b4-8d9a6228a1c4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-537]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-537")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "e553a718-aaa9-5335-9db0-3031f9c891e3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-531]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-531")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "ea0fd9fb-2cc4-5cbc-ad89-06eda65d0e63", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-533]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-533")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "ecf47676-066f-5d50-b4c2-dfaedfa02587", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-536]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-536")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "f4b3466f-1dc8-5c98-b96b-07802eec780c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-526]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-526")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "f52ee491-f23f-5dad-b0f9-01c46c122194", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-518]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-518")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "f777dd5d-64c1-5510-afc9-350654fda35e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-542]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-542")], .matchExpressions = []}}}}: -1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 8229634560702391052776241933250494386, .node = "testNode-51"}: -1
AddressGroupSpan{.addressGroup = 14232468071222614535348801982135914749, .node = "testNode-54"}: -1
AddressGroupSpan{.addressGroup = 29435536122020052906747503909488473132, .node = "testNode-51"}: -1
AddressGroupSpan{.addressGroup = 29644515621417994721099823014874944300, .node = "testNode-51"}: -1
AddressGroupSpan{.addressGroup = 30436074364170848456919083761972781581, .node = "testNode-51"}: -1
AddressGroupSpan{.addressGroup = 65686884614282637257819458160059442230, .node = "testNode-53"}: -1
AddressGroupSpan{.addressGroup = 76658063762570752824355365434268741433, .node = "testNode-52"}: -1
AddressGroupSpan{.addressGroup = 105144560902369795861541564827746555151, .node = "testNode-52"}: -1
AddressGroupSpan{.addressGroup = 105656523857835973839951521763213982718, .node = "testNode-52"}: -1
AddressGroupSpan{.addressGroup = 108380654399831200078489882286633731861, .node = "testNode-52"}: -1
AddressGroupSpan{.addressGroup = 117676483127412805788601290616644530698, .node = "testNode-53"}: -1
AddressGroupSpan{.addressGroup = 131038245757410914016332923977725876785, .node = "testNode-53"}: -1
AddressGroupSpan{.addressGroup = 135810808942849378079330740019976198836, .node = "testNode-52"}: -1
AddressGroupSpan{.addressGroup = 158133749367560097904430833580574841052, .node = "testNode-51"}: -1
AddressGroupSpan{.addressGroup = 180866885775410243234165659278417624984, .node = "testNode-53"}: -1
AddressGroupSpan{.addressGroup = 184940591344517749211680088744131752436, .node = "testNode-52"}: -1
AddressGroupSpan{.addressGroup = 202989777748868913166239784758271932177, .node = "testNode-52"}: -1
AddressGroupSpan{.addressGroup = 203581441134047263832995090408603302366, .node = "testNode-51"}: -1
AddressGroupSpan{.addressGroup = 206404755120438934982652359893890714737, .node = "testNode-53"}: -1
AddressGroupSpan{.addressGroup = 218579834805490671634088408900231169156, .node = "testNode-54"}: -1
AddressGroupSpan{.addressGroup = 265577046745515205117160323215846862496, .node = "testNode-54"}: -1
AddressGroupSpan{.addressGroup = 268347418753327609134490422488782959401, .node = "testNode-51"}: -1
AddressGroupSpan{.addressGroup = 274415759412709511005621901501881015976, .node = "testNode-53"}: -1
AddressGroupSpan{.addressGroup = 275747909460525591475300468029188304250, .node = "testNode-52"}: -1
AddressGroupSpan{.addressGroup = 284549977203716569020171603229041009923, .node = "testNode-52"}: -1
AddressGroupSpan{.addressGroup = 298227549455423226500089697378161435076, .node = "testNode-53"}: -1
AddressGroupSpan{.addressGroup = 304827560790700988838046432387498807779, .node = "testNode-53"}: -1
AddressGroupSpan{.addressGroup = 311121656649555847997742035748626697827, .node = "testNode-53"}: -1
AddressGroupSpan{.addressGroup = 314967130113970593020714715183317001607, .node = "testNode-53"}: -1
AddressGroupSpan{.addressGroup = 325262480681412789558031267748123539468, .node = "testNode-52"}: -1
AddressGroupSpan{.addressGroup = 325904340575242165169053829298169979284, .node = "testNode-51"}: -1
AddressGroupSpan{.addressGroup = 328941688096963611315068354625204495198, .node = "testNode-54"}: -1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "0630f84f-81d1-5ee2-b98a-611177d87fb2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-513]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-513")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "0ab512da-56cf-54a2-8275-36b7bde5d0fd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-543]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-543")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "162513fa-bbef-51f4-af13-87b325aeb42c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-515]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-515")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "164d5376-d8e2-55b0-bc31-79ce70eb932c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-516]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-516")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "16e5c652-c9e8-5840-aed9-3048c557a20d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-517]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-517")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "2ee6722d-49b3-5ed1-b72b-c5d7e14eee62", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-512]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-512")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "316ad574-20a6-5c63-a8c8-5129a4276436", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-535]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-535")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "39abce59-27dc-542a-bff0-cdf854ea6f39", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-529]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-529")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "4f1a1b17-e151-5f3d-81e2-42c643e1d50f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-530]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-530")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "4f7cb4d0-d914-57f3-9718-0792de483bfe", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-528]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-528")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "51895ad2-3676-5db7-82b8-f6fdc1074715", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-521]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-521")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "5887aa90-0cc3-59bb-ab3c-6d2a8ccf720a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-539]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-539")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "62950c52-ab11-56fa-a3c5-a2d0750f9a31", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-532]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-532")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "662c35da-e73c-5b83-8481-5885bccbdab4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-524]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-524")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "76f773ca-c0dd-5080-a26f-50cc5b3918dc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-519]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-519")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "8811b1f3-cbf6-5535-bb08-341f311c7f98", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-534]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-534")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "8b224324-cd65-5c1f-adce-34db0042f1f4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-527]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-527")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "98b668bd-3598-55af-ab42-f60f22d1f711", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-523]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-523")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "99285bff-06f9-5c5b-87a5-eb084e92b9de", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-514]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-514")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "9b481c1f-75ae-5a8f-a340-8a8d48694c71", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-538]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-538")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "c7cc4758-0683-5510-a151-4927dba0eea0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-541]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-541")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "c9e1d53a-be59-5b99-84d2-b4e181bd7329", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-520]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-520")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "ce728d86-0919-52c1-aff3-0596a43a5ea8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-540]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-540")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "cf731d97-846e-5fb2-8618-a320790d6d7a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-522]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-522")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "d6125509-8f88-551f-a8ba-b129aebca503", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-525]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-525")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "e05c896a-0105-56e7-b8b4-8d9a6228a1c4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-537]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-537")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "e553a718-aaa9-5335-9db0-3031f9c891e3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-531]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-531")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "ea0fd9fb-2cc4-5cbc-ad89-06eda65d0e63", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-533]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-533")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "ecf47676-066f-5d50-b4c2-dfaedfa02587", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-536]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-536")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "f4b3466f-1dc8-5c98-b96b-07802eec780c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-526]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-526")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "f52ee491-f23f-5dad-b0f9-01c46c122194", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-518]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-518")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "f777dd5d-64c1-5510-afc9-350654fda35e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-542]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-542")], .matchExpressions = []}}}}: -1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 8229634560702391052776241933250494386, .node = "testNode-51", .pods = [k8spolicy.PodReference{.name = "testPod-513", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 14232468071222614535348801982135914749, .node = "testNode-54", .pods = [k8spolicy.PodReference{.name = "testPod-543", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 29435536122020052906747503909488473132, .node = "testNode-51", .pods = [k8spolicy.PodReference{.name = "testPod-515", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 29644515621417994721099823014874944300, .node = "testNode-51", .pods = [k8spolicy.PodReference{.name = "testPod-516", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 30436074364170848456919083761972781581, .node = "testNode-51", .pods = [k8spolicy.PodReference{.name = "testPod-517", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 62341031866340521150147631079796698722, .node = "testNode-51", .pods = [k8spolicy.PodReference{.name = "testPod-512", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 65686884614282637257819458160059442230, .node = "testNode-53", .pods = [k8spolicy.PodReference{.name = "testPod-535", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 76658063762570752824355365434268741433, .node = "testNode-52", .pods = [k8spolicy.PodReference{.name = "testPod-529", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 105144560902369795861541564827746555151, .node = "testNode-53", .pods = [k8spolicy.PodReference{.name = "testPod-530", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 105656523857835973839951521763213982718, .node = "testNode-52", .pods = [k8spolicy.PodReference{.name = "testPod-528", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 108380654399831200078489882286633731861, .node = "testNode-52", .pods = [k8spolicy.PodReference{.name = "testPod-521", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 117676483127412805788601290616644530698, .node = "testNode-53", .pods = [k8spolicy.PodReference{.name = "testPod-539", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 131038245757410914016332923977725876785, .node = "testNode-53", .pods = [k8spolicy.PodReference{.name = "testPod-532", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 135810808942849378079330740019976198836, .node = "testNode-52", .pods = [k8spolicy.PodReference{.name = "testPod-524", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 158133749367560097904430833580574841052, .node = "testNode-51", .pods = [k8spolicy.PodReference{.name = "testPod-519", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 180866885775410243234165659278417624984, .node = "testNode-53", .pods = [k8spolicy.PodReference{.name = "testPod-534", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 184940591344517749211680088744131752436, .node = "testNode-52", .pods = [k8spolicy.PodReference{.name = "testPod-527", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 202989777748868913166239784758271932177, .node = "testNode-52", .pods = [k8spolicy.PodReference{.name = "testPod-523", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 203581441134047263832995090408603302366, .node = "testNode-51", .pods = [k8spolicy.PodReference{.name = "testPod-514", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 206404755120438934982652359893890714737, .node = "testNode-53", .pods = [k8spolicy.PodReference{.name = "testPod-538", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 265577046745515205117160323215846862496, .node = "testNode-54", .pods = [k8spolicy.PodReference{.name = "testPod-541", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 268347418753327609134490422488782959401, .node = "testNode-52", .pods = [k8spolicy.PodReference{.name = "testPod-520", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 274415759412709511005621901501881015976, .node = "testNode-54", .pods = [k8spolicy.PodReference{.name = "testPod-540", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 275747909460525591475300468029188304250, .node = "testNode-52", .pods = [k8spolicy.PodReference{.name = "testPod-522", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 284549977203716569020171603229041009923, .node = "testNode-52", .pods = [k8spolicy.PodReference{.name = "testPod-525", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 298227549455423226500089697378161435076, .node = "testNode-53", .pods = [k8spolicy.PodReference{.name = "testPod-537", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 304827560790700988838046432387498807779, .node = "testNode-53", .pods = [k8spolicy.PodReference{.name = "testPod-531", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 311121656649555847997742035748626697827, .node = "testNode-53", .pods = [k8spolicy.PodReference{.name = "testPod-533", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 314967130113970593020714715183317001607, .node = "testNode-53", .pods = [k8spolicy.PodReference{.name = "testPod-536", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 325262480681412789558031267748123539468, .node = "testNode-52", .pods = [k8spolicy.PodReference{.name = "testPod-526", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 325904340575242165169053829298169979284, .node = "testNode-51", .pods = [k8spolicy.PodReference{.name = "testPod-518", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 328941688096963611315068354625204495198, .node = "testNode-54", .pods = [k8spolicy.PodReference{.name = "testPod-542", .namespace = "testNamespace"}]}: -1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 8229634560702391052776241933250494386, .span = "testNode-51"}: -1
AppliedToGroupSpan{.appliedToGroup = 14232468071222614535348801982135914749, .span = "testNode-54"}: -1
AppliedToGroupSpan{.appliedToGroup = 29435536122020052906747503909488473132, .span = "testNode-51"}: -1
AppliedToGroupSpan{.appliedToGroup = 29644515621417994721099823014874944300, .span = "testNode-51"}: -1
AppliedToGroupSpan{.appliedToGroup = 30436074364170848456919083761972781581, .span = "testNode-51"}: -1
AppliedToGroupSpan{.appliedToGroup = 62341031866340521150147631079796698722, .span = "testNode-51"}: -1
AppliedToGroupSpan{.appliedToGroup = 65686884614282637257819458160059442230, .span = "testNode-53"}: -1
AppliedToGroupSpan{.appliedToGroup = 76658063762570752824355365434268741433, .span = "testNode-52"}: -1
AppliedToGroupSpan{.appliedToGroup = 105144560902369795861541564827746555151, .span = "testNode-53"}: -1
AppliedToGroupSpan{.appliedToGroup = 105656523857835973839951521763213982718, .span = "testNode-52"}: -1
AppliedToGroupSpan{.appliedToGroup = 108380654399831200078489882286633731861, .span = "testNode-52"}: -1
AppliedToGroupSpan{.appliedToGroup = 117676483127412805788601290616644530698, .span = "testNode-53"}: -1
AppliedToGroupSpan{.appliedToGroup = 131038245757410914016332923977725876785, .span = "testNode-53"}: -1
AppliedToGroupSpan{.appliedToGroup = 135810808942849378079330740019976198836, .span = "testNode-52"}: -1
AppliedToGroupSpan{.appliedToGroup = 158133749367560097904430833580574841052, .span = "testNode-51"}: -1
AppliedToGroupSpan{.appliedToGroup = 180866885775410243234165659278417624984, .span = "testNode-53"}: -1
AppliedToGroupSpan{.appliedToGroup = 184940591344517749211680088744131752436, .span = "testNode-52"}: -1
AppliedToGroupSpan{.appliedToGroup = 202989777748868913166239784758271932177, .span = "testNode-52"}: -1
AppliedToGroupSpan{.appliedToGroup = 203581441134047263832995090408603302366, .span = "testNode-51"}: -1
AppliedToGroupSpan{.appliedToGroup = 206404755120438934982652359893890714737, .span = "testNode-53"}: -1
AppliedToGroupSpan{.appliedToGroup = 265577046745515205117160323215846862496, .span = "testNode-54"}: -1
AppliedToGroupSpan{.appliedToGroup = 268347418753327609134490422488782959401, .span = "testNode-52"}: -1
AppliedToGroupSpan{.appliedToGroup = 274415759412709511005621901501881015976, .span = "testNode-54"}: -1
AppliedToGroupSpan{.appliedToGroup = 275747909460525591475300468029188304250, .span = "testNode-52"}: -1
AppliedToGroupSpan{.appliedToGroup = 284549977203716569020171603229041009923, .span = "testNode-52"}: -1
AppliedToGroupSpan{.appliedToGroup = 298227549455423226500089697378161435076, .span = "testNode-53"}: -1
AppliedToGroupSpan{.appliedToGroup = 304827560790700988838046432387498807779, .span = "testNode-53"}: -1
AppliedToGroupSpan{.appliedToGroup = 311121656649555847997742035748626697827, .span = "testNode-53"}: -1
AppliedToGroupSpan{.appliedToGroup = 314967130113970593020714715183317001607, .span = "testNode-53"}: -1
AppliedToGroupSpan{.appliedToGroup = 325262480681412789558031267748123539468, .span = "testNode-52"}: -1
AppliedToGroupSpan{.appliedToGroup = 325904340575242165169053829298169979284, .span = "testNode-51"}: -1
AppliedToGroupSpan{.appliedToGroup = 328941688096963611315068354625204495198, .span = "testNode-54"}: -1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-512"}, .name = "testNP-512", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [8229634560702391052776241933250494386], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [62341031866340521150147631079796698722]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-513"}, .name = "testNP-513", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [203581441134047263832995090408603302366], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [8229634560702391052776241933250494386]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-514"}, .name = "testNP-514", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [29435536122020052906747503909488473132], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [203581441134047263832995090408603302366]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-515"}, .name = "testNP-515", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [29644515621417994721099823014874944300], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [29435536122020052906747503909488473132]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-516"}, .name = "testNP-516", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [30436074364170848456919083761972781581], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [29644515621417994721099823014874944300]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-517"}, .name = "testNP-517", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [325904340575242165169053829298169979284], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [30436074364170848456919083761972781581]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-518"}, .name = "testNP-518", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [158133749367560097904430833580574841052], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [325904340575242165169053829298169979284]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-519"}, .name = "testNP-519", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [268347418753327609134490422488782959401], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [158133749367560097904430833580574841052]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-520"}, .name = "testNP-520", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [108380654399831200078489882286633731861], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [268347418753327609134490422488782959401]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-521"}, .name = "testNP-521", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [275747909460525591475300468029188304250], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [108380654399831200078489882286633731861]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-522"}, .name = "testNP-522", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [202989777748868913166239784758271932177], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [275747909460525591475300468029188304250]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-523"}, .name = "testNP-523", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [135810808942849378079330740019976198836], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [202989777748868913166239784758271932177]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-524"}, .name = "testNP-524", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [284549977203716569020171603229041009923], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [135810808942849378079330740019976198836]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-525"}, .name = "testNP-525", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [325262480681412789558031267748123539468], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [284549977203716569020171603229041009923]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-526"}, .name = "testNP-526", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [184940591344517749211680088744131752436], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [325262480681412789558031267748123539468]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-527"}, .name = "testNP-527", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [105656523857835973839951521763213982718], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [184940591344517749211680088744131752436]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-528"}, .name = "testNP-528", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [76658063762570752824355365434268741433], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [105656523857835973839951521763213982718]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-529"}, .name = "testNP-529", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [105144560902369795861541564827746555151], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [76658063762570752824355365434268741433]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-530"}, .name = "testNP-530", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [304827560790700988838046432387498807779], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [105144560902369795861541564827746555151]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-531"}, .name = "testNP-531", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [131038245757410914016332923977725876785], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [304827560790700988838046432387498807779]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-532"}, .name = "testNP-532", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [311121656649555847997742035748626697827], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [131038245757410914016332923977725876785]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-533"}, .name = "testNP-533", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [180866885775410243234165659278417624984], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [311121656649555847997742035748626697827]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-534"}, .name = "testNP-534", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [65686884614282637257819458160059442230], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [180866885775410243234165659278417624984]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-535"}, .name = "testNP-535", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [314967130113970593020714715183317001607], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [65686884614282637257819458160059442230]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-536"}, .name = "testNP-536", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [298227549455423226500089697378161435076], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [314967130113970593020714715183317001607]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-537"}, .name = "testNP-537", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [206404755120438934982652359893890714737], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [298227549455423226500089697378161435076]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-538"}, .name = "testNP-538", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [117676483127412805788601290616644530698], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [206404755120438934982652359893890714737]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-539"}, .name = "testNP-539", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [274415759412709511005621901501881015976], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [117676483127412805788601290616644530698]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-540"}, .name = "testNP-540", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [265577046745515205117160323215846862496], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [274415759412709511005621901501881015976]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-541"}, .name = "testNP-541", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [328941688096963611315068354625204495198], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [265577046745515205117160323215846862496]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-542"}, .name = "testNP-542", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [14232468071222614535348801982135914749], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [328941688096963611315068354625204495198]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-543"}, .name = "testNP-543", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [218579834805490671634088408900231169156], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [14232468071222614535348801982135914749]}: -1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-512", .policy = k8spolicy.UID{.uid = "testNP-512"}, .node = "testNode-51"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-513", .policy = k8spolicy.UID{.uid = "testNP-513"}, .node = "testNode-51"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-514", .policy = k8spolicy.UID{.uid = "testNP-514"}, .node = "testNode-51"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-515", .policy = k8spolicy.UID{.uid = "testNP-515"}, .node = "testNode-51"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-516", .policy = k8spolicy.UID{.uid = "testNP-516"}, .node = "testNode-51"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-517", .policy = k8spolicy.UID{.uid = "testNP-517"}, .node = "testNode-51"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-518", .policy = k8spolicy.UID{.uid = "testNP-518"}, .node = "testNode-51"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-519", .policy = k8spolicy.UID{.uid = "testNP-519"}, .node = "testNode-51"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-520", .policy = k8spolicy.UID{.uid = "testNP-520"}, .node = "testNode-52"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-521", .policy = k8spolicy.UID{.uid = "testNP-521"}, .node = "testNode-52"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-522", .policy = k8spolicy.UID{.uid = "testNP-522"}, .node = "testNode-52"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-523", .policy = k8spolicy.UID{.uid = "testNP-523"}, .node = "testNode-52"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-524", .policy = k8spolicy.UID{.uid = "testNP-524"}, .node = "testNode-52"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-525", .policy = k8spolicy.UID{.uid = "testNP-525"}, .node = "testNode-52"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-526", .policy = k8spolicy.UID{.uid = "testNP-526"}, .node = "testNode-52"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-527", .policy = k8spolicy.UID{.uid = "testNP-527"}, .node = "testNode-52"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-528", .policy = k8spolicy.UID{.uid = "testNP-528"}, .node = "testNode-52"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-529", .policy = k8spolicy.UID{.uid = "testNP-529"}, .node = "testNode-52"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-530", .policy = k8spolicy.UID{.uid = "testNP-530"}, .node = "testNode-53"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-531", .policy = k8spolicy.UID{.uid = "testNP-531"}, .node = "testNode-53"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-532", .policy = k8spolicy.UID{.uid = "testNP-532"}, .node = "testNode-53"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-533", .policy = k8spolicy.UID{.uid = "testNP-533"}, .node = "testNode-53"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-534", .policy = k8spolicy.UID{.uid = "testNP-534"}, .node = "testNode-53"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-535", .policy = k8spolicy.UID{.uid = "testNP-535"}, .node = "testNode-53"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-536", .policy = k8spolicy.UID{.uid = "testNP-536"}, .node = "testNode-53"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-537", .policy = k8spolicy.UID{.uid = "testNP-537"}, .node = "testNode-53"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-538", .policy = k8spolicy.UID{.uid = "testNP-538"}, .node = "testNode-53"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-539", .policy = k8spolicy.UID{.uid = "testNP-539"}, .node = "testNode-53"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-540", .policy = k8spolicy.UID{.uid = "testNP-540"}, .node = "testNode-54"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-541", .policy = k8spolicy.UID{.uid = "testNP-541"}, .node = "testNode-54"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-542", .policy = k8spolicy.UID{.uid = "testNP-542"}, .node = "testNode-54"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-543", .policy = k8spolicy.UID{.uid = "testNP-543"}, .node = "testNode-54"}: -1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 3698565567761284773674183133768389876, .address = "10.10.55.0"}: -1
AddressGroupAddress{.addressGroup = 38469004411742596765300615610796630611, .address = "10.10.57.3"}: -1
AddressGroupAddress{.addressGroup = 48288457754810703184815458934363451759, .address = "10.10.57.2"}: -1
AddressGroupAddress{.addressGroup = 61049404469723358743205219098306072777, .address = "10.10.56.0"}: -1
AddressGroupAddress{.addressGroup = 85130877478412951017863325290158019161, .address = "10.10.54.5"}: -1
AddressGroupAddress{.addressGroup = 89402438667876199577589705354300003756, .address = "10.10.57.0"}: -1
AddressGroupAddress{.addressGroup = 97087136540025041047262336400861675664, .address = "10.10.55.8"}: -1
AddressGroupAddress{.addressGroup = 115673809356679543076475782246467850655, .address = "10.10.55.4"}: -1
AddressGroupAddress{.addressGroup = 118191558916946867538941719763234107815, .address = "10.10.55.7"}: -1
AddressGroupAddress{.addressGroup = 133493702797897068806724389960223829245, .address = "10.10.56.5"}: -1
AddressGroupAddress{.addressGroup = 144416684887245579966085852599866746411, .address = "10.10.56.4"}: -1
AddressGroupAddress{.addressGroup = 146901809052678293612234659248706662050, .address = "10.10.54.6"}: -1
AddressGroupAddress{.addressGroup = 147119339619296210999174965238639137849, .address = "10.10.55.6"}: -1
AddressGroupAddress{.addressGroup = 147744343738083911001336650139134750691, .address = "10.10.56.8"}: -1
AddressGroupAddress{.addressGroup = 173584275962899884541534295319853893338, .address = "10.10.55.5"}: -1
AddressGroupAddress{.addressGroup = 204617623759565531733154411673712046107, .address = "10.10.56.2"}: -1
AddressGroupAddress{.addressGroup = 207733574824023921290409144557354584257, .address = "10.10.55.2"}: -1
AddressGroupAddress{.addressGroup = 213850926142716301545939105494148269956, .address = "10.10.54.8"}: -1
AddressGroupAddress{.addressGroup = 216721347533732403703816859549927070651, .address = "10.10.56.3"}: -1
AddressGroupAddress{.addressGroup = 226281334169583360363853237381768750119, .address = "10.10.56.9"}: -1
AddressGroupAddress{.addressGroup = 231211642914871539184945702446472729908, .address = "10.10.55.3"}: -1
AddressGroupAddress{.addressGroup = 243834848577258421488380798719830024495, .address = "10.10.57.5"}: -1
AddressGroupAddress{.addressGroup = 259339577732754410428427643600155990530, .address = "10.10.56.1"}: -1
AddressGroupAddress{.addressGroup = 259572815831806965443620879555306339820, .address = "10.10.55.9"}: -1
AddressGroupAddress{.addressGroup = 280278323948838701533831038434406539922, .address = "10.10.57.1"}: -1
AddressGroupAddress{.addressGroup = 284379885600608561712312307129480906026, .address = "10.10.54.9"}: -1
AddressGroupAddress{.addressGroup = 291721609273874322207010668059989651630, .address = "10.10.54.7"}: -1
AddressGroupAddress{.addressGroup = 298227591142740907393074763131413360810, .address = "10.10.55.1"}: -1
AddressGroupAddress{.addressGroup = 309275296280010695383732444637918130861, .address = "10.10.56.7"}: -1
AddressGroupAddress{.addressGroup = 320408731308420040012354350458098051903, .address = "10.10.57.6"}: -1
AddressGroupAddress{.addressGroup = 328324532222090837284175417000548888940, .address = "10.10.57.4"}: -1
AddressGroupAddress{.addressGroup = 332792167385303851766172650950764032961, .address = "10.10.56.6"}: -1
AddressGroupDescr:
AddressGroupDescr{.name = "02c8515c-8244-50ed-9651-03b5154714f4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-550]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-550")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "1cf0dc5a-4a8a-5d80-94a3-7fb7c7cc6253", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-573]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-573")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "245404c7-f061-5121-a887-abc232e6f16f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-572]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-572")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "2dedb007-922f-5045-9aaa-d7e8a1a4d0c9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-560]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-560")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "400b9c51-1e3a-5f72-a91c-28ccab7ed259", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-545]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-545")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "4342488b-24e4-5281-ac4e-9a826ff695ac", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-570]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-570")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "490a4d66-a915-596d-a7ae-7ed38cffc090", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-558]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-558")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "5705f71f-5a00-541c-a258-a72e7d37519f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-554]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-554")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "58eaddc2-81dd-5ebd-8992-1649ef90b1a7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-557]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-557")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "646df3b3-aff0-525e-a824-9731c2582cfd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-565]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-565")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "6ca5a44c-4e85-5f8f-b3c5-fc822a51e62b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-564]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-564")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "6e844261-161e-5648-8581-1a99a89baea2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-546]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-546")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "6eae2776-d76e-5a67-812e-d867d79c9439", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-556]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-556")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "6f26868b-e151-53fe-8363-f0173a7a6fe3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-568]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-568")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "82971d91-1775-5306-9f41-a64faadf86da", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-555]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-555")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "99efebbe-7346-5db8-a34f-cc605cfbb01b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-562]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-562")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "9c4807fe-166e-50bd-9d74-a161e6cf88c1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-552]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-552")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "a0e230b2-de64-59a0-bd7b-24d543574784", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-548]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-548")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "a30b0366-56be-5cfe-b533-66bb0e45dbbb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-563]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-563")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "aa3c3321-b8e0-50df-b33d-d8f884352427", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-569]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-569")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "adf1be1e-d6e3-5749-bb20-4c2ef2f99534", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-553]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-553")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "b770e235-f827-5ea6-a3b2-26c46824612f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-575]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-575")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "c31afc60-cc5f-544f-9901-094ce7345a02", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-561]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-561")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "c347e7e7-7c4c-5356-a46a-409517823dec", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-559]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-559")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "d2dba445-8178-52d9-b2ea-643e9ad3a292", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-571]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-571")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "d5f192df-b467-5316-987b-776fc448052a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-549]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-549")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "db7789cc-3aa6-5c59-8197-c988f73c30ae", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-547]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-547")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "e05c8b78-2c02-507f-9968-65798f9470aa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-551]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-551")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "e8ac4162-f9a2-5e4d-8f31-6a4959bbf2ad", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-567]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-567")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "f10c7a1d-217d-585a-bbac-662be29e6b3f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-576]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-576")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "f701013b-1ea7-5f11-9a3b-bc648357f16c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-574]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-574")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "fa5d70a6-9fe1-5bc3-ab15-43cc208473c1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-566]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-566")], .matchExpressions = []}}}}: -1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 3698565567761284773674183133768389876, .node = "testNode-54"}: -1
AddressGroupSpan{.addressGroup = 38469004411742596765300615610796630611, .node = "testNode-57"}: -1
AddressGroupSpan{.addressGroup = 48288457754810703184815458934363451759, .node = "testNode-57"}: -1
AddressGroupSpan{.addressGroup = 61049404469723358743205219098306072777, .node = "testNode-55"}: -1
AddressGroupSpan{.addressGroup = 85130877478412951017863325290158019161, .node = "testNode-54"}: -1
AddressGroupSpan{.addressGroup = 89402438667876199577589705354300003756, .node = "testNode-56"}: -1
AddressGroupSpan{.addressGroup = 97087136540025041047262336400861675664, .node = "testNode-55"}: -1
AddressGroupSpan{.addressGroup = 115673809356679543076475782246467850655, .node = "testNode-55"}: -1
AddressGroupSpan{.addressGroup = 118191558916946867538941719763234107815, .node = "testNode-55"}: -1
AddressGroupSpan{.addressGroup = 133493702797897068806724389960223829245, .node = "testNode-56"}: -1
AddressGroupSpan{.addressGroup = 144416684887245579966085852599866746411, .node = "testNode-56"}: -1
AddressGroupSpan{.addressGroup = 146901809052678293612234659248706662050, .node = "testNode-54"}: -1
AddressGroupSpan{.addressGroup = 147119339619296210999174965238639137849, .node = "testNode-55"}: -1
AddressGroupSpan{.addressGroup = 147744343738083911001336650139134750691, .node = "testNode-56"}: -1
AddressGroupSpan{.addressGroup = 173584275962899884541534295319853893338, .node = "testNode-55"}: -1
AddressGroupSpan{.addressGroup = 204617623759565531733154411673712046107, .node = "testNode-56"}: -1
AddressGroupSpan{.addressGroup = 207733574824023921290409144557354584257, .node = "testNode-55"}: -1
AddressGroupSpan{.addressGroup = 213850926142716301545939105494148269956, .node = "testNode-54"}: -1
AddressGroupSpan{.addressGroup = 216721347533732403703816859549927070651, .node = "testNode-56"}: -1
AddressGroupSpan{.addressGroup = 226281334169583360363853237381768750119, .node = "testNode-56"}: -1
AddressGroupSpan{.addressGroup = 231211642914871539184945702446472729908, .node = "testNode-55"}: -1
AddressGroupSpan{.addressGroup = 243834848577258421488380798719830024495, .node = "testNode-57"}: -1
AddressGroupSpan{.addressGroup = 259339577732754410428427643600155990530, .node = "testNode-56"}: -1
AddressGroupSpan{.addressGroup = 259572815831806965443620879555306339820, .node = "testNode-55"}: -1
AddressGroupSpan{.addressGroup = 280278323948838701533831038434406539922, .node = "testNode-57"}: -1
AddressGroupSpan{.addressGroup = 284379885600608561712312307129480906026, .node = "testNode-54"}: -1
AddressGroupSpan{.addressGroup = 291721609273874322207010668059989651630, .node = "testNode-54"}: -1
AddressGroupSpan{.addressGroup = 298227591142740907393074763131413360810, .node = "testNode-55"}: -1
AddressGroupSpan{.addressGroup = 309275296280010695383732444637918130861, .node = "testNode-56"}: -1
AddressGroupSpan{.addressGroup = 320408731308420040012354350458098051903, .node = "testNode-57"}: -1
AddressGroupSpan{.addressGroup = 328324532222090837284175417000548888940, .node = "testNode-57"}: -1
AddressGroupSpan{.addressGroup = 332792167385303851766172650950764032961, .node = "testNode-56"}: -1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "02c8515c-8244-50ed-9651-03b5154714f4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-550]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-550")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "1cf0dc5a-4a8a-5d80-94a3-7fb7c7cc6253", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-573]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-573")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "245404c7-f061-5121-a887-abc232e6f16f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-572]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-572")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "2dedb007-922f-5045-9aaa-d7e8a1a4d0c9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-560]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-560")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "400b9c51-1e3a-5f72-a91c-28ccab7ed259", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-545]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-545")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "4342488b-24e4-5281-ac4e-9a826ff695ac", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-570]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-570")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "490a4d66-a915-596d-a7ae-7ed38cffc090", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-558]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-558")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "5705f71f-5a00-541c-a258-a72e7d37519f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-554]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-554")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "58eaddc2-81dd-5ebd-8992-1649ef90b1a7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-557]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-557")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "646df3b3-aff0-525e-a824-9731c2582cfd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-565]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-565")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "6ca5a44c-4e85-5f8f-b3c5-fc822a51e62b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-564]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-564")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "6e844261-161e-5648-8581-1a99a89baea2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-546]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-546")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "6eae2776-d76e-5a67-812e-d867d79c9439", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-556]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-556")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "6f26868b-e151-53fe-8363-f0173a7a6fe3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-568]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-568")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "82971d91-1775-5306-9f41-a64faadf86da", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-555]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-555")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "99efebbe-7346-5db8-a34f-cc605cfbb01b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-562]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-562")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "9c4807fe-166e-50bd-9d74-a161e6cf88c1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-552]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-552")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "a0e230b2-de64-59a0-bd7b-24d543574784", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-548]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-548")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "a30b0366-56be-5cfe-b533-66bb0e45dbbb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-563]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-563")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "a470f1e5-9041-5f5e-b479-f8ba6a4b0484", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-544]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-544")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "aa3c3321-b8e0-50df-b33d-d8f884352427", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-569]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-569")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "adf1be1e-d6e3-5749-bb20-4c2ef2f99534", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-553]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-553")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "b770e235-f827-5ea6-a3b2-26c46824612f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-575]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-575")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "c31afc60-cc5f-544f-9901-094ce7345a02", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-561]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-561")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "c347e7e7-7c4c-5356-a46a-409517823dec", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-559]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-559")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "d2dba445-8178-52d9-b2ea-643e9ad3a292", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-571]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-571")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "d5f192df-b467-5316-987b-776fc448052a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-549]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-549")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "db7789cc-3aa6-5c59-8197-c988f73c30ae", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-547]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-547")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "e05c8b78-2c02-507f-9968-65798f9470aa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-551]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-551")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "e8ac4162-f9a2-5e4d-8f31-6a4959bbf2ad", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-567]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-567")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "f701013b-1ea7-5f11-9a3b-bc648357f16c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-574]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-574")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "fa5d70a6-9fe1-5bc3-ab15-43cc208473c1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-566]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-566")], .matchExpressions = []}}}}: -1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 3698565567761284773674183133768389876, .node = "testNode-55", .pods = [k8spolicy.PodReference{.name = "testPod-550", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 38469004411742596765300615610796630611, .node = "testNode-57", .pods = [k8spolicy.PodReference{.name = "testPod-573", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 48288457754810703184815458934363451759, .node = "testNode-57", .pods = [k8spolicy.PodReference{.name = "testPod-572", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 61049404469723358743205219098306072777, .node = "testNode-56", .pods = [k8spolicy.PodReference{.name = "testPod-560", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 85130877478412951017863325290158019161, .node = "testNode-54", .pods = [k8spolicy.PodReference{.name = "testPod-545", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 89402438667876199577589705354300003756, .node = "testNode-57", .pods = [k8spolicy.PodReference{.name = "testPod-570", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 97087136540025041047262336400861675664, .node = "testNode-55", .pods = [k8spolicy.PodReference{.name = "testPod-558", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 115673809356679543076475782246467850655, .node = "testNode-55", .pods = [k8spolicy.PodReference{.name = "testPod-554", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 118191558916946867538941719763234107815, .node = "testNode-55", .pods = [k8spolicy.PodReference{.name = "testPod-557", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 133493702797897068806724389960223829245, .node = "testNode-56", .pods = [k8spolicy.PodReference{.name = "testPod-565", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 144416684887245579966085852599866746411, .node = "testNode-56", .pods = [k8spolicy.PodReference{.name = "testPod-564", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 146901809052678293612234659248706662050, .node = "testNode-54", .pods = [k8spolicy.PodReference{.name = "testPod-546", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 147119339619296210999174965238639137849, .node = "testNode-55", .pods = [k8spolicy.PodReference{.name = "testPod-556", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 147744343738083911001336650139134750691, .node = "testNode-56", .pods = [k8spolicy.PodReference{.name = "testPod-568", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 173584275962899884541534295319853893338, .node = "testNode-55", .pods = [k8spolicy.PodReference{.name = "testPod-555", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 204617623759565531733154411673712046107, .node = "testNode-56", .pods = [k8spolicy.PodReference{.name = "testPod-562", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 207733574824023921290409144557354584257, .node = "testNode-55", .pods = [k8spolicy.PodReference{.name = "testPod-552", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 213850926142716301545939105494148269956, .node = "testNode-54", .pods = [k8spolicy.PodReference{.name = "testPod-548", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 216721347533732403703816859549927070651, .node = "testNode-56", .pods = [k8spolicy.PodReference{.name = "testPod-563", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 218579834805490671634088408900231169156, .node = "testNode-54", .pods = [k8spolicy.PodReference{.name = "testPod-544", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 226281334169583360363853237381768750119, .node = "testNode-56", .pods = [k8spolicy.PodReference{.name = "testPod-569", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 231211642914871539184945702446472729908, .node = "testNode-55", .pods = [k8spolicy.PodReference{.name = "testPod-553", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 243834848577258421488380798719830024495, .node = "testNode-57", .pods = [k8spolicy.PodReference{.name = "testPod-575", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 259339577732754410428427643600155990530, .node = "testNode-56", .pods = [k8spolicy.PodReference{.name = "testPod-561", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 259572815831806965443620879555306339820, .node = "testNode-55", .pods = [k8spolicy.PodReference{.name = "testPod-559", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 280278323948838701533831038434406539922, .node = "testNode-57", .pods = [k8spolicy.PodReference{.name = "testPod-571", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 284379885600608561712312307129480906026, .node = "testNode-54", .pods = [k8spolicy.PodReference{.name = "testPod-549", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 291721609273874322207010668059989651630, .node = "testNode-54", .pods = [k8spolicy.PodReference{.name = "testPod-547", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 298227591142740907393074763131413360810, .node = "testNode-55", .pods = [k8spolicy.PodReference{.name = "testPod-551", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 309275296280010695383732444637918130861, .node = "testNode-56", .pods = [k8spolicy.PodReference{.name = "testPod-567", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 328324532222090837284175417000548888940, .node = "testNode-57", .pods = [k8spolicy.PodReference{.name = "testPod-574", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 332792167385303851766172650950764032961, .node = "testNode-56", .pods = [k8spolicy.PodReference{.name = "testPod-566", .namespace = "testNamespace"}]}: -1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 3698565567761284773674183133768389876, .span = "testNode-55"}: -1
AppliedToGroupSpan{.appliedToGroup = 38469004411742596765300615610796630611, .span = "testNode-57"}: -1
AppliedToGroupSpan{.appliedToGroup = 48288457754810703184815458934363451759, .span = "testNode-57"}: -1
AppliedToGroupSpan{.appliedToGroup = 61049404469723358743205219098306072777, .span = "testNode-56"}: -1
AppliedToGroupSpan{.appliedToGroup = 85130877478412951017863325290158019161, .span = "testNode-54"}: -1
AppliedToGroupSpan{.appliedToGroup = 89402438667876199577589705354300003756, .span = "testNode-57"}: -1
AppliedToGroupSpan{.appliedToGroup = 97087136540025041047262336400861675664, .span = "testNode-55"}: -1
AppliedToGroupSpan{.appliedToGroup = 115673809356679543076475782246467850655, .span = "testNode-55"}: -1
AppliedToGroupSpan{.appliedToGroup = 118191558916946867538941719763234107815, .span = "testNode-55"}: -1
AppliedToGroupSpan{.appliedToGroup = 133493702797897068806724389960223829245, .span = "testNode-56"}: -1
AppliedToGroupSpan{.appliedToGroup = 144416684887245579966085852599866746411, .span = "testNode-56"}: -1
AppliedToGroupSpan{.appliedToGroup = 146901809052678293612234659248706662050, .span = "testNode-54"}: -1
AppliedToGroupSpan{.appliedToGroup = 147119339619296210999174965238639137849, .span = "testNode-55"}: -1
AppliedToGroupSpan{.appliedToGroup = 147744343738083911001336650139134750691, .span = "testNode-56"}: -1
AppliedToGroupSpan{.appliedToGroup = 173584275962899884541534295319853893338, .span = "testNode-55"}: -1
AppliedToGroupSpan{.appliedToGroup = 204617623759565531733154411673712046107, .span = "testNode-56"}: -1
AppliedToGroupSpan{.appliedToGroup = 207733574824023921290409144557354584257, .span = "testNode-55"}: -1
AppliedToGroupSpan{.appliedToGroup = 213850926142716301545939105494148269956, .span = "testNode-54"}: -1
AppliedToGroupSpan{.appliedToGroup = 216721347533732403703816859549927070651, .span = "testNode-56"}: -1
AppliedToGroupSpan{.appliedToGroup = 218579834805490671634088408900231169156, .span = "testNode-54"}: -1
AppliedToGroupSpan{.appliedToGroup = 226281334169583360363853237381768750119, .span = "testNode-56"}: -1
AppliedToGroupSpan{.appliedToGroup = 231211642914871539184945702446472729908, .span = "testNode-55"}: -1
AppliedToGroupSpan{.appliedToGroup = 243834848577258421488380798719830024495, .span = "testNode-57"}: -1
AppliedToGroupSpan{.appliedToGroup = 259339577732754410428427643600155990530, .span = "testNode-56"}: -1
AppliedToGroupSpan{.appliedToGroup = 259572815831806965443620879555306339820, .span = "testNode-55"}: -1
AppliedToGroupSpan{.appliedToGroup = 280278323948838701533831038434406539922, .span = "testNode-57"}: -1
AppliedToGroupSpan{.appliedToGroup = 284379885600608561712312307129480906026, .span = "testNode-54"}: -1
AppliedToGroupSpan{.appliedToGroup = 291721609273874322207010668059989651630, .span = "testNode-54"}: -1
AppliedToGroupSpan{.appliedToGroup = 298227591142740907393074763131413360810, .span = "testNode-55"}: -1
AppliedToGroupSpan{.appliedToGroup = 309275296280010695383732444637918130861, .span = "testNode-56"}: -1
AppliedToGroupSpan{.appliedToGroup = 328324532222090837284175417000548888940, .span = "testNode-57"}: -1
AppliedToGroupSpan{.appliedToGroup = 332792167385303851766172650950764032961, .span = "testNode-56"}: -1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-544"}, .name = "testNP-544", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [85130877478412951017863325290158019161], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [218579834805490671634088408900231169156]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-545"}, .name = "testNP-545", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [146901809052678293612234659248706662050], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [85130877478412951017863325290158019161]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-546"}, .name = "testNP-546", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [291721609273874322207010668059989651630], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [146901809052678293612234659248706662050]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-547"}, .name = "testNP-547", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [213850926142716301545939105494148269956], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [291721609273874322207010668059989651630]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-548"}, .name = "testNP-548", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [284379885600608561712312307129480906026], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [213850926142716301545939105494148269956]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-549"}, .name = "testNP-549", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [3698565567761284773674183133768389876], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [284379885600608561712312307129480906026]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-550"}, .name = "testNP-550", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [298227591142740907393074763131413360810], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [3698565567761284773674183133768389876]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-551"}, .name = "testNP-551", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [207733574824023921290409144557354584257], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [298227591142740907393074763131413360810]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-552"}, .name = "testNP-552", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [231211642914871539184945702446472729908], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [207733574824023921290409144557354584257]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-553"}, .name = "testNP-553", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [115673809356679543076475782246467850655], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [231211642914871539184945702446472729908]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-554"}, .name = "testNP-554", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [173584275962899884541534295319853893338], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [115673809356679543076475782246467850655]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-555"}, .name = "testNP-555", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [147119339619296210999174965238639137849], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [173584275962899884541534295319853893338]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-556"}, .name = "testNP-556", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [118191558916946867538941719763234107815], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [147119339619296210999174965238639137849]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-557"}, .name = "testNP-557", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [97087136540025041047262336400861675664], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [118191558916946867538941719763234107815]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-558"}, .name = "testNP-558", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [259572815831806965443620879555306339820], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [97087136540025041047262336400861675664]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-559"}, .name = "testNP-559", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [61049404469723358743205219098306072777], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [259572815831806965443620879555306339820]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-560"}, .name = "testNP-560", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [259339577732754410428427643600155990530], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [61049404469723358743205219098306072777]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-561"}, .name = "testNP-561", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [204617623759565531733154411673712046107], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [259339577732754410428427643600155990530]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-562"}, .name = "testNP-562", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [216721347533732403703816859549927070651], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [204617623759565531733154411673712046107]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-563"}, .name = "testNP-563", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [144416684887245579966085852599866746411], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [216721347533732403703816859549927070651]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-564"}, .name = "testNP-564", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [133493702797897068806724389960223829245], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [144416684887245579966085852599866746411]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-565"}, .name = "testNP-565", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [332792167385303851766172650950764032961], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [133493702797897068806724389960223829245]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-566"}, .name = "testNP-566", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [309275296280010695383732444637918130861], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [332792167385303851766172650950764032961]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-567"}, .name = "testNP-567", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [147744343738083911001336650139134750691], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [309275296280010695383732444637918130861]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-568"}, .name = "testNP-568", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [226281334169583360363853237381768750119], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [147744343738083911001336650139134750691]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-569"}, .name = "testNP-569", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [89402438667876199577589705354300003756], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [226281334169583360363853237381768750119]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-570"}, .name = "testNP-570", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [280278323948838701533831038434406539922], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [89402438667876199577589705354300003756]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-571"}, .name = "testNP-571", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [48288457754810703184815458934363451759], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [280278323948838701533831038434406539922]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-572"}, .name = "testNP-572", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [38469004411742596765300615610796630611], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [48288457754810703184815458934363451759]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-573"}, .name = "testNP-573", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [328324532222090837284175417000548888940], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [38469004411742596765300615610796630611]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-574"}, .name = "testNP-574", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [243834848577258421488380798719830024495], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [328324532222090837284175417000548888940]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-575"}, .name = "testNP-575", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [320408731308420040012354350458098051903], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [243834848577258421488380798719830024495]}: -1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-544", .policy = k8spolicy.UID{.uid = "testNP-544"}, .node = "testNode-54"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-545", .policy = k8spolicy.UID{.uid = "testNP-545"}, .node = "testNode-54"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-546", .policy = k8spolicy.UID{.uid = "testNP-546"}, .node = "testNode-54"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-547", .policy = k8spolicy.UID{.uid = "testNP-547"}, .node = "testNode-54"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-548", .policy = k8spolicy.UID{.uid = "testNP-548"}, .node = "testNode-54"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-549", .policy = k8spolicy.UID{.uid = "testNP-549"}, .node = "testNode-54"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-550", .policy = k8spolicy.UID{.uid = "testNP-550"}, .node = "testNode-55"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-551", .policy = k8spolicy.UID{.uid = "testNP-551"}, .node = "testNode-55"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-552", .policy = k8spolicy.UID{.uid = "testNP-552"}, .node = "testNode-55"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-553", .policy = k8spolicy.UID{.uid = "testNP-553"}, .node = "testNode-55"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-554", .policy = k8spolicy.UID{.uid = "testNP-554"}, .node = "testNode-55"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-555", .policy = k8spolicy.UID{.uid = "testNP-555"}, .node = "testNode-55"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-556", .policy = k8spolicy.UID{.uid = "testNP-556"}, .node = "testNode-55"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-557", .policy = k8spolicy.UID{.uid = "testNP-557"}, .node = "testNode-55"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-558", .policy = k8spolicy.UID{.uid = "testNP-558"}, .node = "testNode-55"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-559", .policy = k8spolicy.UID{.uid = "testNP-559"}, .node = "testNode-55"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-560", .policy = k8spolicy.UID{.uid = "testNP-560"}, .node = "testNode-56"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-561", .policy = k8spolicy.UID{.uid = "testNP-561"}, .node = "testNode-56"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-562", .policy = k8spolicy.UID{.uid = "testNP-562"}, .node = "testNode-56"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-563", .policy = k8spolicy.UID{.uid = "testNP-563"}, .node = "testNode-56"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-564", .policy = k8spolicy.UID{.uid = "testNP-564"}, .node = "testNode-56"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-565", .policy = k8spolicy.UID{.uid = "testNP-565"}, .node = "testNode-56"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-566", .policy = k8spolicy.UID{.uid = "testNP-566"}, .node = "testNode-56"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-567", .policy = k8spolicy.UID{.uid = "testNP-567"}, .node = "testNode-56"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-568", .policy = k8spolicy.UID{.uid = "testNP-568"}, .node = "testNode-56"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-569", .policy = k8spolicy.UID{.uid = "testNP-569"}, .node = "testNode-56"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-570", .policy = k8spolicy.UID{.uid = "testNP-570"}, .node = "testNode-57"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-571", .policy = k8spolicy.UID{.uid = "testNP-571"}, .node = "testNode-57"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-572", .policy = k8spolicy.UID{.uid = "testNP-572"}, .node = "testNode-57"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-573", .policy = k8spolicy.UID{.uid = "testNP-573"}, .node = "testNode-57"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-574", .policy = k8spolicy.UID{.uid = "testNP-574"}, .node = "testNode-57"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-575", .policy = k8spolicy.UID{.uid = "testNP-575"}, .node = "testNode-57"}: -1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 12791504691467936263389417148610920787, .address = "10.10.58.5"}: -1
AddressGroupAddress{.addressGroup = 48309349432861181167947417457980733463, .address = "10.10.60.6"}: -1
AddressGroupAddress{.addressGroup = 57875646562199068558487178099819616336, .address = "10.10.59.9"}: -1
AddressGroupAddress{.addressGroup = 68944121478893345804268938221271004530, .address = "10.10.59.0"}: -1
AddressGroupAddress{.addressGroup = 69753286150199147065099986090344341179, .address = "10.10.59.6"}: -1
AddressGroupAddress{.addressGroup = 80151096006657336496841627720522046415, .address = "10.10.60.1"}: -1
AddressGroupAddress{.addressGroup = 81193186571776496792201558375523927837, .address = "10.10.58.3"}: -1
AddressGroupAddress{.addressGroup = 103622678699253785592437683363358421290, .address = "10.10.58.7"}: -1
AddressGroupAddress{.addressGroup = 110420812475561930447158039425581031197, .address = "10.10.58.9"}: -1
AddressGroupAddress{.addressGroup = 115449962705465729037036177698274240459, .address = "10.10.58.6"}: -1
AddressGroupAddress{.addressGroup = 117494586774893557619044181878424668743, .address = "10.10.59.1"}: -1
AddressGroupAddress{.addressGroup = 137491205310995470111280456616495553705, .address = "10.10.60.3"}: -1
AddressGroupAddress{.addressGroup = 144299328393238279984330777740365105476, .address = "10.10.57.9"}: -1
AddressGroupAddress{.addressGroup = 153137959399057820267901792604995796340, .address = "10.10.59.2"}: -1
AddressGroupAddress{.addressGroup = 154045869066992464186289003948736002224, .address = "10.10.60.5"}: -1
AddressGroupAddress{.addressGroup = 163164323868919365753358312216295799005, .address = "10.10.58.4"}: -1
AddressGroupAddress{.addressGroup = 165069763045347105976351217057869520086, .address = "10.10.60.4"}: -1
AddressGroupAddress{.addressGroup = 175424471273885196936244096542887709237, .address = "10.10.59.7"}: -1
AddressGroupAddress{.addressGroup = 189356164967106526155292404123997127642, .address = "10.10.58.2"}: -1
AddressGroupAddress{.addressGroup = 234752831608620362815805000034219514155, .address = "10.10.60.7"}: -1
AddressGroupAddress{.addressGroup = 237152546013506461620485219695948720115, .address = "10.10.58.0"}: -1
AddressGroupAddress{.addressGroup = 240109283439544937470332372584537965216, .address = "10.10.59.5"}: -1
AddressGroupAddress{.addressGroup = 253768601933530702925143752015546438066, .address = "10.10.60.8"}: -1
AddressGroupAddress{.addressGroup = 292336821592849406897066488967270617647, .address = "10.10.58.8"}: -1
AddressGroupAddress{.addressGroup = 294495005277112873334855387561644829062, .address = "10.10.60.0"}: -1
AddressGroupAddress{.addressGroup = 301626676905446416517450411453233771227, .address = "10.10.59.4"}: -1
AddressGroupAddress{.addressGroup = 304480194326508651283616562422405952690, .address = "10.10.58.1"}: -1
AddressGroupAddress{.addressGroup = 306558184631798652484173260905393680569, .address = "10.10.60.2"}: -1
AddressGroupAddress{.addressGroup = 310923700248101265954465341767773783714, .address = "10.10.57.7"}: -1
AddressGroupAddress{.addressGroup = 313541184459285165546301762215360962218, .address = "10.10.59.8"}: -1
AddressGroupAddress{.addressGroup = 319594364914317938725671956605897902261, .address = "10.10.59.3"}: -1
AddressGroupAddress{.addressGroup = 338491935369446168954265554014553498639, .address = "10.10.57.8"}: -1
AddressGroupDescr:
AddressGroupDescr{.name = "099f8ddf-8553-5ff2-85e0-aa9338224153", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-585]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-585")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "24580ad1-fce8-5f37-85ad-a3aa634df817", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-606]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-606")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "2b8a71ae-ff36-5b18-b966-f75583911850", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-599]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-599")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "33de27a1-45a9-599d-b44f-2541f2123572", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-590]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-590")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "3479fe87-45fc-5a1f-a6ed-48e3b2b85ebb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-596]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-596")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "3c4c8a22-677f-588f-91ea-aec207969bcf", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-601]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-601")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "3d153d2a-8236-57fe-9f55-0a6981fbc71d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-583]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-583")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "4df50081-ec02-51c2-89bc-4b2d09f3b12a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-587]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-587")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "53124661-5afa-515e-bee1-2294801f9f1d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-589]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-589")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "56dadaa1-66ab-5788-a69d-5635c68167cb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-586]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-586")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "5864a261-4f19-513e-85e0-5dfcdeef0a47", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-591]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-591")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "676fd7ca-e7ab-532b-9dce-aca7ca3c1ca9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-603]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-603")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "6c8f0a2d-1aed-56d3-96a8-d20710d18944", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-579]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-579")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "73354c54-6761-5461-8e99-840b88a53d74", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-592]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-592")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "73e427bb-7be2-5306-8c53-e9cb77c038b0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-605]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-605")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "7ac04e43-a1d5-50bd-a460-6454114278dd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-584]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-584")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "7c2f47ab-3589-59a1-a0a3-1220e53edcd6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-604]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-604")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "83f98633-5003-5d41-b0bd-b1ca66d90a35", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-597]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-597")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "8e74abbb-4837-55f7-8e55-32942e0143da", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-582]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-582")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "b09bc033-ef80-594c-8175-4c917d70d92b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-607]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-607")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "b269eb41-fa9a-5b36-88af-8f4ded5be7f3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-580]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-580")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "b4a35daa-fa37-533a-a8d4-8fcaabaec2a0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-595]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-595")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "beea0e10-9b77-5ebb-8954-df1fb77851b2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-608]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-608")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "dbee061b-60f2-5706-af2c-133453c9d22f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-588]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-588")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "dd8dacc7-22b1-581c-b1e3-acc3d938a986", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-600]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-600")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "e2eb2f56-1e75-552f-84a8-c95307b832db", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-594]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-594")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "e510c09b-7e12-53f1-92ab-2d6841c874b2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-581]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-581")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "e6a0f570-813b-5d34-8059-ffa14e03f0b9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-602]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-602")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "e9e9b9fa-1e3e-5e36-9ca6-70e6d29706a2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-577]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-577")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "ebe1d5e9-8bc1-5833-94a0-afa68aa19eaa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-598]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-598")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "f06fa2c0-2851-5e5f-bb4f-bdaf807988b5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-593]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-593")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "fea72ce8-ba96-560b-bf06-c2f6abcbe40f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-578]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-578")], .matchExpressions = []}}}}: -1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 12791504691467936263389417148610920787, .node = "testNode-58"}: -1
AddressGroupSpan{.addressGroup = 48309349432861181167947417457980733463, .node = "testNode-60"}: -1
AddressGroupSpan{.addressGroup = 57875646562199068558487178099819616336, .node = "testNode-59"}: -1
AddressGroupSpan{.addressGroup = 68944121478893345804268938221271004530, .node = "testNode-58"}: -1
AddressGroupSpan{.addressGroup = 69753286150199147065099986090344341179, .node = "testNode-59"}: -1
AddressGroupSpan{.addressGroup = 80151096006657336496841627720522046415, .node = "testNode-60"}: -1
AddressGroupSpan{.addressGroup = 81193186571776496792201558375523927837, .node = "testNode-58"}: -1
AddressGroupSpan{.addressGroup = 103622678699253785592437683363358421290, .node = "testNode-58"}: -1
AddressGroupSpan{.addressGroup = 110420812475561930447158039425581031197, .node = "testNode-58"}: -1
AddressGroupSpan{.addressGroup = 115449962705465729037036177698274240459, .node = "testNode-58"}: -1
AddressGroupSpan{.addressGroup = 117494586774893557619044181878424668743, .node = "testNode-59"}: -1
AddressGroupSpan{.addressGroup = 137491205310995470111280456616495553705, .node = "testNode-60"}: -1
AddressGroupSpan{.addressGroup = 144299328393238279984330777740365105476, .node = "testNode-57"}: -1
AddressGroupSpan{.addressGroup = 153137959399057820267901792604995796340, .node = "testNode-59"}: -1
AddressGroupSpan{.addressGroup = 154045869066992464186289003948736002224, .node = "testNode-60"}: -1
AddressGroupSpan{.addressGroup = 163164323868919365753358312216295799005, .node = "testNode-58"}: -1
AddressGroupSpan{.addressGroup = 165069763045347105976351217057869520086, .node = "testNode-60"}: -1
AddressGroupSpan{.addressGroup = 175424471273885196936244096542887709237, .node = "testNode-59"}: -1
AddressGroupSpan{.addressGroup = 189356164967106526155292404123997127642, .node = "testNode-58"}: -1
AddressGroupSpan{.addressGroup = 234752831608620362815805000034219514155, .node = "testNode-60"}: -1
AddressGroupSpan{.addressGroup = 237152546013506461620485219695948720115, .node = "testNode-57"}: -1
AddressGroupSpan{.addressGroup = 240109283439544937470332372584537965216, .node = "testNode-59"}: -1
AddressGroupSpan{.addressGroup = 253768601933530702925143752015546438066, .node = "testNode-60"}: -1
AddressGroupSpan{.addressGroup = 292336821592849406897066488967270617647, .node = "testNode-58"}: -1
AddressGroupSpan{.addressGroup = 294495005277112873334855387561644829062, .node = "testNode-59"}: -1
AddressGroupSpan{.addressGroup = 301626676905446416517450411453233771227, .node = "testNode-59"}: -1
AddressGroupSpan{.addressGroup = 304480194326508651283616562422405952690, .node = "testNode-58"}: -1
AddressGroupSpan{.addressGroup = 306558184631798652484173260905393680569, .node = "testNode-60"}: -1
AddressGroupSpan{.addressGroup = 310923700248101265954465341767773783714, .node = "testNode-57"}: -1
AddressGroupSpan{.addressGroup = 313541184459285165546301762215360962218, .node = "testNode-59"}: -1
AddressGroupSpan{.addressGroup = 319594364914317938725671956605897902261, .node = "testNode-59"}: -1
AddressGroupSpan{.addressGroup = 338491935369446168954265554014553498639, .node = "testNode-57"}: -1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "099f8ddf-8553-5ff2-85e0-aa9338224153", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-585]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-585")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "24580ad1-fce8-5f37-85ad-a3aa634df817", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-606]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-606")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "2b8a71ae-ff36-5b18-b966-f75583911850", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-599]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-599")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "33de27a1-45a9-599d-b44f-2541f2123572", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-590]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-590")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "3479fe87-45fc-5a1f-a6ed-48e3b2b85ebb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-596]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-596")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "3c4c8a22-677f-588f-91ea-aec207969bcf", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-601]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-601")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "3d153d2a-8236-57fe-9f55-0a6981fbc71d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-583]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-583")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "4df50081-ec02-51c2-89bc-4b2d09f3b12a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-587]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-587")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "53124661-5afa-515e-bee1-2294801f9f1d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-589]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-589")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "56dadaa1-66ab-5788-a69d-5635c68167cb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-586]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-586")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "5864a261-4f19-513e-85e0-5dfcdeef0a47", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-591]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-591")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "676fd7ca-e7ab-532b-9dce-aca7ca3c1ca9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-603]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-603")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "6c8f0a2d-1aed-56d3-96a8-d20710d18944", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-579]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-579")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "73354c54-6761-5461-8e99-840b88a53d74", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-592]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-592")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "73e427bb-7be2-5306-8c53-e9cb77c038b0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-605]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-605")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "7ac04e43-a1d5-50bd-a460-6454114278dd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-584]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-584")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "7c2f47ab-3589-59a1-a0a3-1220e53edcd6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-604]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-604")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "83f98633-5003-5d41-b0bd-b1ca66d90a35", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-597]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-597")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "8e74abbb-4837-55f7-8e55-32942e0143da", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-582]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-582")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "b09bc033-ef80-594c-8175-4c917d70d92b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-607]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-607")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "b269eb41-fa9a-5b36-88af-8f4ded5be7f3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-580]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-580")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "b4a35daa-fa37-533a-a8d4-8fcaabaec2a0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-595]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-595")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "dbee061b-60f2-5706-af2c-133453c9d22f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-588]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-588")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "dd8dacc7-22b1-581c-b1e3-acc3d938a986", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-600]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-600")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "e2eb2f56-1e75-552f-84a8-c95307b832db", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-594]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-594")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "e510c09b-7e12-53f1-92ab-2d6841c874b2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-581]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-581")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "e6a0f570-813b-5d34-8059-ffa14e03f0b9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-602]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-602")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "e9e9b9fa-1e3e-5e36-9ca6-70e6d29706a2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-577]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-577")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "ebe1d5e9-8bc1-5833-94a0-afa68aa19eaa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-598]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-598")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "f06fa2c0-2851-5e5f-bb4f-bdaf807988b5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-593]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-593")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "f10c7a1d-217d-585a-bbac-662be29e6b3f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-576]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-576")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "fea72ce8-ba96-560b-bf06-c2f6abcbe40f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-578]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-578")], .matchExpressions = []}}}}: -1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 12791504691467936263389417148610920787, .node = "testNode-58", .pods = [k8spolicy.PodReference{.name = "testPod-585", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 48309349432861181167947417457980733463, .node = "testNode-60", .pods = [k8spolicy.PodReference{.name = "testPod-606", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 57875646562199068558487178099819616336, .node = "testNode-59", .pods = [k8spolicy.PodReference{.name = "testPod-599", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 68944121478893345804268938221271004530, .node = "testNode-59", .pods = [k8spolicy.PodReference{.name = "testPod-590", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 69753286150199147065099986090344341179, .node = "testNode-59", .pods = [k8spolicy.PodReference{.name = "testPod-596", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 80151096006657336496841627720522046415, .node = "testNode-60", .pods = [k8spolicy.PodReference{.name = "testPod-601", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 81193186571776496792201558375523927837, .node = "testNode-58", .pods = [k8spolicy.PodReference{.name = "testPod-583", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 103622678699253785592437683363358421290, .node = "testNode-58", .pods = [k8spolicy.PodReference{.name = "testPod-587", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 110420812475561930447158039425581031197, .node = "testNode-58", .pods = [k8spolicy.PodReference{.name = "testPod-589", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 115449962705465729037036177698274240459, .node = "testNode-58", .pods = [k8spolicy.PodReference{.name = "testPod-586", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 117494586774893557619044181878424668743, .node = "testNode-59", .pods = [k8spolicy.PodReference{.name = "testPod-591", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 137491205310995470111280456616495553705, .node = "testNode-60", .pods = [k8spolicy.PodReference{.name = "testPod-603", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 144299328393238279984330777740365105476, .node = "testNode-57", .pods = [k8spolicy.PodReference{.name = "testPod-579", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 153137959399057820267901792604995796340, .node = "testNode-59", .pods = [k8spolicy.PodReference{.name = "testPod-592", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 154045869066992464186289003948736002224, .node = "testNode-60", .pods = [k8spolicy.PodReference{.name = "testPod-605", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 163164323868919365753358312216295799005, .node = "testNode-58", .pods = [k8spolicy.PodReference{.name = "testPod-584", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 165069763045347105976351217057869520086, .node = "testNode-60", .pods = [k8spolicy.PodReference{.name = "testPod-604", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 175424471273885196936244096542887709237, .node = "testNode-59", .pods = [k8spolicy.PodReference{.name = "testPod-597", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 189356164967106526155292404123997127642, .node = "testNode-58", .pods = [k8spolicy.PodReference{.name = "testPod-582", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 234752831608620362815805000034219514155, .node = "testNode-60", .pods = [k8spolicy.PodReference{.name = "testPod-607", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 237152546013506461620485219695948720115, .node = "testNode-58", .pods = [k8spolicy.PodReference{.name = "testPod-580", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 240109283439544937470332372584537965216, .node = "testNode-59", .pods = [k8spolicy.PodReference{.name = "testPod-595", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 292336821592849406897066488967270617647, .node = "testNode-58", .pods = [k8spolicy.PodReference{.name = "testPod-588", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 294495005277112873334855387561644829062, .node = "testNode-60", .pods = [k8spolicy.PodReference{.name = "testPod-600", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 301626676905446416517450411453233771227, .node = "testNode-59", .pods = [k8spolicy.PodReference{.name = "testPod-594", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 304480194326508651283616562422405952690, .node = "testNode-58", .pods = [k8spolicy.PodReference{.name = "testPod-581", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 306558184631798652484173260905393680569, .node = "testNode-60", .pods = [k8spolicy.PodReference{.name = "testPod-602", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 310923700248101265954465341767773783714, .node = "testNode-57", .pods = [k8spolicy.PodReference{.name = "testPod-577", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 313541184459285165546301762215360962218, .node = "testNode-59", .pods = [k8spolicy.PodReference{.name = "testPod-598", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 319594364914317938725671956605897902261, .node = "testNode-59", .pods = [k8spolicy.PodReference{.name = "testPod-593", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 320408731308420040012354350458098051903, .node = "testNode-57", .pods = [k8spolicy.PodReference{.name = "testPod-576", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 338491935369446168954265554014553498639, .node = "testNode-57", .pods = [k8spolicy.PodReference{.name = "testPod-578", .namespace = "testNamespace"}]}: -1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 12791504691467936263389417148610920787, .span = "testNode-58"}: -1
AppliedToGroupSpan{.appliedToGroup = 48309349432861181167947417457980733463, .span = "testNode-60"}: -1
AppliedToGroupSpan{.appliedToGroup = 57875646562199068558487178099819616336, .span = "testNode-59"}: -1
AppliedToGroupSpan{.appliedToGroup = 68944121478893345804268938221271004530, .span = "testNode-59"}: -1
AppliedToGroupSpan{.appliedToGroup = 69753286150199147065099986090344341179, .span = "testNode-59"}: -1
AppliedToGroupSpan{.appliedToGroup = 80151096006657336496841627720522046415, .span = "testNode-60"}: -1
AppliedToGroupSpan{.appliedToGroup = 81193186571776496792201558375523927837, .span = "testNode-58"}: -1
AppliedToGroupSpan{.appliedToGroup = 103622678699253785592437683363358421290, .span = "testNode-58"}: -1
AppliedToGroupSpan{.appliedToGroup = 110420812475561930447158039425581031197, .span = "testNode-58"}: -1
AppliedToGroupSpan{.appliedToGroup = 115449962705465729037036177698274240459, .span = "testNode-58"}: -1
AppliedToGroupSpan{.appliedToGroup = 117494586774893557619044181878424668743, .span = "testNode-59"}: -1
AppliedToGroupSpan{.appliedToGroup = 137491205310995470111280456616495553705, .span = "testNode-60"}: -1
AppliedToGroupSpan{.appliedToGroup = 144299328393238279984330777740365105476, .span = "testNode-57"}: -1
AppliedToGroupSpan{.appliedToGroup = 153137959399057820267901792604995796340, .span = "testNode-59"}: -1
AppliedToGroupSpan{.appliedToGroup = 154045869066992464186289003948736002224, .span = "testNode-60"}: -1
AppliedToGroupSpan{.appliedToGroup = 163164323868919365753358312216295799005, .span = "testNode-58"}: -1
AppliedToGroupSpan{.appliedToGroup = 165069763045347105976351217057869520086, .span = "testNode-60"}: -1
AppliedToGroupSpan{.appliedToGroup = 175424471273885196936244096542887709237, .span = "testNode-59"}: -1
AppliedToGroupSpan{.appliedToGroup = 189356164967106526155292404123997127642, .span = "testNode-58"}: -1
AppliedToGroupSpan{.appliedToGroup = 234752831608620362815805000034219514155, .span = "testNode-60"}: -1
AppliedToGroupSpan{.appliedToGroup = 237152546013506461620485219695948720115, .span = "testNode-58"}: -1
AppliedToGroupSpan{.appliedToGroup = 240109283439544937470332372584537965216, .span = "testNode-59"}: -1
AppliedToGroupSpan{.appliedToGroup = 292336821592849406897066488967270617647, .span = "testNode-58"}: -1
AppliedToGroupSpan{.appliedToGroup = 294495005277112873334855387561644829062, .span = "testNode-60"}: -1
AppliedToGroupSpan{.appliedToGroup = 301626676905446416517450411453233771227, .span = "testNode-59"}: -1
AppliedToGroupSpan{.appliedToGroup = 304480194326508651283616562422405952690, .span = "testNode-58"}: -1
AppliedToGroupSpan{.appliedToGroup = 306558184631798652484173260905393680569, .span = "testNode-60"}: -1
AppliedToGroupSpan{.appliedToGroup = 310923700248101265954465341767773783714, .span = "testNode-57"}: -1
AppliedToGroupSpan{.appliedToGroup = 313541184459285165546301762215360962218, .span = "testNode-59"}: -1
AppliedToGroupSpan{.appliedToGroup = 319594364914317938725671956605897902261, .span = "testNode-59"}: -1
AppliedToGroupSpan{.appliedToGroup = 320408731308420040012354350458098051903, .span = "testNode-57"}: -1
AppliedToGroupSpan{.appliedToGroup = 338491935369446168954265554014553498639, .span = "testNode-57"}: -1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-576"}, .name = "testNP-576", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [310923700248101265954465341767773783714], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [320408731308420040012354350458098051903]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-577"}, .name = "testNP-577", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [338491935369446168954265554014553498639], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [310923700248101265954465341767773783714]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-578"}, .name = "testNP-578", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [144299328393238279984330777740365105476], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [338491935369446168954265554014553498639]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-579"}, .name = "testNP-579", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [237152546013506461620485219695948720115], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [144299328393238279984330777740365105476]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-580"}, .name = "testNP-580", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [304480194326508651283616562422405952690], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [237152546013506461620485219695948720115]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-581"}, .name = "testNP-581", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [189356164967106526155292404123997127642], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [304480194326508651283616562422405952690]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-582"}, .name = "testNP-582", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [81193186571776496792201558375523927837], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [189356164967106526155292404123997127642]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-583"}, .name = "testNP-583", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [163164323868919365753358312216295799005], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [81193186571776496792201558375523927837]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-584"}, .name = "testNP-584", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [12791504691467936263389417148610920787], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [163164323868919365753358312216295799005]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-585"}, .name = "testNP-585", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [115449962705465729037036177698274240459], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [12791504691467936263389417148610920787]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-586"}, .name = "testNP-586", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [103622678699253785592437683363358421290], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [115449962705465729037036177698274240459]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-587"}, .name = "testNP-587", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [292336821592849406897066488967270617647], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [103622678699253785592437683363358421290]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-588"}, .name = "testNP-588", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [110420812475561930447158039425581031197], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [292336821592849406897066488967270617647]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-589"}, .name = "testNP-589", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [68944121478893345804268938221271004530], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [110420812475561930447158039425581031197]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-590"}, .name = "testNP-590", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [117494586774893557619044181878424668743], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [68944121478893345804268938221271004530]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-591"}, .name = "testNP-591", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [153137959399057820267901792604995796340], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [117494586774893557619044181878424668743]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-592"}, .name = "testNP-592", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [319594364914317938725671956605897902261], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [153137959399057820267901792604995796340]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-593"}, .name = "testNP-593", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [301626676905446416517450411453233771227], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [319594364914317938725671956605897902261]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-594"}, .name = "testNP-594", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [240109283439544937470332372584537965216], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [301626676905446416517450411453233771227]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-595"}, .name = "testNP-595", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [69753286150199147065099986090344341179], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [240109283439544937470332372584537965216]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-596"}, .name = "testNP-596", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [175424471273885196936244096542887709237], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [69753286150199147065099986090344341179]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-597"}, .name = "testNP-597", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [313541184459285165546301762215360962218], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [175424471273885196936244096542887709237]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-598"}, .name = "testNP-598", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [57875646562199068558487178099819616336], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [313541184459285165546301762215360962218]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-599"}, .name = "testNP-599", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [294495005277112873334855387561644829062], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [57875646562199068558487178099819616336]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-600"}, .name = "testNP-600", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [80151096006657336496841627720522046415], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [294495005277112873334855387561644829062]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-601"}, .name = "testNP-601", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [306558184631798652484173260905393680569], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [80151096006657336496841627720522046415]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-602"}, .name = "testNP-602", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [137491205310995470111280456616495553705], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [306558184631798652484173260905393680569]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-603"}, .name = "testNP-603", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [165069763045347105976351217057869520086], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [137491205310995470111280456616495553705]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-604"}, .name = "testNP-604", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [154045869066992464186289003948736002224], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [165069763045347105976351217057869520086]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-605"}, .name = "testNP-605", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [48309349432861181167947417457980733463], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [154045869066992464186289003948736002224]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-606"}, .name = "testNP-606", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [234752831608620362815805000034219514155], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [48309349432861181167947417457980733463]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-607"}, .name = "testNP-607", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [253768601933530702925143752015546438066], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [234752831608620362815805000034219514155]}: -1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-576", .policy = k8spolicy.UID{.uid = "testNP-576"}, .node = "testNode-57"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-577", .policy = k8spolicy.UID{.uid = "testNP-577"}, .node = "testNode-57"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-578", .policy = k8spolicy.UID{.uid = "testNP-578"}, .node = "testNode-57"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-579", .policy = k8spolicy.UID{.uid = "testNP-579"}, .node = "testNode-57"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-580", .policy = k8spolicy.UID{.uid = "testNP-580"}, .node = "testNode-58"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-581", .policy = k8spolicy.UID{.uid = "testNP-581"}, .node = "testNode-58"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-582", .policy = k8spolicy.UID{.uid = "testNP-582"}, .node = "testNode-58"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-583", .policy = k8spolicy.UID{.uid = "testNP-583"}, .node = "testNode-58"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-584", .policy = k8spolicy.UID{.uid = "testNP-584"}, .node = "testNode-58"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-585", .policy = k8spolicy.UID{.uid = "testNP-585"}, .node = "testNode-58"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-586", .policy = k8spolicy.UID{.uid = "testNP-586"}, .node = "testNode-58"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-587", .policy = k8spolicy.UID{.uid = "testNP-587"}, .node = "testNode-58"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-588", .policy = k8spolicy.UID{.uid = "testNP-588"}, .node = "testNode-58"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-589", .policy = k8spolicy.UID{.uid = "testNP-589"}, .node = "testNode-58"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-590", .policy = k8spolicy.UID{.uid = "testNP-590"}, .node = "testNode-59"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-591", .policy = k8spolicy.UID{.uid = "testNP-591"}, .node = "testNode-59"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-592", .policy = k8spolicy.UID{.uid = "testNP-592"}, .node = "testNode-59"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-593", .policy = k8spolicy.UID{.uid = "testNP-593"}, .node = "testNode-59"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-594", .policy = k8spolicy.UID{.uid = "testNP-594"}, .node = "testNode-59"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-595", .policy = k8spolicy.UID{.uid = "testNP-595"}, .node = "testNode-59"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-596", .policy = k8spolicy.UID{.uid = "testNP-596"}, .node = "testNode-59"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-597", .policy = k8spolicy.UID{.uid = "testNP-597"}, .node = "testNode-59"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-598", .policy = k8spolicy.UID{.uid = "testNP-598"}, .node = "testNode-59"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-599", .policy = k8spolicy.UID{.uid = "testNP-599"}, .node = "testNode-59"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-600", .policy = k8spolicy.UID{.uid = "testNP-600"}, .node = "testNode-60"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-601", .policy = k8spolicy.UID{.uid = "testNP-601"}, .node = "testNode-60"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-602", .policy = k8spolicy.UID{.uid = "testNP-602"}, .node = "testNode-60"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-603", .policy = k8spolicy.UID{.uid = "testNP-603"}, .node = "testNode-60"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-604", .policy = k8spolicy.UID{.uid = "testNP-604"}, .node = "testNode-60"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-605", .policy = k8spolicy.UID{.uid = "testNP-605"}, .node = "testNode-60"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-606", .policy = k8spolicy.UID{.uid = "testNP-606"}, .node = "testNode-60"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-607", .policy = k8spolicy.UID{.uid = "testNP-607"}, .node = "testNode-60"}: -1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 3716464263243677870556622475737383443, .address = "10.10.60.9"}: -1
AddressGroupAddress{.addressGroup = 9663145268869478633448107855661856068, .address = "10.10.62.4"}: -1
AddressGroupAddress{.addressGroup = 13056345226351649193613166612021781604, .address = "10.10.62.1"}: -1
AddressGroupAddress{.addressGroup = 20410984638251524353250984514670141381, .address = "10.10.62.3"}: -1
AddressGroupAddress{.addressGroup = 27778378293976698695285799872679130468, .address = "10.10.63.2"}: -1
AddressGroupAddress{.addressGroup = 29454646625329881124953280547726788403, .address = "10.10.63.1"}: -1
AddressGroupAddress{.addressGroup = 44481766542918776411588932534483097483, .address = "10.10.61.3"}: -1
AddressGroupAddress{.addressGroup = 62039266921959583878146638597778698451, .address = "10.10.62.2"}: -1
AddressGroupAddress{.addressGroup = 73249166270127153923312010831970725047, .address = "10.10.62.0"}: -1
AddressGroupAddress{.addressGroup = 103667067060352667355214945142441620522, .address = "10.10.61.0"}: -1
AddressGroupAddress{.addressGroup = 109595952875776271881629169264627301236, .address = "10.10.61.2"}: -1
AddressGroupAddress{.addressGroup = 113579145843466544150223959520925482777, .address = "10.10.61.6"}: -1
AddressGroupAddress{.addressGroup = 120533616110235788555806058770320580981, .address = "10.10.62.9"}: -1
AddressGroupAddress{.addressGroup = 123872733178261764728939611809282555396, .address = "10.10.63.9"}: -1
AddressGroupAddress{.addressGroup = 136677443506820200208943639420534968877, .address = "10.10.61.4"}: -1
AddressGroupAddress{.addressGroup = 143624621217769766541427656420503794060, .address = "10.10.64.0"}: -1
AddressGroupAddress{.addressGroup = 160940163208804731987974609808421201535, .address = "10.10.62.8"}: -1
AddressGroupAddress{.addressGroup = 162097615997677536494549499493944303757, .address = "10.10.63.3"}: -1
AddressGroupAddress{.addressGroup = 183283729794610317838342070133256178594, .address = "10.10.61.1"}: -1
AddressGroupAddress{.addressGroup = 207268880073424509968974014928922274045, .address = "10.10.63.7"}: -1
AddressGroupAddress{.addressGroup = 209975073300597752477875721328218052150, .address = "10.10.63.5"}: -1
AddressGroupAddress{.addressGroup = 214420099612653998753006163641196535258, .address = "10.10.63.6"}: -1
AddressGroupAddress{.addressGroup = 222563440313352744501332668929241581375, .address = "10.10.61.8"}: -1
AddressGroupAddress{.addressGroup = 229024273500495890788903593305812329540, .address = "10.10.61.7"}: -1
AddressGroupAddress{.addressGroup = 233147737046392678223862196895414800792, .address = "10.10.62.5"}: -1
AddressGroupAddress{.addressGroup = 257315562249696113097234276718894783725, .address = "10.10.63.0"}: -1
AddressGroupAddress{.addressGroup = 268562897540829458479725559689622339224, .address = "10.10.61.9"}: -1
AddressGroupAddress{.addressGroup = 270365376391811312469077999304473262339, .address = "10.10.63.4"}: -1
AddressGroupAddress{.addressGroup = 274204072696099270881317343592984087740, .address = "10.10.63.8"}: -1
AddressGroupAddress{.addressGroup = 318821428688056883498017451075008150497, .address = "10.10.62.7"}: -1
AddressGroupAddress{.addressGroup = 330130238032115757858869958978536200216, .address = "10.10.62.6"}: -1
AddressGroupAddress{.addressGroup = 337455536338842635447440504577022314364, .address = "10.10.61.5"}: -1
AddressGroupDescr:
AddressGroupDescr{.name = "02cbc3d5-ce89-5797-8edb-f1e0124b4213", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-609]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-609")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "07450dd8-62a4-58bd-ab58-3bf1afcd7544", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-624]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-624")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "09d28f85-06b5-5b1f-8a89-7e2056b42464", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-621]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-621")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "0f5b033d-1747-557a-8590-8844a46d9fc5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-623]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-623")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "14e5ebca-584d-5f9d-b43a-fb5698a03564", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-632]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-632")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "1628c233-3279-572b-8b79-88538c9b8733", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-631]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-631")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "2176e069-ef1c-535e-b476-05c5ab15178b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-613]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-613")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "2eac5404-367f-50fd-8119-f3e6794df0d3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-622]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-622")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "371b46b9-c4c2-5a44-9103-298077dc6cb7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-620]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-620")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "4dfd8d05-ce2e-513f-8b18-0cf487f9b42a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-610]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-610")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "527369a9-819d-5f1d-8780-887f94383b74", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-612]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-612")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "55728c3c-de70-52b8-bd4c-2c37db6c7f19", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-616]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-616")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "5aadee18-3a80-5312-a3f5-7e05f657e175", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-629]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-629")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "5d310546-d5d4-523d-b785-2c7675ec7e04", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-639]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-639")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "66d31e3c-ede9-5e40-919c-87749b4ad22d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-614]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-614")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "6c0d188b-4b43-5eff-b36a-93f7101f318c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-640]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-640")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "7913f2ad-5d73-58a3-a65f-17c6f6faa67f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-628]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-628")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "79f2dd81-7108-5ce6-9871-ae200bc6a08d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-633]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-633")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "89e3298f-f80d-5f37-884b-68c35c794ba2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-611]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-611")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "9bee88c5-bdeb-5162-b0b0-7bbc3a96e8fd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-637]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-637")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "9df7ba66-5d37-55de-aa62-ae5ff2ff9636", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-635]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-635")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "a14fcf1e-0c5c-58c5-bce6-5ebad9eeddda", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-636]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-636")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "a77028cf-ea44-563d-8793-17f78af5073f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-618]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-618")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "ac4c787b-6104-55af-82f2-f7b7e56d6444", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-617]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-617")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "af669eee-58ab-51a2-8075-568d0180d198", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-625]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-625")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "c1952cb5-d1ea-5ad0-90fd-21c2d2621ced", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-630]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-630")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "ca0b5527-67c7-523c-902e-935206a43e98", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-619]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-619")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "cb667a38-f94c-5e63-ac54-ae40a40f3903", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-634]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-634")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "ce49c890-098e-535e-b32f-0fbae2740cbc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-638]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-638")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "efdac60d-6b62-52c9-a31f-92e341373be1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-627]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-627")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "f85cc566-a332-589f-86ec-73271417d818", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-626]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-626")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "fddf927d-e3be-5758-8f3c-b55e8bd5477c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-615]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-615")], .matchExpressions = []}}}}: -1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 3716464263243677870556622475737383443, .node = "testNode-60"}: -1
AddressGroupSpan{.addressGroup = 9663145268869478633448107855661856068, .node = "testNode-62"}: -1
AddressGroupSpan{.addressGroup = 13056345226351649193613166612021781604, .node = "testNode-62"}: -1
AddressGroupSpan{.addressGroup = 20410984638251524353250984514670141381, .node = "testNode-62"}: -1
AddressGroupSpan{.addressGroup = 27778378293976698695285799872679130468, .node = "testNode-63"}: -1
AddressGroupSpan{.addressGroup = 29454646625329881124953280547726788403, .node = "testNode-63"}: -1
AddressGroupSpan{.addressGroup = 44481766542918776411588932534483097483, .node = "testNode-61"}: -1
AddressGroupSpan{.addressGroup = 62039266921959583878146638597778698451, .node = "testNode-62"}: -1
AddressGroupSpan{.addressGroup = 73249166270127153923312010831970725047, .node = "testNode-61"}: -1
AddressGroupSpan{.addressGroup = 103667067060352667355214945142441620522, .node = "testNode-60"}: -1
AddressGroupSpan{.addressGroup = 109595952875776271881629169264627301236, .node = "testNode-61"}: -1
AddressGroupSpan{.addressGroup = 113579145843466544150223959520925482777, .node = "testNode-61"}: -1
AddressGroupSpan{.addressGroup = 120533616110235788555806058770320580981, .node = "testNode-62"}: -1
AddressGroupSpan{.addressGroup = 123872733178261764728939611809282555396, .node = "testNode-63"}: -1
AddressGroupSpan{.addressGroup = 136677443506820200208943639420534968877, .node = "testNode-61"}: -1
AddressGroupSpan{.addressGroup = 143624621217769766541427656420503794060, .node = "testNode-63"}: -1
AddressGroupSpan{.addressGroup = 160940163208804731987974609808421201535, .node = "testNode-62"}: -1
AddressGroupSpan{.addressGroup = 162097615997677536494549499493944303757, .node = "testNode-63"}: -1
AddressGroupSpan{.addressGroup = 183283729794610317838342070133256178594, .node = "testNode-61"}: -1
AddressGroupSpan{.addressGroup = 207268880073424509968974014928922274045, .node = "testNode-63"}: -1
AddressGroupSpan{.addressGroup = 209975073300597752477875721328218052150, .node = "testNode-63"}: -1
AddressGroupSpan{.addressGroup = 214420099612653998753006163641196535258, .node = "testNode-63"}: -1
AddressGroupSpan{.addressGroup = 222563440313352744501332668929241581375, .node = "testNode-61"}: -1
AddressGroupSpan{.addressGroup = 229024273500495890788903593305812329540, .node = "testNode-61"}: -1
AddressGroupSpan{.addressGroup = 233147737046392678223862196895414800792, .node = "testNode-62"}: -1
AddressGroupSpan{.addressGroup = 257315562249696113097234276718894783725, .node = "testNode-62"}: -1
AddressGroupSpan{.addressGroup = 268562897540829458479725559689622339224, .node = "testNode-61"}: -1
AddressGroupSpan{.addressGroup = 270365376391811312469077999304473262339, .node = "testNode-63"}: -1
AddressGroupSpan{.addressGroup = 274204072696099270881317343592984087740, .node = "testNode-63"}: -1
AddressGroupSpan{.addressGroup = 318821428688056883498017451075008150497, .node = "testNode-62"}: -1
AddressGroupSpan{.addressGroup = 330130238032115757858869958978536200216, .node = "testNode-62"}: -1
AddressGroupSpan{.addressGroup = 337455536338842635447440504577022314364, .node = "testNode-61"}: -1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "02cbc3d5-ce89-5797-8edb-f1e0124b4213", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-609]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-609")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "07450dd8-62a4-58bd-ab58-3bf1afcd7544", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-624]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-624")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "09d28f85-06b5-5b1f-8a89-7e2056b42464", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-621]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-621")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "0f5b033d-1747-557a-8590-8844a46d9fc5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-623]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-623")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "14e5ebca-584d-5f9d-b43a-fb5698a03564", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-632]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-632")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "1628c233-3279-572b-8b79-88538c9b8733", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-631]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-631")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "2176e069-ef1c-535e-b476-05c5ab15178b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-613]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-613")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "2eac5404-367f-50fd-8119-f3e6794df0d3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-622]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-622")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "371b46b9-c4c2-5a44-9103-298077dc6cb7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-620]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-620")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "4dfd8d05-ce2e-513f-8b18-0cf487f9b42a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-610]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-610")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "527369a9-819d-5f1d-8780-887f94383b74", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-612]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-612")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "55728c3c-de70-52b8-bd4c-2c37db6c7f19", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-616]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-616")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "5aadee18-3a80-5312-a3f5-7e05f657e175", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-629]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-629")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "5d310546-d5d4-523d-b785-2c7675ec7e04", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-639]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-639")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "66d31e3c-ede9-5e40-919c-87749b4ad22d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-614]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-614")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "7913f2ad-5d73-58a3-a65f-17c6f6faa67f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-628]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-628")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "79f2dd81-7108-5ce6-9871-ae200bc6a08d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-633]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-633")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "89e3298f-f80d-5f37-884b-68c35c794ba2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-611]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-611")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "9bee88c5-bdeb-5162-b0b0-7bbc3a96e8fd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-637]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-637")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "9df7ba66-5d37-55de-aa62-ae5ff2ff9636", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-635]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-635")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "a14fcf1e-0c5c-58c5-bce6-5ebad9eeddda", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-636]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-636")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "a77028cf-ea44-563d-8793-17f78af5073f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-618]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-618")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "ac4c787b-6104-55af-82f2-f7b7e56d6444", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-617]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-617")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "af669eee-58ab-51a2-8075-568d0180d198", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-625]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-625")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "beea0e10-9b77-5ebb-8954-df1fb77851b2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-608]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-608")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "c1952cb5-d1ea-5ad0-90fd-21c2d2621ced", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-630]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-630")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "ca0b5527-67c7-523c-902e-935206a43e98", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-619]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-619")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "cb667a38-f94c-5e63-ac54-ae40a40f3903", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-634]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-634")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "ce49c890-098e-535e-b32f-0fbae2740cbc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-638]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-638")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "efdac60d-6b62-52c9-a31f-92e341373be1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-627]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-627")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "f85cc566-a332-589f-86ec-73271417d818", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-626]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-626")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "fddf927d-e3be-5758-8f3c-b55e8bd5477c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-615]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-615")], .matchExpressions = []}}}}: -1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 3716464263243677870556622475737383443, .node = "testNode-60", .pods = [k8spolicy.PodReference{.name = "testPod-609", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 9663145268869478633448107855661856068, .node = "testNode-62", .pods = [k8spolicy.PodReference{.name = "testPod-624", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 13056345226351649193613166612021781604, .node = "testNode-62", .pods = [k8spolicy.PodReference{.name = "testPod-621", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 20410984638251524353250984514670141381, .node = "testNode-62", .pods = [k8spolicy.PodReference{.name = "testPod-623", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 27778378293976698695285799872679130468, .node = "testNode-63", .pods = [k8spolicy.PodReference{.name = "testPod-632", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 29454646625329881124953280547726788403, .node = "testNode-63", .pods = [k8spolicy.PodReference{.name = "testPod-631", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 44481766542918776411588932534483097483, .node = "testNode-61", .pods = [k8spolicy.PodReference{.name = "testPod-613", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 62039266921959583878146638597778698451, .node = "testNode-62", .pods = [k8spolicy.PodReference{.name = "testPod-622", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 73249166270127153923312010831970725047, .node = "testNode-62", .pods = [k8spolicy.PodReference{.name = "testPod-620", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 103667067060352667355214945142441620522, .node = "testNode-61", .pods = [k8spolicy.PodReference{.name = "testPod-610", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 109595952875776271881629169264627301236, .node = "testNode-61", .pods = [k8spolicy.PodReference{.name = "testPod-612", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 113579145843466544150223959520925482777, .node = "testNode-61", .pods = [k8spolicy.PodReference{.name = "testPod-616", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 120533616110235788555806058770320580981, .node = "testNode-62", .pods = [k8spolicy.PodReference{.name = "testPod-629", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 123872733178261764728939611809282555396, .node = "testNode-63", .pods = [k8spolicy.PodReference{.name = "testPod-639", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 136677443506820200208943639420534968877, .node = "testNode-61", .pods = [k8spolicy.PodReference{.name = "testPod-614", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 160940163208804731987974609808421201535, .node = "testNode-62", .pods = [k8spolicy.PodReference{.name = "testPod-628", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 162097615997677536494549499493944303757, .node = "testNode-63", .pods = [k8spolicy.PodReference{.name = "testPod-633", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 183283729794610317838342070133256178594, .node = "testNode-61", .pods = [k8spolicy.PodReference{.name = "testPod-611", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 207268880073424509968974014928922274045, .node = "testNode-63", .pods = [k8spolicy.PodReference{.name = "testPod-637", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 209975073300597752477875721328218052150, .node = "testNode-63", .pods = [k8spolicy.PodReference{.name = "testPod-635", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 214420099612653998753006163641196535258, .node = "testNode-63", .pods = [k8spolicy.PodReference{.name = "testPod-636", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 222563440313352744501332668929241581375, .node = "testNode-61", .pods = [k8spolicy.PodReference{.name = "testPod-618", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 229024273500495890788903593305812329540, .node = "testNode-61", .pods = [k8spolicy.PodReference{.name = "testPod-617", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 233147737046392678223862196895414800792, .node = "testNode-62", .pods = [k8spolicy.PodReference{.name = "testPod-625", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 253768601933530702925143752015546438066, .node = "testNode-60", .pods = [k8spolicy.PodReference{.name = "testPod-608", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 257315562249696113097234276718894783725, .node = "testNode-63", .pods = [k8spolicy.PodReference{.name = "testPod-630", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 268562897540829458479725559689622339224, .node = "testNode-61", .pods = [k8spolicy.PodReference{.name = "testPod-619", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 270365376391811312469077999304473262339, .node = "testNode-63", .pods = [k8spolicy.PodReference{.name = "testPod-634", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 274204072696099270881317343592984087740, .node = "testNode-63", .pods = [k8spolicy.PodReference{.name = "testPod-638", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 318821428688056883498017451075008150497, .node = "testNode-62", .pods = [k8spolicy.PodReference{.name = "testPod-627", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 330130238032115757858869958978536200216, .node = "testNode-62", .pods = [k8spolicy.PodReference{.name = "testPod-626", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 337455536338842635447440504577022314364, .node = "testNode-61", .pods = [k8spolicy.PodReference{.name = "testPod-615", .namespace = "testNamespace"}]}: -1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 3716464263243677870556622475737383443, .span = "testNode-60"}: -1
AppliedToGroupSpan{.appliedToGroup = 9663145268869478633448107855661856068, .span = "testNode-62"}: -1
AppliedToGroupSpan{.appliedToGroup = 13056345226351649193613166612021781604, .span = "testNode-62"}: -1
AppliedToGroupSpan{.appliedToGroup = 20410984638251524353250984514670141381, .span = "testNode-62"}: -1
AppliedToGroupSpan{.appliedToGroup = 27778378293976698695285799872679130468, .span = "testNode-63"}: -1
AppliedToGroupSpan{.appliedToGroup = 29454646625329881124953280547726788403, .span = "testNode-63"}: -1
AppliedToGroupSpan{.appliedToGroup = 44481766542918776411588932534483097483, .span = "testNode-61"}: -1
AppliedToGroupSpan{.appliedToGroup = 62039266921959583878146638597778698451, .span = "testNode-62"}: -1
AppliedToGroupSpan{.appliedToGroup = 73249166270127153923312010831970725047, .span = "testNode-62"}: -1
AppliedToGroupSpan{.appliedToGroup = 103667067060352667355214945142441620522, .span = "testNode-61"}: -1
AppliedToGroupSpan{.appliedToGroup = 109595952875776271881629169264627301236, .span = "testNode-61"}: -1
AppliedToGroupSpan{.appliedToGroup = 113579145843466544150223959520925482777, .span = "testNode-61"}: -1
AppliedToGroupSpan{.appliedToGroup = 120533616110235788555806058770320580981, .span = "testNode-62"}: -1
AppliedToGroupSpan{.appliedToGroup = 123872733178261764728939611809282555396, .span = "testNode-63"}: -1
AppliedToGroupSpan{.appliedToGroup = 136677443506820200208943639420534968877, .span = "testNode-61"}: -1
AppliedToGroupSpan{.appliedToGroup = 160940163208804731987974609808421201535, .span = "testNode-62"}: -1
AppliedToGroupSpan{.appliedToGroup = 162097615997677536494549499493944303757, .span = "testNode-63"}: -1
AppliedToGroupSpan{.appliedToGroup = 183283729794610317838342070133256178594, .span = "testNode-61"}: -1
AppliedToGroupSpan{.appliedToGroup = 207268880073424509968974014928922274045, .span = "testNode-63"}: -1
AppliedToGroupSpan{.appliedToGroup = 209975073300597752477875721328218052150, .span = "testNode-63"}: -1
AppliedToGroupSpan{.appliedToGroup = 214420099612653998753006163641196535258, .span = "testNode-63"}: -1
AppliedToGroupSpan{.appliedToGroup = 222563440313352744501332668929241581375, .span = "testNode-61"}: -1
AppliedToGroupSpan{.appliedToGroup = 229024273500495890788903593305812329540, .span = "testNode-61"}: -1
AppliedToGroupSpan{.appliedToGroup = 233147737046392678223862196895414800792, .span = "testNode-62"}: -1
AppliedToGroupSpan{.appliedToGroup = 253768601933530702925143752015546438066, .span = "testNode-60"}: -1
AppliedToGroupSpan{.appliedToGroup = 257315562249696113097234276718894783725, .span = "testNode-63"}: -1
AppliedToGroupSpan{.appliedToGroup = 268562897540829458479725559689622339224, .span = "testNode-61"}: -1
AppliedToGroupSpan{.appliedToGroup = 270365376391811312469077999304473262339, .span = "testNode-63"}: -1
AppliedToGroupSpan{.appliedToGroup = 274204072696099270881317343592984087740, .span = "testNode-63"}: -1
AppliedToGroupSpan{.appliedToGroup = 318821428688056883498017451075008150497, .span = "testNode-62"}: -1
AppliedToGroupSpan{.appliedToGroup = 330130238032115757858869958978536200216, .span = "testNode-62"}: -1
AppliedToGroupSpan{.appliedToGroup = 337455536338842635447440504577022314364, .span = "testNode-61"}: -1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-608"}, .name = "testNP-608", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [3716464263243677870556622475737383443], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [253768601933530702925143752015546438066]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-609"}, .name = "testNP-609", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [103667067060352667355214945142441620522], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [3716464263243677870556622475737383443]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-610"}, .name = "testNP-610", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [183283729794610317838342070133256178594], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [103667067060352667355214945142441620522]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-611"}, .name = "testNP-611", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [109595952875776271881629169264627301236], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [183283729794610317838342070133256178594]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-612"}, .name = "testNP-612", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [44481766542918776411588932534483097483], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [109595952875776271881629169264627301236]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-613"}, .name = "testNP-613", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [136677443506820200208943639420534968877], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [44481766542918776411588932534483097483]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-614"}, .name = "testNP-614", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [337455536338842635447440504577022314364], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [136677443506820200208943639420534968877]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-615"}, .name = "testNP-615", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [113579145843466544150223959520925482777], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [337455536338842635447440504577022314364]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-616"}, .name = "testNP-616", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [229024273500495890788903593305812329540], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [113579145843466544150223959520925482777]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-617"}, .name = "testNP-617", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [222563440313352744501332668929241581375], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [229024273500495890788903593305812329540]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-618"}, .name = "testNP-618", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [268562897540829458479725559689622339224], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [222563440313352744501332668929241581375]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-619"}, .name = "testNP-619", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [73249166270127153923312010831970725047], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [268562897540829458479725559689622339224]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-620"}, .name = "testNP-620", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [13056345226351649193613166612021781604], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [73249166270127153923312010831970725047]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-621"}, .name = "testNP-621", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [62039266921959583878146638597778698451], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [13056345226351649193613166612021781604]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-622"}, .name = "testNP-622", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [20410984638251524353250984514670141381], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [62039266921959583878146638597778698451]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-623"}, .name = "testNP-623", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [9663145268869478633448107855661856068], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [20410984638251524353250984514670141381]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-624"}, .name = "testNP-624", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [233147737046392678223862196895414800792], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [9663145268869478633448107855661856068]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-625"}, .name = "testNP-625", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [330130238032115757858869958978536200216], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [233147737046392678223862196895414800792]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-626"}, .name = "testNP-626", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [318821428688056883498017451075008150497], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [330130238032115757858869958978536200216]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-627"}, .name = "testNP-627", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [160940163208804731987974609808421201535], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [318821428688056883498017451075008150497]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-628"}, .name = "testNP-628", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [120533616110235788555806058770320580981], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [160940163208804731987974609808421201535]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-629"}, .name = "testNP-629", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [257315562249696113097234276718894783725], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [120533616110235788555806058770320580981]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-630"}, .name = "testNP-630", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [29454646625329881124953280547726788403], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [257315562249696113097234276718894783725]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-631"}, .name = "testNP-631", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [27778378293976698695285799872679130468], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [29454646625329881124953280547726788403]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-632"}, .name = "testNP-632", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [162097615997677536494549499493944303757], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [27778378293976698695285799872679130468]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-633"}, .name = "testNP-633", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [270365376391811312469077999304473262339], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [162097615997677536494549499493944303757]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-634"}, .name = "testNP-634", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [209975073300597752477875721328218052150], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [270365376391811312469077999304473262339]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-635"}, .name = "testNP-635", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [214420099612653998753006163641196535258], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [209975073300597752477875721328218052150]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-636"}, .name = "testNP-636", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [207268880073424509968974014928922274045], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [214420099612653998753006163641196535258]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-637"}, .name = "testNP-637", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [274204072696099270881317343592984087740], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [207268880073424509968974014928922274045]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-638"}, .name = "testNP-638", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [123872733178261764728939611809282555396], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [274204072696099270881317343592984087740]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-639"}, .name = "testNP-639", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [143624621217769766541427656420503794060], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [123872733178261764728939611809282555396]}: -1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-608", .policy = k8spolicy.UID{.uid = "testNP-608"}, .node = "testNode-60"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-609", .policy = k8spolicy.UID{.uid = "testNP-609"}, .node = "testNode-60"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-610", .policy = k8spolicy.UID{.uid = "testNP-610"}, .node = "testNode-61"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-611", .policy = k8spolicy.UID{.uid = "testNP-611"}, .node = "testNode-61"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-612", .policy = k8spolicy.UID{.uid = "testNP-612"}, .node = "testNode-61"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-613", .policy = k8spolicy.UID{.uid = "testNP-613"}, .node = "testNode-61"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-614", .policy = k8spolicy.UID{.uid = "testNP-614"}, .node = "testNode-61"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-615", .policy = k8spolicy.UID{.uid = "testNP-615"}, .node = "testNode-61"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-616", .policy = k8spolicy.UID{.uid = "testNP-616"}, .node = "testNode-61"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-617", .policy = k8spolicy.UID{.uid = "testNP-617"}, .node = "testNode-61"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-618", .policy = k8spolicy.UID{.uid = "testNP-618"}, .node = "testNode-61"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-619", .policy = k8spolicy.UID{.uid = "testNP-619"}, .node = "testNode-61"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-620", .policy = k8spolicy.UID{.uid = "testNP-620"}, .node = "testNode-62"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-621", .policy = k8spolicy.UID{.uid = "testNP-621"}, .node = "testNode-62"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-622", .policy = k8spolicy.UID{.uid = "testNP-622"}, .node = "testNode-62"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-623", .policy = k8spolicy.UID{.uid = "testNP-623"}, .node = "testNode-62"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-624", .policy = k8spolicy.UID{.uid = "testNP-624"}, .node = "testNode-62"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-625", .policy = k8spolicy.UID{.uid = "testNP-625"}, .node = "testNode-62"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-626", .policy = k8spolicy.UID{.uid = "testNP-626"}, .node = "testNode-62"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-627", .policy = k8spolicy.UID{.uid = "testNP-627"}, .node = "testNode-62"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-628", .policy = k8spolicy.UID{.uid = "testNP-628"}, .node = "testNode-62"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-629", .policy = k8spolicy.UID{.uid = "testNP-629"}, .node = "testNode-62"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-630", .policy = k8spolicy.UID{.uid = "testNP-630"}, .node = "testNode-63"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-631", .policy = k8spolicy.UID{.uid = "testNP-631"}, .node = "testNode-63"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-632", .policy = k8spolicy.UID{.uid = "testNP-632"}, .node = "testNode-63"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-633", .policy = k8spolicy.UID{.uid = "testNP-633"}, .node = "testNode-63"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-634", .policy = k8spolicy.UID{.uid = "testNP-634"}, .node = "testNode-63"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-635", .policy = k8spolicy.UID{.uid = "testNP-635"}, .node = "testNode-63"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-636", .policy = k8spolicy.UID{.uid = "testNP-636"}, .node = "testNode-63"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-637", .policy = k8spolicy.UID{.uid = "testNP-637"}, .node = "testNode-63"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-638", .policy = k8spolicy.UID{.uid = "testNP-638"}, .node = "testNode-63"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-639", .policy = k8spolicy.UID{.uid = "testNP-639"}, .node = "testNode-63"}: -1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 6724822347028538184698449350057771513, .address = "10.10.67.2"}: -1
AddressGroupAddress{.addressGroup = 8131214440267313105633271916923414045, .address = "10.10.65.8"}: -1
AddressGroupAddress{.addressGroup = 25576374316170353970235385035027072704, .address = "10.10.64.2"}: -1
AddressGroupAddress{.addressGroup = 47686272756041710353304424550071589232, .address = "10.10.64.1"}: -1
AddressGroupAddress{.addressGroup = 82126703144166505475564181059577305506, .address = "10.10.65.0"}: -1
AddressGroupAddress{.addressGroup = 90941428715328976020837649719702683016, .address = "10.10.65.1"}: -1
AddressGroupAddress{.addressGroup = 111861943731925372747751947018425918532, .address = "10.10.65.9"}: -1
AddressGroupAddress{.addressGroup = 114926762308622209795245423381446101159, .address = "10.10.64.6"}: -1
AddressGroupAddress{.addressGroup = 119585048549478709141804874227314016055, .address = "10.10.64.7"}: -1
AddressGroupAddress{.addressGroup = 149198337302295902157096844862379398176, .address = "10.10.65.7"}: -1
AddressGroupAddress{.addressGroup = 157821311043971614604033670900713152983, .address = "10.10.66.0"}: -1
AddressGroupAddress{.addressGroup = 162027978527484395043948221888101317069, .address = "10.10.64.3"}: -1
AddressGroupAddress{.addressGroup = 180381230749274994342143216432048200554, .address = "10.10.65.2"}: -1
AddressGroupAddress{.addressGroup = 187199851011668350524320507339974314060, .address = "10.10.66.1"}: -1
AddressGroupAddress{.addressGroup = 190646259806768426496430375940959373915, .address = "10.10.65.6"}: -1
AddressGroupAddress{.addressGroup = 191216104771784158951842041944479914006, .address = "10.10.67.1"}: -1
AddressGroupAddress{.addressGroup = 193896006359918741529054448688555368778, .address = "10.10.65.3"}: -1
AddressGroupAddress{.addressGroup = 199501287784320821062320213627481535371, .address = "10.10.66.3"}: -1
AddressGroupAddress{.addressGroup = 201618307305294847332593367405043490113, .address = "10.10.65.5"}: -1
AddressGroupAddress{.addressGroup = 213010257229229844040819633218190417389, .address = "10.10.65.4"}: -1
AddressGroupAddress{.addressGroup = 213716062725403220537860765893155039759, .address = "10.10.66.7"}: -1
AddressGroupAddress{.addressGroup = 231200103265209604778267915842215542501, .address = "10.10.66.2"}: -1
AddressGroupAddress{.addressGroup = 246779300450021411524970511128637645902, .address = "10.10.67.0"}: -1
AddressGroupAddress{.addressGroup = 256895205621744170114084304659165241526, .address = "10.10.64.8"}: -1
AddressGroupAddress{.addressGroup = 268315365323184724272355617861231568293, .address = "10.10.64.4"}: -1
AddressGroupAddress{.addressGroup = 280153774932455238337123305715107600925, .address = "10.10.66.6"}: -1
AddressGroupAddress{.addressGroup = 282613042918141428597609262376610454098, .address = "10.10.66.9"}: -1
AddressGroupAddress{.addressGroup = 284023515744587474499613737136262848133, .address = "10.10.66.5"}: -1
AddressGroupAddress{.addressGroup = 291268439441382665442527760983129607061, .address = "10.10.64.5"}: -1
AddressGroupAddress{.addressGroup = 300606577088930369054413836550902541202, .address = "10.10.66.8"}: -1
AddressGroupAddress{.addressGroup = 325588234872383664713869627785424654009, .address = "10.10.66.4"}: -1
AddressGroupAddress{.addressGroup = 333622881539232253481917888105744819040, .address = "10.10.64.9"}: -1
AddressGroupDescr:
AddressGroupDescr{.name = "050f2757-1b25-5aff-a957-444f7bebc1f9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-672]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-672")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "061e03d2-f13c-5711-b7a3-d1060b17661d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-658]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-658")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "133dd49c-b9a7-5155-a4c6-78463bc346c0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-642]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-642")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "23e00ac4-afe9-5653-9987-e0911990d970", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-641]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-641")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "3dc90716-2978-505c-a87d-4705a347d9a2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-650]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-650")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "446aae9c-7499-52b2-a130-c3fc7ae57d88", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-651]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-651")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "5427d3a3-130a-582b-ad9f-4492317ce444", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-659]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-659")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "567616db-fb7e-551f-b856-aaea40d788a7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-646]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-646")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "59f73e1a-64ed-5a2d-8db0-9f53511f3f37", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-647]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-647")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "703e8df6-bf86-5ce8-9c85-00582b861420", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-657]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-657")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "76bb4764-b16a-5a0d-a34c-d6f6c2f661d7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-660]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-660")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "79e5741c-ff45-5b60-8e3e-2d00a33379cd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-643]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-643")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "87b4294f-947e-522d-93a2-3b02b1135b6a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-652]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-652")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "8cd5613e-d223-57fa-b0f6-4dd21683084c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-661]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-661")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "8f6d2251-6922-5dd6-9429-2dbc50c20a5b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-656]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-656")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "8fdae1d8-0cb8-56b8-8e46-71e7edf05816", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-671]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-671")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "91df0331-887f-559e-ab54-cadbac98214a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-653]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-653")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "96168ce7-96b8-5aa5-80f7-98ddff9eb38b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-663]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-663")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "97ae4606-8f4a-5dc9-9c36-0e418df99d41", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-655]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-655")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "a0404885-6d68-557e-81c1-2668ac799ded", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-654]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-654")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "a0c8376b-3ab4-5237-bcb2-007f5d8b2a0f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-667]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-667")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "adef852b-fbd7-55b0-b47a-7e6a4d5cfee5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-662]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-662")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "b9a7f6e5-7c28-5e8c-94c1-d100d192a44e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-670]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-670")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "c1443787-4262-5765-8833-c6f05f3c60b6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-648]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-648")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "c9dba8df-93ad-5733-8092-d3baad3de5a5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-644]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-644")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "d2c3a787-e8a7-5f9b-9373-ef269e279a1d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-666]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-666")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "d49d4acd-d197-53aa-b0bb-18f6f9945a52", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-669]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-669")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "d5acf07b-bfd0-5e0b-a497-27011f959e85", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-665]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-665")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "db2042cc-ccf7-5bf1-8eda-a2dd5c084b95", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-645]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-645")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "e226b888-48c2-5b83-b3a8-f3da99566b92", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-668]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-668")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "f4f2035b-0d45-5dbd-90a2-06d4488fceb9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-664]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-664")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "fafd6e05-55f0-52eb-8f3c-97519d7de360", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-649]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-649")], .matchExpressions = []}}}}: -1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 6724822347028538184698449350057771513, .node = "testNode-67"}: -1
AddressGroupSpan{.addressGroup = 8131214440267313105633271916923414045, .node = "testNode-65"}: -1
AddressGroupSpan{.addressGroup = 25576374316170353970235385035027072704, .node = "testNode-64"}: -1
AddressGroupSpan{.addressGroup = 47686272756041710353304424550071589232, .node = "testNode-64"}: -1
AddressGroupSpan{.addressGroup = 82126703144166505475564181059577305506, .node = "testNode-64"}: -1
AddressGroupSpan{.addressGroup = 90941428715328976020837649719702683016, .node = "testNode-65"}: -1
AddressGroupSpan{.addressGroup = 111861943731925372747751947018425918532, .node = "testNode-65"}: -1
AddressGroupSpan{.addressGroup = 114926762308622209795245423381446101159, .node = "testNode-64"}: -1
AddressGroupSpan{.addressGroup = 119585048549478709141804874227314016055, .node = "testNode-64"}: -1
AddressGroupSpan{.addressGroup = 149198337302295902157096844862379398176, .node = "testNode-65"}: -1
AddressGroupSpan{.addressGroup = 157821311043971614604033670900713152983, .node = "testNode-65"}: -1
AddressGroupSpan{.addressGroup = 162027978527484395043948221888101317069, .node = "testNode-64"}: -1
AddressGroupSpan{.addressGroup = 180381230749274994342143216432048200554, .node = "testNode-65"}: -1
AddressGroupSpan{.addressGroup = 187199851011668350524320507339974314060, .node = "testNode-66"}: -1
AddressGroupSpan{.addressGroup = 190646259806768426496430375940959373915, .node = "testNode-65"}: -1
AddressGroupSpan{.addressGroup = 191216104771784158951842041944479914006, .node = "testNode-67"}: -1
AddressGroupSpan{.addressGroup = 193896006359918741529054448688555368778, .node = "testNode-65"}: -1
AddressGroupSpan{.addressGroup = 199501287784320821062320213627481535371, .node = "testNode-66"}: -1
AddressGroupSpan{.addressGroup = 201618307305294847332593367405043490113, .node = "testNode-65"}: -1
AddressGroupSpan{.addressGroup = 213010257229229844040819633218190417389, .node = "testNode-65"}: -1
AddressGroupSpan{.addressGroup = 213716062725403220537860765893155039759, .node = "testNode-66"}: -1
AddressGroupSpan{.addressGroup = 231200103265209604778267915842215542501, .node = "testNode-66"}: -1
AddressGroupSpan{.addressGroup = 246779300450021411524970511128637645902, .node = "testNode-66"}: -1
AddressGroupSpan{.addressGroup = 256895205621744170114084304659165241526, .node = "testNode-64"}: -1
AddressGroupSpan{.addressGroup = 268315365323184724272355617861231568293, .node = "testNode-64"}: -1
AddressGroupSpan{.addressGroup = 280153774932455238337123305715107600925, .node = "testNode-66"}: -1
AddressGroupSpan{.addressGroup = 282613042918141428597609262376610454098, .node = "testNode-66"}: -1
AddressGroupSpan{.addressGroup = 284023515744587474499613737136262848133, .node = "testNode-66"}: -1
AddressGroupSpan{.addressGroup = 291268439441382665442527760983129607061, .node = "testNode-64"}: -1
AddressGroupSpan{.addressGroup = 300606577088930369054413836550902541202, .node = "testNode-66"}: -1
AddressGroupSpan{.addressGroup = 325588234872383664713869627785424654009, .node = "testNode-66"}: -1
AddressGroupSpan{.addressGroup = 333622881539232253481917888105744819040, .node = "testNode-64"}: -1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "061e03d2-f13c-5711-b7a3-d1060b17661d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-658]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-658")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "133dd49c-b9a7-5155-a4c6-78463bc346c0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-642]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-642")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "23e00ac4-afe9-5653-9987-e0911990d970", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-641]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-641")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "3dc90716-2978-505c-a87d-4705a347d9a2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-650]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-650")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "446aae9c-7499-52b2-a130-c3fc7ae57d88", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-651]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-651")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "5427d3a3-130a-582b-ad9f-4492317ce444", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-659]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-659")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "567616db-fb7e-551f-b856-aaea40d788a7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-646]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-646")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "59f73e1a-64ed-5a2d-8db0-9f53511f3f37", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-647]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-647")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "6c0d188b-4b43-5eff-b36a-93f7101f318c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-640]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-640")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "703e8df6-bf86-5ce8-9c85-00582b861420", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-657]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-657")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "76bb4764-b16a-5a0d-a34c-d6f6c2f661d7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-660]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-660")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "79e5741c-ff45-5b60-8e3e-2d00a33379cd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-643]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-643")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "87b4294f-947e-522d-93a2-3b02b1135b6a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-652]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-652")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "8cd5613e-d223-57fa-b0f6-4dd21683084c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-661]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-661")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "8f6d2251-6922-5dd6-9429-2dbc50c20a5b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-656]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-656")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "8fdae1d8-0cb8-56b8-8e46-71e7edf05816", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-671]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-671")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "91df0331-887f-559e-ab54-cadbac98214a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-653]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-653")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "96168ce7-96b8-5aa5-80f7-98ddff9eb38b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-663]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-663")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "97ae4606-8f4a-5dc9-9c36-0e418df99d41", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-655]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-655")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "a0404885-6d68-557e-81c1-2668ac799ded", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-654]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-654")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "a0c8376b-3ab4-5237-bcb2-007f5d8b2a0f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-667]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-667")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "adef852b-fbd7-55b0-b47a-7e6a4d5cfee5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-662]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-662")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "b9a7f6e5-7c28-5e8c-94c1-d100d192a44e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-670]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-670")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "c1443787-4262-5765-8833-c6f05f3c60b6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-648]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-648")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "c9dba8df-93ad-5733-8092-d3baad3de5a5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-644]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-644")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "d2c3a787-e8a7-5f9b-9373-ef269e279a1d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-666]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-666")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "d49d4acd-d197-53aa-b0bb-18f6f9945a52", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-669]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-669")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "d5acf07b-bfd0-5e0b-a497-27011f959e85", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-665]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-665")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "db2042cc-ccf7-5bf1-8eda-a2dd5c084b95", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-645]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-645")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "e226b888-48c2-5b83-b3a8-f3da99566b92", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-668]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-668")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "f4f2035b-0d45-5dbd-90a2-06d4488fceb9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-664]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-664")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "fafd6e05-55f0-52eb-8f3c-97519d7de360", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-649]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-649")], .matchExpressions = []}}}}: -1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 8131214440267313105633271916923414045, .node = "testNode-65", .pods = [k8spolicy.PodReference{.name = "testPod-658", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 25576374316170353970235385035027072704, .node = "testNode-64", .pods = [k8spolicy.PodReference{.name = "testPod-642", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 47686272756041710353304424550071589232, .node = "testNode-64", .pods = [k8spolicy.PodReference{.name = "testPod-641", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 82126703144166505475564181059577305506, .node = "testNode-65", .pods = [k8spolicy.PodReference{.name = "testPod-650", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 90941428715328976020837649719702683016, .node = "testNode-65", .pods = [k8spolicy.PodReference{.name = "testPod-651", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 111861943731925372747751947018425918532, .node = "testNode-65", .pods = [k8spolicy.PodReference{.name = "testPod-659", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 114926762308622209795245423381446101159, .node = "testNode-64", .pods = [k8spolicy.PodReference{.name = "testPod-646", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 119585048549478709141804874227314016055, .node = "testNode-64", .pods = [k8spolicy.PodReference{.name = "testPod-647", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 143624621217769766541427656420503794060, .node = "testNode-64", .pods = [k8spolicy.PodReference{.name = "testPod-640", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 149198337302295902157096844862379398176, .node = "testNode-65", .pods = [k8spolicy.PodReference{.name = "testPod-657", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 157821311043971614604033670900713152983, .node = "testNode-66", .pods = [k8spolicy.PodReference{.name = "testPod-660", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 162027978527484395043948221888101317069, .node = "testNode-64", .pods = [k8spolicy.PodReference{.name = "testPod-643", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 180381230749274994342143216432048200554, .node = "testNode-65", .pods = [k8spolicy.PodReference{.name = "testPod-652", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 187199851011668350524320507339974314060, .node = "testNode-66", .pods = [k8spolicy.PodReference{.name = "testPod-661", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 190646259806768426496430375940959373915, .node = "testNode-65", .pods = [k8spolicy.PodReference{.name = "testPod-656", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 191216104771784158951842041944479914006, .node = "testNode-67", .pods = [k8spolicy.PodReference{.name = "testPod-671", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 193896006359918741529054448688555368778, .node = "testNode-65", .pods = [k8spolicy.PodReference{.name = "testPod-653", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 199501287784320821062320213627481535371, .node = "testNode-66", .pods = [k8spolicy.PodReference{.name = "testPod-663", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 201618307305294847332593367405043490113, .node = "testNode-65", .pods = [k8spolicy.PodReference{.name = "testPod-655", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 213010257229229844040819633218190417389, .node = "testNode-65", .pods = [k8spolicy.PodReference{.name = "testPod-654", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 213716062725403220537860765893155039759, .node = "testNode-66", .pods = [k8spolicy.PodReference{.name = "testPod-667", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 231200103265209604778267915842215542501, .node = "testNode-66", .pods = [k8spolicy.PodReference{.name = "testPod-662", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 246779300450021411524970511128637645902, .node = "testNode-67", .pods = [k8spolicy.PodReference{.name = "testPod-670", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 256895205621744170114084304659165241526, .node = "testNode-64", .pods = [k8spolicy.PodReference{.name = "testPod-648", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 268315365323184724272355617861231568293, .node = "testNode-64", .pods = [k8spolicy.PodReference{.name = "testPod-644", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 280153774932455238337123305715107600925, .node = "testNode-66", .pods = [k8spolicy.PodReference{.name = "testPod-666", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 282613042918141428597609262376610454098, .node = "testNode-66", .pods = [k8spolicy.PodReference{.name = "testPod-669", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 284023515744587474499613737136262848133, .node = "testNode-66", .pods = [k8spolicy.PodReference{.name = "testPod-665", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 291268439441382665442527760983129607061, .node = "testNode-64", .pods = [k8spolicy.PodReference{.name = "testPod-645", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 300606577088930369054413836550902541202, .node = "testNode-66", .pods = [k8spolicy.PodReference{.name = "testPod-668", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 325588234872383664713869627785424654009, .node = "testNode-66", .pods = [k8spolicy.PodReference{.name = "testPod-664", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 333622881539232253481917888105744819040, .node = "testNode-64", .pods = [k8spolicy.PodReference{.name = "testPod-649", .namespace = "testNamespace"}]}: -1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 8131214440267313105633271916923414045, .span = "testNode-65"}: -1
AppliedToGroupSpan{.appliedToGroup = 25576374316170353970235385035027072704, .span = "testNode-64"}: -1
AppliedToGroupSpan{.appliedToGroup = 47686272756041710353304424550071589232, .span = "testNode-64"}: -1
AppliedToGroupSpan{.appliedToGroup = 82126703144166505475564181059577305506, .span = "testNode-65"}: -1
AppliedToGroupSpan{.appliedToGroup = 90941428715328976020837649719702683016, .span = "testNode-65"}: -1
AppliedToGroupSpan{.appliedToGroup = 111861943731925372747751947018425918532, .span = "testNode-65"}: -1
AppliedToGroupSpan{.appliedToGroup = 114926762308622209795245423381446101159, .span = "testNode-64"}: -1
AppliedToGroupSpan{.appliedToGroup = 119585048549478709141804874227314016055, .span = "testNode-64"}: -1
AppliedToGroupSpan{.appliedToGroup = 143624621217769766541427656420503794060, .span = "testNode-64"}: -1
AppliedToGroupSpan{.appliedToGroup = 149198337302295902157096844862379398176, .span = "testNode-65"}: -1
AppliedToGroupSpan{.appliedToGroup = 157821311043971614604033670900713152983, .span = "testNode-66"}: -1
AppliedToGroupSpan{.appliedToGroup = 162027978527484395043948221888101317069, .span = "testNode-64"}: -1
AppliedToGroupSpan{.appliedToGroup = 180381230749274994342143216432048200554, .span = "testNode-65"}: -1
AppliedToGroupSpan{.appliedToGroup = 187199851011668350524320507339974314060, .span = "testNode-66"}: -1
AppliedToGroupSpan{.appliedToGroup = 190646259806768426496430375940959373915, .span = "testNode-65"}: -1
AppliedToGroupSpan{.appliedToGroup = 191216104771784158951842041944479914006, .span = "testNode-67"}: -1
AppliedToGroupSpan{.appliedToGroup = 193896006359918741529054448688555368778, .span = "testNode-65"}: -1
AppliedToGroupSpan{.appliedToGroup = 199501287784320821062320213627481535371, .span = "testNode-66"}: -1
AppliedToGroupSpan{.appliedToGroup = 201618307305294847332593367405043490113, .span = "testNode-65"}: -1
AppliedToGroupSpan{.appliedToGroup = 213010257229229844040819633218190417389, .span = "testNode-65"}: -1
AppliedToGroupSpan{.appliedToGroup = 213716062725403220537860765893155039759, .span = "testNode-66"}: -1
AppliedToGroupSpan{.appliedToGroup = 231200103265209604778267915842215542501, .span = "testNode-66"}: -1
AppliedToGroupSpan{.appliedToGroup = 246779300450021411524970511128637645902, .span = "testNode-67"}: -1
AppliedToGroupSpan{.appliedToGroup = 256895205621744170114084304659165241526, .span = "testNode-64"}: -1
AppliedToGroupSpan{.appliedToGroup = 268315365323184724272355617861231568293, .span = "testNode-64"}: -1
AppliedToGroupSpan{.appliedToGroup = 280153774932455238337123305715107600925, .span = "testNode-66"}: -1
AppliedToGroupSpan{.appliedToGroup = 282613042918141428597609262376610454098, .span = "testNode-66"}: -1
AppliedToGroupSpan{.appliedToGroup = 284023515744587474499613737136262848133, .span = "testNode-66"}: -1
AppliedToGroupSpan{.appliedToGroup = 291268439441382665442527760983129607061, .span = "testNode-64"}: -1
AppliedToGroupSpan{.appliedToGroup = 300606577088930369054413836550902541202, .span = "testNode-66"}: -1
AppliedToGroupSpan{.appliedToGroup = 325588234872383664713869627785424654009, .span = "testNode-66"}: -1
AppliedToGroupSpan{.appliedToGroup = 333622881539232253481917888105744819040, .span = "testNode-64"}: -1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-640"}, .name = "testNP-640", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [47686272756041710353304424550071589232], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [143624621217769766541427656420503794060]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-641"}, .name = "testNP-641", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [25576374316170353970235385035027072704], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [47686272756041710353304424550071589232]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-642"}, .name = "testNP-642", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [162027978527484395043948221888101317069], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [25576374316170353970235385035027072704]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-643"}, .name = "testNP-643", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [268315365323184724272355617861231568293], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [162027978527484395043948221888101317069]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-644"}, .name = "testNP-644", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [291268439441382665442527760983129607061], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [268315365323184724272355617861231568293]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-645"}, .name = "testNP-645", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [114926762308622209795245423381446101159], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [291268439441382665442527760983129607061]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-646"}, .name = "testNP-646", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [119585048549478709141804874227314016055], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [114926762308622209795245423381446101159]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-647"}, .name = "testNP-647", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [256895205621744170114084304659165241526], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [119585048549478709141804874227314016055]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-648"}, .name = "testNP-648", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [333622881539232253481917888105744819040], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [256895205621744170114084304659165241526]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-649"}, .name = "testNP-649", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [82126703144166505475564181059577305506], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [333622881539232253481917888105744819040]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-650"}, .name = "testNP-650", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [90941428715328976020837649719702683016], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [82126703144166505475564181059577305506]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-651"}, .name = "testNP-651", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [180381230749274994342143216432048200554], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [90941428715328976020837649719702683016]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-652"}, .name = "testNP-652", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [193896006359918741529054448688555368778], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [180381230749274994342143216432048200554]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-653"}, .name = "testNP-653", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [213010257229229844040819633218190417389], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [193896006359918741529054448688555368778]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-654"}, .name = "testNP-654", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [201618307305294847332593367405043490113], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [213010257229229844040819633218190417389]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-655"}, .name = "testNP-655", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [190646259806768426496430375940959373915], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [201618307305294847332593367405043490113]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-656"}, .name = "testNP-656", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [149198337302295902157096844862379398176], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [190646259806768426496430375940959373915]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-657"}, .name = "testNP-657", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [8131214440267313105633271916923414045], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [149198337302295902157096844862379398176]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-658"}, .name = "testNP-658", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [111861943731925372747751947018425918532], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [8131214440267313105633271916923414045]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-659"}, .name = "testNP-659", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [157821311043971614604033670900713152983], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [111861943731925372747751947018425918532]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-660"}, .name = "testNP-660", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [187199851011668350524320507339974314060], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [157821311043971614604033670900713152983]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-661"}, .name = "testNP-661", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [231200103265209604778267915842215542501], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [187199851011668350524320507339974314060]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-662"}, .name = "testNP-662", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [199501287784320821062320213627481535371], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [231200103265209604778267915842215542501]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-663"}, .name = "testNP-663", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [325588234872383664713869627785424654009], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [199501287784320821062320213627481535371]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-664"}, .name = "testNP-664", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [284023515744587474499613737136262848133], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [325588234872383664713869627785424654009]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-665"}, .name = "testNP-665", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [280153774932455238337123305715107600925], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [284023515744587474499613737136262848133]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-666"}, .name = "testNP-666", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [213716062725403220537860765893155039759], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [280153774932455238337123305715107600925]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-667"}, .name = "testNP-667", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [300606577088930369054413836550902541202], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [213716062725403220537860765893155039759]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-668"}, .name = "testNP-668", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [282613042918141428597609262376610454098], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [300606577088930369054413836550902541202]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-669"}, .name = "testNP-669", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [246779300450021411524970511128637645902], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [282613042918141428597609262376610454098]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-670"}, .name = "testNP-670", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [191216104771784158951842041944479914006], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [246779300450021411524970511128637645902]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-671"}, .name = "testNP-671", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [6724822347028538184698449350057771513], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [191216104771784158951842041944479914006]}: -1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-640", .policy = k8spolicy.UID{.uid = "testNP-640"}, .node = "testNode-64"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-641", .policy = k8spolicy.UID{.uid = "testNP-641"}, .node = "testNode-64"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-642", .policy = k8spolicy.UID{.uid = "testNP-642"}, .node = "testNode-64"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-643", .policy = k8spolicy.UID{.uid = "testNP-643"}, .node = "testNode-64"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-644", .policy = k8spolicy.UID{.uid = "testNP-644"}, .node = "testNode-64"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-645", .policy = k8spolicy.UID{.uid = "testNP-645"}, .node = "testNode-64"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-646", .policy = k8spolicy.UID{.uid = "testNP-646"}, .node = "testNode-64"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-647", .policy = k8spolicy.UID{.uid = "testNP-647"}, .node = "testNode-64"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-648", .policy = k8spolicy.UID{.uid = "testNP-648"}, .node = "testNode-64"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-649", .policy = k8spolicy.UID{.uid = "testNP-649"}, .node = "testNode-64"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-650", .policy = k8spolicy.UID{.uid = "testNP-650"}, .node = "testNode-65"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-651", .policy = k8spolicy.UID{.uid = "testNP-651"}, .node = "testNode-65"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-652", .policy = k8spolicy.UID{.uid = "testNP-652"}, .node = "testNode-65"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-653", .policy = k8spolicy.UID{.uid = "testNP-653"}, .node = "testNode-65"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-654", .policy = k8spolicy.UID{.uid = "testNP-654"}, .node = "testNode-65"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-655", .policy = k8spolicy.UID{.uid = "testNP-655"}, .node = "testNode-65"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-656", .policy = k8spolicy.UID{.uid = "testNP-656"}, .node = "testNode-65"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-657", .policy = k8spolicy.UID{.uid = "testNP-657"}, .node = "testNode-65"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-658", .policy = k8spolicy.UID{.uid = "testNP-658"}, .node = "testNode-65"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-659", .policy = k8spolicy.UID{.uid = "testNP-659"}, .node = "testNode-65"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-660", .policy = k8spolicy.UID{.uid = "testNP-660"}, .node = "testNode-66"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-661", .policy = k8spolicy.UID{.uid = "testNP-661"}, .node = "testNode-66"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-662", .policy = k8spolicy.UID{.uid = "testNP-662"}, .node = "testNode-66"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-663", .policy = k8spolicy.UID{.uid = "testNP-663"}, .node = "testNode-66"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-664", .policy = k8spolicy.UID{.uid = "testNP-664"}, .node = "testNode-66"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-665", .policy = k8spolicy.UID{.uid = "testNP-665"}, .node = "testNode-66"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-666", .policy = k8spolicy.UID{.uid = "testNP-666"}, .node = "testNode-66"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-667", .policy = k8spolicy.UID{.uid = "testNP-667"}, .node = "testNode-66"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-668", .policy = k8spolicy.UID{.uid = "testNP-668"}, .node = "testNode-66"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-669", .policy = k8spolicy.UID{.uid = "testNP-669"}, .node = "testNode-66"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-670", .policy = k8spolicy.UID{.uid = "testNP-670"}, .node = "testNode-67"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-671", .policy = k8spolicy.UID{.uid = "testNP-671"}, .node = "testNode-67"}: -1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 7351990186483557552444463781679904809, .address = "10.10.67.3"}: -1
AddressGroupAddress{.addressGroup = 24461730381542499610093051750066866265, .address = "10.10.68.5"}: -1
AddressGroupAddress{.addressGroup = 33349030135388836164731705051064410840, .address = "10.10.69.1"}: -1
AddressGroupAddress{.addressGroup = 34591211941641149834652773767088334092, .address = "10.10.69.7"}: -1
AddressGroupAddress{.addressGroup = 48477708467535794073119471470777082609, .address = "10.10.70.4"}: -1
AddressGroupAddress{.addressGroup = 49753344134897828027802370093534187918, .address = "10.10.70.2"}: -1
AddressGroupAddress{.addressGroup = 61189920482240044489684089556637522064, .address = "10.10.70.0"}: -1
AddressGroupAddress{.addressGroup = 62143987467383965424135080433797142978, .address = "10.10.69.4"}: -1
AddressGroupAddress{.addressGroup = 64580122586708728978132711878962153800, .address = "10.10.67.5"}: -1
AddressGroupAddress{.addressGroup = 85242953011492514034490306673927868452, .address = "10.10.68.7"}: -1
AddressGroupAddress{.addressGroup = 86486775776071724534880055643199948636, .address = "10.10.68.0"}: -1
AddressGroupAddress{.addressGroup = 86991615347597860023055905913112263037, .address = "10.10.69.2"}: -1
AddressGroupAddress{.addressGroup = 88683067973595289524317345464658190592, .address = "10.10.67.9"}: -1
AddressGroupAddress{.addressGroup = 117443228247412088336228824049892542442, .address = "10.10.70.1"}: -1
AddressGroupAddress{.addressGroup = 120377797935223020323205290684099919383, .address = "10.10.68.1"}: -1
AddressGroupAddress{.addressGroup = 121108580630303683178705582888559181729, .address = "10.10.67.6"}: -1
AddressGroupAddress{.addressGroup = 134146252471949571977668474355948013527, .address = "10.10.68.9"}: -1
AddressGroupAddress{.addressGroup = 138086993536514857553090980018792399275, .address = "10.10.69.5"}: -1
AddressGroupAddress{.addressGroup = 168044091946758906090084828360503245716, .address = "10.10.69.0"}: -1
AddressGroupAddress{.addressGroup = 168667235084540050994202206607357889604, .address = "10.10.68.6"}: -1
AddressGroupAddress{.addressGroup = 180393454471334722579112570754050299799, .address = "10.10.68.8"}: -1
AddressGroupAddress{.addressGroup = 183289785041205741695428160540157384659, .address = "10.10.70.3"}: -1
AddressGroupAddress{.addressGroup = 201285752053047080602264562070774159818, .address = "10.10.67.4"}: -1
AddressGroupAddress{.addressGroup = 207205852810374797111027573563788396445, .address = "10.10.69.6"}: -1
AddressGroupAddress{.addressGroup = 207778375529858467154367561208456585304, .address = "10.10.68.2"}: -1
AddressGroupAddress{.addressGroup = 212880699457879012319962995556026543041, .address = "10.10.68.4"}: -1
AddressGroupAddress{.addressGroup = 214482833123729423733379005998105489644, .address = "10.10.67.7"}: -1
AddressGroupAddress{.addressGroup = 224840873215674627700932472004267863469, .address = "10.10.69.8"}: -1
AddressGroupAddress{.addressGroup = 258942052616446291897134980905455208001, .address = "10.10.69.3"}: -1
AddressGroupAddress{.addressGroup = 293688677984215587141034871616936075800, .address = "10.10.68.3"}: -1
AddressGroupAddress{.addressGroup = 322006876878864341276134893659865091836, .address = "10.10.67.8"}: -1
AddressGroupAddress{.addressGroup = 327632319420903665251336703817543937027, .address = "10.10.69.9"}: -1
AddressGroupDescr:
AddressGroupDescr{.name = "0587f11a-2393-513a-bf8b-24fb834eb829", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-673]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-673")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "1267286c-5a57-550b-90b6-a915509ec859", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-685]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-685")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "1916ca21-9d10-5123-bf26-c68c1b9da2d8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-691]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-691")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "1a06066c-3d56-5505-8887-5ae3e9e6650c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-697]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-697")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "2478778f-c17f-5acb-aaa0-27cc573a22f1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-704]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-704")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "256e2541-78f2-5f46-8039-020a998c918e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-702]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-702")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "2e08c000-fe0a-5fe4-96d2-eb7c8b731890", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-700]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-700")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "2ec07f23-522e-57ec-a82c-b8979e5599c2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-694]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-694")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "3095addf-6897-5833-b3bf-56ad9a0b8948", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-675]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-675")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "40213211-38c3-5538-a529-fe9357015024", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-687]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-687")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "4110bf43-a75b-5d54-8a29-3755499ac75c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-680]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-680")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "4171f9c6-e03b-5c81-9d2a-ee8a5462797d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-692]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-692")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "42b7bcd4-7888-57a1-b09f-1d677a586100", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-679]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-679")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "585abe35-8eab-5fc4-92ba-2485002947ea", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-701]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-701")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "5a8febaa-5cf2-5e35-9f04-a3e18c24fe17", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-681]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-681")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "5b1caa08-bca2-57d8-b738-245eef91ffa1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-676]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-676")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "64eba0e2-8330-5991-a9e5-bf7ba04147d7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-689]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-689")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "67e2966b-8704-554b-80df-c194746b81ab", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-695]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-695")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "7e6c1d67-d7b5-5638-9b27-db894814bb94", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-690]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-690")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "7ee420bb-ffa7-5c26-b619-0cde7455cc44", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-686]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-686")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "87b683fc-a4ab-5d6e-8d63-1400fbb01797", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-688]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-688")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "89e4541b-ed09-5593-8aa7-cb4a518797d3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-703]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-703")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "976e39c9-299c-5500-935f-242503b119ca", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-674]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-674")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "9be26549-d762-50cc-adab-a75c8d48879d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-696]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-696")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "9c50a8d6-7e4d-57d1-9930-5dc1514ca058", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-682]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-682")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "a02754d4-746d-590e-98a9-e961e159ebc1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-684]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-684")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "a15be41e-4713-51a6-9abd-77acd185f0ec", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-677]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-677")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "a926c6ec-68db-5f32-8c49-74a3e2b1edad", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-698]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-698")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "c2ce6ce0-6dc2-5dc4-9ff1-78e26c624641", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-693]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-693")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "dcf261c5-e278-57a9-af37-e38ee62be218", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-683]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-683")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "f24044c6-1ce2-5ebe-8698-7425b9a60efc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-678]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-678")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "f67bb081-3fa0-51b9-9010-62a042e56c03", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-699]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-699")], .matchExpressions = []}}}}: -1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 7351990186483557552444463781679904809, .node = "testNode-67"}: -1
AddressGroupSpan{.addressGroup = 24461730381542499610093051750066866265, .node = "testNode-68"}: -1
AddressGroupSpan{.addressGroup = 33349030135388836164731705051064410840, .node = "testNode-69"}: -1
AddressGroupSpan{.addressGroup = 34591211941641149834652773767088334092, .node = "testNode-69"}: -1
AddressGroupSpan{.addressGroup = 48477708467535794073119471470777082609, .node = "testNode-70"}: -1
AddressGroupSpan{.addressGroup = 49753344134897828027802370093534187918, .node = "testNode-70"}: -1
AddressGroupSpan{.addressGroup = 61189920482240044489684089556637522064, .node = "testNode-69"}: -1
AddressGroupSpan{.addressGroup = 62143987467383965424135080433797142978, .node = "testNode-69"}: -1
AddressGroupSpan{.addressGroup = 64580122586708728978132711878962153800, .node = "testNode-67"}: -1
AddressGroupSpan{.addressGroup = 85242953011492514034490306673927868452, .node = "testNode-68"}: -1
AddressGroupSpan{.addressGroup = 86486775776071724534880055643199948636, .node = "testNode-67"}: -1
AddressGroupSpan{.addressGroup = 86991615347597860023055905913112263037, .node = "testNode-69"}: -1
AddressGroupSpan{.addressGroup = 88683067973595289524317345464658190592, .node = "testNode-67"}: -1
AddressGroupSpan{.addressGroup = 117443228247412088336228824049892542442, .node = "testNode-70"}: -1
AddressGroupSpan{.addressGroup = 120377797935223020323205290684099919383, .node = "testNode-68"}: -1
AddressGroupSpan{.addressGroup = 121108580630303683178705582888559181729, .node = "testNode-67"}: -1
AddressGroupSpan{.addressGroup = 134146252471949571977668474355948013527, .node = "testNode-68"}: -1
AddressGroupSpan{.addressGroup = 138086993536514857553090980018792399275, .node = "testNode-69"}: -1
AddressGroupSpan{.addressGroup = 168044091946758906090084828360503245716, .node = "testNode-68"}: -1
AddressGroupSpan{.addressGroup = 168667235084540050994202206607357889604, .node = "testNode-68"}: -1
AddressGroupSpan{.addressGroup = 180393454471334722579112570754050299799, .node = "testNode-68"}: -1
AddressGroupSpan{.addressGroup = 183289785041205741695428160540157384659, .node = "testNode-70"}: -1
AddressGroupSpan{.addressGroup = 201285752053047080602264562070774159818, .node = "testNode-67"}: -1
AddressGroupSpan{.addressGroup = 207205852810374797111027573563788396445, .node = "testNode-69"}: -1
AddressGroupSpan{.addressGroup = 207778375529858467154367561208456585304, .node = "testNode-68"}: -1
AddressGroupSpan{.addressGroup = 212880699457879012319962995556026543041, .node = "testNode-68"}: -1
AddressGroupSpan{.addressGroup = 214482833123729423733379005998105489644, .node = "testNode-67"}: -1
AddressGroupSpan{.addressGroup = 224840873215674627700932472004267863469, .node = "testNode-69"}: -1
AddressGroupSpan{.addressGroup = 258942052616446291897134980905455208001, .node = "testNode-69"}: -1
AddressGroupSpan{.addressGroup = 293688677984215587141034871616936075800, .node = "testNode-68"}: -1
AddressGroupSpan{.addressGroup = 322006876878864341276134893659865091836, .node = "testNode-67"}: -1
AddressGroupSpan{.addressGroup = 327632319420903665251336703817543937027, .node = "testNode-69"}: -1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "050f2757-1b25-5aff-a957-444f7bebc1f9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-672]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-672")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "0587f11a-2393-513a-bf8b-24fb834eb829", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-673]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-673")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "1267286c-5a57-550b-90b6-a915509ec859", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-685]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-685")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "1916ca21-9d10-5123-bf26-c68c1b9da2d8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-691]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-691")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "1a06066c-3d56-5505-8887-5ae3e9e6650c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-697]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-697")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "256e2541-78f2-5f46-8039-020a998c918e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-702]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-702")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "2e08c000-fe0a-5fe4-96d2-eb7c8b731890", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-700]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-700")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "2ec07f23-522e-57ec-a82c-b8979e5599c2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-694]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-694")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "3095addf-6897-5833-b3bf-56ad9a0b8948", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-675]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-675")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "40213211-38c3-5538-a529-fe9357015024", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-687]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-687")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "4110bf43-a75b-5d54-8a29-3755499ac75c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-680]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-680")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "4171f9c6-e03b-5c81-9d2a-ee8a5462797d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-692]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-692")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "42b7bcd4-7888-57a1-b09f-1d677a586100", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-679]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-679")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "585abe35-8eab-5fc4-92ba-2485002947ea", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-701]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-701")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "5a8febaa-5cf2-5e35-9f04-a3e18c24fe17", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-681]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-681")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "5b1caa08-bca2-57d8-b738-245eef91ffa1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-676]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-676")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "64eba0e2-8330-5991-a9e5-bf7ba04147d7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-689]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-689")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "67e2966b-8704-554b-80df-c194746b81ab", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-695]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-695")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "7e6c1d67-d7b5-5638-9b27-db894814bb94", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-690]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-690")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "7ee420bb-ffa7-5c26-b619-0cde7455cc44", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-686]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-686")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "87b683fc-a4ab-5d6e-8d63-1400fbb01797", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-688]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-688")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "89e4541b-ed09-5593-8aa7-cb4a518797d3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-703]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-703")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "976e39c9-299c-5500-935f-242503b119ca", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-674]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-674")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "9be26549-d762-50cc-adab-a75c8d48879d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-696]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-696")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "9c50a8d6-7e4d-57d1-9930-5dc1514ca058", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-682]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-682")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "a02754d4-746d-590e-98a9-e961e159ebc1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-684]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-684")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "a15be41e-4713-51a6-9abd-77acd185f0ec", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-677]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-677")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "a926c6ec-68db-5f32-8c49-74a3e2b1edad", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-698]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-698")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "c2ce6ce0-6dc2-5dc4-9ff1-78e26c624641", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-693]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-693")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "dcf261c5-e278-57a9-af37-e38ee62be218", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-683]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-683")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "f24044c6-1ce2-5ebe-8698-7425b9a60efc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-678]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-678")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "f67bb081-3fa0-51b9-9010-62a042e56c03", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-699]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-699")], .matchExpressions = []}}}}: -1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 6724822347028538184698449350057771513, .node = "testNode-67", .pods = [k8spolicy.PodReference{.name = "testPod-672", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 7351990186483557552444463781679904809, .node = "testNode-67", .pods = [k8spolicy.PodReference{.name = "testPod-673", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 24461730381542499610093051750066866265, .node = "testNode-68", .pods = [k8spolicy.PodReference{.name = "testPod-685", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 33349030135388836164731705051064410840, .node = "testNode-69", .pods = [k8spolicy.PodReference{.name = "testPod-691", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 34591211941641149834652773767088334092, .node = "testNode-69", .pods = [k8spolicy.PodReference{.name = "testPod-697", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 49753344134897828027802370093534187918, .node = "testNode-70", .pods = [k8spolicy.PodReference{.name = "testPod-702", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 61189920482240044489684089556637522064, .node = "testNode-70", .pods = [k8spolicy.PodReference{.name = "testPod-700", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 62143987467383965424135080433797142978, .node = "testNode-69", .pods = [k8spolicy.PodReference{.name = "testPod-694", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 64580122586708728978132711878962153800, .node = "testNode-67", .pods = [k8spolicy.PodReference{.name = "testPod-675", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 85242953011492514034490306673927868452, .node = "testNode-68", .pods = [k8spolicy.PodReference{.name = "testPod-687", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 86486775776071724534880055643199948636, .node = "testNode-68", .pods = [k8spolicy.PodReference{.name = "testPod-680", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 86991615347597860023055905913112263037, .node = "testNode-69", .pods = [k8spolicy.PodReference{.name = "testPod-692", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 88683067973595289524317345464658190592, .node = "testNode-67", .pods = [k8spolicy.PodReference{.name = "testPod-679", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 117443228247412088336228824049892542442, .node = "testNode-70", .pods = [k8spolicy.PodReference{.name = "testPod-701", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 120377797935223020323205290684099919383, .node = "testNode-68", .pods = [k8spolicy.PodReference{.name = "testPod-681", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 121108580630303683178705582888559181729, .node = "testNode-67", .pods = [k8spolicy.PodReference{.name = "testPod-676", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 134146252471949571977668474355948013527, .node = "testNode-68", .pods = [k8spolicy.PodReference{.name = "testPod-689", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 138086993536514857553090980018792399275, .node = "testNode-69", .pods = [k8spolicy.PodReference{.name = "testPod-695", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 168044091946758906090084828360503245716, .node = "testNode-69", .pods = [k8spolicy.PodReference{.name = "testPod-690", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 168667235084540050994202206607357889604, .node = "testNode-68", .pods = [k8spolicy.PodReference{.name = "testPod-686", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 180393454471334722579112570754050299799, .node = "testNode-68", .pods = [k8spolicy.PodReference{.name = "testPod-688", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 183289785041205741695428160540157384659, .node = "testNode-70", .pods = [k8spolicy.PodReference{.name = "testPod-703", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 201285752053047080602264562070774159818, .node = "testNode-67", .pods = [k8spolicy.PodReference{.name = "testPod-674", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 207205852810374797111027573563788396445, .node = "testNode-69", .pods = [k8spolicy.PodReference{.name = "testPod-696", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 207778375529858467154367561208456585304, .node = "testNode-68", .pods = [k8spolicy.PodReference{.name = "testPod-682", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 212880699457879012319962995556026543041, .node = "testNode-68", .pods = [k8spolicy.PodReference{.name = "testPod-684", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 214482833123729423733379005998105489644, .node = "testNode-67", .pods = [k8spolicy.PodReference{.name = "testPod-677", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 224840873215674627700932472004267863469, .node = "testNode-69", .pods = [k8spolicy.PodReference{.name = "testPod-698", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 258942052616446291897134980905455208001, .node = "testNode-69", .pods = [k8spolicy.PodReference{.name = "testPod-693", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 293688677984215587141034871616936075800, .node = "testNode-68", .pods = [k8spolicy.PodReference{.name = "testPod-683", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 322006876878864341276134893659865091836, .node = "testNode-67", .pods = [k8spolicy.PodReference{.name = "testPod-678", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 327632319420903665251336703817543937027, .node = "testNode-69", .pods = [k8spolicy.PodReference{.name = "testPod-699", .namespace = "testNamespace"}]}: -1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 6724822347028538184698449350057771513, .span = "testNode-67"}: -1
AppliedToGroupSpan{.appliedToGroup = 7351990186483557552444463781679904809, .span = "testNode-67"}: -1
AppliedToGroupSpan{.appliedToGroup = 24461730381542499610093051750066866265, .span = "testNode-68"}: -1
AppliedToGroupSpan{.appliedToGroup = 33349030135388836164731705051064410840, .span = "testNode-69"}: -1
AppliedToGroupSpan{.appliedToGroup = 34591211941641149834652773767088334092, .span = "testNode-69"}: -1
AppliedToGroupSpan{.appliedToGroup = 49753344134897828027802370093534187918, .span = "testNode-70"}: -1
AppliedToGroupSpan{.appliedToGroup = 61189920482240044489684089556637522064, .span = "testNode-70"}: -1
AppliedToGroupSpan{.appliedToGroup = 62143987467383965424135080433797142978, .span = "testNode-69"}: -1
AppliedToGroupSpan{.appliedToGroup = 64580122586708728978132711878962153800, .span = "testNode-67"}: -1
AppliedToGroupSpan{.appliedToGroup = 85242953011492514034490306673927868452, .span = "testNode-68"}: -1
AppliedToGroupSpan{.appliedToGroup = 86486775776071724534880055643199948636, .span = "testNode-68"}: -1
AppliedToGroupSpan{.appliedToGroup = 86991615347597860023055905913112263037, .span = "testNode-69"}: -1
AppliedToGroupSpan{.appliedToGroup = 88683067973595289524317345464658190592, .span = "testNode-67"}: -1
AppliedToGroupSpan{.appliedToGroup = 117443228247412088336228824049892542442, .span = "testNode-70"}: -1
AppliedToGroupSpan{.appliedToGroup = 120377797935223020323205290684099919383, .span = "testNode-68"}: -1
AppliedToGroupSpan{.appliedToGroup = 121108580630303683178705582888559181729, .span = "testNode-67"}: -1
AppliedToGroupSpan{.appliedToGroup = 134146252471949571977668474355948013527, .span = "testNode-68"}: -1
AppliedToGroupSpan{.appliedToGroup = 138086993536514857553090980018792399275, .span = "testNode-69"}: -1
AppliedToGroupSpan{.appliedToGroup = 168044091946758906090084828360503245716, .span = "testNode-69"}: -1
AppliedToGroupSpan{.appliedToGroup = 168667235084540050994202206607357889604, .span = "testNode-68"}: -1
AppliedToGroupSpan{.appliedToGroup = 180393454471334722579112570754050299799, .span = "testNode-68"}: -1
AppliedToGroupSpan{.appliedToGroup = 183289785041205741695428160540157384659, .span = "testNode-70"}: -1
AppliedToGroupSpan{.appliedToGroup = 201285752053047080602264562070774159818, .span = "testNode-67"}: -1
AppliedToGroupSpan{.appliedToGroup = 207205852810374797111027573563788396445, .span = "testNode-69"}: -1
AppliedToGroupSpan{.appliedToGroup = 207778375529858467154367561208456585304, .span = "testNode-68"}: -1
AppliedToGroupSpan{.appliedToGroup = 212880699457879012319962995556026543041, .span = "testNode-68"}: -1
AppliedToGroupSpan{.appliedToGroup = 214482833123729423733379005998105489644, .span = "testNode-67"}: -1
AppliedToGroupSpan{.appliedToGroup = 224840873215674627700932472004267863469, .span = "testNode-69"}: -1
AppliedToGroupSpan{.appliedToGroup = 258942052616446291897134980905455208001, .span = "testNode-69"}: -1
AppliedToGroupSpan{.appliedToGroup = 293688677984215587141034871616936075800, .span = "testNode-68"}: -1
AppliedToGroupSpan{.appliedToGroup = 322006876878864341276134893659865091836, .span = "testNode-67"}: -1
AppliedToGroupSpan{.appliedToGroup = 327632319420903665251336703817543937027, .span = "testNode-69"}: -1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-672"}, .name = "testNP-672", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [7351990186483557552444463781679904809], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [6724822347028538184698449350057771513]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-673"}, .name = "testNP-673", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [201285752053047080602264562070774159818], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [7351990186483557552444463781679904809]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-674"}, .name = "testNP-674", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [64580122586708728978132711878962153800], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [201285752053047080602264562070774159818]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-675"}, .name = "testNP-675", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [121108580630303683178705582888559181729], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [64580122586708728978132711878962153800]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-676"}, .name = "testNP-676", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [214482833123729423733379005998105489644], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [121108580630303683178705582888559181729]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-677"}, .name = "testNP-677", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [322006876878864341276134893659865091836], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [214482833123729423733379005998105489644]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-678"}, .name = "testNP-678", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [88683067973595289524317345464658190592], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [322006876878864341276134893659865091836]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-679"}, .name = "testNP-679", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [86486775776071724534880055643199948636], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [88683067973595289524317345464658190592]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-680"}, .name = "testNP-680", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [120377797935223020323205290684099919383], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [86486775776071724534880055643199948636]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-681"}, .name = "testNP-681", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [207778375529858467154367561208456585304], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [120377797935223020323205290684099919383]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-682"}, .name = "testNP-682", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [293688677984215587141034871616936075800], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [207778375529858467154367561208456585304]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-683"}, .name = "testNP-683", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [212880699457879012319962995556026543041], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [293688677984215587141034871616936075800]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-684"}, .name = "testNP-684", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [24461730381542499610093051750066866265], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [212880699457879012319962995556026543041]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-685"}, .name = "testNP-685", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [168667235084540050994202206607357889604], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [24461730381542499610093051750066866265]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-686"}, .name = "testNP-686", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [85242953011492514034490306673927868452], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [168667235084540050994202206607357889604]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-687"}, .name = "testNP-687", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [180393454471334722579112570754050299799], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [85242953011492514034490306673927868452]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-688"}, .name = "testNP-688", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [134146252471949571977668474355948013527], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [180393454471334722579112570754050299799]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-689"}, .name = "testNP-689", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [168044091946758906090084828360503245716], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [134146252471949571977668474355948013527]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-690"}, .name = "testNP-690", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [33349030135388836164731705051064410840], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [168044091946758906090084828360503245716]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-691"}, .name = "testNP-691", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [86991615347597860023055905913112263037], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [33349030135388836164731705051064410840]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-692"}, .name = "testNP-692", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [258942052616446291897134980905455208001], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [86991615347597860023055905913112263037]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-693"}, .name = "testNP-693", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [62143987467383965424135080433797142978], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [258942052616446291897134980905455208001]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-694"}, .name = "testNP-694", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [138086993536514857553090980018792399275], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [62143987467383965424135080433797142978]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-695"}, .name = "testNP-695", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [207205852810374797111027573563788396445], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [138086993536514857553090980018792399275]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-696"}, .name = "testNP-696", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [34591211941641149834652773767088334092], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [207205852810374797111027573563788396445]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-697"}, .name = "testNP-697", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [224840873215674627700932472004267863469], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [34591211941641149834652773767088334092]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-698"}, .name = "testNP-698", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [327632319420903665251336703817543937027], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [224840873215674627700932472004267863469]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-699"}, .name = "testNP-699", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [61189920482240044489684089556637522064], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [327632319420903665251336703817543937027]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-700"}, .name = "testNP-700", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [117443228247412088336228824049892542442], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [61189920482240044489684089556637522064]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-701"}, .name = "testNP-701", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [49753344134897828027802370093534187918], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [117443228247412088336228824049892542442]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-702"}, .name = "testNP-702", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [183289785041205741695428160540157384659], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [49753344134897828027802370093534187918]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-703"}, .name = "testNP-703", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [48477708467535794073119471470777082609], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [183289785041205741695428160540157384659]}: -1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-672", .policy = k8spolicy.UID{.uid = "testNP-672"}, .node = "testNode-67"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-673", .policy = k8spolicy.UID{.uid = "testNP-673"}, .node = "testNode-67"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-674", .policy = k8spolicy.UID{.uid = "testNP-674"}, .node = "testNode-67"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-675", .policy = k8spolicy.UID{.uid = "testNP-675"}, .node = "testNode-67"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-676", .policy = k8spolicy.UID{.uid = "testNP-676"}, .node = "testNode-67"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-677", .policy = k8spolicy.UID{.uid = "testNP-677"}, .node = "testNode-67"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-678", .policy = k8spolicy.UID{.uid = "testNP-678"}, .node = "testNode-67"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-679", .policy = k8spolicy.UID{.uid = "testNP-679"}, .node = "testNode-67"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-680", .policy = k8spolicy.UID{.uid = "testNP-680"}, .node = "testNode-68"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-681", .policy = k8spolicy.UID{.uid = "testNP-681"}, .node = "testNode-68"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-682", .policy = k8spolicy.UID{.uid = "testNP-682"}, .node = "testNode-68"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-683", .policy = k8spolicy.UID{.uid = "testNP-683"}, .node = "testNode-68"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-684", .policy = k8spolicy.UID{.uid = "testNP-684"}, .node = "testNode-68"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-685", .policy = k8spolicy.UID{.uid = "testNP-685"}, .node = "testNode-68"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-686", .policy = k8spolicy.UID{.uid = "testNP-686"}, .node = "testNode-68"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-687", .policy = k8spolicy.UID{.uid = "testNP-687"}, .node = "testNode-68"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-688", .policy = k8spolicy.UID{.uid = "testNP-688"}, .node = "testNode-68"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-689", .policy = k8spolicy.UID{.uid = "testNP-689"}, .node = "testNode-68"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-690", .policy = k8spolicy.UID{.uid = "testNP-690"}, .node = "testNode-69"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-691", .policy = k8spolicy.UID{.uid = "testNP-691"}, .node = "testNode-69"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-692", .policy = k8spolicy.UID{.uid = "testNP-692"}, .node = "testNode-69"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-693", .policy = k8spolicy.UID{.uid = "testNP-693"}, .node = "testNode-69"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-694", .policy = k8spolicy.UID{.uid = "testNP-694"}, .node = "testNode-69"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-695", .policy = k8spolicy.UID{.uid = "testNP-695"}, .node = "testNode-69"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-696", .policy = k8spolicy.UID{.uid = "testNP-696"}, .node = "testNode-69"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-697", .policy = k8spolicy.UID{.uid = "testNP-697"}, .node = "testNode-69"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-698", .policy = k8spolicy.UID{.uid = "testNP-698"}, .node = "testNode-69"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-699", .policy = k8spolicy.UID{.uid = "testNP-699"}, .node = "testNode-69"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-700", .policy = k8spolicy.UID{.uid = "testNP-700"}, .node = "testNode-70"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-701", .policy = k8spolicy.UID{.uid = "testNP-701"}, .node = "testNode-70"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-702", .policy = k8spolicy.UID{.uid = "testNP-702"}, .node = "testNode-70"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-703", .policy = k8spolicy.UID{.uid = "testNP-703"}, .node = "testNode-70"}: -1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 20329816692323990960514157383100635779, .address = "10.10.71.7"}: -1
AddressGroupAddress{.addressGroup = 30627936651933105797274065759821896072, .address = "10.10.72.3"}: -1
AddressGroupAddress{.addressGroup = 32371090647251812210882361596766477469, .address = "10.10.72.7"}: -1
AddressGroupAddress{.addressGroup = 34057724656635809691416705192801932381, .address = "10.10.73.1"}: -1
AddressGroupAddress{.addressGroup = 37156467226019537841532311016332182872, .address = "10.10.73.4"}: -1
AddressGroupAddress{.addressGroup = 40129498806740184513010085757005703310, .address = "10.10.71.9"}: -1
AddressGroupAddress{.addressGroup = 68252102549119058317764176736129971979, .address = "10.10.73.2"}: -1
AddressGroupAddress{.addressGroup = 96032070133182681650620944880094112731, .address = "10.10.72.8"}: -1
AddressGroupAddress{.addressGroup = 102416549199853754490225967506757640918, .address = "10.10.71.8"}: -1
AddressGroupAddress{.addressGroup = 103342086768867973698815665541437187491, .address = "10.10.70.8"}: -1
AddressGroupAddress{.addressGroup = 105907933172336392369608848569076076365, .address = "10.10.72.1"}: -1
AddressGroupAddress{.addressGroup = 119635934672166049362267970357951952572, .address = "10.10.70.6"}: -1
AddressGroupAddress{.addressGroup = 141402202887251706883191047768352726243, .address = "10.10.72.0"}: -1
AddressGroupAddress{.addressGroup = 164254990481347015292732693266044634094, .address = "10.10.72.2"}: -1
AddressGroupAddress{.addressGroup = 170779014434083255563906794785649755788, .address = "10.10.71.5"}: -1
AddressGroupAddress{.addressGroup = 181396158620568851092841585491302154389, .address = "10.10.71.2"}: -1
AddressGroupAddress{.addressGroup = 186340902589858674390192335038199851946, .address = "10.10.71.6"}: -1
AddressGroupAddress{.addressGroup = 186486452426348870215859663383273497938, .address = "10.10.72.5"}: -1
AddressGroupAddress{.addressGroup = 201063849432131633667867681224490298473, .address = "10.10.71.1"}: -1
AddressGroupAddress{.addressGroup = 205972580147086176662977578262869677757, .address = "10.10.73.5"}: -1
AddressGroupAddress{.addressGroup = 211511397827221676516229770772689908353, .address = "10.10.73.3"}: -1
AddressGroupAddress{.addressGroup = 225788033249597382768420230824240158525, .address = "10.10.71.0"}: -1
AddressGroupAddress{.addressGroup = 232807607250189417276509150442107476618, .address = "10.10.70.9"}: -1
AddressGroupAddress{.addressGroup = 236832506682036962533083870175459495033, .address = "10.10.72.9"}: -1
AddressGroupAddress{.addressGroup = 246389996503433342331435283858892631323, .address = "10.10.73.6"}: -1
AddressGroupAddress{.addressGroup = 252347165080086964477547050496069727556, .address = "10.10.73.0"}: -1
AddressGroupAddress{.addressGroup = 284630353269977120950731628110603843203, .address = "10.10.70.5"}: -1
AddressGroupAddress{.addressGroup = 295884182575016866688413238710409829090, .address = "10.10.72.4"}: -1
AddressGroupAddress{.addressGroup = 296253649875124081421802849662034111681, .address = "10.10.72.6"}: -1
AddressGroupAddress{.addressGroup = 298412986344744880696676553289037647571, .address = "10.10.71.3"}: -1
AddressGroupAddress{.addressGroup = 300076302114905989208603666637851573984, .address = "10.10.71.4"}: -1
AddressGroupAddress{.addressGroup = 328805947928271284467502338079051004245, .address = "10.10.70.7"}: -1
AddressGroupDescr:
AddressGroupDescr{.name = "0f4b6159-9507-5367-b061-c88c5b1b9a83", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-717]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-717")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "170ab9dd-5115-5aa1-a7fa-3799723c1988", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-723]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-723")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "185a71fd-ef8b-56d1-a4c5-52f3a93e5c9d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-727]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-727")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "199f4778-09d6-5cfa-abb3-e9bb7691145d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-731]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-731")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "1bf41345-ee85-569b-a022-c36ff6a5c558", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-734]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-734")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "1e30a90c-1375-56c6-b159-840e1201a88e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-719]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-719")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "3358e076-66f4-5d42-a1d5-707cecb8f70b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-732]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-732")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "483f1a9c-687d-5d54-bf85-977ad4a36bdb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-728]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-728")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "4d0cb5bb-61ee-5334-a57e-5c0530b9e2d6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-718]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-718")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "4dbef641-dacc-58d4-9172-bd6054abe5a3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-708]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-708")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "4fad2040-84c6-5627-ace8-8205d5eccf4d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-721]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-721")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "5a010afb-8f24-509a-a8dd-eb64221776bc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-706]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-706")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "6a6112dc-5170-5d89-aea8-b2a865f79ce3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-720]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-720")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "7b925c47-a6a4-5aaa-a1d7-a2c0585943ee", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-722]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-722")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "807ad77e-b523-579e-b82d-fd698020868c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-715]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-715")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "8877a11e-49e0-5059-a164-9df96f000095", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-712]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-712")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "8c2ff3d1-8c3b-5bff-8f8b-cb2cc35b6baa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-716]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-716")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "8c4bfbfa-c294-5004-a798-9334ef296552", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-725]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-725")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "97437d24-52f4-5ecf-869e-e917ba312c69", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-711]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-711")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "9af4e040-689a-54a9-ba22-862a631596bd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-735]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-735")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "9f1f9d0c-129c-5a6a-a162-653adf02f281", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-733]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-733")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "a9dd3184-c1f1-57c6-93b0-b25e0641173d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-710]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-710")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "af251d3c-c378-5e78-a972-aeff6e7c9a8a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-709]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-709")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "b22c4819-b614-5ac5-b1ac-95043bf74c79", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-729]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-729")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "b95cfcba-dd98-56ce-85e1-398a0acdad1b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-736]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-736")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "bdd84bd1-3356-548b-8d43-8a862a43f544", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-730]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-730")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "d621cfe2-2494-56ae-89e0-1e94e9537683", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-705]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-705")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "de993881-b512-5447-a715-9ec08b6b1ae2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-724]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-724")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "dee060a6-a5f7-5412-9d48-5a167da9ecc1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-726]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-726")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "e0804028-9a18-5a77-a65b-93a446960ed3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-713]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-713")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "e1c097f5-25d7-5482-a7fb-163de245bee0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-714]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-714")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "f75db8db-9892-5caf-9ad1-b3e2cae8b955", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-707]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-707")], .matchExpressions = []}}}}: -1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 20329816692323990960514157383100635779, .node = "testNode-71"}: -1
AddressGroupSpan{.addressGroup = 30627936651933105797274065759821896072, .node = "testNode-72"}: -1
AddressGroupSpan{.addressGroup = 32371090647251812210882361596766477469, .node = "testNode-72"}: -1
AddressGroupSpan{.addressGroup = 34057724656635809691416705192801932381, .node = "testNode-73"}: -1
AddressGroupSpan{.addressGroup = 37156467226019537841532311016332182872, .node = "testNode-73"}: -1
AddressGroupSpan{.addressGroup = 40129498806740184513010085757005703310, .node = "testNode-71"}: -1
AddressGroupSpan{.addressGroup = 68252102549119058317764176736129971979, .node = "testNode-73"}: -1
AddressGroupSpan{.addressGroup = 96032070133182681650620944880094112731, .node = "testNode-72"}: -1
AddressGroupSpan{.addressGroup = 102416549199853754490225967506757640918, .node = "testNode-71"}: -1
AddressGroupSpan{.addressGroup = 103342086768867973698815665541437187491, .node = "testNode-70"}: -1
AddressGroupSpan{.addressGroup = 105907933172336392369608848569076076365, .node = "testNode-72"}: -1
AddressGroupSpan{.addressGroup = 119635934672166049362267970357951952572, .node = "testNode-70"}: -1
AddressGroupSpan{.addressGroup = 141402202887251706883191047768352726243, .node = "testNode-71"}: -1
AddressGroupSpan{.addressGroup = 164254990481347015292732693266044634094, .node = "testNode-72"}: -1
AddressGroupSpan{.addressGroup = 170779014434083255563906794785649755788, .node = "testNode-71"}: -1
AddressGroupSpan{.addressGroup = 181396158620568851092841585491302154389, .node = "testNode-71"}: -1
AddressGroupSpan{.addressGroup = 186340902589858674390192335038199851946, .node = "testNode-71"}: -1
AddressGroupSpan{.addressGroup = 186486452426348870215859663383273497938, .node = "testNode-72"}: -1
AddressGroupSpan{.addressGroup = 201063849432131633667867681224490298473, .node = "testNode-71"}: -1
AddressGroupSpan{.addressGroup = 205972580147086176662977578262869677757, .node = "testNode-73"}: -1
AddressGroupSpan{.addressGroup = 211511397827221676516229770772689908353, .node = "testNode-73"}: -1
AddressGroupSpan{.addressGroup = 225788033249597382768420230824240158525, .node = "testNode-70"}: -1
AddressGroupSpan{.addressGroup = 232807607250189417276509150442107476618, .node = "testNode-70"}: -1
AddressGroupSpan{.addressGroup = 236832506682036962533083870175459495033, .node = "testNode-72"}: -1
AddressGroupSpan{.addressGroup = 246389996503433342331435283858892631323, .node = "testNode-73"}: -1
AddressGroupSpan{.addressGroup = 252347165080086964477547050496069727556, .node = "testNode-72"}: -1
AddressGroupSpan{.addressGroup = 284630353269977120950731628110603843203, .node = "testNode-70"}: -1
AddressGroupSpan{.addressGroup = 295884182575016866688413238710409829090, .node = "testNode-72"}: -1
AddressGroupSpan{.addressGroup = 296253649875124081421802849662034111681, .node = "testNode-72"}: -1
AddressGroupSpan{.addressGroup = 298412986344744880696676553289037647571, .node = "testNode-71"}: -1
AddressGroupSpan{.addressGroup = 300076302114905989208603666637851573984, .node = "testNode-71"}: -1
AddressGroupSpan{.addressGroup = 328805947928271284467502338079051004245, .node = "testNode-70"}: -1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "0f4b6159-9507-5367-b061-c88c5b1b9a83", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-717]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-717")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "170ab9dd-5115-5aa1-a7fa-3799723c1988", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-723]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-723")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "185a71fd-ef8b-56d1-a4c5-52f3a93e5c9d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-727]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-727")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "199f4778-09d6-5cfa-abb3-e9bb7691145d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-731]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-731")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "1bf41345-ee85-569b-a022-c36ff6a5c558", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-734]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-734")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "1e30a90c-1375-56c6-b159-840e1201a88e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-719]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-719")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "2478778f-c17f-5acb-aaa0-27cc573a22f1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-704]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-704")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "3358e076-66f4-5d42-a1d5-707cecb8f70b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-732]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-732")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "483f1a9c-687d-5d54-bf85-977ad4a36bdb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-728]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-728")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "4d0cb5bb-61ee-5334-a57e-5c0530b9e2d6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-718]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-718")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "4dbef641-dacc-58d4-9172-bd6054abe5a3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-708]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-708")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "4fad2040-84c6-5627-ace8-8205d5eccf4d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-721]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-721")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "5a010afb-8f24-509a-a8dd-eb64221776bc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-706]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-706")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "6a6112dc-5170-5d89-aea8-b2a865f79ce3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-720]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-720")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "7b925c47-a6a4-5aaa-a1d7-a2c0585943ee", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-722]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-722")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "807ad77e-b523-579e-b82d-fd698020868c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-715]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-715")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "8877a11e-49e0-5059-a164-9df96f000095", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-712]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-712")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "8c2ff3d1-8c3b-5bff-8f8b-cb2cc35b6baa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-716]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-716")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "8c4bfbfa-c294-5004-a798-9334ef296552", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-725]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-725")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "97437d24-52f4-5ecf-869e-e917ba312c69", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-711]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-711")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "9af4e040-689a-54a9-ba22-862a631596bd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-735]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-735")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "9f1f9d0c-129c-5a6a-a162-653adf02f281", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-733]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-733")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "a9dd3184-c1f1-57c6-93b0-b25e0641173d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-710]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-710")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "af251d3c-c378-5e78-a972-aeff6e7c9a8a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-709]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-709")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "b22c4819-b614-5ac5-b1ac-95043bf74c79", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-729]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-729")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "bdd84bd1-3356-548b-8d43-8a862a43f544", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-730]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-730")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "d621cfe2-2494-56ae-89e0-1e94e9537683", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-705]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-705")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "de993881-b512-5447-a715-9ec08b6b1ae2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-724]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-724")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "dee060a6-a5f7-5412-9d48-5a167da9ecc1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-726]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-726")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "e0804028-9a18-5a77-a65b-93a446960ed3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-713]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-713")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "e1c097f5-25d7-5482-a7fb-163de245bee0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-714]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-714")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "f75db8db-9892-5caf-9ad1-b3e2cae8b955", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-707]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-707")], .matchExpressions = []}}}}: -1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 20329816692323990960514157383100635779, .node = "testNode-71", .pods = [k8spolicy.PodReference{.name = "testPod-717", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 30627936651933105797274065759821896072, .node = "testNode-72", .pods = [k8spolicy.PodReference{.name = "testPod-723", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 32371090647251812210882361596766477469, .node = "testNode-72", .pods = [k8spolicy.PodReference{.name = "testPod-727", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 34057724656635809691416705192801932381, .node = "testNode-73", .pods = [k8spolicy.PodReference{.name = "testPod-731", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 37156467226019537841532311016332182872, .node = "testNode-73", .pods = [k8spolicy.PodReference{.name = "testPod-734", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 40129498806740184513010085757005703310, .node = "testNode-71", .pods = [k8spolicy.PodReference{.name = "testPod-719", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 48477708467535794073119471470777082609, .node = "testNode-70", .pods = [k8spolicy.PodReference{.name = "testPod-704", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 68252102549119058317764176736129971979, .node = "testNode-73", .pods = [k8spolicy.PodReference{.name = "testPod-732", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 96032070133182681650620944880094112731, .node = "testNode-72", .pods = [k8spolicy.PodReference{.name = "testPod-728", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 102416549199853754490225967506757640918, .node = "testNode-71", .pods = [k8spolicy.PodReference{.name = "testPod-718", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 103342086768867973698815665541437187491, .node = "testNode-70", .pods = [k8spolicy.PodReference{.name = "testPod-708", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 105907933172336392369608848569076076365, .node = "testNode-72", .pods = [k8spolicy.PodReference{.name = "testPod-721", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 119635934672166049362267970357951952572, .node = "testNode-70", .pods = [k8spolicy.PodReference{.name = "testPod-706", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 141402202887251706883191047768352726243, .node = "testNode-72", .pods = [k8spolicy.PodReference{.name = "testPod-720", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 164254990481347015292732693266044634094, .node = "testNode-72", .pods = [k8spolicy.PodReference{.name = "testPod-722", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 170779014434083255563906794785649755788, .node = "testNode-71", .pods = [k8spolicy.PodReference{.name = "testPod-715", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 181396158620568851092841585491302154389, .node = "testNode-71", .pods = [k8spolicy.PodReference{.name = "testPod-712", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 186340902589858674390192335038199851946, .node = "testNode-71", .pods = [k8spolicy.PodReference{.name = "testPod-716", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 186486452426348870215859663383273497938, .node = "testNode-72", .pods = [k8spolicy.PodReference{.name = "testPod-725", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 201063849432131633667867681224490298473, .node = "testNode-71", .pods = [k8spolicy.PodReference{.name = "testPod-711", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 205972580147086176662977578262869677757, .node = "testNode-73", .pods = [k8spolicy.PodReference{.name = "testPod-735", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 211511397827221676516229770772689908353, .node = "testNode-73", .pods = [k8spolicy.PodReference{.name = "testPod-733", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 225788033249597382768420230824240158525, .node = "testNode-71", .pods = [k8spolicy.PodReference{.name = "testPod-710", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 232807607250189417276509150442107476618, .node = "testNode-70", .pods = [k8spolicy.PodReference{.name = "testPod-709", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 236832506682036962533083870175459495033, .node = "testNode-72", .pods = [k8spolicy.PodReference{.name = "testPod-729", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 252347165080086964477547050496069727556, .node = "testNode-73", .pods = [k8spolicy.PodReference{.name = "testPod-730", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 284630353269977120950731628110603843203, .node = "testNode-70", .pods = [k8spolicy.PodReference{.name = "testPod-705", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 295884182575016866688413238710409829090, .node = "testNode-72", .pods = [k8spolicy.PodReference{.name = "testPod-724", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 296253649875124081421802849662034111681, .node = "testNode-72", .pods = [k8spolicy.PodReference{.name = "testPod-726", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 298412986344744880696676553289037647571, .node = "testNode-71", .pods = [k8spolicy.PodReference{.name = "testPod-713", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 300076302114905989208603666637851573984, .node = "testNode-71", .pods = [k8spolicy.PodReference{.name = "testPod-714", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 328805947928271284467502338079051004245, .node = "testNode-70", .pods = [k8spolicy.PodReference{.name = "testPod-707", .namespace = "testNamespace"}]}: -1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 20329816692323990960514157383100635779, .span = "testNode-71"}: -1
AppliedToGroupSpan{.appliedToGroup = 30627936651933105797274065759821896072, .span = "testNode-72"}: -1
AppliedToGroupSpan{.appliedToGroup = 32371090647251812210882361596766477469, .span = "testNode-72"}: -1
AppliedToGroupSpan{.appliedToGroup = 34057724656635809691416705192801932381, .span = "testNode-73"}: -1
AppliedToGroupSpan{.appliedToGroup = 37156467226019537841532311016332182872, .span = "testNode-73"}: -1
AppliedToGroupSpan{.appliedToGroup = 40129498806740184513010085757005703310, .span = "testNode-71"}: -1
AppliedToGroupSpan{.appliedToGroup = 48477708467535794073119471470777082609, .span = "testNode-70"}: -1
AppliedToGroupSpan{.appliedToGroup = 68252102549119058317764176736129971979, .span = "testNode-73"}: -1
AppliedToGroupSpan{.appliedToGroup = 96032070133182681650620944880094112731, .span = "testNode-72"}: -1
AppliedToGroupSpan{.appliedToGroup = 102416549199853754490225967506757640918, .span = "testNode-71"}: -1
AppliedToGroupSpan{.appliedToGroup = 103342086768867973698815665541437187491, .span = "testNode-70"}: -1
AppliedToGroupSpan{.appliedToGroup = 105907933172336392369608848569076076365, .span = "testNode-72"}: -1
AppliedToGroupSpan{.appliedToGroup = 119635934672166049362267970357951952572, .span = "testNode-70"}: -1
AppliedToGroupSpan{.appliedToGroup = 141402202887251706883191047768352726243, .span = "testNode-72"}: -1
AppliedToGroupSpan{.appliedToGroup = 164254990481347015292732693266044634094, .span = "testNode-72"}: -1
AppliedToGroupSpan{.appliedToGroup = 170779014434083255563906794785649755788, .span = "testNode-71"}: -1
AppliedToGroupSpan{.appliedToGroup = 181396158620568851092841585491302154389, .span = "testNode-71"}: -1
AppliedToGroupSpan{.appliedToGroup = 186340902589858674390192335038199851946, .span = "testNode-71"}: -1
AppliedToGroupSpan{.appliedToGroup = 186486452426348870215859663383273497938, .span = "testNode-72"}: -1
AppliedToGroupSpan{.appliedToGroup = 201063849432131633667867681224490298473, .span = "testNode-71"}: -1
AppliedToGroupSpan{.appliedToGroup = 205972580147086176662977578262869677757, .span = "testNode-73"}: -1
AppliedToGroupSpan{.appliedToGroup = 211511397827221676516229770772689908353, .span = "testNode-73"}: -1
AppliedToGroupSpan{.appliedToGroup = 225788033249597382768420230824240158525, .span = "testNode-71"}: -1
AppliedToGroupSpan{.appliedToGroup = 232807607250189417276509150442107476618, .span = "testNode-70"}: -1
AppliedToGroupSpan{.appliedToGroup = 236832506682036962533083870175459495033, .span = "testNode-72"}: -1
AppliedToGroupSpan{.appliedToGroup = 252347165080086964477547050496069727556, .span = "testNode-73"}: -1
AppliedToGroupSpan{.appliedToGroup = 284630353269977120950731628110603843203, .span = "testNode-70"}: -1
AppliedToGroupSpan{.appliedToGroup = 295884182575016866688413238710409829090, .span = "testNode-72"}: -1
AppliedToGroupSpan{.appliedToGroup = 296253649875124081421802849662034111681, .span = "testNode-72"}: -1
AppliedToGroupSpan{.appliedToGroup = 298412986344744880696676553289037647571, .span = "testNode-71"}: -1
AppliedToGroupSpan{.appliedToGroup = 300076302114905989208603666637851573984, .span = "testNode-71"}: -1
AppliedToGroupSpan{.appliedToGroup = 328805947928271284467502338079051004245, .span = "testNode-70"}: -1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-704"}, .name = "testNP-704", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [284630353269977120950731628110603843203], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [48477708467535794073119471470777082609]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-705"}, .name = "testNP-705", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [119635934672166049362267970357951952572], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [284630353269977120950731628110603843203]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-706"}, .name = "testNP-706", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [328805947928271284467502338079051004245], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [119635934672166049362267970357951952572]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-707"}, .name = "testNP-707", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [103342086768867973698815665541437187491], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [328805947928271284467502338079051004245]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-708"}, .name = "testNP-708", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [232807607250189417276509150442107476618], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [103342086768867973698815665541437187491]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-709"}, .name = "testNP-709", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [225788033249597382768420230824240158525], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [232807607250189417276509150442107476618]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-710"}, .name = "testNP-710", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [201063849432131633667867681224490298473], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [225788033249597382768420230824240158525]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-711"}, .name = "testNP-711", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [181396158620568851092841585491302154389], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [201063849432131633667867681224490298473]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-712"}, .name = "testNP-712", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [298412986344744880696676553289037647571], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [181396158620568851092841585491302154389]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-713"}, .name = "testNP-713", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [300076302114905989208603666637851573984], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [298412986344744880696676553289037647571]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-714"}, .name = "testNP-714", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [170779014434083255563906794785649755788], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [300076302114905989208603666637851573984]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-715"}, .name = "testNP-715", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [186340902589858674390192335038199851946], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [170779014434083255563906794785649755788]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-716"}, .name = "testNP-716", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [20329816692323990960514157383100635779], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [186340902589858674390192335038199851946]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-717"}, .name = "testNP-717", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [102416549199853754490225967506757640918], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [20329816692323990960514157383100635779]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-718"}, .name = "testNP-718", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [40129498806740184513010085757005703310], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [102416549199853754490225967506757640918]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-719"}, .name = "testNP-719", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [141402202887251706883191047768352726243], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [40129498806740184513010085757005703310]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-720"}, .name = "testNP-720", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [105907933172336392369608848569076076365], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [141402202887251706883191047768352726243]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-721"}, .name = "testNP-721", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [164254990481347015292732693266044634094], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [105907933172336392369608848569076076365]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-722"}, .name = "testNP-722", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [30627936651933105797274065759821896072], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [164254990481347015292732693266044634094]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-723"}, .name = "testNP-723", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [295884182575016866688413238710409829090], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [30627936651933105797274065759821896072]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-724"}, .name = "testNP-724", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [186486452426348870215859663383273497938], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [295884182575016866688413238710409829090]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-725"}, .name = "testNP-725", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [296253649875124081421802849662034111681], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [186486452426348870215859663383273497938]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-726"}, .name = "testNP-726", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [32371090647251812210882361596766477469], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [296253649875124081421802849662034111681]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-727"}, .name = "testNP-727", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [96032070133182681650620944880094112731], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [32371090647251812210882361596766477469]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-728"}, .name = "testNP-728", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [236832506682036962533083870175459495033], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [96032070133182681650620944880094112731]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-729"}, .name = "testNP-729", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [252347165080086964477547050496069727556], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [236832506682036962533083870175459495033]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-730"}, .name = "testNP-730", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [34057724656635809691416705192801932381], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [252347165080086964477547050496069727556]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-731"}, .name = "testNP-731", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [68252102549119058317764176736129971979], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [34057724656635809691416705192801932381]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-732"}, .name = "testNP-732", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [211511397827221676516229770772689908353], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [68252102549119058317764176736129971979]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-733"}, .name = "testNP-733", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [37156467226019537841532311016332182872], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [211511397827221676516229770772689908353]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-734"}, .name = "testNP-734", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [205972580147086176662977578262869677757], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [37156467226019537841532311016332182872]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-735"}, .name = "testNP-735", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [246389996503433342331435283858892631323], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [205972580147086176662977578262869677757]}: -1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-704", .policy = k8spolicy.UID{.uid = "testNP-704"}, .node = "testNode-70"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-705", .policy = k8spolicy.UID{.uid = "testNP-705"}, .node = "testNode-70"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-706", .policy = k8spolicy.UID{.uid = "testNP-706"}, .node = "testNode-70"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-707", .policy = k8spolicy.UID{.uid = "testNP-707"}, .node = "testNode-70"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-708", .policy = k8spolicy.UID{.uid = "testNP-708"}, .node = "testNode-70"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-709", .policy = k8spolicy.UID{.uid = "testNP-709"}, .node = "testNode-70"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-710", .policy = k8spolicy.UID{.uid = "testNP-710"}, .node = "testNode-71"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-711", .policy = k8spolicy.UID{.uid = "testNP-711"}, .node = "testNode-71"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-712", .policy = k8spolicy.UID{.uid = "testNP-712"}, .node = "testNode-71"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-713", .policy = k8spolicy.UID{.uid = "testNP-713"}, .node = "testNode-71"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-714", .policy = k8spolicy.UID{.uid = "testNP-714"}, .node = "testNode-71"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-715", .policy = k8spolicy.UID{.uid = "testNP-715"}, .node = "testNode-71"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-716", .policy = k8spolicy.UID{.uid = "testNP-716"}, .node = "testNode-71"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-717", .policy = k8spolicy.UID{.uid = "testNP-717"}, .node = "testNode-71"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-718", .policy = k8spolicy.UID{.uid = "testNP-718"}, .node = "testNode-71"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-719", .policy = k8spolicy.UID{.uid = "testNP-719"}, .node = "testNode-71"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-720", .policy = k8spolicy.UID{.uid = "testNP-720"}, .node = "testNode-72"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-721", .policy = k8spolicy.UID{.uid = "testNP-721"}, .node = "testNode-72"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-722", .policy = k8spolicy.UID{.uid = "testNP-722"}, .node = "testNode-72"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-723", .policy = k8spolicy.UID{.uid = "testNP-723"}, .node = "testNode-72"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-724", .policy = k8spolicy.UID{.uid = "testNP-724"}, .node = "testNode-72"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-725", .policy = k8spolicy.UID{.uid = "testNP-725"}, .node = "testNode-72"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-726", .policy = k8spolicy.UID{.uid = "testNP-726"}, .node = "testNode-72"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-727", .policy = k8spolicy.UID{.uid = "testNP-727"}, .node = "testNode-72"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-728", .policy = k8spolicy.UID{.uid = "testNP-728"}, .node = "testNode-72"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-729", .policy = k8spolicy.UID{.uid = "testNP-729"}, .node = "testNode-72"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-730", .policy = k8spolicy.UID{.uid = "testNP-730"}, .node = "testNode-73"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-731", .policy = k8spolicy.UID{.uid = "testNP-731"}, .node = "testNode-73"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-732", .policy = k8spolicy.UID{.uid = "testNP-732"}, .node = "testNode-73"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-733", .policy = k8spolicy.UID{.uid = "testNP-733"}, .node = "testNode-73"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-734", .policy = k8spolicy.UID{.uid = "testNP-734"}, .node = "testNode-73"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-735", .policy = k8spolicy.UID{.uid = "testNP-735"}, .node = "testNode-73"}: -1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 4398037940003267649077370648463899309, .address = "10.10.75.9"}: -1
AddressGroupAddress{.addressGroup = 17658808561446985253322180017424654338, .address = "10.10.76.0"}: -1
AddressGroupAddress{.addressGroup = 20092635691975747594380957838639536461, .address = "10.10.75.0"}: -1
AddressGroupAddress{.addressGroup = 24504795559851105437069282183056106079, .address = "10.10.75.6"}: -1
AddressGroupAddress{.addressGroup = 34426929826697059772173071824620121626, .address = "10.10.74.2"}: -1
AddressGroupAddress{.addressGroup = 35058101665146670808052052538129070863, .address = "10.10.75.3"}: -1
AddressGroupAddress{.addressGroup = 44289025035542436008242967276697093971, .address = "10.10.73.8"}: -1
AddressGroupAddress{.addressGroup = 72122705871304275637087195349897034990, .address = "10.10.76.6"}: -1
AddressGroupAddress{.addressGroup = 78480696584772383686929246462571805306, .address = "10.10.74.9"}: -1
AddressGroupAddress{.addressGroup = 100868379569040624999795522528451395874, .address = "10.10.76.4"}: -1
AddressGroupAddress{.addressGroup = 121223415449627862530040104112695352084, .address = "10.10.75.5"}: -1
AddressGroupAddress{.addressGroup = 123647219404309518112218654842480239065, .address = "10.10.74.3"}: -1
AddressGroupAddress{.addressGroup = 126876673637250352464688700325600303694, .address = "10.10.75.8"}: -1
AddressGroupAddress{.addressGroup = 157407210107059154996043679640104777363, .address = "10.10.74.0"}: -1
AddressGroupAddress{.addressGroup = 161714700651289711179061588185481536281, .address = "10.10.75.1"}: -1
AddressGroupAddress{.addressGroup = 167806124460239317461469712179280498028, .address = "10.10.76.1"}: -1
AddressGroupAddress{.addressGroup = 170872054080291201713603711837466027142, .address = "10.10.76.3"}: -1
AddressGroupAddress{.addressGroup = 180270115442061346733561750408827483079, .address = "10.10.73.9"}: -1
AddressGroupAddress{.addressGroup = 196184164387734792494584650260731798644, .address = "10.10.74.7"}: -1
AddressGroupAddress{.addressGroup = 200405146350828304228576124973486837286, .address = "10.10.76.7"}: -1
AddressGroupAddress{.addressGroup = 207587257656012182916251504856989903522, .address = "10.10.75.2"}: -1
AddressGroupAddress{.addressGroup = 221512310084172929882113552273775677398, .address = "10.10.74.4"}: -1
AddressGroupAddress{.addressGroup = 227976973515706368644401821506401425682, .address = "10.10.75.4"}: -1
AddressGroupAddress{.addressGroup = 274839393383818296487324953745160540360, .address = "10.10.74.1"}: -1
AddressGroupAddress{.addressGroup = 282959601900973743138164282562013519318, .address = "10.10.74.8"}: -1
AddressGroupAddress{.addressGroup = 284566077296111011827148429360522196537, .address = "10.10.76.5"}: -1
AddressGroupAddress{.addressGroup = 285976904859708191489159824789792033924, .address = "10.10.75.7"}: -1
AddressGroupAddress{.addressGroup = 294580414416437314404665722698091486060, .address = "10.10.73.7"}: -1
AddressGroupAddress{.addressGroup = 315165317205468055386143809281584536845, .address = "10.10.76.2"}: -1
AddressGroupAddress{.addressGroup = 318489599378665995559969640392831084579, .address = "10.10.74.6"}: -1
AddressGroupAddress{.addressGroup = 331362771667904576197395320489126259440, .address = "10.10.74.5"}: -1
AddressGroupAddress{.addressGroup = 333086689822027869740204446506499439221, .address = "10.10.76.8"}: -1
AddressGroupDescr:
AddressGroupDescr{.name = "034f0803-0c7b-5be1-a6cd-fa18721f7aad", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-759]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-759")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "0d48f67b-4f7e-5de0-84cd-517bbdc76002", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-760]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-760")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "0f1db36c-7be5-5373-a007-56b0f06a994d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-750]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-750")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "126f73b3-5254-59a2-82e2-852ddea6a25f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-756]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-756")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "19e662b0-6edf-5f6f-8e72-979d948c6e1a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-742]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-742")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "1a5ff1dd-09d2-57b9-bfa3-9b02a9373b0f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-753]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-753")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "2151c186-1824-5ed9-8bea-9c68a5330753", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-738]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-738")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "364253f0-a667-50f8-9667-0b11e261bcee", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-766]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-766")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "3b0ad515-9a94-53ce-be8c-6f3761b97a7a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-749]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-749")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "4be28b13-70ae-536b-a586-e35cc4668122", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-764]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-764")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "5b32c7d3-ede1-5586-a7ca-da8686051b14", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-755]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-755")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "5d059696-d667-5b5c-8d20-23b19ef421d9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-743]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-743")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "5f738ef9-dedf-5309-a62d-53845b5a1a4e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-758]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-758")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "766b86a4-0dcc-521d-8bb6-d27d78acb693", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-740]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-740")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "79a91e52-4b0b-53a7-9959-20ebf048e319", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-751]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-751")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "7e3e48b3-e4b2-5bef-875e-51f352e44d6c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-761]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-761")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "808cc2b4-23d9-591f-b752-0ab0b7006486", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-763]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-763")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "879ec2e7-3b11-5170-98b0-b4a91d2bb3c7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-739]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-739")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "9397b218-249a-57dd-be98-520d9cba2474", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-747]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-747")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "96c4a092-9489-50c5-bf37-005a45fa0e26", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-767]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-767")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "9c2bd9ff-ca37-5764-95cb-39133fbb2aa2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-752]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-752")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "a6a5b817-35a6-5f9a-be9a-bf5262fe4fd6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-744]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-744")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "ab82c49b-2783-5c78-9931-7d6b0fbb5912", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-754]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-754")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "cec4244a-7b81-5c2d-a20c-783046f610c8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-741]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-741")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "d4e0097b-2530-50a1-a9e9-0292d2e35dd6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-748]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-748")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "d6156ed5-4bc9-53fb-92f6-705c2c15f639", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-765]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-765")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "d7252600-a390-56b7-97bd-cf4a413f0c84", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-757]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-757")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "dd9e1fc6-07e9-5cbb-8414-7bf3d9b85b6c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-737]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-737")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "ed1aa1d6-ccb0-569f-bea3-0e902d681d0d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-762]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-762")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "ef9add9a-b595-5210-9cf1-0f731acd2823", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-746]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-746")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "f94a2600-3b56-59eb-960b-bf7c66c1eaf0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-745]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-745")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "fa9629ba-66b5-578b-b753-884370a7fa75", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-768]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-768")], .matchExpressions = []}}}}: -1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 4398037940003267649077370648463899309, .node = "testNode-75"}: -1
AddressGroupSpan{.addressGroup = 17658808561446985253322180017424654338, .node = "testNode-75"}: -1
AddressGroupSpan{.addressGroup = 20092635691975747594380957838639536461, .node = "testNode-74"}: -1
AddressGroupSpan{.addressGroup = 24504795559851105437069282183056106079, .node = "testNode-75"}: -1
AddressGroupSpan{.addressGroup = 34426929826697059772173071824620121626, .node = "testNode-74"}: -1
AddressGroupSpan{.addressGroup = 35058101665146670808052052538129070863, .node = "testNode-75"}: -1
AddressGroupSpan{.addressGroup = 44289025035542436008242967276697093971, .node = "testNode-73"}: -1
AddressGroupSpan{.addressGroup = 72122705871304275637087195349897034990, .node = "testNode-76"}: -1
AddressGroupSpan{.addressGroup = 78480696584772383686929246462571805306, .node = "testNode-74"}: -1
AddressGroupSpan{.addressGroup = 100868379569040624999795522528451395874, .node = "testNode-76"}: -1
AddressGroupSpan{.addressGroup = 121223415449627862530040104112695352084, .node = "testNode-75"}: -1
AddressGroupSpan{.addressGroup = 123647219404309518112218654842480239065, .node = "testNode-74"}: -1
AddressGroupSpan{.addressGroup = 126876673637250352464688700325600303694, .node = "testNode-75"}: -1
AddressGroupSpan{.addressGroup = 157407210107059154996043679640104777363, .node = "testNode-73"}: -1
AddressGroupSpan{.addressGroup = 161714700651289711179061588185481536281, .node = "testNode-75"}: -1
AddressGroupSpan{.addressGroup = 167806124460239317461469712179280498028, .node = "testNode-76"}: -1
AddressGroupSpan{.addressGroup = 170872054080291201713603711837466027142, .node = "testNode-76"}: -1
AddressGroupSpan{.addressGroup = 180270115442061346733561750408827483079, .node = "testNode-73"}: -1
AddressGroupSpan{.addressGroup = 196184164387734792494584650260731798644, .node = "testNode-74"}: -1
AddressGroupSpan{.addressGroup = 200405146350828304228576124973486837286, .node = "testNode-76"}: -1
AddressGroupSpan{.addressGroup = 207587257656012182916251504856989903522, .node = "testNode-75"}: -1
AddressGroupSpan{.addressGroup = 221512310084172929882113552273775677398, .node = "testNode-74"}: -1
AddressGroupSpan{.addressGroup = 227976973515706368644401821506401425682, .node = "testNode-75"}: -1
AddressGroupSpan{.addressGroup = 274839393383818296487324953745160540360, .node = "testNode-74"}: -1
AddressGroupSpan{.addressGroup = 282959601900973743138164282562013519318, .node = "testNode-74"}: -1
AddressGroupSpan{.addressGroup = 284566077296111011827148429360522196537, .node = "testNode-76"}: -1
AddressGroupSpan{.addressGroup = 285976904859708191489159824789792033924, .node = "testNode-75"}: -1
AddressGroupSpan{.addressGroup = 294580414416437314404665722698091486060, .node = "testNode-73"}: -1
AddressGroupSpan{.addressGroup = 315165317205468055386143809281584536845, .node = "testNode-76"}: -1
AddressGroupSpan{.addressGroup = 318489599378665995559969640392831084579, .node = "testNode-74"}: -1
AddressGroupSpan{.addressGroup = 331362771667904576197395320489126259440, .node = "testNode-74"}: -1
AddressGroupSpan{.addressGroup = 333086689822027869740204446506499439221, .node = "testNode-76"}: -1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "034f0803-0c7b-5be1-a6cd-fa18721f7aad", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-759]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-759")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "0d48f67b-4f7e-5de0-84cd-517bbdc76002", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-760]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-760")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "0f1db36c-7be5-5373-a007-56b0f06a994d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-750]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-750")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "126f73b3-5254-59a2-82e2-852ddea6a25f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-756]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-756")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "19e662b0-6edf-5f6f-8e72-979d948c6e1a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-742]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-742")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "1a5ff1dd-09d2-57b9-bfa3-9b02a9373b0f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-753]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-753")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "2151c186-1824-5ed9-8bea-9c68a5330753", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-738]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-738")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "364253f0-a667-50f8-9667-0b11e261bcee", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-766]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-766")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "3b0ad515-9a94-53ce-be8c-6f3761b97a7a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-749]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-749")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "4be28b13-70ae-536b-a586-e35cc4668122", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-764]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-764")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "5b32c7d3-ede1-5586-a7ca-da8686051b14", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-755]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-755")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "5d059696-d667-5b5c-8d20-23b19ef421d9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-743]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-743")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "5f738ef9-dedf-5309-a62d-53845b5a1a4e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-758]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-758")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "766b86a4-0dcc-521d-8bb6-d27d78acb693", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-740]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-740")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "79a91e52-4b0b-53a7-9959-20ebf048e319", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-751]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-751")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "7e3e48b3-e4b2-5bef-875e-51f352e44d6c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-761]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-761")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "808cc2b4-23d9-591f-b752-0ab0b7006486", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-763]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-763")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "879ec2e7-3b11-5170-98b0-b4a91d2bb3c7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-739]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-739")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "9397b218-249a-57dd-be98-520d9cba2474", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-747]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-747")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "96c4a092-9489-50c5-bf37-005a45fa0e26", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-767]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-767")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "9c2bd9ff-ca37-5764-95cb-39133fbb2aa2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-752]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-752")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "a6a5b817-35a6-5f9a-be9a-bf5262fe4fd6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-744]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-744")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "ab82c49b-2783-5c78-9931-7d6b0fbb5912", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-754]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-754")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "b95cfcba-dd98-56ce-85e1-398a0acdad1b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-736]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-736")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "cec4244a-7b81-5c2d-a20c-783046f610c8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-741]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-741")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "d4e0097b-2530-50a1-a9e9-0292d2e35dd6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-748]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-748")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "d6156ed5-4bc9-53fb-92f6-705c2c15f639", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-765]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-765")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "d7252600-a390-56b7-97bd-cf4a413f0c84", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-757]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-757")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "dd9e1fc6-07e9-5cbb-8414-7bf3d9b85b6c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-737]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-737")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "ed1aa1d6-ccb0-569f-bea3-0e902d681d0d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-762]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-762")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "ef9add9a-b595-5210-9cf1-0f731acd2823", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-746]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-746")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "f94a2600-3b56-59eb-960b-bf7c66c1eaf0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-745]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-745")], .matchExpressions = []}}}}: -1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 4398037940003267649077370648463899309, .node = "testNode-75", .pods = [k8spolicy.PodReference{.name = "testPod-759", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 17658808561446985253322180017424654338, .node = "testNode-76", .pods = [k8spolicy.PodReference{.name = "testPod-760", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 20092635691975747594380957838639536461, .node = "testNode-75", .pods = [k8spolicy.PodReference{.name = "testPod-750", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 24504795559851105437069282183056106079, .node = "testNode-75", .pods = [k8spolicy.PodReference{.name = "testPod-756", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 34426929826697059772173071824620121626, .node = "testNode-74", .pods = [k8spolicy.PodReference{.name = "testPod-742", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 35058101665146670808052052538129070863, .node = "testNode-75", .pods = [k8spolicy.PodReference{.name = "testPod-753", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 44289025035542436008242967276697093971, .node = "testNode-73", .pods = [k8spolicy.PodReference{.name = "testPod-738", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 72122705871304275637087195349897034990, .node = "testNode-76", .pods = [k8spolicy.PodReference{.name = "testPod-766", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 78480696584772383686929246462571805306, .node = "testNode-74", .pods = [k8spolicy.PodReference{.name = "testPod-749", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 100868379569040624999795522528451395874, .node = "testNode-76", .pods = [k8spolicy.PodReference{.name = "testPod-764", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 121223415449627862530040104112695352084, .node = "testNode-75", .pods = [k8spolicy.PodReference{.name = "testPod-755", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 123647219404309518112218654842480239065, .node = "testNode-74", .pods = [k8spolicy.PodReference{.name = "testPod-743", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 126876673637250352464688700325600303694, .node = "testNode-75", .pods = [k8spolicy.PodReference{.name = "testPod-758", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 157407210107059154996043679640104777363, .node = "testNode-74", .pods = [k8spolicy.PodReference{.name = "testPod-740", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 161714700651289711179061588185481536281, .node = "testNode-75", .pods = [k8spolicy.PodReference{.name = "testPod-751", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 167806124460239317461469712179280498028, .node = "testNode-76", .pods = [k8spolicy.PodReference{.name = "testPod-761", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 170872054080291201713603711837466027142, .node = "testNode-76", .pods = [k8spolicy.PodReference{.name = "testPod-763", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 180270115442061346733561750408827483079, .node = "testNode-73", .pods = [k8spolicy.PodReference{.name = "testPod-739", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 196184164387734792494584650260731798644, .node = "testNode-74", .pods = [k8spolicy.PodReference{.name = "testPod-747", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 200405146350828304228576124973486837286, .node = "testNode-76", .pods = [k8spolicy.PodReference{.name = "testPod-767", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 207587257656012182916251504856989903522, .node = "testNode-75", .pods = [k8spolicy.PodReference{.name = "testPod-752", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 221512310084172929882113552273775677398, .node = "testNode-74", .pods = [k8spolicy.PodReference{.name = "testPod-744", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 227976973515706368644401821506401425682, .node = "testNode-75", .pods = [k8spolicy.PodReference{.name = "testPod-754", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 246389996503433342331435283858892631323, .node = "testNode-73", .pods = [k8spolicy.PodReference{.name = "testPod-736", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 274839393383818296487324953745160540360, .node = "testNode-74", .pods = [k8spolicy.PodReference{.name = "testPod-741", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 282959601900973743138164282562013519318, .node = "testNode-74", .pods = [k8spolicy.PodReference{.name = "testPod-748", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 284566077296111011827148429360522196537, .node = "testNode-76", .pods = [k8spolicy.PodReference{.name = "testPod-765", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 285976904859708191489159824789792033924, .node = "testNode-75", .pods = [k8spolicy.PodReference{.name = "testPod-757", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 294580414416437314404665722698091486060, .node = "testNode-73", .pods = [k8spolicy.PodReference{.name = "testPod-737", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 315165317205468055386143809281584536845, .node = "testNode-76", .pods = [k8spolicy.PodReference{.name = "testPod-762", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 318489599378665995559969640392831084579, .node = "testNode-74", .pods = [k8spolicy.PodReference{.name = "testPod-746", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 331362771667904576197395320489126259440, .node = "testNode-74", .pods = [k8spolicy.PodReference{.name = "testPod-745", .namespace = "testNamespace"}]}: -1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 4398037940003267649077370648463899309, .span = "testNode-75"}: -1
AppliedToGroupSpan{.appliedToGroup = 17658808561446985253322180017424654338, .span = "testNode-76"}: -1
AppliedToGroupSpan{.appliedToGroup = 20092635691975747594380957838639536461, .span = "testNode-75"}: -1
AppliedToGroupSpan{.appliedToGroup = 24504795559851105437069282183056106079, .span = "testNode-75"}: -1
AppliedToGroupSpan{.appliedToGroup = 34426929826697059772173071824620121626, .span = "testNode-74"}: -1
AppliedToGroupSpan{.appliedToGroup = 35058101665146670808052052538129070863, .span = "testNode-75"}: -1
AppliedToGroupSpan{.appliedToGroup = 44289025035542436008242967276697093971, .span = "testNode-73"}: -1
AppliedToGroupSpan{.appliedToGroup = 72122705871304275637087195349897034990, .span = "testNode-76"}: -1
AppliedToGroupSpan{.appliedToGroup = 78480696584772383686929246462571805306, .span = "testNode-74"}: -1
AppliedToGroupSpan{.appliedToGroup = 100868379569040624999795522528451395874, .span = "testNode-76"}: -1
AppliedToGroupSpan{.appliedToGroup = 121223415449627862530040104112695352084, .span = "testNode-75"}: -1
AppliedToGroupSpan{.appliedToGroup = 123647219404309518112218654842480239065, .span = "testNode-74"}: -1
AppliedToGroupSpan{.appliedToGroup = 126876673637250352464688700325600303694, .span = "testNode-75"}: -1
AppliedToGroupSpan{.appliedToGroup = 157407210107059154996043679640104777363, .span = "testNode-74"}: -1
AppliedToGroupSpan{.appliedToGroup = 161714700651289711179061588185481536281, .span = "testNode-75"}: -1
AppliedToGroupSpan{.appliedToGroup = 167806124460239317461469712179280498028, .span = "testNode-76"}: -1
AppliedToGroupSpan{.appliedToGroup = 170872054080291201713603711837466027142, .span = "testNode-76"}: -1
AppliedToGroupSpan{.appliedToGroup = 180270115442061346733561750408827483079, .span = "testNode-73"}: -1
AppliedToGroupSpan{.appliedToGroup = 196184164387734792494584650260731798644, .span = "testNode-74"}: -1
AppliedToGroupSpan{.appliedToGroup = 200405146350828304228576124973486837286, .span = "testNode-76"}: -1
AppliedToGroupSpan{.appliedToGroup = 207587257656012182916251504856989903522, .span = "testNode-75"}: -1
AppliedToGroupSpan{.appliedToGroup = 221512310084172929882113552273775677398, .span = "testNode-74"}: -1
AppliedToGroupSpan{.appliedToGroup = 227976973515706368644401821506401425682, .span = "testNode-75"}: -1
AppliedToGroupSpan{.appliedToGroup = 246389996503433342331435283858892631323, .span = "testNode-73"}: -1
AppliedToGroupSpan{.appliedToGroup = 274839393383818296487324953745160540360, .span = "testNode-74"}: -1
AppliedToGroupSpan{.appliedToGroup = 282959601900973743138164282562013519318, .span = "testNode-74"}: -1
AppliedToGroupSpan{.appliedToGroup = 284566077296111011827148429360522196537, .span = "testNode-76"}: -1
AppliedToGroupSpan{.appliedToGroup = 285976904859708191489159824789792033924, .span = "testNode-75"}: -1
AppliedToGroupSpan{.appliedToGroup = 294580414416437314404665722698091486060, .span = "testNode-73"}: -1
AppliedToGroupSpan{.appliedToGroup = 315165317205468055386143809281584536845, .span = "testNode-76"}: -1
AppliedToGroupSpan{.appliedToGroup = 318489599378665995559969640392831084579, .span = "testNode-74"}: -1
AppliedToGroupSpan{.appliedToGroup = 331362771667904576197395320489126259440, .span = "testNode-74"}: -1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-736"}, .name = "testNP-736", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [294580414416437314404665722698091486060], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [246389996503433342331435283858892631323]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-737"}, .name = "testNP-737", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [44289025035542436008242967276697093971], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [294580414416437314404665722698091486060]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-738"}, .name = "testNP-738", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [180270115442061346733561750408827483079], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [44289025035542436008242967276697093971]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-739"}, .name = "testNP-739", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [157407210107059154996043679640104777363], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [180270115442061346733561750408827483079]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-740"}, .name = "testNP-740", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [274839393383818296487324953745160540360], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [157407210107059154996043679640104777363]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-741"}, .name = "testNP-741", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [34426929826697059772173071824620121626], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [274839393383818296487324953745160540360]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-742"}, .name = "testNP-742", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [123647219404309518112218654842480239065], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [34426929826697059772173071824620121626]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-743"}, .name = "testNP-743", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [221512310084172929882113552273775677398], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [123647219404309518112218654842480239065]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-744"}, .name = "testNP-744", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [331362771667904576197395320489126259440], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [221512310084172929882113552273775677398]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-745"}, .name = "testNP-745", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [318489599378665995559969640392831084579], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [331362771667904576197395320489126259440]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-746"}, .name = "testNP-746", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [196184164387734792494584650260731798644], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [318489599378665995559969640392831084579]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-747"}, .name = "testNP-747", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [282959601900973743138164282562013519318], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [196184164387734792494584650260731798644]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-748"}, .name = "testNP-748", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [78480696584772383686929246462571805306], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [282959601900973743138164282562013519318]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-749"}, .name = "testNP-749", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [20092635691975747594380957838639536461], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [78480696584772383686929246462571805306]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-750"}, .name = "testNP-750", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [161714700651289711179061588185481536281], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [20092635691975747594380957838639536461]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-751"}, .name = "testNP-751", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [207587257656012182916251504856989903522], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [161714700651289711179061588185481536281]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-752"}, .name = "testNP-752", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [35058101665146670808052052538129070863], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [207587257656012182916251504856989903522]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-753"}, .name = "testNP-753", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [227976973515706368644401821506401425682], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [35058101665146670808052052538129070863]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-754"}, .name = "testNP-754", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [121223415449627862530040104112695352084], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [227976973515706368644401821506401425682]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-755"}, .name = "testNP-755", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [24504795559851105437069282183056106079], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [121223415449627862530040104112695352084]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-756"}, .name = "testNP-756", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [285976904859708191489159824789792033924], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [24504795559851105437069282183056106079]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-757"}, .name = "testNP-757", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [126876673637250352464688700325600303694], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [285976904859708191489159824789792033924]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-758"}, .name = "testNP-758", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [4398037940003267649077370648463899309], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [126876673637250352464688700325600303694]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-759"}, .name = "testNP-759", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [17658808561446985253322180017424654338], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [4398037940003267649077370648463899309]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-760"}, .name = "testNP-760", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [167806124460239317461469712179280498028], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [17658808561446985253322180017424654338]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-761"}, .name = "testNP-761", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [315165317205468055386143809281584536845], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [167806124460239317461469712179280498028]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-762"}, .name = "testNP-762", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [170872054080291201713603711837466027142], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [315165317205468055386143809281584536845]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-763"}, .name = "testNP-763", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [100868379569040624999795522528451395874], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [170872054080291201713603711837466027142]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-764"}, .name = "testNP-764", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [284566077296111011827148429360522196537], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [100868379569040624999795522528451395874]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-765"}, .name = "testNP-765", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [72122705871304275637087195349897034990], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [284566077296111011827148429360522196537]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-766"}, .name = "testNP-766", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [200405146350828304228576124973486837286], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [72122705871304275637087195349897034990]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-767"}, .name = "testNP-767", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [333086689822027869740204446506499439221], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [200405146350828304228576124973486837286]}: -1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-736", .policy = k8spolicy.UID{.uid = "testNP-736"}, .node = "testNode-73"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-737", .policy = k8spolicy.UID{.uid = "testNP-737"}, .node = "testNode-73"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-738", .policy = k8spolicy.UID{.uid = "testNP-738"}, .node = "testNode-73"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-739", .policy = k8spolicy.UID{.uid = "testNP-739"}, .node = "testNode-73"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-740", .policy = k8spolicy.UID{.uid = "testNP-740"}, .node = "testNode-74"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-741", .policy = k8spolicy.UID{.uid = "testNP-741"}, .node = "testNode-74"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-742", .policy = k8spolicy.UID{.uid = "testNP-742"}, .node = "testNode-74"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-743", .policy = k8spolicy.UID{.uid = "testNP-743"}, .node = "testNode-74"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-744", .policy = k8spolicy.UID{.uid = "testNP-744"}, .node = "testNode-74"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-745", .policy = k8spolicy.UID{.uid = "testNP-745"}, .node = "testNode-74"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-746", .policy = k8spolicy.UID{.uid = "testNP-746"}, .node = "testNode-74"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-747", .policy = k8spolicy.UID{.uid = "testNP-747"}, .node = "testNode-74"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-748", .policy = k8spolicy.UID{.uid = "testNP-748"}, .node = "testNode-74"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-749", .policy = k8spolicy.UID{.uid = "testNP-749"}, .node = "testNode-74"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-750", .policy = k8spolicy.UID{.uid = "testNP-750"}, .node = "testNode-75"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-751", .policy = k8spolicy.UID{.uid = "testNP-751"}, .node = "testNode-75"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-752", .policy = k8spolicy.UID{.uid = "testNP-752"}, .node = "testNode-75"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-753", .policy = k8spolicy.UID{.uid = "testNP-753"}, .node = "testNode-75"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-754", .policy = k8spolicy.UID{.uid = "testNP-754"}, .node = "testNode-75"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-755", .policy = k8spolicy.UID{.uid = "testNP-755"}, .node = "testNode-75"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-756", .policy = k8spolicy.UID{.uid = "testNP-756"}, .node = "testNode-75"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-757", .policy = k8spolicy.UID{.uid = "testNP-757"}, .node = "testNode-75"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-758", .policy = k8spolicy.UID{.uid = "testNP-758"}, .node = "testNode-75"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-759", .policy = k8spolicy.UID{.uid = "testNP-759"}, .node = "testNode-75"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-760", .policy = k8spolicy.UID{.uid = "testNP-760"}, .node = "testNode-76"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-761", .policy = k8spolicy.UID{.uid = "testNP-761"}, .node = "testNode-76"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-762", .policy = k8spolicy.UID{.uid = "testNP-762"}, .node = "testNode-76"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-763", .policy = k8spolicy.UID{.uid = "testNP-763"}, .node = "testNode-76"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-764", .policy = k8spolicy.UID{.uid = "testNP-764"}, .node = "testNode-76"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-765", .policy = k8spolicy.UID{.uid = "testNP-765"}, .node = "testNode-76"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-766", .policy = k8spolicy.UID{.uid = "testNP-766"}, .node = "testNode-76"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-767", .policy = k8spolicy.UID{.uid = "testNP-767"}, .node = "testNode-76"}: -1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 15167791859128027178742186806802006013, .address = "10.10.77.7"}: -1
AddressGroupAddress{.addressGroup = 21585889398609078897151576103508458932, .address = "10.10.78.2"}: -1
AddressGroupAddress{.addressGroup = 32754706752723159135885913137305389918, .address = "10.10.79.7"}: -1
AddressGroupAddress{.addressGroup = 54714787274351090031568943617370037896, .address = "10.10.79.3"}: -1
AddressGroupAddress{.addressGroup = 59138668918615823277603863876527587177, .address = "10.10.78.5"}: -1
AddressGroupAddress{.addressGroup = 80708215663055788588686619441514344073, .address = "10.10.78.9"}: -1
AddressGroupAddress{.addressGroup = 99873494153055087609843721750415393612, .address = "10.10.78.7"}: -1
AddressGroupAddress{.addressGroup = 119589963794466669087788330089559877778, .address = "10.10.76.9"}: -1
AddressGroupAddress{.addressGroup = 130054054732319908097189169192681493188, .address = "10.10.77.2"}: -1
AddressGroupAddress{.addressGroup = 133091743687146462589819455213027340326, .address = "10.10.79.5"}: -1
AddressGroupAddress{.addressGroup = 146178588422979754866794290484410982527, .address = "10.10.78.0"}: -1
AddressGroupAddress{.addressGroup = 146185538408816906377723580363484118757, .address = "10.10.77.0"}: -1
AddressGroupAddress{.addressGroup = 156048549456266952186328762894833522783, .address = "10.10.78.3"}: -1
AddressGroupAddress{.addressGroup = 169577772723870516805200903892640787983, .address = "10.10.79.8"}: -1
AddressGroupAddress{.addressGroup = 182451874850830543827183069280738869661, .address = "10.10.77.5"}: -1
AddressGroupAddress{.addressGroup = 191463359987522060718523006308667269039, .address = "10.10.79.6"}: -1
AddressGroupAddress{.addressGroup = 193093053630956660449843576033623764767, .address = "10.10.77.6"}: -1
AddressGroupAddress{.addressGroup = 196267459757869653417180572818886082471, .address = "10.10.78.8"}: -1
AddressGroupAddress{.addressGroup = 197754218681631532389323125046627877130, .address = "10.10.78.4"}: -1
AddressGroupAddress{.addressGroup = 213884245349307647754033137287386210101, .address = "10.10.77.8"}: -1
AddressGroupAddress{.addressGroup = 228577225627974225456062960310638283122, .address = "10.10.78.6"}: -1
AddressGroupAddress{.addressGroup = 243217735055966500436912331206752091025, .address = "10.10.78.1"}: -1
AddressGroupAddress{.addressGroup = 248025121155873484586719311007875956384, .address = "10.10.77.9"}: -1
AddressGroupAddress{.addressGroup = 250214802431508889243941649213168462554, .address = "10.10.79.4"}: -1
AddressGroupAddress{.addressGroup = 258146097539826554152802787500765572116, .address = "10.10.77.1"}: -1
AddressGroupAddress{.addressGroup = 259776768260994503107571264675618229799, .address = "10.10.77.4"}: -1
AddressGroupAddress{.addressGroup = 269910770799879708472502124908742799538, .address = "10.10.79.1"}: -1
AddressGroupAddress{.addressGroup = 279747041992767962566455241181652483533, .address = "10.10.79.9"}: -1
AddressGroupAddress{.addressGroup = 297260401546662599166943535924464176850, .address = "10.10.79.2"}: -1
AddressGroupAddress{.addressGroup = 306160349818334709164720342947313424387, .address = "10.10.79.0"}: -1
AddressGroupAddress{.addressGroup = 329254349263432198001601879181974604245, .address = "10.10.80.0"}: -1
AddressGroupAddress{.addressGroup = 335231819269904380578766239397927905153, .address = "10.10.77.3"}: -1
AddressGroupDescr:
AddressGroupDescr{.name = "0b6935e0-4256-5914-bfb1-bb3186d23ffd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-777]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-777")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "103d4a84-040b-5d32-b625-c81009333db4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-782]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-782")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "18a453b9-e840-55b2-a4fe-4770390c8b5e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-797]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-797")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "2929af49-e43a-5690-8369-9becfaed1e88", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-793]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-793")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "2c7db17e-58e7-55e0-9f24-671a97b1ff69", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-785]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-785")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "3cb7d641-1154-598f-8375-57a27086ee89", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-789]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-789")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "4b22ef70-1527-55d5-ab1d-eddbd30bc34c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-787]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-787")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "59f83071-820d-5756-9459-0f463713e892", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-769]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-769")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "61d77ff5-8035-5e87-8cd3-d82d6f9e52c4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-772]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-772")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "64208996-7094-5d71-9837-c652c1aa3026", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-795]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-795")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "6df8f8d9-6581-5038-bee3-4ec6d252207f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-780]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-780")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "6dfa4f82-8ce7-52be-83c9-cf80986f3ee5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-770]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-770")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "7565db7f-b84e-54ca-af30-88d9b589985f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-783]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-783")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "7f937db4-bdb5-528c-ace8-cbe018ccee0f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-798]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-798")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "8942f3f2-772e-5aa4-b8a1-20023b26019d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-775]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-775")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "900a8077-9f63-58eb-a46c-7c99a55e9faf", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-796]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-796")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "91445e91-446d-5ae2-92a0-8ba2d8116f1f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-776]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-776")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "93a7bcdf-8535-5422-94ba-87ce7acfbfa7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-788]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-788")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "94c613bf-5e11-5c20-b0b1-1ab014bd410a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-784]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-784")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "a0e89b76-615a-5c59-a0c6-027039619f35", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-778]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-778")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "abf65f51-f2db-55f3-bfcd-94ef814b0972", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-786]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-786")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "b6fa082a-45da-5cd2-97d1-e1d11cc63b91", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-781]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-781")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "ba97e699-7b2e-551a-a089-2d4fc5e17ea0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-779]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-779")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "bc3d9e38-bbaa-524d-84ee-9f90f77aaada", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-794]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-794")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "c2352142-f3df-5c0a-a70c-3265e0e16c14", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-771]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-771")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "c36f2f89-0d57-59d7-9b3f-e9d844200e27", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-774]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-774")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "cb0eec6f-b6a8-5a4f-b75a-985e6c5d70b2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-791]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-791")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "d275520c-7813-5be9-b9e6-4d4ea2de7dcd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-799]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-799")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "dfa24557-3517-5812-af70-4b7273b9ced2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-792]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-792")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "e65456ab-3523-5706-ac30-fc8f7e431803", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-790]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-790")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "f7b414c0-2062-5caa-95d5-1312767089d5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-800]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-800")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "fc334cc6-87c1-5f4c-963a-8583abaee781", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-773]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-773")], .matchExpressions = []}}}}: -1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 15167791859128027178742186806802006013, .node = "testNode-77"}: -1
AddressGroupSpan{.addressGroup = 21585889398609078897151576103508458932, .node = "testNode-78"}: -1
AddressGroupSpan{.addressGroup = 32754706752723159135885913137305389918, .node = "testNode-79"}: -1
AddressGroupSpan{.addressGroup = 54714787274351090031568943617370037896, .node = "testNode-79"}: -1
AddressGroupSpan{.addressGroup = 59138668918615823277603863876527587177, .node = "testNode-78"}: -1
AddressGroupSpan{.addressGroup = 80708215663055788588686619441514344073, .node = "testNode-78"}: -1
AddressGroupSpan{.addressGroup = 99873494153055087609843721750415393612, .node = "testNode-78"}: -1
AddressGroupSpan{.addressGroup = 119589963794466669087788330089559877778, .node = "testNode-76"}: -1
AddressGroupSpan{.addressGroup = 130054054732319908097189169192681493188, .node = "testNode-77"}: -1
AddressGroupSpan{.addressGroup = 133091743687146462589819455213027340326, .node = "testNode-79"}: -1
AddressGroupSpan{.addressGroup = 146178588422979754866794290484410982527, .node = "testNode-77"}: -1
AddressGroupSpan{.addressGroup = 146185538408816906377723580363484118757, .node = "testNode-76"}: -1
AddressGroupSpan{.addressGroup = 156048549456266952186328762894833522783, .node = "testNode-78"}: -1
AddressGroupSpan{.addressGroup = 169577772723870516805200903892640787983, .node = "testNode-79"}: -1
AddressGroupSpan{.addressGroup = 182451874850830543827183069280738869661, .node = "testNode-77"}: -1
AddressGroupSpan{.addressGroup = 191463359987522060718523006308667269039, .node = "testNode-79"}: -1
AddressGroupSpan{.addressGroup = 193093053630956660449843576033623764767, .node = "testNode-77"}: -1
AddressGroupSpan{.addressGroup = 196267459757869653417180572818886082471, .node = "testNode-78"}: -1
AddressGroupSpan{.addressGroup = 197754218681631532389323125046627877130, .node = "testNode-78"}: -1
AddressGroupSpan{.addressGroup = 213884245349307647754033137287386210101, .node = "testNode-77"}: -1
AddressGroupSpan{.addressGroup = 228577225627974225456062960310638283122, .node = "testNode-78"}: -1
AddressGroupSpan{.addressGroup = 243217735055966500436912331206752091025, .node = "testNode-78"}: -1
AddressGroupSpan{.addressGroup = 248025121155873484586719311007875956384, .node = "testNode-77"}: -1
AddressGroupSpan{.addressGroup = 250214802431508889243941649213168462554, .node = "testNode-79"}: -1
AddressGroupSpan{.addressGroup = 258146097539826554152802787500765572116, .node = "testNode-77"}: -1
AddressGroupSpan{.addressGroup = 259776768260994503107571264675618229799, .node = "testNode-77"}: -1
AddressGroupSpan{.addressGroup = 269910770799879708472502124908742799538, .node = "testNode-79"}: -1
AddressGroupSpan{.addressGroup = 279747041992767962566455241181652483533, .node = "testNode-79"}: -1
AddressGroupSpan{.addressGroup = 297260401546662599166943535924464176850, .node = "testNode-79"}: -1
AddressGroupSpan{.addressGroup = 306160349818334709164720342947313424387, .node = "testNode-78"}: -1
AddressGroupSpan{.addressGroup = 329254349263432198001601879181974604245, .node = "testNode-79"}: -1
AddressGroupSpan{.addressGroup = 335231819269904380578766239397927905153, .node = "testNode-77"}: -1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "0b6935e0-4256-5914-bfb1-bb3186d23ffd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-777]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-777")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "103d4a84-040b-5d32-b625-c81009333db4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-782]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-782")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "18a453b9-e840-55b2-a4fe-4770390c8b5e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-797]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-797")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "2929af49-e43a-5690-8369-9becfaed1e88", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-793]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-793")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "2c7db17e-58e7-55e0-9f24-671a97b1ff69", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-785]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-785")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "3cb7d641-1154-598f-8375-57a27086ee89", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-789]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-789")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "4b22ef70-1527-55d5-ab1d-eddbd30bc34c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-787]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-787")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "59f83071-820d-5756-9459-0f463713e892", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-769]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-769")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "61d77ff5-8035-5e87-8cd3-d82d6f9e52c4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-772]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-772")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "64208996-7094-5d71-9837-c652c1aa3026", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-795]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-795")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "6df8f8d9-6581-5038-bee3-4ec6d252207f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-780]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-780")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "6dfa4f82-8ce7-52be-83c9-cf80986f3ee5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-770]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-770")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "7565db7f-b84e-54ca-af30-88d9b589985f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-783]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-783")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "7f937db4-bdb5-528c-ace8-cbe018ccee0f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-798]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-798")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "8942f3f2-772e-5aa4-b8a1-20023b26019d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-775]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-775")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "900a8077-9f63-58eb-a46c-7c99a55e9faf", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-796]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-796")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "91445e91-446d-5ae2-92a0-8ba2d8116f1f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-776]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-776")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "93a7bcdf-8535-5422-94ba-87ce7acfbfa7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-788]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-788")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "94c613bf-5e11-5c20-b0b1-1ab014bd410a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-784]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-784")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "a0e89b76-615a-5c59-a0c6-027039619f35", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-778]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-778")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "abf65f51-f2db-55f3-bfcd-94ef814b0972", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-786]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-786")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "b6fa082a-45da-5cd2-97d1-e1d11cc63b91", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-781]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-781")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "ba97e699-7b2e-551a-a089-2d4fc5e17ea0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-779]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-779")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "bc3d9e38-bbaa-524d-84ee-9f90f77aaada", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-794]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-794")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "c2352142-f3df-5c0a-a70c-3265e0e16c14", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-771]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-771")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "c36f2f89-0d57-59d7-9b3f-e9d844200e27", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-774]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-774")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "cb0eec6f-b6a8-5a4f-b75a-985e6c5d70b2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-791]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-791")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "d275520c-7813-5be9-b9e6-4d4ea2de7dcd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-799]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-799")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "dfa24557-3517-5812-af70-4b7273b9ced2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-792]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-792")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "e65456ab-3523-5706-ac30-fc8f7e431803", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-790]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-790")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "fa9629ba-66b5-578b-b753-884370a7fa75", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-768]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-768")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "fc334cc6-87c1-5f4c-963a-8583abaee781", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-773]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-773")], .matchExpressions = []}}}}: -1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 15167791859128027178742186806802006013, .node = "testNode-77", .pods = [k8spolicy.PodReference{.name = "testPod-777", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 21585889398609078897151576103508458932, .node = "testNode-78", .pods = [k8spolicy.PodReference{.name = "testPod-782", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 32754706752723159135885913137305389918, .node = "testNode-79", .pods = [k8spolicy.PodReference{.name = "testPod-797", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 54714787274351090031568943617370037896, .node = "testNode-79", .pods = [k8spolicy.PodReference{.name = "testPod-793", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 59138668918615823277603863876527587177, .node = "testNode-78", .pods = [k8spolicy.PodReference{.name = "testPod-785", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 80708215663055788588686619441514344073, .node = "testNode-78", .pods = [k8spolicy.PodReference{.name = "testPod-789", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 99873494153055087609843721750415393612, .node = "testNode-78", .pods = [k8spolicy.PodReference{.name = "testPod-787", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 119589963794466669087788330089559877778, .node = "testNode-76", .pods = [k8spolicy.PodReference{.name = "testPod-769", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 130054054732319908097189169192681493188, .node = "testNode-77", .pods = [k8spolicy.PodReference{.name = "testPod-772", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 133091743687146462589819455213027340326, .node = "testNode-79", .pods = [k8spolicy.PodReference{.name = "testPod-795", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 146178588422979754866794290484410982527, .node = "testNode-78", .pods = [k8spolicy.PodReference{.name = "testPod-780", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 146185538408816906377723580363484118757, .node = "testNode-77", .pods = [k8spolicy.PodReference{.name = "testPod-770", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 156048549456266952186328762894833522783, .node = "testNode-78", .pods = [k8spolicy.PodReference{.name = "testPod-783", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 169577772723870516805200903892640787983, .node = "testNode-79", .pods = [k8spolicy.PodReference{.name = "testPod-798", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 182451874850830543827183069280738869661, .node = "testNode-77", .pods = [k8spolicy.PodReference{.name = "testPod-775", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 191463359987522060718523006308667269039, .node = "testNode-79", .pods = [k8spolicy.PodReference{.name = "testPod-796", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 193093053630956660449843576033623764767, .node = "testNode-77", .pods = [k8spolicy.PodReference{.name = "testPod-776", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 196267459757869653417180572818886082471, .node = "testNode-78", .pods = [k8spolicy.PodReference{.name = "testPod-788", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 197754218681631532389323125046627877130, .node = "testNode-78", .pods = [k8spolicy.PodReference{.name = "testPod-784", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 213884245349307647754033137287386210101, .node = "testNode-77", .pods = [k8spolicy.PodReference{.name = "testPod-778", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 228577225627974225456062960310638283122, .node = "testNode-78", .pods = [k8spolicy.PodReference{.name = "testPod-786", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 243217735055966500436912331206752091025, .node = "testNode-78", .pods = [k8spolicy.PodReference{.name = "testPod-781", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 248025121155873484586719311007875956384, .node = "testNode-77", .pods = [k8spolicy.PodReference{.name = "testPod-779", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 250214802431508889243941649213168462554, .node = "testNode-79", .pods = [k8spolicy.PodReference{.name = "testPod-794", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 258146097539826554152802787500765572116, .node = "testNode-77", .pods = [k8spolicy.PodReference{.name = "testPod-771", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 259776768260994503107571264675618229799, .node = "testNode-77", .pods = [k8spolicy.PodReference{.name = "testPod-774", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 269910770799879708472502124908742799538, .node = "testNode-79", .pods = [k8spolicy.PodReference{.name = "testPod-791", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 279747041992767962566455241181652483533, .node = "testNode-79", .pods = [k8spolicy.PodReference{.name = "testPod-799", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 297260401546662599166943535924464176850, .node = "testNode-79", .pods = [k8spolicy.PodReference{.name = "testPod-792", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 306160349818334709164720342947313424387, .node = "testNode-79", .pods = [k8spolicy.PodReference{.name = "testPod-790", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 333086689822027869740204446506499439221, .node = "testNode-76", .pods = [k8spolicy.PodReference{.name = "testPod-768", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 335231819269904380578766239397927905153, .node = "testNode-77", .pods = [k8spolicy.PodReference{.name = "testPod-773", .namespace = "testNamespace"}]}: -1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 15167791859128027178742186806802006013, .span = "testNode-77"}: -1
AppliedToGroupSpan{.appliedToGroup = 21585889398609078897151576103508458932, .span = "testNode-78"}: -1
AppliedToGroupSpan{.appliedToGroup = 32754706752723159135885913137305389918, .span = "testNode-79"}: -1
AppliedToGroupSpan{.appliedToGroup = 54714787274351090031568943617370037896, .span = "testNode-79"}: -1
AppliedToGroupSpan{.appliedToGroup = 59138668918615823277603863876527587177, .span = "testNode-78"}: -1
AppliedToGroupSpan{.appliedToGroup = 80708215663055788588686619441514344073, .span = "testNode-78"}: -1
AppliedToGroupSpan{.appliedToGroup = 99873494153055087609843721750415393612, .span = "testNode-78"}: -1
AppliedToGroupSpan{.appliedToGroup = 119589963794466669087788330089559877778, .span = "testNode-76"}: -1
AppliedToGroupSpan{.appliedToGroup = 130054054732319908097189169192681493188, .span = "testNode-77"}: -1
AppliedToGroupSpan{.appliedToGroup = 133091743687146462589819455213027340326, .span = "testNode-79"}: -1
AppliedToGroupSpan{.appliedToGroup = 146178588422979754866794290484410982527, .span = "testNode-78"}: -1
AppliedToGroupSpan{.appliedToGroup = 146185538408816906377723580363484118757, .span = "testNode-77"}: -1
AppliedToGroupSpan{.appliedToGroup = 156048549456266952186328762894833522783, .span = "testNode-78"}: -1
AppliedToGroupSpan{.appliedToGroup = 169577772723870516805200903892640787983, .span = "testNode-79"}: -1
AppliedToGroupSpan{.appliedToGroup = 182451874850830543827183069280738869661, .span = "testNode-77"}: -1
AppliedToGroupSpan{.appliedToGroup = 191463359987522060718523006308667269039, .span = "testNode-79"}: -1
AppliedToGroupSpan{.appliedToGroup = 193093053630956660449843576033623764767, .span = "testNode-77"}: -1
AppliedToGroupSpan{.appliedToGroup = 196267459757869653417180572818886082471, .span = "testNode-78"}: -1
AppliedToGroupSpan{.appliedToGroup = 197754218681631532389323125046627877130, .span = "testNode-78"}: -1
AppliedToGroupSpan{.appliedToGroup = 213884245349307647754033137287386210101, .span = "testNode-77"}: -1
AppliedToGroupSpan{.appliedToGroup = 228577225627974225456062960310638283122, .span = "testNode-78"}: -1
AppliedToGroupSpan{.appliedToGroup = 243217735055966500436912331206752091025, .span = "testNode-78"}: -1
AppliedToGroupSpan{.appliedToGroup = 248025121155873484586719311007875956384, .span = "testNode-77"}: -1
AppliedToGroupSpan{.appliedToGroup = 250214802431508889243941649213168462554, .span = "testNode-79"}: -1
AppliedToGroupSpan{.appliedToGroup = 258146097539826554152802787500765572116, .span = "testNode-77"}: -1
AppliedToGroupSpan{.appliedToGroup = 259776768260994503107571264675618229799, .span = "testNode-77"}: -1
AppliedToGroupSpan{.appliedToGroup = 269910770799879708472502124908742799538, .span = "testNode-79"}: -1
AppliedToGroupSpan{.appliedToGroup = 279747041992767962566455241181652483533, .span = "testNode-79"}: -1
AppliedToGroupSpan{.appliedToGroup = 297260401546662599166943535924464176850, .span = "testNode-79"}: -1
AppliedToGroupSpan{.appliedToGroup = 306160349818334709164720342947313424387, .span = "testNode-79"}: -1
AppliedToGroupSpan{.appliedToGroup = 333086689822027869740204446506499439221, .span = "testNode-76"}: -1
AppliedToGroupSpan{.appliedToGroup = 335231819269904380578766239397927905153, .span = "testNode-77"}: -1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-768"}, .name = "testNP-768", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [119589963794466669087788330089559877778], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [333086689822027869740204446506499439221]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-769"}, .name = "testNP-769", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [146185538408816906377723580363484118757], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [119589963794466669087788330089559877778]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-770"}, .name = "testNP-770", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [258146097539826554152802787500765572116], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [146185538408816906377723580363484118757]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-771"}, .name = "testNP-771", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [130054054732319908097189169192681493188], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [258146097539826554152802787500765572116]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-772"}, .name = "testNP-772", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [335231819269904380578766239397927905153], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [130054054732319908097189169192681493188]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-773"}, .name = "testNP-773", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [259776768260994503107571264675618229799], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [335231819269904380578766239397927905153]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-774"}, .name = "testNP-774", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [182451874850830543827183069280738869661], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [259776768260994503107571264675618229799]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-775"}, .name = "testNP-775", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [193093053630956660449843576033623764767], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [182451874850830543827183069280738869661]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-776"}, .name = "testNP-776", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [15167791859128027178742186806802006013], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [193093053630956660449843576033623764767]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-777"}, .name = "testNP-777", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [213884245349307647754033137287386210101], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [15167791859128027178742186806802006013]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-778"}, .name = "testNP-778", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [248025121155873484586719311007875956384], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [213884245349307647754033137287386210101]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-779"}, .name = "testNP-779", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [146178588422979754866794290484410982527], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [248025121155873484586719311007875956384]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-780"}, .name = "testNP-780", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [243217735055966500436912331206752091025], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [146178588422979754866794290484410982527]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-781"}, .name = "testNP-781", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [21585889398609078897151576103508458932], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [243217735055966500436912331206752091025]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-782"}, .name = "testNP-782", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [156048549456266952186328762894833522783], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [21585889398609078897151576103508458932]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-783"}, .name = "testNP-783", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [197754218681631532389323125046627877130], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [156048549456266952186328762894833522783]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-784"}, .name = "testNP-784", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [59138668918615823277603863876527587177], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [197754218681631532389323125046627877130]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-785"}, .name = "testNP-785", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [228577225627974225456062960310638283122], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [59138668918615823277603863876527587177]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-786"}, .name = "testNP-786", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [99873494153055087609843721750415393612], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [228577225627974225456062960310638283122]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-787"}, .name = "testNP-787", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [196267459757869653417180572818886082471], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [99873494153055087609843721750415393612]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-788"}, .name = "testNP-788", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [80708215663055788588686619441514344073], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [196267459757869653417180572818886082471]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-789"}, .name = "testNP-789", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [306160349818334709164720342947313424387], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [80708215663055788588686619441514344073]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-790"}, .name = "testNP-790", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [269910770799879708472502124908742799538], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [306160349818334709164720342947313424387]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-791"}, .name = "testNP-791", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [297260401546662599166943535924464176850], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [269910770799879708472502124908742799538]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-792"}, .name = "testNP-792", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [54714787274351090031568943617370037896], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [297260401546662599166943535924464176850]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-793"}, .name = "testNP-793", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [250214802431508889243941649213168462554], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [54714787274351090031568943617370037896]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-794"}, .name = "testNP-794", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [133091743687146462589819455213027340326], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [250214802431508889243941649213168462554]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-795"}, .name = "testNP-795", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [191463359987522060718523006308667269039], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [133091743687146462589819455213027340326]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-796"}, .name = "testNP-796", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [32754706752723159135885913137305389918], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [191463359987522060718523006308667269039]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-797"}, .name = "testNP-797", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [169577772723870516805200903892640787983], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [32754706752723159135885913137305389918]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-798"}, .name = "testNP-798", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [279747041992767962566455241181652483533], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [169577772723870516805200903892640787983]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-799"}, .name = "testNP-799", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [329254349263432198001601879181974604245], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [279747041992767962566455241181652483533]}: -1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-768", .policy = k8spolicy.UID{.uid = "testNP-768"}, .node = "testNode-76"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-769", .policy = k8spolicy.UID{.uid = "testNP-769"}, .node = "testNode-76"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-770", .policy = k8spolicy.UID{.uid = "testNP-770"}, .node = "testNode-77"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-771", .policy = k8spolicy.UID{.uid = "testNP-771"}, .node = "testNode-77"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-772", .policy = k8spolicy.UID{.uid = "testNP-772"}, .node = "testNode-77"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-773", .policy = k8spolicy.UID{.uid = "testNP-773"}, .node = "testNode-77"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-774", .policy = k8spolicy.UID{.uid = "testNP-774"}, .node = "testNode-77"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-775", .policy = k8spolicy.UID{.uid = "testNP-775"}, .node = "testNode-77"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-776", .policy = k8spolicy.UID{.uid = "testNP-776"}, .node = "testNode-77"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-777", .policy = k8spolicy.UID{.uid = "testNP-777"}, .node = "testNode-77"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-778", .policy = k8spolicy.UID{.uid = "testNP-778"}, .node = "testNode-77"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-779", .policy = k8spolicy.UID{.uid = "testNP-779"}, .node = "testNode-77"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-780", .policy = k8spolicy.UID{.uid = "testNP-780"}, .node = "testNode-78"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-781", .policy = k8spolicy.UID{.uid = "testNP-781"}, .node = "testNode-78"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-782", .policy = k8spolicy.UID{.uid = "testNP-782"}, .node = "testNode-78"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-783", .policy = k8spolicy.UID{.uid = "testNP-783"}, .node = "testNode-78"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-784", .policy = k8spolicy.UID{.uid = "testNP-784"}, .node = "testNode-78"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-785", .policy = k8spolicy.UID{.uid = "testNP-785"}, .node = "testNode-78"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-786", .policy = k8spolicy.UID{.uid = "testNP-786"}, .node = "testNode-78"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-787", .policy = k8spolicy.UID{.uid = "testNP-787"}, .node = "testNode-78"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-788", .policy = k8spolicy.UID{.uid = "testNP-788"}, .node = "testNode-78"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-789", .policy = k8spolicy.UID{.uid = "testNP-789"}, .node = "testNode-78"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-790", .policy = k8spolicy.UID{.uid = "testNP-790"}, .node = "testNode-79"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-791", .policy = k8spolicy.UID{.uid = "testNP-791"}, .node = "testNode-79"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-792", .policy = k8spolicy.UID{.uid = "testNP-792"}, .node = "testNode-79"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-793", .policy = k8spolicy.UID{.uid = "testNP-793"}, .node = "testNode-79"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-794", .policy = k8spolicy.UID{.uid = "testNP-794"}, .node = "testNode-79"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-795", .policy = k8spolicy.UID{.uid = "testNP-795"}, .node = "testNode-79"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-796", .policy = k8spolicy.UID{.uid = "testNP-796"}, .node = "testNode-79"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-797", .policy = k8spolicy.UID{.uid = "testNP-797"}, .node = "testNode-79"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-798", .policy = k8spolicy.UID{.uid = "testNP-798"}, .node = "testNode-79"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-799", .policy = k8spolicy.UID{.uid = "testNP-799"}, .node = "testNode-79"}: -1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 13523609103879019870981401838867374138, .address = "10.10.83.0"}: -1
AddressGroupAddress{.addressGroup = 27337855288423711436033931624396873889, .address = "10.10.81.4"}: -1
AddressGroupAddress{.addressGroup = 45089321902829704720510207515891694671, .address = "10.10.81.2"}: -1
AddressGroupAddress{.addressGroup = 60563602358679317412195370747938442453, .address = "10.10.83.2"}: -1
AddressGroupAddress{.addressGroup = 65732015169622618068652496257861074050, .address = "10.10.81.8"}: -1
AddressGroupAddress{.addressGroup = 77594600140379464808131324024453089145, .address = "10.10.81.7"}: -1
AddressGroupAddress{.addressGroup = 85029203199576256853397618624104621426, .address = "10.10.82.9"}: -1
AddressGroupAddress{.addressGroup = 85356211402259028297894520611417496217, .address = "10.10.80.7"}: -1
AddressGroupAddress{.addressGroup = 85868443377906068143268211391593505355, .address = "10.10.80.4"}: -1
AddressGroupAddress{.addressGroup = 91907598845427112955332720907118317376, .address = "10.10.81.9"}: -1
AddressGroupAddress{.addressGroup = 98859468060554981109754749067274905838, .address = "10.10.80.9"}: -1
AddressGroupAddress{.addressGroup = 109508007773179474224583727529641622336, .address = "10.10.81.0"}: -1
AddressGroupAddress{.addressGroup = 118903207609525733175735146840310471888, .address = "10.10.82.8"}: -1
AddressGroupAddress{.addressGroup = 127624264566890719673057401043538020193, .address = "10.10.81.6"}: -1
AddressGroupAddress{.addressGroup = 132604014033279435611134263055966877474, .address = "10.10.82.4"}: -1
AddressGroupAddress{.addressGroup = 138978573378644845054091984490075997837, .address = "10.10.80.1"}: -1
AddressGroupAddress{.addressGroup = 144050788454175294008960650237431433381, .address = "10.10.83.1"}: -1
AddressGroupAddress{.addressGroup = 157889562500688850322412097656692914640, .address = "10.10.82.0"}: -1
AddressGroupAddress{.addressGroup = 168781342752667898316093318372628028764, .address = "10.10.81.1"}: -1
AddressGroupAddress{.addressGroup = 181813694912045841176731456505705362199, .address = "10.10.81.5"}: -1
AddressGroupAddress{.addressGroup = 225059054438637433619270368457501646080, .address = "10.10.80.8"}: -1
AddressGroupAddress{.addressGroup = 238894097777038214975779329977801494345, .address = "10.10.82.7"}: -1
AddressGroupAddress{.addressGroup = 258389722408517552852421004579472822785, .address = "10.10.82.2"}: -1
AddressGroupAddress{.addressGroup = 279695683309546529993807933546001284693, .address = "10.10.82.1"}: -1
AddressGroupAddress{.addressGroup = 312707885025460706475837585634874023001, .address = "10.10.80.6"}: -1
AddressGroupAddress{.addressGroup = 315790997229058838869113019345776079785, .address = "10.10.82.6"}: -1
AddressGroupAddress{.addressGroup = 318123471655951072787084619455295767341, .address = "10.10.82.5"}: -1
AddressGroupAddress{.addressGroup = 318857759385911694218502711806648986450, .address = "10.10.82.3"}: -1
AddressGroupAddress{.addressGroup = 328487043084498615411737899864984341533, .address = "10.10.81.3"}: -1
AddressGroupAddress{.addressGroup = 335610148981884794842167589519986899484, .address = "10.10.80.2"}: -1
AddressGroupAddress{.addressGroup = 337515532524414323127756877261340155875, .address = "10.10.80.5"}: -1
AddressGroupAddress{.addressGroup = 339034441380380061680712980490388720947, .address = "10.10.80.3"}: -1
AddressGroupDescr:
AddressGroupDescr{.name = "0a2c8d68-500a-596d-a73e-b7ed9e52e03a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-830]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-830")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "14911454-5064-5a49-b39f-70881e83e0a1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-814]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-814")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "21ebe334-ac4f-5291-b727-bb9360b57c4f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-812]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-812")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "2d902022-e1be-5977-b819-26da066f8cd5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-832]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-832")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "3173868f-d1c1-5833-92a4-5f3bade4bc82", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-818]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-818")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "3a602d28-1cae-5539-9e3f-635334a04779", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-817]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-817")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "3ff80763-4cc1-594c-ae0f-b9b8e609e572", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-829]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-829")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "40370223-169e-592c-a72e-282c37521a99", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-807]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-807")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "4099a91f-9177-5076-b5cb-6502c600e24b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-804]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-804")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "4524c279-f346-56a0-9d5d-985ea12e0f40", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-819]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-819")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "4a5fa417-6c34-5816-94e5-f1734c2e68ee", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-809]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-809")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "526279a2-4120-5047-aa67-d3c8f8a7bb40", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-810]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-810")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "5973ecbf-d107-5143-8ed2-5eccb4f0dcd0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-828]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-828")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "60038a0d-fd8e-54aa-8452-6ea5e5160761", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-816]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-816")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "63c29aa8-bd5e-5c89-a4bb-070769e93722", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-824]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-824")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "688e4cb3-3a95-5913-94a2-db4a010b468d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-801]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-801")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "6c5f2c36-0b4f-5385-8053-499d815ec8a5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-831]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-831")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "76c86c73-3019-59ec-aa8a-0df8b2fbb9d0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-820]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-820")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "7efa1aad-40aa-59ad-a822-3769cb32dd5c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-811]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-811")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "88c80b3f-32c3-5eba-85d5-8f37c4977317", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-815]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-815")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "a950cc16-9a35-507a-b339-860754471d00", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-808]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-808")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "b3b95463-96f1-5b8e-a29f-6dcf4747cf49", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-827]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-827")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "c2640ce5-1a94-54ad-b353-55f2bf1a5201", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-822]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-822")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "d26b6dde-c06c-5668-b1a6-3ee9090b3e55", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-821]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-821")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "eb415914-03d2-565b-891b-72973b6edc59", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-806]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-806")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "ed93223e-f4c8-5aff-9a07-eb363deef3a9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-826]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-826")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "ef545a1d-2939-587e-9d62-9b24e269c32d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-825]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-825")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "efe1c54b-4b6c-583d-9275-82362b9d2b52", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-823]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-823")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "f7204da2-9380-5baa-9894-01ea261f4c1d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-813]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-813")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "fc7c29de-d5d8-5784-8351-f586d60dba1c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-802]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-802")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "fdeb2088-36ba-5ffb-802c-b494193c1fe3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-805]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-805")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "ff0fa885-413c-5541-8e8e-d684c7274d33", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-803]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-803")], .matchExpressions = []}}}}: -1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 13523609103879019870981401838867374138, .node = "testNode-82"}: -1
AddressGroupSpan{.addressGroup = 27337855288423711436033931624396873889, .node = "testNode-81"}: -1
AddressGroupSpan{.addressGroup = 45089321902829704720510207515891694671, .node = "testNode-81"}: -1
AddressGroupSpan{.addressGroup = 60563602358679317412195370747938442453, .node = "testNode-83"}: -1
AddressGroupSpan{.addressGroup = 65732015169622618068652496257861074050, .node = "testNode-81"}: -1
AddressGroupSpan{.addressGroup = 77594600140379464808131324024453089145, .node = "testNode-81"}: -1
AddressGroupSpan{.addressGroup = 85029203199576256853397618624104621426, .node = "testNode-82"}: -1
AddressGroupSpan{.addressGroup = 85356211402259028297894520611417496217, .node = "testNode-80"}: -1
AddressGroupSpan{.addressGroup = 85868443377906068143268211391593505355, .node = "testNode-80"}: -1
AddressGroupSpan{.addressGroup = 91907598845427112955332720907118317376, .node = "testNode-81"}: -1
AddressGroupSpan{.addressGroup = 98859468060554981109754749067274905838, .node = "testNode-80"}: -1
AddressGroupSpan{.addressGroup = 109508007773179474224583727529641622336, .node = "testNode-80"}: -1
AddressGroupSpan{.addressGroup = 118903207609525733175735146840310471888, .node = "testNode-82"}: -1
AddressGroupSpan{.addressGroup = 127624264566890719673057401043538020193, .node = "testNode-81"}: -1
AddressGroupSpan{.addressGroup = 132604014033279435611134263055966877474, .node = "testNode-82"}: -1
AddressGroupSpan{.addressGroup = 138978573378644845054091984490075997837, .node = "testNode-80"}: -1
AddressGroupSpan{.addressGroup = 144050788454175294008960650237431433381, .node = "testNode-83"}: -1
AddressGroupSpan{.addressGroup = 157889562500688850322412097656692914640, .node = "testNode-81"}: -1
AddressGroupSpan{.addressGroup = 168781342752667898316093318372628028764, .node = "testNode-81"}: -1
AddressGroupSpan{.addressGroup = 181813694912045841176731456505705362199, .node = "testNode-81"}: -1
AddressGroupSpan{.addressGroup = 225059054438637433619270368457501646080, .node = "testNode-80"}: -1
AddressGroupSpan{.addressGroup = 238894097777038214975779329977801494345, .node = "testNode-82"}: -1
AddressGroupSpan{.addressGroup = 258389722408517552852421004579472822785, .node = "testNode-82"}: -1
AddressGroupSpan{.addressGroup = 279695683309546529993807933546001284693, .node = "testNode-82"}: -1
AddressGroupSpan{.addressGroup = 312707885025460706475837585634874023001, .node = "testNode-80"}: -1
AddressGroupSpan{.addressGroup = 315790997229058838869113019345776079785, .node = "testNode-82"}: -1
AddressGroupSpan{.addressGroup = 318123471655951072787084619455295767341, .node = "testNode-82"}: -1
AddressGroupSpan{.addressGroup = 318857759385911694218502711806648986450, .node = "testNode-82"}: -1
AddressGroupSpan{.addressGroup = 328487043084498615411737899864984341533, .node = "testNode-81"}: -1
AddressGroupSpan{.addressGroup = 335610148981884794842167589519986899484, .node = "testNode-80"}: -1
AddressGroupSpan{.addressGroup = 337515532524414323127756877261340155875, .node = "testNode-80"}: -1
AddressGroupSpan{.addressGroup = 339034441380380061680712980490388720947, .node = "testNode-80"}: -1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "0a2c8d68-500a-596d-a73e-b7ed9e52e03a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-830]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-830")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "14911454-5064-5a49-b39f-70881e83e0a1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-814]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-814")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "21ebe334-ac4f-5291-b727-bb9360b57c4f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-812]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-812")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "3173868f-d1c1-5833-92a4-5f3bade4bc82", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-818]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-818")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "3a602d28-1cae-5539-9e3f-635334a04779", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-817]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-817")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "3ff80763-4cc1-594c-ae0f-b9b8e609e572", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-829]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-829")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "40370223-169e-592c-a72e-282c37521a99", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-807]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-807")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "4099a91f-9177-5076-b5cb-6502c600e24b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-804]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-804")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "4524c279-f346-56a0-9d5d-985ea12e0f40", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-819]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-819")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "4a5fa417-6c34-5816-94e5-f1734c2e68ee", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-809]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-809")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "526279a2-4120-5047-aa67-d3c8f8a7bb40", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-810]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-810")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "5973ecbf-d107-5143-8ed2-5eccb4f0dcd0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-828]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-828")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "60038a0d-fd8e-54aa-8452-6ea5e5160761", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-816]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-816")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "63c29aa8-bd5e-5c89-a4bb-070769e93722", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-824]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-824")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "688e4cb3-3a95-5913-94a2-db4a010b468d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-801]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-801")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "6c5f2c36-0b4f-5385-8053-499d815ec8a5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-831]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-831")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "76c86c73-3019-59ec-aa8a-0df8b2fbb9d0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-820]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-820")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "7efa1aad-40aa-59ad-a822-3769cb32dd5c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-811]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-811")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "88c80b3f-32c3-5eba-85d5-8f37c4977317", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-815]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-815")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "a950cc16-9a35-507a-b339-860754471d00", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-808]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-808")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "b3b95463-96f1-5b8e-a29f-6dcf4747cf49", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-827]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-827")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "c2640ce5-1a94-54ad-b353-55f2bf1a5201", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-822]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-822")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "d26b6dde-c06c-5668-b1a6-3ee9090b3e55", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-821]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-821")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "eb415914-03d2-565b-891b-72973b6edc59", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-806]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-806")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "ed93223e-f4c8-5aff-9a07-eb363deef3a9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-826]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-826")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "ef545a1d-2939-587e-9d62-9b24e269c32d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-825]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-825")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "efe1c54b-4b6c-583d-9275-82362b9d2b52", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-823]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-823")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "f7204da2-9380-5baa-9894-01ea261f4c1d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-813]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-813")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "f7b414c0-2062-5caa-95d5-1312767089d5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-800]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-800")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "fc7c29de-d5d8-5784-8351-f586d60dba1c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-802]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-802")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "fdeb2088-36ba-5ffb-802c-b494193c1fe3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-805]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-805")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "ff0fa885-413c-5541-8e8e-d684c7274d33", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-803]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-803")], .matchExpressions = []}}}}: -1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 13523609103879019870981401838867374138, .node = "testNode-83", .pods = [k8spolicy.PodReference{.name = "testPod-830", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 27337855288423711436033931624396873889, .node = "testNode-81", .pods = [k8spolicy.PodReference{.name = "testPod-814", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 45089321902829704720510207515891694671, .node = "testNode-81", .pods = [k8spolicy.PodReference{.name = "testPod-812", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 65732015169622618068652496257861074050, .node = "testNode-81", .pods = [k8spolicy.PodReference{.name = "testPod-818", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 77594600140379464808131324024453089145, .node = "testNode-81", .pods = [k8spolicy.PodReference{.name = "testPod-817", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 85029203199576256853397618624104621426, .node = "testNode-82", .pods = [k8spolicy.PodReference{.name = "testPod-829", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 85356211402259028297894520611417496217, .node = "testNode-80", .pods = [k8spolicy.PodReference{.name = "testPod-807", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 85868443377906068143268211391593505355, .node = "testNode-80", .pods = [k8spolicy.PodReference{.name = "testPod-804", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 91907598845427112955332720907118317376, .node = "testNode-81", .pods = [k8spolicy.PodReference{.name = "testPod-819", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 98859468060554981109754749067274905838, .node = "testNode-80", .pods = [k8spolicy.PodReference{.name = "testPod-809", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 109508007773179474224583727529641622336, .node = "testNode-81", .pods = [k8spolicy.PodReference{.name = "testPod-810", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 118903207609525733175735146840310471888, .node = "testNode-82", .pods = [k8spolicy.PodReference{.name = "testPod-828", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 127624264566890719673057401043538020193, .node = "testNode-81", .pods = [k8spolicy.PodReference{.name = "testPod-816", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 132604014033279435611134263055966877474, .node = "testNode-82", .pods = [k8spolicy.PodReference{.name = "testPod-824", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 138978573378644845054091984490075997837, .node = "testNode-80", .pods = [k8spolicy.PodReference{.name = "testPod-801", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 144050788454175294008960650237431433381, .node = "testNode-83", .pods = [k8spolicy.PodReference{.name = "testPod-831", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 157889562500688850322412097656692914640, .node = "testNode-82", .pods = [k8spolicy.PodReference{.name = "testPod-820", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 168781342752667898316093318372628028764, .node = "testNode-81", .pods = [k8spolicy.PodReference{.name = "testPod-811", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 181813694912045841176731456505705362199, .node = "testNode-81", .pods = [k8spolicy.PodReference{.name = "testPod-815", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 225059054438637433619270368457501646080, .node = "testNode-80", .pods = [k8spolicy.PodReference{.name = "testPod-808", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 238894097777038214975779329977801494345, .node = "testNode-82", .pods = [k8spolicy.PodReference{.name = "testPod-827", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 258389722408517552852421004579472822785, .node = "testNode-82", .pods = [k8spolicy.PodReference{.name = "testPod-822", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 279695683309546529993807933546001284693, .node = "testNode-82", .pods = [k8spolicy.PodReference{.name = "testPod-821", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 312707885025460706475837585634874023001, .node = "testNode-80", .pods = [k8spolicy.PodReference{.name = "testPod-806", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 315790997229058838869113019345776079785, .node = "testNode-82", .pods = [k8spolicy.PodReference{.name = "testPod-826", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 318123471655951072787084619455295767341, .node = "testNode-82", .pods = [k8spolicy.PodReference{.name = "testPod-825", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 318857759385911694218502711806648986450, .node = "testNode-82", .pods = [k8spolicy.PodReference{.name = "testPod-823", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 328487043084498615411737899864984341533, .node = "testNode-81", .pods = [k8spolicy.PodReference{.name = "testPod-813", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 329254349263432198001601879181974604245, .node = "testNode-80", .pods = [k8spolicy.PodReference{.name = "testPod-800", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 335610148981884794842167589519986899484, .node = "testNode-80", .pods = [k8spolicy.PodReference{.name = "testPod-802", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 337515532524414323127756877261340155875, .node = "testNode-80", .pods = [k8spolicy.PodReference{.name = "testPod-805", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 339034441380380061680712980490388720947, .node = "testNode-80", .pods = [k8spolicy.PodReference{.name = "testPod-803", .namespace = "testNamespace"}]}: -1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 13523609103879019870981401838867374138, .span = "testNode-83"}: -1
AppliedToGroupSpan{.appliedToGroup = 27337855288423711436033931624396873889, .span = "testNode-81"}: -1
AppliedToGroupSpan{.appliedToGroup = 45089321902829704720510207515891694671, .span = "testNode-81"}: -1
AppliedToGroupSpan{.appliedToGroup = 65732015169622618068652496257861074050, .span = "testNode-81"}: -1
AppliedToGroupSpan{.appliedToGroup = 77594600140379464808131324024453089145, .span = "testNode-81"}: -1
AppliedToGroupSpan{.appliedToGroup = 85029203199576256853397618624104621426, .span = "testNode-82"}: -1
AppliedToGroupSpan{.appliedToGroup = 85356211402259028297894520611417496217, .span = "testNode-80"}: -1
AppliedToGroupSpan{.appliedToGroup = 85868443377906068143268211391593505355, .span = "testNode-80"}: -1
AppliedToGroupSpan{.appliedToGroup = 91907598845427112955332720907118317376, .span = "testNode-81"}: -1
AppliedToGroupSpan{.appliedToGroup = 98859468060554981109754749067274905838, .span = "testNode-80"}: -1
AppliedToGroupSpan{.appliedToGroup = 109508007773179474224583727529641622336, .span = "testNode-81"}: -1
AppliedToGroupSpan{.appliedToGroup = 118903207609525733175735146840310471888, .span = "testNode-82"}: -1
AppliedToGroupSpan{.appliedToGroup = 127624264566890719673057401043538020193, .span = "testNode-81"}: -1
AppliedToGroupSpan{.appliedToGroup = 132604014033279435611134263055966877474, .span = "testNode-82"}: -1
AppliedToGroupSpan{.appliedToGroup = 138978573378644845054091984490075997837, .span = "testNode-80"}: -1
AppliedToGroupSpan{.appliedToGroup = 144050788454175294008960650237431433381, .span = "testNode-83"}: -1
AppliedToGroupSpan{.appliedToGroup = 157889562500688850322412097656692914640, .span = "testNode-82"}: -1
AppliedToGroupSpan{.appliedToGroup = 168781342752667898316093318372628028764, .span = "testNode-81"}: -1
AppliedToGroupSpan{.appliedToGroup = 181813694912045841176731456505705362199, .span = "testNode-81"}: -1
AppliedToGroupSpan{.appliedToGroup = 225059054438637433619270368457501646080, .span = "testNode-80"}: -1
AppliedToGroupSpan{.appliedToGroup = 238894097777038214975779329977801494345, .span = "testNode-82"}: -1
AppliedToGroupSpan{.appliedToGroup = 258389722408517552852421004579472822785, .span = "testNode-82"}: -1
AppliedToGroupSpan{.appliedToGroup = 279695683309546529993807933546001284693, .span = "testNode-82"}: -1
AppliedToGroupSpan{.appliedToGroup = 312707885025460706475837585634874023001, .span = "testNode-80"}: -1
AppliedToGroupSpan{.appliedToGroup = 315790997229058838869113019345776079785, .span = "testNode-82"}: -1
AppliedToGroupSpan{.appliedToGroup = 318123471655951072787084619455295767341, .span = "testNode-82"}: -1
AppliedToGroupSpan{.appliedToGroup = 318857759385911694218502711806648986450, .span = "testNode-82"}: -1
AppliedToGroupSpan{.appliedToGroup = 328487043084498615411737899864984341533, .span = "testNode-81"}: -1
AppliedToGroupSpan{.appliedToGroup = 329254349263432198001601879181974604245, .span = "testNode-80"}: -1
AppliedToGroupSpan{.appliedToGroup = 335610148981884794842167589519986899484, .span = "testNode-80"}: -1
AppliedToGroupSpan{.appliedToGroup = 337515532524414323127756877261340155875, .span = "testNode-80"}: -1
AppliedToGroupSpan{.appliedToGroup = 339034441380380061680712980490388720947, .span = "testNode-80"}: -1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-800"}, .name = "testNP-800", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [138978573378644845054091984490075997837], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [329254349263432198001601879181974604245]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-801"}, .name = "testNP-801", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [335610148981884794842167589519986899484], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [138978573378644845054091984490075997837]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-802"}, .name = "testNP-802", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [339034441380380061680712980490388720947], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [335610148981884794842167589519986899484]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-803"}, .name = "testNP-803", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [85868443377906068143268211391593505355], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [339034441380380061680712980490388720947]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-804"}, .name = "testNP-804", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [337515532524414323127756877261340155875], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [85868443377906068143268211391593505355]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-805"}, .name = "testNP-805", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [312707885025460706475837585634874023001], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [337515532524414323127756877261340155875]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-806"}, .name = "testNP-806", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [85356211402259028297894520611417496217], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [312707885025460706475837585634874023001]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-807"}, .name = "testNP-807", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [225059054438637433619270368457501646080], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [85356211402259028297894520611417496217]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-808"}, .name = "testNP-808", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [98859468060554981109754749067274905838], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [225059054438637433619270368457501646080]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-809"}, .name = "testNP-809", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [109508007773179474224583727529641622336], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [98859468060554981109754749067274905838]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-810"}, .name = "testNP-810", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [168781342752667898316093318372628028764], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [109508007773179474224583727529641622336]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-811"}, .name = "testNP-811", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [45089321902829704720510207515891694671], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [168781342752667898316093318372628028764]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-812"}, .name = "testNP-812", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [328487043084498615411737899864984341533], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [45089321902829704720510207515891694671]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-813"}, .name = "testNP-813", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [27337855288423711436033931624396873889], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [328487043084498615411737899864984341533]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-814"}, .name = "testNP-814", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [181813694912045841176731456505705362199], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [27337855288423711436033931624396873889]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-815"}, .name = "testNP-815", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [127624264566890719673057401043538020193], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [181813694912045841176731456505705362199]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-816"}, .name = "testNP-816", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [77594600140379464808131324024453089145], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [127624264566890719673057401043538020193]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-817"}, .name = "testNP-817", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [65732015169622618068652496257861074050], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [77594600140379464808131324024453089145]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-818"}, .name = "testNP-818", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [91907598845427112955332720907118317376], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [65732015169622618068652496257861074050]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-819"}, .name = "testNP-819", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [157889562500688850322412097656692914640], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [91907598845427112955332720907118317376]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-820"}, .name = "testNP-820", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [279695683309546529993807933546001284693], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [157889562500688850322412097656692914640]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-821"}, .name = "testNP-821", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [258389722408517552852421004579472822785], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [279695683309546529993807933546001284693]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-822"}, .name = "testNP-822", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [318857759385911694218502711806648986450], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [258389722408517552852421004579472822785]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-823"}, .name = "testNP-823", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [132604014033279435611134263055966877474], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [318857759385911694218502711806648986450]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-824"}, .name = "testNP-824", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [318123471655951072787084619455295767341], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [132604014033279435611134263055966877474]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-825"}, .name = "testNP-825", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [315790997229058838869113019345776079785], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [318123471655951072787084619455295767341]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-826"}, .name = "testNP-826", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [238894097777038214975779329977801494345], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [315790997229058838869113019345776079785]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-827"}, .name = "testNP-827", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [118903207609525733175735146840310471888], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [238894097777038214975779329977801494345]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-828"}, .name = "testNP-828", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [85029203199576256853397618624104621426], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [118903207609525733175735146840310471888]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-829"}, .name = "testNP-829", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [13523609103879019870981401838867374138], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [85029203199576256853397618624104621426]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-830"}, .name = "testNP-830", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [144050788454175294008960650237431433381], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [13523609103879019870981401838867374138]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-831"}, .name = "testNP-831", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [60563602358679317412195370747938442453], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [144050788454175294008960650237431433381]}: -1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-800", .policy = k8spolicy.UID{.uid = "testNP-800"}, .node = "testNode-80"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-801", .policy = k8spolicy.UID{.uid = "testNP-801"}, .node = "testNode-80"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-802", .policy = k8spolicy.UID{.uid = "testNP-802"}, .node = "testNode-80"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-803", .policy = k8spolicy.UID{.uid = "testNP-803"}, .node = "testNode-80"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-804", .policy = k8spolicy.UID{.uid = "testNP-804"}, .node = "testNode-80"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-805", .policy = k8spolicy.UID{.uid = "testNP-805"}, .node = "testNode-80"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-806", .policy = k8spolicy.UID{.uid = "testNP-806"}, .node = "testNode-80"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-807", .policy = k8spolicy.UID{.uid = "testNP-807"}, .node = "testNode-80"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-808", .policy = k8spolicy.UID{.uid = "testNP-808"}, .node = "testNode-80"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-809", .policy = k8spolicy.UID{.uid = "testNP-809"}, .node = "testNode-80"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-810", .policy = k8spolicy.UID{.uid = "testNP-810"}, .node = "testNode-81"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-811", .policy = k8spolicy.UID{.uid = "testNP-811"}, .node = "testNode-81"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-812", .policy = k8spolicy.UID{.uid = "testNP-812"}, .node = "testNode-81"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-813", .policy = k8spolicy.UID{.uid = "testNP-813"}, .node = "testNode-81"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-814", .policy = k8spolicy.UID{.uid = "testNP-814"}, .node = "testNode-81"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-815", .policy = k8spolicy.UID{.uid = "testNP-815"}, .node = "testNode-81"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-816", .policy = k8spolicy.UID{.uid = "testNP-816"}, .node = "testNode-81"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-817", .policy = k8spolicy.UID{.uid = "testNP-817"}, .node = "testNode-81"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-818", .policy = k8spolicy.UID{.uid = "testNP-818"}, .node = "testNode-81"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-819", .policy = k8spolicy.UID{.uid = "testNP-819"}, .node = "testNode-81"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-820", .policy = k8spolicy.UID{.uid = "testNP-820"}, .node = "testNode-82"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-821", .policy = k8spolicy.UID{.uid = "testNP-821"}, .node = "testNode-82"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-822", .policy = k8spolicy.UID{.uid = "testNP-822"}, .node = "testNode-82"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-823", .policy = k8spolicy.UID{.uid = "testNP-823"}, .node = "testNode-82"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-824", .policy = k8spolicy.UID{.uid = "testNP-824"}, .node = "testNode-82"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-825", .policy = k8spolicy.UID{.uid = "testNP-825"}, .node = "testNode-82"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-826", .policy = k8spolicy.UID{.uid = "testNP-826"}, .node = "testNode-82"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-827", .policy = k8spolicy.UID{.uid = "testNP-827"}, .node = "testNode-82"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-828", .policy = k8spolicy.UID{.uid = "testNP-828"}, .node = "testNode-82"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-829", .policy = k8spolicy.UID{.uid = "testNP-829"}, .node = "testNode-82"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-830", .policy = k8spolicy.UID{.uid = "testNP-830"}, .node = "testNode-83"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-831", .policy = k8spolicy.UID{.uid = "testNP-831"}, .node = "testNode-83"}: -1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 2713159282763606650517124854951319954, .address = "10.10.84.6"}: -1
AddressGroupAddress{.addressGroup = 24654491811094039145637837114633917438, .address = "10.10.86.3"}: -1
AddressGroupAddress{.addressGroup = 49414767864989056696330758217040547623, .address = "10.10.85.1"}: -1
AddressGroupAddress{.addressGroup = 66000272526890874128630433190041902097, .address = "10.10.83.9"}: -1
AddressGroupAddress{.addressGroup = 67551325268732931603077496109245322511, .address = "10.10.85.4"}: -1
AddressGroupAddress{.addressGroup = 70402807548485740829916524100822744633, .address = "10.10.84.2"}: -1
AddressGroupAddress{.addressGroup = 71919851324261580910536288897826873292, .address = "10.10.83.4"}: -1
AddressGroupAddress{.addressGroup = 76582947764619356901301564399490453901, .address = "10.10.83.6"}: -1
AddressGroupAddress{.addressGroup = 92058654662750202407294423515939843876, .address = "10.10.84.9"}: -1
AddressGroupAddress{.addressGroup = 101768832328018037960013359629468686240, .address = "10.10.83.7"}: -1
AddressGroupAddress{.addressGroup = 105507218235411123027196046403096447794, .address = "10.10.86.1"}: -1
AddressGroupAddress{.addressGroup = 130702299683556091475555948185812082115, .address = "10.10.84.1"}: -1
AddressGroupAddress{.addressGroup = 141167459551208410605755712454092478208, .address = "10.10.85.8"}: -1
AddressGroupAddress{.addressGroup = 149038293266741873835226374669992491993, .address = "10.10.85.9"}: -1
AddressGroupAddress{.addressGroup = 156016938807302056542718758058394293854, .address = "10.10.84.4"}: -1
AddressGroupAddress{.addressGroup = 174337311770431065818540334253174652329, .address = "10.10.86.2"}: -1
AddressGroupAddress{.addressGroup = 194284355853476782968390466936649000606, .address = "10.10.84.8"}: -1
AddressGroupAddress{.addressGroup = 222739039549301570413046149404625254524, .address = "10.10.83.8"}: -1
AddressGroupAddress{.addressGroup = 224567882541595529698021674966086580519, .address = "10.10.85.3"}: -1
AddressGroupAddress{.addressGroup = 230848528136259924608226078240857790549, .address = "10.10.84.0"}: -1
AddressGroupAddress{.addressGroup = 243057228148605278302969988701438359251, .address = "10.10.83.3"}: -1
AddressGroupAddress{.addressGroup = 250005452172433703017876321230462434284, .address = "10.10.86.4"}: -1
AddressGroupAddress{.addressGroup = 264297056808482994090982411859970420720, .address = "10.10.84.7"}: -1
AddressGroupAddress{.addressGroup = 279931071969290431539675616095058883915, .address = "10.10.86.0"}: -1
AddressGroupAddress{.addressGroup = 297381104993311173671675011378572438349, .address = "10.10.85.6"}: -1
AddressGroupAddress{.addressGroup = 308508111671596871040461076360475629585, .address = "10.10.85.0"}: -1
AddressGroupAddress{.addressGroup = 320823933964711750880781449352391888321, .address = "10.10.85.7"}: -1
AddressGroupAddress{.addressGroup = 322702428777948668945149839222736731021, .address = "10.10.85.2"}: -1
AddressGroupAddress{.addressGroup = 326746700705767242038800951836341543017, .address = "10.10.84.5"}: -1
AddressGroupAddress{.addressGroup = 334574112962914320306382384123610304098, .address = "10.10.84.3"}: -1
AddressGroupAddress{.addressGroup = 334781764854096689956869101842548929627, .address = "10.10.83.5"}: -1
AddressGroupAddress{.addressGroup = 338869634089142606286186861343038919430, .address = "10.10.85.5"}: -1
AddressGroupDescr:
AddressGroupDescr{.name = "020a8914-9ade-5557-bfee-0dab018e1992", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-846]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-846")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "128c484b-a554-5f39-85a2-4fe9825493fe", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-863]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-863")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "252cf028-25ef-50c2-83c3-cf38191e4f27", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-851]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-851")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "31a730ab-afb4-5b62-bcbe-194d95505c11", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-839]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-839")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "32d1e979-9b1f-52bb-a6d4-77656376d50f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-854]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-854")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "34f71667-e281-5b11-8267-4ba34bf3be39", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-842]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-842")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "361b4270-4de5-5f83-85ab-7a3630ecdfcc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-834]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-834")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "399d56d7-f82e-5c72-bc64-900e60fc518d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-836]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-836")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "4541da1a-6935-598a-8c37-2a82a159af24", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-849]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-849")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "4c8ff6d3-18d8-537b-859d-852e96efd7a0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-837]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-837")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "4f5ff37a-f3dd-582a-9b41-1f71c97a8b32", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-861]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-861")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "625458e7-15dd-52ae-a5f6-67590e461dc3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-841]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-841")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "6a33dd1e-de7b-5491-a7c7-007326195700", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-858]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-858")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "701fbb2f-0621-52bf-aba1-92529ed87bd9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-859]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-859")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "755fc4f9-3cc8-59a0-beae-b94c3cc2965e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-844]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-844")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "83282519-3b79-54a8-b605-484ff79b7da9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-862]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-862")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "9229ce4d-42fd-554f-8d64-ab32525fa69e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-848]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-848")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "a791fa85-dee8-5490-a10f-917be6dcb87c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-838]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-838")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "a8f23371-af6d-5c11-af4c-0c35b863f927", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-853]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-853")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "adabcf2d-fdfc-541e-8d5a-f33c8fc61855", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-840]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-840")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "b6db1e90-48fc-5096-85cd-eb3b881836d3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-833]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-833")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "bc154c74-f996-5fb8-afdc-9b14cadcbbec", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-864]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-864")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "c6d5c2f7-b2f3-510f-b50c-79d25512eff0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-847]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-847")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "d298c36d-54b7-558f-958c-7925cf71754b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-860]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-860")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "dfb9847a-e3ef-5fa3-8ca4-7e6b6f642b4d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-856]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-856")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "e8188043-dc49-5dd1-b705-43550e7ad811", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-850]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-850")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "f15c712f-6c6a-5de2-b8ef-0c825ac70dc1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-857]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-857")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "f2c63a21-531d-5dae-934f-c77bda48bb8d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-852]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-852")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "f5d12021-8c35-58ec-be62-7ae62a6da069", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-845]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-845")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "fbb4a159-d8d9-5833-af37-657a9f128e62", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-843]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-843")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "fbdc9f61-304b-5f28-89a1-93b9fcd4345b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-835]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-835")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "feefeae4-caa5-5456-b306-d7b13c8e5306", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-855]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-855")], .matchExpressions = []}}}}: -1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 2713159282763606650517124854951319954, .node = "testNode-84"}: -1
AddressGroupSpan{.addressGroup = 24654491811094039145637837114633917438, .node = "testNode-86"}: -1
AddressGroupSpan{.addressGroup = 49414767864989056696330758217040547623, .node = "testNode-85"}: -1
AddressGroupSpan{.addressGroup = 66000272526890874128630433190041902097, .node = "testNode-83"}: -1
AddressGroupSpan{.addressGroup = 67551325268732931603077496109245322511, .node = "testNode-85"}: -1
AddressGroupSpan{.addressGroup = 70402807548485740829916524100822744633, .node = "testNode-84"}: -1
AddressGroupSpan{.addressGroup = 71919851324261580910536288897826873292, .node = "testNode-83"}: -1
AddressGroupSpan{.addressGroup = 76582947764619356901301564399490453901, .node = "testNode-83"}: -1
AddressGroupSpan{.addressGroup = 92058654662750202407294423515939843876, .node = "testNode-84"}: -1
AddressGroupSpan{.addressGroup = 101768832328018037960013359629468686240, .node = "testNode-83"}: -1
AddressGroupSpan{.addressGroup = 105507218235411123027196046403096447794, .node = "testNode-86"}: -1
AddressGroupSpan{.addressGroup = 130702299683556091475555948185812082115, .node = "testNode-84"}: -1
AddressGroupSpan{.addressGroup = 141167459551208410605755712454092478208, .node = "testNode-85"}: -1
AddressGroupSpan{.addressGroup = 149038293266741873835226374669992491993, .node = "testNode-85"}: -1
AddressGroupSpan{.addressGroup = 156016938807302056542718758058394293854, .node = "testNode-84"}: -1
AddressGroupSpan{.addressGroup = 174337311770431065818540334253174652329, .node = "testNode-86"}: -1
AddressGroupSpan{.addressGroup = 194284355853476782968390466936649000606, .node = "testNode-84"}: -1
AddressGroupSpan{.addressGroup = 222739039549301570413046149404625254524, .node = "testNode-83"}: -1
AddressGroupSpan{.addressGroup = 224567882541595529698021674966086580519, .node = "testNode-85"}: -1
AddressGroupSpan{.addressGroup = 230848528136259924608226078240857790549, .node = "testNode-83"}: -1
AddressGroupSpan{.addressGroup = 243057228148605278302969988701438359251, .node = "testNode-83"}: -1
AddressGroupSpan{.addressGroup = 250005452172433703017876321230462434284, .node = "testNode-86"}: -1
AddressGroupSpan{.addressGroup = 264297056808482994090982411859970420720, .node = "testNode-84"}: -1
AddressGroupSpan{.addressGroup = 279931071969290431539675616095058883915, .node = "testNode-85"}: -1
AddressGroupSpan{.addressGroup = 297381104993311173671675011378572438349, .node = "testNode-85"}: -1
AddressGroupSpan{.addressGroup = 308508111671596871040461076360475629585, .node = "testNode-84"}: -1
AddressGroupSpan{.addressGroup = 320823933964711750880781449352391888321, .node = "testNode-85"}: -1
AddressGroupSpan{.addressGroup = 322702428777948668945149839222736731021, .node = "testNode-85"}: -1
AddressGroupSpan{.addressGroup = 326746700705767242038800951836341543017, .node = "testNode-84"}: -1
AddressGroupSpan{.addressGroup = 334574112962914320306382384123610304098, .node = "testNode-84"}: -1
AddressGroupSpan{.addressGroup = 334781764854096689956869101842548929627, .node = "testNode-83"}: -1
AddressGroupSpan{.addressGroup = 338869634089142606286186861343038919430, .node = "testNode-85"}: -1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "020a8914-9ade-5557-bfee-0dab018e1992", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-846]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-846")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "128c484b-a554-5f39-85a2-4fe9825493fe", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-863]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-863")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "252cf028-25ef-50c2-83c3-cf38191e4f27", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-851]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-851")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "2d902022-e1be-5977-b819-26da066f8cd5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-832]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-832")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "31a730ab-afb4-5b62-bcbe-194d95505c11", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-839]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-839")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "32d1e979-9b1f-52bb-a6d4-77656376d50f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-854]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-854")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "34f71667-e281-5b11-8267-4ba34bf3be39", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-842]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-842")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "361b4270-4de5-5f83-85ab-7a3630ecdfcc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-834]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-834")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "399d56d7-f82e-5c72-bc64-900e60fc518d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-836]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-836")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "4541da1a-6935-598a-8c37-2a82a159af24", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-849]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-849")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "4c8ff6d3-18d8-537b-859d-852e96efd7a0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-837]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-837")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "4f5ff37a-f3dd-582a-9b41-1f71c97a8b32", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-861]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-861")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "625458e7-15dd-52ae-a5f6-67590e461dc3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-841]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-841")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "6a33dd1e-de7b-5491-a7c7-007326195700", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-858]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-858")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "701fbb2f-0621-52bf-aba1-92529ed87bd9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-859]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-859")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "755fc4f9-3cc8-59a0-beae-b94c3cc2965e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-844]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-844")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "83282519-3b79-54a8-b605-484ff79b7da9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-862]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-862")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "9229ce4d-42fd-554f-8d64-ab32525fa69e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-848]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-848")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "a791fa85-dee8-5490-a10f-917be6dcb87c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-838]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-838")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "a8f23371-af6d-5c11-af4c-0c35b863f927", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-853]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-853")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "adabcf2d-fdfc-541e-8d5a-f33c8fc61855", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-840]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-840")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "b6db1e90-48fc-5096-85cd-eb3b881836d3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-833]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-833")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "c6d5c2f7-b2f3-510f-b50c-79d25512eff0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-847]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-847")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "d298c36d-54b7-558f-958c-7925cf71754b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-860]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-860")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "dfb9847a-e3ef-5fa3-8ca4-7e6b6f642b4d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-856]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-856")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "e8188043-dc49-5dd1-b705-43550e7ad811", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-850]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-850")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "f15c712f-6c6a-5de2-b8ef-0c825ac70dc1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-857]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-857")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "f2c63a21-531d-5dae-934f-c77bda48bb8d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-852]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-852")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "f5d12021-8c35-58ec-be62-7ae62a6da069", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-845]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-845")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "fbb4a159-d8d9-5833-af37-657a9f128e62", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-843]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-843")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "fbdc9f61-304b-5f28-89a1-93b9fcd4345b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-835]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-835")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "feefeae4-caa5-5456-b306-d7b13c8e5306", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-855]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-855")], .matchExpressions = []}}}}: -1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 2713159282763606650517124854951319954, .node = "testNode-84", .pods = [k8spolicy.PodReference{.name = "testPod-846", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 24654491811094039145637837114633917438, .node = "testNode-86", .pods = [k8spolicy.PodReference{.name = "testPod-863", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 49414767864989056696330758217040547623, .node = "testNode-85", .pods = [k8spolicy.PodReference{.name = "testPod-851", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 60563602358679317412195370747938442453, .node = "testNode-83", .pods = [k8spolicy.PodReference{.name = "testPod-832", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 66000272526890874128630433190041902097, .node = "testNode-83", .pods = [k8spolicy.PodReference{.name = "testPod-839", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 67551325268732931603077496109245322511, .node = "testNode-85", .pods = [k8spolicy.PodReference{.name = "testPod-854", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 70402807548485740829916524100822744633, .node = "testNode-84", .pods = [k8spolicy.PodReference{.name = "testPod-842", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 71919851324261580910536288897826873292, .node = "testNode-83", .pods = [k8spolicy.PodReference{.name = "testPod-834", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 76582947764619356901301564399490453901, .node = "testNode-83", .pods = [k8spolicy.PodReference{.name = "testPod-836", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 92058654662750202407294423515939843876, .node = "testNode-84", .pods = [k8spolicy.PodReference{.name = "testPod-849", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 101768832328018037960013359629468686240, .node = "testNode-83", .pods = [k8spolicy.PodReference{.name = "testPod-837", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 105507218235411123027196046403096447794, .node = "testNode-86", .pods = [k8spolicy.PodReference{.name = "testPod-861", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 130702299683556091475555948185812082115, .node = "testNode-84", .pods = [k8spolicy.PodReference{.name = "testPod-841", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 141167459551208410605755712454092478208, .node = "testNode-85", .pods = [k8spolicy.PodReference{.name = "testPod-858", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 149038293266741873835226374669992491993, .node = "testNode-85", .pods = [k8spolicy.PodReference{.name = "testPod-859", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 156016938807302056542718758058394293854, .node = "testNode-84", .pods = [k8spolicy.PodReference{.name = "testPod-844", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 174337311770431065818540334253174652329, .node = "testNode-86", .pods = [k8spolicy.PodReference{.name = "testPod-862", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 194284355853476782968390466936649000606, .node = "testNode-84", .pods = [k8spolicy.PodReference{.name = "testPod-848", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 222739039549301570413046149404625254524, .node = "testNode-83", .pods = [k8spolicy.PodReference{.name = "testPod-838", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 224567882541595529698021674966086580519, .node = "testNode-85", .pods = [k8spolicy.PodReference{.name = "testPod-853", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 230848528136259924608226078240857790549, .node = "testNode-84", .pods = [k8spolicy.PodReference{.name = "testPod-840", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 243057228148605278302969988701438359251, .node = "testNode-83", .pods = [k8spolicy.PodReference{.name = "testPod-833", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 264297056808482994090982411859970420720, .node = "testNode-84", .pods = [k8spolicy.PodReference{.name = "testPod-847", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 279931071969290431539675616095058883915, .node = "testNode-86", .pods = [k8spolicy.PodReference{.name = "testPod-860", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 297381104993311173671675011378572438349, .node = "testNode-85", .pods = [k8spolicy.PodReference{.name = "testPod-856", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 308508111671596871040461076360475629585, .node = "testNode-85", .pods = [k8spolicy.PodReference{.name = "testPod-850", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 320823933964711750880781449352391888321, .node = "testNode-85", .pods = [k8spolicy.PodReference{.name = "testPod-857", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 322702428777948668945149839222736731021, .node = "testNode-85", .pods = [k8spolicy.PodReference{.name = "testPod-852", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 326746700705767242038800951836341543017, .node = "testNode-84", .pods = [k8spolicy.PodReference{.name = "testPod-845", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 334574112962914320306382384123610304098, .node = "testNode-84", .pods = [k8spolicy.PodReference{.name = "testPod-843", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 334781764854096689956869101842548929627, .node = "testNode-83", .pods = [k8spolicy.PodReference{.name = "testPod-835", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 338869634089142606286186861343038919430, .node = "testNode-85", .pods = [k8spolicy.PodReference{.name = "testPod-855", .namespace = "testNamespace"}]}: -1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 2713159282763606650517124854951319954, .span = "testNode-84"}: -1
AppliedToGroupSpan{.appliedToGroup = 24654491811094039145637837114633917438, .span = "testNode-86"}: -1
AppliedToGroupSpan{.appliedToGroup = 49414767864989056696330758217040547623, .span = "testNode-85"}: -1
AppliedToGroupSpan{.appliedToGroup = 60563602358679317412195370747938442453, .span = "testNode-83"}: -1
AppliedToGroupSpan{.appliedToGroup = 66000272526890874128630433190041902097, .span = "testNode-83"}: -1
AppliedToGroupSpan{.appliedToGroup = 67551325268732931603077496109245322511, .span = "testNode-85"}: -1
AppliedToGroupSpan{.appliedToGroup = 70402807548485740829916524100822744633, .span = "testNode-84"}: -1
AppliedToGroupSpan{.appliedToGroup = 71919851324261580910536288897826873292, .span = "testNode-83"}: -1
AppliedToGroupSpan{.appliedToGroup = 76582947764619356901301564399490453901, .span = "testNode-83"}: -1
AppliedToGroupSpan{.appliedToGroup = 92058654662750202407294423515939843876, .span = "testNode-84"}: -1
AppliedToGroupSpan{.appliedToGroup = 101768832328018037960013359629468686240, .span = "testNode-83"}: -1
AppliedToGroupSpan{.appliedToGroup = 105507218235411123027196046403096447794, .span = "testNode-86"}: -1
AppliedToGroupSpan{.appliedToGroup = 130702299683556091475555948185812082115, .span = "testNode-84"}: -1
AppliedToGroupSpan{.appliedToGroup = 141167459551208410605755712454092478208, .span = "testNode-85"}: -1
AppliedToGroupSpan{.appliedToGroup = 149038293266741873835226374669992491993, .span = "testNode-85"}: -1
AppliedToGroupSpan{.appliedToGroup = 156016938807302056542718758058394293854, .span = "testNode-84"}: -1
AppliedToGroupSpan{.appliedToGroup = 174337311770431065818540334253174652329, .span = "testNode-86"}: -1
AppliedToGroupSpan{.appliedToGroup = 194284355853476782968390466936649000606, .span = "testNode-84"}: -1
AppliedToGroupSpan{.appliedToGroup = 222739039549301570413046149404625254524, .span = "testNode-83"}: -1
AppliedToGroupSpan{.appliedToGroup = 224567882541595529698021674966086580519, .span = "testNode-85"}: -1
AppliedToGroupSpan{.appliedToGroup = 230848528136259924608226078240857790549, .span = "testNode-84"}: -1
AppliedToGroupSpan{.appliedToGroup = 243057228148605278302969988701438359251, .span = "testNode-83"}: -1
AppliedToGroupSpan{.appliedToGroup = 264297056808482994090982411859970420720, .span = "testNode-84"}: -1
AppliedToGroupSpan{.appliedToGroup = 279931071969290431539675616095058883915, .span = "testNode-86"}: -1
AppliedToGroupSpan{.appliedToGroup = 297381104993311173671675011378572438349, .span = "testNode-85"}: -1
AppliedToGroupSpan{.appliedToGroup = 308508111671596871040461076360475629585, .span = "testNode-85"}: -1
AppliedToGroupSpan{.appliedToGroup = 320823933964711750880781449352391888321, .span = "testNode-85"}: -1
AppliedToGroupSpan{.appliedToGroup = 322702428777948668945149839222736731021, .span = "testNode-85"}: -1
AppliedToGroupSpan{.appliedToGroup = 326746700705767242038800951836341543017, .span = "testNode-84"}: -1
AppliedToGroupSpan{.appliedToGroup = 334574112962914320306382384123610304098, .span = "testNode-84"}: -1
AppliedToGroupSpan{.appliedToGroup = 334781764854096689956869101842548929627, .span = "testNode-83"}: -1
AppliedToGroupSpan{.appliedToGroup = 338869634089142606286186861343038919430, .span = "testNode-85"}: -1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-832"}, .name = "testNP-832", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [243057228148605278302969988701438359251], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [60563602358679317412195370747938442453]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-833"}, .name = "testNP-833", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [71919851324261580910536288897826873292], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [243057228148605278302969988701438359251]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-834"}, .name = "testNP-834", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [334781764854096689956869101842548929627], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [71919851324261580910536288897826873292]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-835"}, .name = "testNP-835", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [76582947764619356901301564399490453901], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [334781764854096689956869101842548929627]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-836"}, .name = "testNP-836", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [101768832328018037960013359629468686240], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [76582947764619356901301564399490453901]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-837"}, .name = "testNP-837", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [222739039549301570413046149404625254524], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [101768832328018037960013359629468686240]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-838"}, .name = "testNP-838", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [66000272526890874128630433190041902097], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [222739039549301570413046149404625254524]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-839"}, .name = "testNP-839", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [230848528136259924608226078240857790549], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [66000272526890874128630433190041902097]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-840"}, .name = "testNP-840", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [130702299683556091475555948185812082115], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [230848528136259924608226078240857790549]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-841"}, .name = "testNP-841", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [70402807548485740829916524100822744633], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [130702299683556091475555948185812082115]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-842"}, .name = "testNP-842", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [334574112962914320306382384123610304098], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [70402807548485740829916524100822744633]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-843"}, .name = "testNP-843", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [156016938807302056542718758058394293854], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [334574112962914320306382384123610304098]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-844"}, .name = "testNP-844", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [326746700705767242038800951836341543017], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [156016938807302056542718758058394293854]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-845"}, .name = "testNP-845", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [2713159282763606650517124854951319954], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [326746700705767242038800951836341543017]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-846"}, .name = "testNP-846", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [264297056808482994090982411859970420720], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [2713159282763606650517124854951319954]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-847"}, .name = "testNP-847", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [194284355853476782968390466936649000606], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [264297056808482994090982411859970420720]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-848"}, .name = "testNP-848", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [92058654662750202407294423515939843876], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [194284355853476782968390466936649000606]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-849"}, .name = "testNP-849", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [308508111671596871040461076360475629585], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [92058654662750202407294423515939843876]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-850"}, .name = "testNP-850", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [49414767864989056696330758217040547623], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [308508111671596871040461076360475629585]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-851"}, .name = "testNP-851", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [322702428777948668945149839222736731021], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [49414767864989056696330758217040547623]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-852"}, .name = "testNP-852", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [224567882541595529698021674966086580519], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [322702428777948668945149839222736731021]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-853"}, .name = "testNP-853", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [67551325268732931603077496109245322511], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [224567882541595529698021674966086580519]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-854"}, .name = "testNP-854", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [338869634089142606286186861343038919430], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [67551325268732931603077496109245322511]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-855"}, .name = "testNP-855", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [297381104993311173671675011378572438349], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [338869634089142606286186861343038919430]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-856"}, .name = "testNP-856", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [320823933964711750880781449352391888321], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [297381104993311173671675011378572438349]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-857"}, .name = "testNP-857", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [141167459551208410605755712454092478208], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [320823933964711750880781449352391888321]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-858"}, .name = "testNP-858", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [149038293266741873835226374669992491993], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [141167459551208410605755712454092478208]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-859"}, .name = "testNP-859", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [279931071969290431539675616095058883915], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [149038293266741873835226374669992491993]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-860"}, .name = "testNP-860", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [105507218235411123027196046403096447794], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [279931071969290431539675616095058883915]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-861"}, .name = "testNP-861", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [174337311770431065818540334253174652329], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [105507218235411123027196046403096447794]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-862"}, .name = "testNP-862", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [24654491811094039145637837114633917438], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [174337311770431065818540334253174652329]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-863"}, .name = "testNP-863", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [250005452172433703017876321230462434284], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [24654491811094039145637837114633917438]}: -1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-832", .policy = k8spolicy.UID{.uid = "testNP-832"}, .node = "testNode-83"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-833", .policy = k8spolicy.UID{.uid = "testNP-833"}, .node = "testNode-83"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-834", .policy = k8spolicy.UID{.uid = "testNP-834"}, .node = "testNode-83"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-835", .policy = k8spolicy.UID{.uid = "testNP-835"}, .node = "testNode-83"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-836", .policy = k8spolicy.UID{.uid = "testNP-836"}, .node = "testNode-83"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-837", .policy = k8spolicy.UID{.uid = "testNP-837"}, .node = "testNode-83"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-838", .policy = k8spolicy.UID{.uid = "testNP-838"}, .node = "testNode-83"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-839", .policy = k8spolicy.UID{.uid = "testNP-839"}, .node = "testNode-83"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-840", .policy = k8spolicy.UID{.uid = "testNP-840"}, .node = "testNode-84"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-841", .policy = k8spolicy.UID{.uid = "testNP-841"}, .node = "testNode-84"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-842", .policy = k8spolicy.UID{.uid = "testNP-842"}, .node = "testNode-84"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-843", .policy = k8spolicy.UID{.uid = "testNP-843"}, .node = "testNode-84"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-844", .policy = k8spolicy.UID{.uid = "testNP-844"}, .node = "testNode-84"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-845", .policy = k8spolicy.UID{.uid = "testNP-845"}, .node = "testNode-84"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-846", .policy = k8spolicy.UID{.uid = "testNP-846"}, .node = "testNode-84"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-847", .policy = k8spolicy.UID{.uid = "testNP-847"}, .node = "testNode-84"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-848", .policy = k8spolicy.UID{.uid = "testNP-848"}, .node = "testNode-84"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-849", .policy = k8spolicy.UID{.uid = "testNP-849"}, .node = "testNode-84"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-850", .policy = k8spolicy.UID{.uid = "testNP-850"}, .node = "testNode-85"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-851", .policy = k8spolicy.UID{.uid = "testNP-851"}, .node = "testNode-85"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-852", .policy = k8spolicy.UID{.uid = "testNP-852"}, .node = "testNode-85"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-853", .policy = k8spolicy.UID{.uid = "testNP-853"}, .node = "testNode-85"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-854", .policy = k8spolicy.UID{.uid = "testNP-854"}, .node = "testNode-85"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-855", .policy = k8spolicy.UID{.uid = "testNP-855"}, .node = "testNode-85"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-856", .policy = k8spolicy.UID{.uid = "testNP-856"}, .node = "testNode-85"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-857", .policy = k8spolicy.UID{.uid = "testNP-857"}, .node = "testNode-85"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-858", .policy = k8spolicy.UID{.uid = "testNP-858"}, .node = "testNode-85"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-859", .policy = k8spolicy.UID{.uid = "testNP-859"}, .node = "testNode-85"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-860", .policy = k8spolicy.UID{.uid = "testNP-860"}, .node = "testNode-86"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-861", .policy = k8spolicy.UID{.uid = "testNP-861"}, .node = "testNode-86"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-862", .policy = k8spolicy.UID{.uid = "testNP-862"}, .node = "testNode-86"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-863", .policy = k8spolicy.UID{.uid = "testNP-863"}, .node = "testNode-86"}: -1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 6432921876256178299210019311383090573, .address = "10.10.87.3"}: -1
AddressGroupAddress{.addressGroup = 16929035995177688401794158411132237692, .address = "10.10.87.0"}: -1
AddressGroupAddress{.addressGroup = 42038013867875964634800215627609291329, .address = "10.10.89.4"}: -1
AddressGroupAddress{.addressGroup = 43450182955182932974363649988473048728, .address = "10.10.88.3"}: -1
AddressGroupAddress{.addressGroup = 59674089791192946664335360075983842149, .address = "10.10.88.5"}: -1
AddressGroupAddress{.addressGroup = 74007806333053904974253386838709365818, .address = "10.10.88.6"}: -1
AddressGroupAddress{.addressGroup = 85427075421247658790013879771019567608, .address = "10.10.86.7"}: -1
AddressGroupAddress{.addressGroup = 91114571321615387922736567229588436793, .address = "10.10.89.3"}: -1
AddressGroupAddress{.addressGroup = 97947033480539230297615040734346064907, .address = "10.10.86.9"}: -1
AddressGroupAddress{.addressGroup = 130540553026550883058842456145035904529, .address = "10.10.86.5"}: -1
AddressGroupAddress{.addressGroup = 133751857575759824193236955337736130575, .address = "10.10.88.4"}: -1
AddressGroupAddress{.addressGroup = 135041047265651975128061812275763005174, .address = "10.10.89.5"}: -1
AddressGroupAddress{.addressGroup = 171602404623857936305214241115086315096, .address = "10.10.87.7"}: -1
AddressGroupAddress{.addressGroup = 183808204776024540619532429708245524084, .address = "10.10.86.8"}: -1
AddressGroupAddress{.addressGroup = 196723119965086899323601465812552178971, .address = "10.10.88.8"}: -1
AddressGroupAddress{.addressGroup = 209986870057488514216194983226418908334, .address = "10.10.87.9"}: -1
AddressGroupAddress{.addressGroup = 215958743205595346182449417442045888540, .address = "10.10.87.5"}: -1
AddressGroupAddress{.addressGroup = 223002076411035378504447530302714401838, .address = "10.10.87.4"}: -1
AddressGroupAddress{.addressGroup = 227401460221416637870671496134541522280, .address = "10.10.89.6"}: -1
AddressGroupAddress{.addressGroup = 228107098483338029440119427696699574356, .address = "10.10.87.6"}: -1
AddressGroupAddress{.addressGroup = 228364465280635065551503204655847635486, .address = "10.10.87.1"}: -1
AddressGroupAddress{.addressGroup = 230459972229469506074747214534223777899, .address = "10.10.88.9"}: -1
AddressGroupAddress{.addressGroup = 279513617665565652372555166225599337043, .address = "10.10.86.6"}: -1
AddressGroupAddress{.addressGroup = 280143545038911263052452948198752016041, .address = "10.10.87.2"}: -1
AddressGroupAddress{.addressGroup = 289810882421247943298090520412407032001, .address = "10.10.89.1"}: -1
AddressGroupAddress{.addressGroup = 311908767482772157251262220186454848239, .address = "10.10.88.0"}: -1
AddressGroupAddress{.addressGroup = 315872735114111893654379499599064809978, .address = "10.10.88.2"}: -1
AddressGroupAddress{.addressGroup = 316364702912848143866612050141388606782, .address = "10.10.88.7"}: -1
AddressGroupAddress{.addressGroup = 322140640158637606108075023533071009743, .address = "10.10.87.8"}: -1
AddressGroupAddress{.addressGroup = 323462768744129485797321979004130115711, .address = "10.10.88.1"}: -1
AddressGroupAddress{.addressGroup = 323652542175413730260248681600058723076, .address = "10.10.89.0"}: -1
AddressGroupAddress{.addressGroup = 328191401992147305105980827494649267604, .address = "10.10.89.2"}: -1
AddressGroupDescr:
AddressGroupDescr{.name = "04d6ef89-313b-5b8f-bf99-63e7e002158d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-873]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-873")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "0cbc69ea-8e07-55b2-83c6-92645190f77c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-870]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-870")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "1fa03a1a-c6ae-5008-ab16-3562c6863a41", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-894]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-894")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "20b0336a-8759-5739-90ca-ad95ac7ace98", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-883]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-883")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "2ce4cfc7-dacf-5b61-ad41-753f077d6b65", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-885]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-885")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "37ad6291-8e99-5eb8-99fa-bc15607fec3a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-886]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-886")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "4044a800-c149-5545-9150-bf9f6a0761f8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-867]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-867")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "448c0733-62b0-584d-b076-5f0401d7f739", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-893]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-893")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "49afe997-ec38-59cd-a0c6-c7427edbb40b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-869]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-869")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "6235322d-41d9-59a7-a78e-d28d043dc611", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-865]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-865")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "649fabb7-1346-5398-8540-b02141c9100f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-884]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-884")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "6597f5ac-9b8c-5d1e-855b-cbbedbfcc6f6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-895]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-895")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "81196bc3-feaf-50fe-a385-1142b124de58", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-877]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-877")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "8a482c2c-e818-5398-8913-75585c22de74", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-868]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-868")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "93ff7ea7-e59f-5463-82dd-534da2c2dd1b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-888]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-888")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "9dfa0006-5e86-5ff7-b9b7-0448657bccae", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-879]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-879")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "a278241a-7d2a-5ca5-a7a4-2dbeed5a881c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-875]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-875")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "a7c4a33d-d205-53e7-b085-07212fa3d42e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-874]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-874")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "ab13ed9c-243c-5eee-ade8-cb91f15d3568", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-896]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-896")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "ab9bd443-2685-5c7d-9215-4ed0341f0854", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-876]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-876")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "abcd656c-d354-55a3-b087-f0e512fafa1e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-871]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-871")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "ad60f9e4-f65e-5543-a1eb-8b3ddb92d06b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-889]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-889")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "d2485d57-408b-5fac-a69f-03791df49253", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-866]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-866")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "d2c1af28-7fdf-50d3-95a4-7334fdf456a9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-872]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-872")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "da078bb0-cbad-5a9f-ac2c-4e0a2b3968c1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-891]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-891")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "eaa7718a-9af3-5a5a-94db-b06185bff2ef", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-880]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-880")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "eda2e03c-1bab-548d-8dc0-0784ff4141fa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-882]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-882")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "ee01a01e-b786-58ab-b30a-6c1349da0d3e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-887]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-887")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "f25a07d0-1076-5241-b6b2-adc9e86e07cf", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-878]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-878")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "f358a9c8-e89b-5cc4-9d76-9c1e0ec3407f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-881]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-881")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "f37d3656-5c7b-5a86-895c-1ce6ac7d0b04", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-890]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-890")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "f6e75d67-6165-5ae0-820f-8f317c258594", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-892]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-892")], .matchExpressions = []}}}}: -1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 6432921876256178299210019311383090573, .node = "testNode-87"}: -1
AddressGroupSpan{.addressGroup = 16929035995177688401794158411132237692, .node = "testNode-86"}: -1
AddressGroupSpan{.addressGroup = 42038013867875964634800215627609291329, .node = "testNode-89"}: -1
AddressGroupSpan{.addressGroup = 43450182955182932974363649988473048728, .node = "testNode-88"}: -1
AddressGroupSpan{.addressGroup = 59674089791192946664335360075983842149, .node = "testNode-88"}: -1
AddressGroupSpan{.addressGroup = 74007806333053904974253386838709365818, .node = "testNode-88"}: -1
AddressGroupSpan{.addressGroup = 85427075421247658790013879771019567608, .node = "testNode-86"}: -1
AddressGroupSpan{.addressGroup = 91114571321615387922736567229588436793, .node = "testNode-89"}: -1
AddressGroupSpan{.addressGroup = 97947033480539230297615040734346064907, .node = "testNode-86"}: -1
AddressGroupSpan{.addressGroup = 130540553026550883058842456145035904529, .node = "testNode-86"}: -1
AddressGroupSpan{.addressGroup = 133751857575759824193236955337736130575, .node = "testNode-88"}: -1
AddressGroupSpan{.addressGroup = 135041047265651975128061812275763005174, .node = "testNode-89"}: -1
AddressGroupSpan{.addressGroup = 171602404623857936305214241115086315096, .node = "testNode-87"}: -1
AddressGroupSpan{.addressGroup = 183808204776024540619532429708245524084, .node = "testNode-86"}: -1
AddressGroupSpan{.addressGroup = 196723119965086899323601465812552178971, .node = "testNode-88"}: -1
AddressGroupSpan{.addressGroup = 209986870057488514216194983226418908334, .node = "testNode-87"}: -1
AddressGroupSpan{.addressGroup = 215958743205595346182449417442045888540, .node = "testNode-87"}: -1
AddressGroupSpan{.addressGroup = 223002076411035378504447530302714401838, .node = "testNode-87"}: -1
AddressGroupSpan{.addressGroup = 227401460221416637870671496134541522280, .node = "testNode-89"}: -1
AddressGroupSpan{.addressGroup = 228107098483338029440119427696699574356, .node = "testNode-87"}: -1
AddressGroupSpan{.addressGroup = 228364465280635065551503204655847635486, .node = "testNode-87"}: -1
AddressGroupSpan{.addressGroup = 230459972229469506074747214534223777899, .node = "testNode-88"}: -1
AddressGroupSpan{.addressGroup = 279513617665565652372555166225599337043, .node = "testNode-86"}: -1
AddressGroupSpan{.addressGroup = 280143545038911263052452948198752016041, .node = "testNode-87"}: -1
AddressGroupSpan{.addressGroup = 289810882421247943298090520412407032001, .node = "testNode-89"}: -1
AddressGroupSpan{.addressGroup = 311908767482772157251262220186454848239, .node = "testNode-87"}: -1
AddressGroupSpan{.addressGroup = 315872735114111893654379499599064809978, .node = "testNode-88"}: -1
AddressGroupSpan{.addressGroup = 316364702912848143866612050141388606782, .node = "testNode-88"}: -1
AddressGroupSpan{.addressGroup = 322140640158637606108075023533071009743, .node = "testNode-87"}: -1
AddressGroupSpan{.addressGroup = 323462768744129485797321979004130115711, .node = "testNode-88"}: -1
AddressGroupSpan{.addressGroup = 323652542175413730260248681600058723076, .node = "testNode-88"}: -1
AddressGroupSpan{.addressGroup = 328191401992147305105980827494649267604, .node = "testNode-89"}: -1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "04d6ef89-313b-5b8f-bf99-63e7e002158d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-873]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-873")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "0cbc69ea-8e07-55b2-83c6-92645190f77c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-870]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-870")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "1fa03a1a-c6ae-5008-ab16-3562c6863a41", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-894]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-894")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "20b0336a-8759-5739-90ca-ad95ac7ace98", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-883]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-883")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "2ce4cfc7-dacf-5b61-ad41-753f077d6b65", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-885]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-885")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "37ad6291-8e99-5eb8-99fa-bc15607fec3a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-886]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-886")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "4044a800-c149-5545-9150-bf9f6a0761f8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-867]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-867")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "448c0733-62b0-584d-b076-5f0401d7f739", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-893]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-893")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "49afe997-ec38-59cd-a0c6-c7427edbb40b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-869]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-869")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "6235322d-41d9-59a7-a78e-d28d043dc611", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-865]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-865")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "649fabb7-1346-5398-8540-b02141c9100f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-884]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-884")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "6597f5ac-9b8c-5d1e-855b-cbbedbfcc6f6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-895]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-895")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "81196bc3-feaf-50fe-a385-1142b124de58", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-877]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-877")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "8a482c2c-e818-5398-8913-75585c22de74", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-868]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-868")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "93ff7ea7-e59f-5463-82dd-534da2c2dd1b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-888]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-888")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "9dfa0006-5e86-5ff7-b9b7-0448657bccae", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-879]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-879")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "a278241a-7d2a-5ca5-a7a4-2dbeed5a881c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-875]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-875")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "a7c4a33d-d205-53e7-b085-07212fa3d42e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-874]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-874")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "ab9bd443-2685-5c7d-9215-4ed0341f0854", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-876]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-876")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "abcd656c-d354-55a3-b087-f0e512fafa1e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-871]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-871")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "ad60f9e4-f65e-5543-a1eb-8b3ddb92d06b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-889]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-889")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "bc154c74-f996-5fb8-afdc-9b14cadcbbec", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-864]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-864")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "d2485d57-408b-5fac-a69f-03791df49253", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-866]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-866")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "d2c1af28-7fdf-50d3-95a4-7334fdf456a9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-872]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-872")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "da078bb0-cbad-5a9f-ac2c-4e0a2b3968c1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-891]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-891")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "eaa7718a-9af3-5a5a-94db-b06185bff2ef", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-880]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-880")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "eda2e03c-1bab-548d-8dc0-0784ff4141fa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-882]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-882")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "ee01a01e-b786-58ab-b30a-6c1349da0d3e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-887]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-887")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "f25a07d0-1076-5241-b6b2-adc9e86e07cf", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-878]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-878")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "f358a9c8-e89b-5cc4-9d76-9c1e0ec3407f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-881]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-881")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "f37d3656-5c7b-5a86-895c-1ce6ac7d0b04", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-890]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-890")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "f6e75d67-6165-5ae0-820f-8f317c258594", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-892]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-892")], .matchExpressions = []}}}}: -1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 6432921876256178299210019311383090573, .node = "testNode-87", .pods = [k8spolicy.PodReference{.name = "testPod-873", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 16929035995177688401794158411132237692, .node = "testNode-87", .pods = [k8spolicy.PodReference{.name = "testPod-870", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 42038013867875964634800215627609291329, .node = "testNode-89", .pods = [k8spolicy.PodReference{.name = "testPod-894", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 43450182955182932974363649988473048728, .node = "testNode-88", .pods = [k8spolicy.PodReference{.name = "testPod-883", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 59674089791192946664335360075983842149, .node = "testNode-88", .pods = [k8spolicy.PodReference{.name = "testPod-885", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 74007806333053904974253386838709365818, .node = "testNode-88", .pods = [k8spolicy.PodReference{.name = "testPod-886", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 85427075421247658790013879771019567608, .node = "testNode-86", .pods = [k8spolicy.PodReference{.name = "testPod-867", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 91114571321615387922736567229588436793, .node = "testNode-89", .pods = [k8spolicy.PodReference{.name = "testPod-893", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 97947033480539230297615040734346064907, .node = "testNode-86", .pods = [k8spolicy.PodReference{.name = "testPod-869", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 130540553026550883058842456145035904529, .node = "testNode-86", .pods = [k8spolicy.PodReference{.name = "testPod-865", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 133751857575759824193236955337736130575, .node = "testNode-88", .pods = [k8spolicy.PodReference{.name = "testPod-884", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 135041047265651975128061812275763005174, .node = "testNode-89", .pods = [k8spolicy.PodReference{.name = "testPod-895", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 171602404623857936305214241115086315096, .node = "testNode-87", .pods = [k8spolicy.PodReference{.name = "testPod-877", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 183808204776024540619532429708245524084, .node = "testNode-86", .pods = [k8spolicy.PodReference{.name = "testPod-868", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 196723119965086899323601465812552178971, .node = "testNode-88", .pods = [k8spolicy.PodReference{.name = "testPod-888", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 209986870057488514216194983226418908334, .node = "testNode-87", .pods = [k8spolicy.PodReference{.name = "testPod-879", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 215958743205595346182449417442045888540, .node = "testNode-87", .pods = [k8spolicy.PodReference{.name = "testPod-875", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 223002076411035378504447530302714401838, .node = "testNode-87", .pods = [k8spolicy.PodReference{.name = "testPod-874", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 228107098483338029440119427696699574356, .node = "testNode-87", .pods = [k8spolicy.PodReference{.name = "testPod-876", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 228364465280635065551503204655847635486, .node = "testNode-87", .pods = [k8spolicy.PodReference{.name = "testPod-871", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 230459972229469506074747214534223777899, .node = "testNode-88", .pods = [k8spolicy.PodReference{.name = "testPod-889", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 250005452172433703017876321230462434284, .node = "testNode-86", .pods = [k8spolicy.PodReference{.name = "testPod-864", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 279513617665565652372555166225599337043, .node = "testNode-86", .pods = [k8spolicy.PodReference{.name = "testPod-866", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 280143545038911263052452948198752016041, .node = "testNode-87", .pods = [k8spolicy.PodReference{.name = "testPod-872", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 289810882421247943298090520412407032001, .node = "testNode-89", .pods = [k8spolicy.PodReference{.name = "testPod-891", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 311908767482772157251262220186454848239, .node = "testNode-88", .pods = [k8spolicy.PodReference{.name = "testPod-880", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 315872735114111893654379499599064809978, .node = "testNode-88", .pods = [k8spolicy.PodReference{.name = "testPod-882", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 316364702912848143866612050141388606782, .node = "testNode-88", .pods = [k8spolicy.PodReference{.name = "testPod-887", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 322140640158637606108075023533071009743, .node = "testNode-87", .pods = [k8spolicy.PodReference{.name = "testPod-878", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 323462768744129485797321979004130115711, .node = "testNode-88", .pods = [k8spolicy.PodReference{.name = "testPod-881", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 323652542175413730260248681600058723076, .node = "testNode-89", .pods = [k8spolicy.PodReference{.name = "testPod-890", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 328191401992147305105980827494649267604, .node = "testNode-89", .pods = [k8spolicy.PodReference{.name = "testPod-892", .namespace = "testNamespace"}]}: -1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 6432921876256178299210019311383090573, .span = "testNode-87"}: -1
AppliedToGroupSpan{.appliedToGroup = 16929035995177688401794158411132237692, .span = "testNode-87"}: -1
AppliedToGroupSpan{.appliedToGroup = 42038013867875964634800215627609291329, .span = "testNode-89"}: -1
AppliedToGroupSpan{.appliedToGroup = 43450182955182932974363649988473048728, .span = "testNode-88"}: -1
AppliedToGroupSpan{.appliedToGroup = 59674089791192946664335360075983842149, .span = "testNode-88"}: -1
AppliedToGroupSpan{.appliedToGroup = 74007806333053904974253386838709365818, .span = "testNode-88"}: -1
AppliedToGroupSpan{.appliedToGroup = 85427075421247658790013879771019567608, .span = "testNode-86"}: -1
AppliedToGroupSpan{.appliedToGroup = 91114571321615387922736567229588436793, .span = "testNode-89"}: -1
AppliedToGroupSpan{.appliedToGroup = 97947033480539230297615040734346064907, .span = "testNode-86"}: -1
AppliedToGroupSpan{.appliedToGroup = 130540553026550883058842456145035904529, .span = "testNode-86"}: -1
AppliedToGroupSpan{.appliedToGroup = 133751857575759824193236955337736130575, .span = "testNode-88"}: -1
AppliedToGroupSpan{.appliedToGroup = 135041047265651975128061812275763005174, .span = "testNode-89"}: -1
AppliedToGroupSpan{.appliedToGroup = 171602404623857936305214241115086315096, .span = "testNode-87"}: -1
AppliedToGroupSpan{.appliedToGroup = 183808204776024540619532429708245524084, .span = "testNode-86"}: -1
AppliedToGroupSpan{.appliedToGroup = 196723119965086899323601465812552178971, .span = "testNode-88"}: -1
AppliedToGroupSpan{.appliedToGroup = 209986870057488514216194983226418908334, .span = "testNode-87"}: -1
AppliedToGroupSpan{.appliedToGroup = 215958743205595346182449417442045888540, .span = "testNode-87"}: -1
AppliedToGroupSpan{.appliedToGroup = 223002076411035378504447530302714401838, .span = "testNode-87"}: -1
AppliedToGroupSpan{.appliedToGroup = 228107098483338029440119427696699574356, .span = "testNode-87"}: -1
AppliedToGroupSpan{.appliedToGroup = 228364465280635065551503204655847635486, .span = "testNode-87"}: -1
AppliedToGroupSpan{.appliedToGroup = 230459972229469506074747214534223777899, .span = "testNode-88"}: -1
AppliedToGroupSpan{.appliedToGroup = 250005452172433703017876321230462434284, .span = "testNode-86"}: -1
AppliedToGroupSpan{.appliedToGroup = 279513617665565652372555166225599337043, .span = "testNode-86"}: -1
AppliedToGroupSpan{.appliedToGroup = 280143545038911263052452948198752016041, .span = "testNode-87"}: -1
AppliedToGroupSpan{.appliedToGroup = 289810882421247943298090520412407032001, .span = "testNode-89"}: -1
AppliedToGroupSpan{.appliedToGroup = 311908767482772157251262220186454848239, .span = "testNode-88"}: -1
AppliedToGroupSpan{.appliedToGroup = 315872735114111893654379499599064809978, .span = "testNode-88"}: -1
AppliedToGroupSpan{.appliedToGroup = 316364702912848143866612050141388606782, .span = "testNode-88"}: -1
AppliedToGroupSpan{.appliedToGroup = 322140640158637606108075023533071009743, .span = "testNode-87"}: -1
AppliedToGroupSpan{.appliedToGroup = 323462768744129485797321979004130115711, .span = "testNode-88"}: -1
AppliedToGroupSpan{.appliedToGroup = 323652542175413730260248681600058723076, .span = "testNode-89"}: -1
AppliedToGroupSpan{.appliedToGroup = 328191401992147305105980827494649267604, .span = "testNode-89"}: -1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-864"}, .name = "testNP-864", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [130540553026550883058842456145035904529], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [250005452172433703017876321230462434284]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-865"}, .name = "testNP-865", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [279513617665565652372555166225599337043], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [130540553026550883058842456145035904529]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-866"}, .name = "testNP-866", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [85427075421247658790013879771019567608], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [279513617665565652372555166225599337043]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-867"}, .name = "testNP-867", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [183808204776024540619532429708245524084], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [85427075421247658790013879771019567608]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-868"}, .name = "testNP-868", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [97947033480539230297615040734346064907], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [183808204776024540619532429708245524084]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-869"}, .name = "testNP-869", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [16929035995177688401794158411132237692], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [97947033480539230297615040734346064907]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-870"}, .name = "testNP-870", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [228364465280635065551503204655847635486], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [16929035995177688401794158411132237692]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-871"}, .name = "testNP-871", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [280143545038911263052452948198752016041], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [228364465280635065551503204655847635486]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-872"}, .name = "testNP-872", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [6432921876256178299210019311383090573], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [280143545038911263052452948198752016041]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-873"}, .name = "testNP-873", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [223002076411035378504447530302714401838], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [6432921876256178299210019311383090573]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-874"}, .name = "testNP-874", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [215958743205595346182449417442045888540], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [223002076411035378504447530302714401838]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-875"}, .name = "testNP-875", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [228107098483338029440119427696699574356], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [215958743205595346182449417442045888540]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-876"}, .name = "testNP-876", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [171602404623857936305214241115086315096], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [228107098483338029440119427696699574356]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-877"}, .name = "testNP-877", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [322140640158637606108075023533071009743], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [171602404623857936305214241115086315096]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-878"}, .name = "testNP-878", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [209986870057488514216194983226418908334], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [322140640158637606108075023533071009743]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-879"}, .name = "testNP-879", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [311908767482772157251262220186454848239], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [209986870057488514216194983226418908334]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-880"}, .name = "testNP-880", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [323462768744129485797321979004130115711], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [311908767482772157251262220186454848239]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-881"}, .name = "testNP-881", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [315872735114111893654379499599064809978], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [323462768744129485797321979004130115711]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-882"}, .name = "testNP-882", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [43450182955182932974363649988473048728], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [315872735114111893654379499599064809978]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-883"}, .name = "testNP-883", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [133751857575759824193236955337736130575], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [43450182955182932974363649988473048728]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-884"}, .name = "testNP-884", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [59674089791192946664335360075983842149], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [133751857575759824193236955337736130575]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-885"}, .name = "testNP-885", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [74007806333053904974253386838709365818], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [59674089791192946664335360075983842149]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-886"}, .name = "testNP-886", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [316364702912848143866612050141388606782], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [74007806333053904974253386838709365818]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-887"}, .name = "testNP-887", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [196723119965086899323601465812552178971], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [316364702912848143866612050141388606782]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-888"}, .name = "testNP-888", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [230459972229469506074747214534223777899], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [196723119965086899323601465812552178971]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-889"}, .name = "testNP-889", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [323652542175413730260248681600058723076], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [230459972229469506074747214534223777899]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-890"}, .name = "testNP-890", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [289810882421247943298090520412407032001], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [323652542175413730260248681600058723076]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-891"}, .name = "testNP-891", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [328191401992147305105980827494649267604], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [289810882421247943298090520412407032001]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-892"}, .name = "testNP-892", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [91114571321615387922736567229588436793], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [328191401992147305105980827494649267604]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-893"}, .name = "testNP-893", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [42038013867875964634800215627609291329], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [91114571321615387922736567229588436793]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-894"}, .name = "testNP-894", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [135041047265651975128061812275763005174], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [42038013867875964634800215627609291329]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-895"}, .name = "testNP-895", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [227401460221416637870671496134541522280], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [135041047265651975128061812275763005174]}: -1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-864", .policy = k8spolicy.UID{.uid = "testNP-864"}, .node = "testNode-86"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-865", .policy = k8spolicy.UID{.uid = "testNP-865"}, .node = "testNode-86"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-866", .policy = k8spolicy.UID{.uid = "testNP-866"}, .node = "testNode-86"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-867", .policy = k8spolicy.UID{.uid = "testNP-867"}, .node = "testNode-86"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-868", .policy = k8spolicy.UID{.uid = "testNP-868"}, .node = "testNode-86"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-869", .policy = k8spolicy.UID{.uid = "testNP-869"}, .node = "testNode-86"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-870", .policy = k8spolicy.UID{.uid = "testNP-870"}, .node = "testNode-87"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-871", .policy = k8spolicy.UID{.uid = "testNP-871"}, .node = "testNode-87"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-872", .policy = k8spolicy.UID{.uid = "testNP-872"}, .node = "testNode-87"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-873", .policy = k8spolicy.UID{.uid = "testNP-873"}, .node = "testNode-87"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-874", .policy = k8spolicy.UID{.uid = "testNP-874"}, .node = "testNode-87"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-875", .policy = k8spolicy.UID{.uid = "testNP-875"}, .node = "testNode-87"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-876", .policy = k8spolicy.UID{.uid = "testNP-876"}, .node = "testNode-87"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-877", .policy = k8spolicy.UID{.uid = "testNP-877"}, .node = "testNode-87"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-878", .policy = k8spolicy.UID{.uid = "testNP-878"}, .node = "testNode-87"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-879", .policy = k8spolicy.UID{.uid = "testNP-879"}, .node = "testNode-87"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-880", .policy = k8spolicy.UID{.uid = "testNP-880"}, .node = "testNode-88"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-881", .policy = k8spolicy.UID{.uid = "testNP-881"}, .node = "testNode-88"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-882", .policy = k8spolicy.UID{.uid = "testNP-882"}, .node = "testNode-88"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-883", .policy = k8spolicy.UID{.uid = "testNP-883"}, .node = "testNode-88"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-884", .policy = k8spolicy.UID{.uid = "testNP-884"}, .node = "testNode-88"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-885", .policy = k8spolicy.UID{.uid = "testNP-885"}, .node = "testNode-88"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-886", .policy = k8spolicy.UID{.uid = "testNP-886"}, .node = "testNode-88"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-887", .policy = k8spolicy.UID{.uid = "testNP-887"}, .node = "testNode-88"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-888", .policy = k8spolicy.UID{.uid = "testNP-888"}, .node = "testNode-88"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-889", .policy = k8spolicy.UID{.uid = "testNP-889"}, .node = "testNode-88"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-890", .policy = k8spolicy.UID{.uid = "testNP-890"}, .node = "testNode-89"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-891", .policy = k8spolicy.UID{.uid = "testNP-891"}, .node = "testNode-89"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-892", .policy = k8spolicy.UID{.uid = "testNP-892"}, .node = "testNode-89"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-893", .policy = k8spolicy.UID{.uid = "testNP-893"}, .node = "testNode-89"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-894", .policy = k8spolicy.UID{.uid = "testNP-894"}, .node = "testNode-89"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-895", .policy = k8spolicy.UID{.uid = "testNP-895"}, .node = "testNode-89"}: -1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 1178344942689128518483290271691062493, .address = "10.10.89.7"}: -1
AddressGroupAddress{.addressGroup = 5335519368479388878137568144432503586, .address = "10.10.92.2"}: -1
AddressGroupAddress{.addressGroup = 8448728117876795021012337747928596438, .address = "10.10.92.5"}: -1
AddressGroupAddress{.addressGroup = 19760368924207003562558254411017190194, .address = "10.10.90.2"}: -1
AddressGroupAddress{.addressGroup = 23819598393183177975527376209301060749, .address = "10.10.92.6"}: -1
AddressGroupAddress{.addressGroup = 30696003942255852472056292973602899239, .address = "10.10.91.2"}: -1
AddressGroupAddress{.addressGroup = 33359587595968169854985297462549429656, .address = "10.10.90.8"}: -1
AddressGroupAddress{.addressGroup = 45612154749333732690597565647092664750, .address = "10.10.89.9"}: -1
AddressGroupAddress{.addressGroup = 52009440379722916658142443915196199246, .address = "10.10.91.4"}: -1
AddressGroupAddress{.addressGroup = 62131557931447129130973202157313119223, .address = "10.10.92.8"}: -1
AddressGroupAddress{.addressGroup = 70992491464489868080869730044392129785, .address = "10.10.90.1"}: -1
AddressGroupAddress{.addressGroup = 84259068503017294792939377043180163050, .address = "10.10.91.8"}: -1
AddressGroupAddress{.addressGroup = 89811725033545612492079610937642093973, .address = "10.10.91.1"}: -1
AddressGroupAddress{.addressGroup = 92219302508935630136277103931918883108, .address = "10.10.91.6"}: -1
AddressGroupAddress{.addressGroup = 121943455377217233143452830986935511119, .address = "10.10.92.0"}: -1
AddressGroupAddress{.addressGroup = 141871074522122280174954668525821765382, .address = "10.10.90.7"}: -1
AddressGroupAddress{.addressGroup = 145991167593158205719628765296274317234, .address = "10.10.90.4"}: -1
AddressGroupAddress{.addressGroup = 146514335626164145776762471203706759135, .address = "10.10.90.3"}: -1
AddressGroupAddress{.addressGroup = 150044942264458386719593437678749131156, .address = "10.10.92.1"}: -1
AddressGroupAddress{.addressGroup = 152118823496539417069241801604520750522, .address = "10.10.91.5"}: -1
AddressGroupAddress{.addressGroup = 167937540479149022655611876447367135575, .address = "10.10.90.6"}: -1
AddressGroupAddress{.addressGroup = 186339915324272850794860639806508927853, .address = "10.10.91.9"}: -1
AddressGroupAddress{.addressGroup = 187513040822242426735030527655057216737, .address = "10.10.90.9"}: -1
AddressGroupAddress{.addressGroup = 205446523907170272045552917740213409360, .address = "10.10.90.5"}: -1
AddressGroupAddress{.addressGroup = 215760689775933383780284555101729753898, .address = "10.10.90.0"}: -1
AddressGroupAddress{.addressGroup = 221315335643040719959311860364246923884, .address = "10.10.91.7"}: -1
AddressGroupAddress{.addressGroup = 246595944394700037348278069310233732609, .address = "10.10.92.3"}: -1
AddressGroupAddress{.addressGroup = 250995793919897570772577898982993705018, .address = "10.10.92.4"}: -1
AddressGroupAddress{.addressGroup = 254519844389511459104264260487574445479, .address = "10.10.91.0"}: -1
AddressGroupAddress{.addressGroup = 257397377916205866993463781049357360571, .address = "10.10.92.7"}: -1
AddressGroupAddress{.addressGroup = 289112906982018246948632444523046810637, .address = "10.10.89.8"}: -1
AddressGroupAddress{.addressGroup = 301810568326366645774945846681323329212, .address = "10.10.91.3"}: -1
AddressGroupDescr:
AddressGroupDescr{.name = "00e2f0e4-2164-5b09-bfe7-9adb0ce43cdd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-897]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-897")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "0403956a-38b3-5303-807f-15089fc71b22", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-922]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-922")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "065b2a74-f9ff-50df-a81a-2c73d4b0bfd6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-925]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-925")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "0eddb568-45d7-5c98-85ed-15bb7b617b32", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-902]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-902")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "11eb7cdf-3508-5ff9-8e09-41e573ddbc8d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-926]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-926")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "1717d5d7-4e0d-5930-8270-218ea2d38527", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-912]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-912")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "1918d2a7-8005-55aa-b506-521184923d98", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-908]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-908")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "225094da-f449-5e13-928b-c8bbaef749ae", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-899]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-899")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "2720a763-7cdf-5fdd-ad3e-af54d337714e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-914]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-914")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "2ebe1a50-8580-5c80-b944-cd3bf7b2d3f7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-928]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-928")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "3568a811-4a06-515d-a03c-a79ef93a44f9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-901]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-901")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "3f63b4d0-d681-5dd2-94c2-3587ab090fea", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-918]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-918")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "43911beb-59cc-5988-bb3b-af6aae148d95", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-911]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-911")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "4560caa7-4bfa-5621-8e1e-d35a85c39924", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-916]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-916")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "5bbd7489-83af-58ec-b085-f1b12910a84f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-920]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-920")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "6abb6004-5aed-5881-a895-2e7ae6d22706", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-907]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-907")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "6dd4e049-f2f0-53dc-a992-5c0f91821fb2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-904]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-904")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "6e39a276-e0ea-57fb-97ab-c913d427e7df", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-903]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-903")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "70e19acf-a83e-5c16-bd42-a45a4f48a194", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-921]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-921")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "7271050c-dfc9-5fc8-aec1-8d8633282dba", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-915]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-915")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "7e579803-3f5f-5e8c-b0f4-447b4b5b0157", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-906]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-906")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "8c2fc324-8113-5345-bf12-c53be5ee8b6d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-919]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-919")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "8d11b2b1-faff-5fee-8127-7656c3ded4e1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-909]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-909")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "9a8f8fad-2ec7-59a9-b2cc-91f5f0029650", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-905]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-905")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "a251ff50-c398-5a13-a17c-ddc9f0b08b2a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-900]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-900")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "a67fc880-3c0d-577d-a4c8-36d949723a6c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-917]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-917")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "b984a6be-b45c-5405-ab16-d94c807b6601", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-923]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-923")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "bcd40813-2c4e-5f33-b964-8bcae036383a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-924]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-924")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "bf7abd2d-7819-5f74-afb5-50977a8bdda7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-910]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-910")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "c1a4ee88-b63e-53c3-aeee-6461eda4ddbb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-927]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-927")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "d9811ed8-34e4-5d7f-b1d7-292aee68b40d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-898]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-898")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "e30e99e2-29cd-5fe8-83fb-c5bf3bba56bc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-913]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-913")], .matchExpressions = []}}}}: -1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 1178344942689128518483290271691062493, .node = "testNode-89"}: -1
AddressGroupSpan{.addressGroup = 5335519368479388878137568144432503586, .node = "testNode-92"}: -1
AddressGroupSpan{.addressGroup = 8448728117876795021012337747928596438, .node = "testNode-92"}: -1
AddressGroupSpan{.addressGroup = 19760368924207003562558254411017190194, .node = "testNode-90"}: -1
AddressGroupSpan{.addressGroup = 23819598393183177975527376209301060749, .node = "testNode-92"}: -1
AddressGroupSpan{.addressGroup = 30696003942255852472056292973602899239, .node = "testNode-91"}: -1
AddressGroupSpan{.addressGroup = 33359587595968169854985297462549429656, .node = "testNode-90"}: -1
AddressGroupSpan{.addressGroup = 45612154749333732690597565647092664750, .node = "testNode-89"}: -1
AddressGroupSpan{.addressGroup = 52009440379722916658142443915196199246, .node = "testNode-91"}: -1
AddressGroupSpan{.addressGroup = 62131557931447129130973202157313119223, .node = "testNode-92"}: -1
AddressGroupSpan{.addressGroup = 70992491464489868080869730044392129785, .node = "testNode-90"}: -1
AddressGroupSpan{.addressGroup = 84259068503017294792939377043180163050, .node = "testNode-91"}: -1
AddressGroupSpan{.addressGroup = 89811725033545612492079610937642093973, .node = "testNode-91"}: -1
AddressGroupSpan{.addressGroup = 92219302508935630136277103931918883108, .node = "testNode-91"}: -1
AddressGroupSpan{.addressGroup = 121943455377217233143452830986935511119, .node = "testNode-91"}: -1
AddressGroupSpan{.addressGroup = 141871074522122280174954668525821765382, .node = "testNode-90"}: -1
AddressGroupSpan{.addressGroup = 145991167593158205719628765296274317234, .node = "testNode-90"}: -1
AddressGroupSpan{.addressGroup = 146514335626164145776762471203706759135, .node = "testNode-90"}: -1
AddressGroupSpan{.addressGroup = 150044942264458386719593437678749131156, .node = "testNode-92"}: -1
AddressGroupSpan{.addressGroup = 152118823496539417069241801604520750522, .node = "testNode-91"}: -1
AddressGroupSpan{.addressGroup = 167937540479149022655611876447367135575, .node = "testNode-90"}: -1
AddressGroupSpan{.addressGroup = 186339915324272850794860639806508927853, .node = "testNode-91"}: -1
AddressGroupSpan{.addressGroup = 187513040822242426735030527655057216737, .node = "testNode-90"}: -1
AddressGroupSpan{.addressGroup = 205446523907170272045552917740213409360, .node = "testNode-90"}: -1
AddressGroupSpan{.addressGroup = 215760689775933383780284555101729753898, .node = "testNode-89"}: -1
AddressGroupSpan{.addressGroup = 221315335643040719959311860364246923884, .node = "testNode-91"}: -1
AddressGroupSpan{.addressGroup = 246595944394700037348278069310233732609, .node = "testNode-92"}: -1
AddressGroupSpan{.addressGroup = 250995793919897570772577898982993705018, .node = "testNode-92"}: -1
AddressGroupSpan{.addressGroup = 254519844389511459104264260487574445479, .node = "testNode-90"}: -1
AddressGroupSpan{.addressGroup = 257397377916205866993463781049357360571, .node = "testNode-92"}: -1
AddressGroupSpan{.addressGroup = 289112906982018246948632444523046810637, .node = "testNode-89"}: -1
AddressGroupSpan{.addressGroup = 301810568326366645774945846681323329212, .node = "testNode-91"}: -1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "00e2f0e4-2164-5b09-bfe7-9adb0ce43cdd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-897]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-897")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "0403956a-38b3-5303-807f-15089fc71b22", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-922]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-922")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "065b2a74-f9ff-50df-a81a-2c73d4b0bfd6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-925]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-925")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "0eddb568-45d7-5c98-85ed-15bb7b617b32", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-902]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-902")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "11eb7cdf-3508-5ff9-8e09-41e573ddbc8d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-926]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-926")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "1717d5d7-4e0d-5930-8270-218ea2d38527", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-912]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-912")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "1918d2a7-8005-55aa-b506-521184923d98", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-908]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-908")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "225094da-f449-5e13-928b-c8bbaef749ae", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-899]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-899")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "2720a763-7cdf-5fdd-ad3e-af54d337714e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-914]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-914")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "3568a811-4a06-515d-a03c-a79ef93a44f9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-901]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-901")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "3f63b4d0-d681-5dd2-94c2-3587ab090fea", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-918]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-918")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "43911beb-59cc-5988-bb3b-af6aae148d95", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-911]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-911")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "4560caa7-4bfa-5621-8e1e-d35a85c39924", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-916]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-916")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "5bbd7489-83af-58ec-b085-f1b12910a84f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-920]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-920")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "6abb6004-5aed-5881-a895-2e7ae6d22706", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-907]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-907")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "6dd4e049-f2f0-53dc-a992-5c0f91821fb2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-904]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-904")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "6e39a276-e0ea-57fb-97ab-c913d427e7df", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-903]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-903")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "70e19acf-a83e-5c16-bd42-a45a4f48a194", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-921]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-921")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "7271050c-dfc9-5fc8-aec1-8d8633282dba", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-915]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-915")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "7e579803-3f5f-5e8c-b0f4-447b4b5b0157", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-906]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-906")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "8c2fc324-8113-5345-bf12-c53be5ee8b6d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-919]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-919")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "8d11b2b1-faff-5fee-8127-7656c3ded4e1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-909]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-909")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "9a8f8fad-2ec7-59a9-b2cc-91f5f0029650", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-905]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-905")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "a251ff50-c398-5a13-a17c-ddc9f0b08b2a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-900]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-900")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "a67fc880-3c0d-577d-a4c8-36d949723a6c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-917]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-917")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "ab13ed9c-243c-5eee-ade8-cb91f15d3568", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-896]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-896")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "b984a6be-b45c-5405-ab16-d94c807b6601", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-923]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-923")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "bcd40813-2c4e-5f33-b964-8bcae036383a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-924]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-924")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "bf7abd2d-7819-5f74-afb5-50977a8bdda7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-910]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-910")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "c1a4ee88-b63e-53c3-aeee-6461eda4ddbb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-927]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-927")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "d9811ed8-34e4-5d7f-b1d7-292aee68b40d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-898]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-898")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "e30e99e2-29cd-5fe8-83fb-c5bf3bba56bc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-913]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-913")], .matchExpressions = []}}}}: -1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 1178344942689128518483290271691062493, .node = "testNode-89", .pods = [k8spolicy.PodReference{.name = "testPod-897", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 5335519368479388878137568144432503586, .node = "testNode-92", .pods = [k8spolicy.PodReference{.name = "testPod-922", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 8448728117876795021012337747928596438, .node = "testNode-92", .pods = [k8spolicy.PodReference{.name = "testPod-925", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 19760368924207003562558254411017190194, .node = "testNode-90", .pods = [k8spolicy.PodReference{.name = "testPod-902", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 23819598393183177975527376209301060749, .node = "testNode-92", .pods = [k8spolicy.PodReference{.name = "testPod-926", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 30696003942255852472056292973602899239, .node = "testNode-91", .pods = [k8spolicy.PodReference{.name = "testPod-912", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 33359587595968169854985297462549429656, .node = "testNode-90", .pods = [k8spolicy.PodReference{.name = "testPod-908", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 45612154749333732690597565647092664750, .node = "testNode-89", .pods = [k8spolicy.PodReference{.name = "testPod-899", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 52009440379722916658142443915196199246, .node = "testNode-91", .pods = [k8spolicy.PodReference{.name = "testPod-914", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 70992491464489868080869730044392129785, .node = "testNode-90", .pods = [k8spolicy.PodReference{.name = "testPod-901", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 84259068503017294792939377043180163050, .node = "testNode-91", .pods = [k8spolicy.PodReference{.name = "testPod-918", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 89811725033545612492079610937642093973, .node = "testNode-91", .pods = [k8spolicy.PodReference{.name = "testPod-911", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 92219302508935630136277103931918883108, .node = "testNode-91", .pods = [k8spolicy.PodReference{.name = "testPod-916", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 121943455377217233143452830986935511119, .node = "testNode-92", .pods = [k8spolicy.PodReference{.name = "testPod-920", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 141871074522122280174954668525821765382, .node = "testNode-90", .pods = [k8spolicy.PodReference{.name = "testPod-907", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 145991167593158205719628765296274317234, .node = "testNode-90", .pods = [k8spolicy.PodReference{.name = "testPod-904", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 146514335626164145776762471203706759135, .node = "testNode-90", .pods = [k8spolicy.PodReference{.name = "testPod-903", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 150044942264458386719593437678749131156, .node = "testNode-92", .pods = [k8spolicy.PodReference{.name = "testPod-921", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 152118823496539417069241801604520750522, .node = "testNode-91", .pods = [k8spolicy.PodReference{.name = "testPod-915", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 167937540479149022655611876447367135575, .node = "testNode-90", .pods = [k8spolicy.PodReference{.name = "testPod-906", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 186339915324272850794860639806508927853, .node = "testNode-91", .pods = [k8spolicy.PodReference{.name = "testPod-919", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 187513040822242426735030527655057216737, .node = "testNode-90", .pods = [k8spolicy.PodReference{.name = "testPod-909", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 205446523907170272045552917740213409360, .node = "testNode-90", .pods = [k8spolicy.PodReference{.name = "testPod-905", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 215760689775933383780284555101729753898, .node = "testNode-90", .pods = [k8spolicy.PodReference{.name = "testPod-900", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 221315335643040719959311860364246923884, .node = "testNode-91", .pods = [k8spolicy.PodReference{.name = "testPod-917", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 227401460221416637870671496134541522280, .node = "testNode-89", .pods = [k8spolicy.PodReference{.name = "testPod-896", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 246595944394700037348278069310233732609, .node = "testNode-92", .pods = [k8spolicy.PodReference{.name = "testPod-923", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 250995793919897570772577898982993705018, .node = "testNode-92", .pods = [k8spolicy.PodReference{.name = "testPod-924", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 254519844389511459104264260487574445479, .node = "testNode-91", .pods = [k8spolicy.PodReference{.name = "testPod-910", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 257397377916205866993463781049357360571, .node = "testNode-92", .pods = [k8spolicy.PodReference{.name = "testPod-927", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 289112906982018246948632444523046810637, .node = "testNode-89", .pods = [k8spolicy.PodReference{.name = "testPod-898", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 301810568326366645774945846681323329212, .node = "testNode-91", .pods = [k8spolicy.PodReference{.name = "testPod-913", .namespace = "testNamespace"}]}: -1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 1178344942689128518483290271691062493, .span = "testNode-89"}: -1
AppliedToGroupSpan{.appliedToGroup = 5335519368479388878137568144432503586, .span = "testNode-92"}: -1
AppliedToGroupSpan{.appliedToGroup = 8448728117876795021012337747928596438, .span = "testNode-92"}: -1
AppliedToGroupSpan{.appliedToGroup = 19760368924207003562558254411017190194, .span = "testNode-90"}: -1
AppliedToGroupSpan{.appliedToGroup = 23819598393183177975527376209301060749, .span = "testNode-92"}: -1
AppliedToGroupSpan{.appliedToGroup = 30696003942255852472056292973602899239, .span = "testNode-91"}: -1
AppliedToGroupSpan{.appliedToGroup = 33359587595968169854985297462549429656, .span = "testNode-90"}: -1
AppliedToGroupSpan{.appliedToGroup = 45612154749333732690597565647092664750, .span = "testNode-89"}: -1
AppliedToGroupSpan{.appliedToGroup = 52009440379722916658142443915196199246, .span = "testNode-91"}: -1
AppliedToGroupSpan{.appliedToGroup = 70992491464489868080869730044392129785, .span = "testNode-90"}: -1
AppliedToGroupSpan{.appliedToGroup = 84259068503017294792939377043180163050, .span = "testNode-91"}: -1
AppliedToGroupSpan{.appliedToGroup = 89811725033545612492079610937642093973, .span = "testNode-91"}: -1
AppliedToGroupSpan{.appliedToGroup = 92219302508935630136277103931918883108, .span = "testNode-91"}: -1
AppliedToGroupSpan{.appliedToGroup = 121943455377217233143452830986935511119, .span = "testNode-92"}: -1
AppliedToGroupSpan{.appliedToGroup = 141871074522122280174954668525821765382, .span = "testNode-90"}: -1
AppliedToGroupSpan{.appliedToGroup = 145991167593158205719628765296274317234, .span = "testNode-90"}: -1
AppliedToGroupSpan{.appliedToGroup = 146514335626164145776762471203706759135, .span = "testNode-90"}: -1
AppliedToGroupSpan{.appliedToGroup = 150044942264458386719593437678749131156, .span = "testNode-92"}: -1
AppliedToGroupSpan{.appliedToGroup = 152118823496539417069241801604520750522, .span = "testNode-91"}: -1
AppliedToGroupSpan{.appliedToGroup = 167937540479149022655611876447367135575, .span = "testNode-90"}: -1
AppliedToGroupSpan{.appliedToGroup = 186339915324272850794860639806508927853, .span = "testNode-91"}: -1
AppliedToGroupSpan{.appliedToGroup = 187513040822242426735030527655057216737, .span = "testNode-90"}: -1
AppliedToGroupSpan{.appliedToGroup = 205446523907170272045552917740213409360, .span = "testNode-90"}: -1
AppliedToGroupSpan{.appliedToGroup = 215760689775933383780284555101729753898, .span = "testNode-90"}: -1
AppliedToGroupSpan{.appliedToGroup = 221315335643040719959311860364246923884, .span = "testNode-91"}: -1
AppliedToGroupSpan{.appliedToGroup = 227401460221416637870671496134541522280, .span = "testNode-89"}: -1
AppliedToGroupSpan{.appliedToGroup = 246595944394700037348278069310233732609, .span = "testNode-92"}: -1
AppliedToGroupSpan{.appliedToGroup = 250995793919897570772577898982993705018, .span = "testNode-92"}: -1
AppliedToGroupSpan{.appliedToGroup = 254519844389511459104264260487574445479, .span = "testNode-91"}: -1
AppliedToGroupSpan{.appliedToGroup = 257397377916205866993463781049357360571, .span = "testNode-92"}: -1
AppliedToGroupSpan{.appliedToGroup = 289112906982018246948632444523046810637, .span = "testNode-89"}: -1
AppliedToGroupSpan{.appliedToGroup = 301810568326366645774945846681323329212, .span = "testNode-91"}: -1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-896"}, .name = "testNP-896", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [1178344942689128518483290271691062493], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [227401460221416637870671496134541522280]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-897"}, .name = "testNP-897", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [289112906982018246948632444523046810637], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [1178344942689128518483290271691062493]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-898"}, .name = "testNP-898", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [45612154749333732690597565647092664750], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [289112906982018246948632444523046810637]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-899"}, .name = "testNP-899", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [215760689775933383780284555101729753898], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [45612154749333732690597565647092664750]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-900"}, .name = "testNP-900", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [70992491464489868080869730044392129785], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [215760689775933383780284555101729753898]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-901"}, .name = "testNP-901", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [19760368924207003562558254411017190194], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [70992491464489868080869730044392129785]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-902"}, .name = "testNP-902", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [146514335626164145776762471203706759135], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [19760368924207003562558254411017190194]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-903"}, .name = "testNP-903", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [145991167593158205719628765296274317234], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [146514335626164145776762471203706759135]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-904"}, .name = "testNP-904", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [205446523907170272045552917740213409360], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [145991167593158205719628765296274317234]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-905"}, .name = "testNP-905", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [167937540479149022655611876447367135575], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [205446523907170272045552917740213409360]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-906"}, .name = "testNP-906", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [141871074522122280174954668525821765382], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [167937540479149022655611876447367135575]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-907"}, .name = "testNP-907", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [33359587595968169854985297462549429656], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [141871074522122280174954668525821765382]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-908"}, .name = "testNP-908", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [187513040822242426735030527655057216737], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [33359587595968169854985297462549429656]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-909"}, .name = "testNP-909", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [254519844389511459104264260487574445479], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [187513040822242426735030527655057216737]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-910"}, .name = "testNP-910", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [89811725033545612492079610937642093973], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [254519844389511459104264260487574445479]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-911"}, .name = "testNP-911", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [30696003942255852472056292973602899239], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [89811725033545612492079610937642093973]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-912"}, .name = "testNP-912", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [301810568326366645774945846681323329212], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [30696003942255852472056292973602899239]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-913"}, .name = "testNP-913", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [52009440379722916658142443915196199246], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [301810568326366645774945846681323329212]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-914"}, .name = "testNP-914", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [152118823496539417069241801604520750522], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [52009440379722916658142443915196199246]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-915"}, .name = "testNP-915", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [92219302508935630136277103931918883108], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [152118823496539417069241801604520750522]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-916"}, .name = "testNP-916", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [221315335643040719959311860364246923884], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [92219302508935630136277103931918883108]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-917"}, .name = "testNP-917", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [84259068503017294792939377043180163050], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [221315335643040719959311860364246923884]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-918"}, .name = "testNP-918", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [186339915324272850794860639806508927853], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [84259068503017294792939377043180163050]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-919"}, .name = "testNP-919", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [121943455377217233143452830986935511119], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [186339915324272850794860639806508927853]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-920"}, .name = "testNP-920", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [150044942264458386719593437678749131156], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [121943455377217233143452830986935511119]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-921"}, .name = "testNP-921", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [5335519368479388878137568144432503586], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [150044942264458386719593437678749131156]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-922"}, .name = "testNP-922", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [246595944394700037348278069310233732609], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [5335519368479388878137568144432503586]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-923"}, .name = "testNP-923", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [250995793919897570772577898982993705018], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [246595944394700037348278069310233732609]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-924"}, .name = "testNP-924", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [8448728117876795021012337747928596438], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [250995793919897570772577898982993705018]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-925"}, .name = "testNP-925", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [23819598393183177975527376209301060749], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [8448728117876795021012337747928596438]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-926"}, .name = "testNP-926", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [257397377916205866993463781049357360571], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [23819598393183177975527376209301060749]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-927"}, .name = "testNP-927", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [62131557931447129130973202157313119223], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [257397377916205866993463781049357360571]}: -1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-896", .policy = k8spolicy.UID{.uid = "testNP-896"}, .node = "testNode-89"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-897", .policy = k8spolicy.UID{.uid = "testNP-897"}, .node = "testNode-89"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-898", .policy = k8spolicy.UID{.uid = "testNP-898"}, .node = "testNode-89"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-899", .policy = k8spolicy.UID{.uid = "testNP-899"}, .node = "testNode-89"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-900", .policy = k8spolicy.UID{.uid = "testNP-900"}, .node = "testNode-90"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-901", .policy = k8spolicy.UID{.uid = "testNP-901"}, .node = "testNode-90"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-902", .policy = k8spolicy.UID{.uid = "testNP-902"}, .node = "testNode-90"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-903", .policy = k8spolicy.UID{.uid = "testNP-903"}, .node = "testNode-90"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-904", .policy = k8spolicy.UID{.uid = "testNP-904"}, .node = "testNode-90"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-905", .policy = k8spolicy.UID{.uid = "testNP-905"}, .node = "testNode-90"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-906", .policy = k8spolicy.UID{.uid = "testNP-906"}, .node = "testNode-90"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-907", .policy = k8spolicy.UID{.uid = "testNP-907"}, .node = "testNode-90"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-908", .policy = k8spolicy.UID{.uid = "testNP-908"}, .node = "testNode-90"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-909", .policy = k8spolicy.UID{.uid = "testNP-909"}, .node = "testNode-90"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-910", .policy = k8spolicy.UID{.uid = "testNP-910"}, .node = "testNode-91"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-911", .policy = k8spolicy.UID{.uid = "testNP-911"}, .node = "testNode-91"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-912", .policy = k8spolicy.UID{.uid = "testNP-912"}, .node = "testNode-91"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-913", .policy = k8spolicy.UID{.uid = "testNP-913"}, .node = "testNode-91"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-914", .policy = k8spolicy.UID{.uid = "testNP-914"}, .node = "testNode-91"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-915", .policy = k8spolicy.UID{.uid = "testNP-915"}, .node = "testNode-91"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-916", .policy = k8spolicy.UID{.uid = "testNP-916"}, .node = "testNode-91"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-917", .policy = k8spolicy.UID{.uid = "testNP-917"}, .node = "testNode-91"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-918", .policy = k8spolicy.UID{.uid = "testNP-918"}, .node = "testNode-91"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-919", .policy = k8spolicy.UID{.uid = "testNP-919"}, .node = "testNode-91"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-920", .policy = k8spolicy.UID{.uid = "testNP-920"}, .node = "testNode-92"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-921", .policy = k8spolicy.UID{.uid = "testNP-921"}, .node = "testNode-92"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-922", .policy = k8spolicy.UID{.uid = "testNP-922"}, .node = "testNode-92"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-923", .policy = k8spolicy.UID{.uid = "testNP-923"}, .node = "testNode-92"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-924", .policy = k8spolicy.UID{.uid = "testNP-924"}, .node = "testNode-92"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-925", .policy = k8spolicy.UID{.uid = "testNP-925"}, .node = "testNode-92"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-926", .policy = k8spolicy.UID{.uid = "testNP-926"}, .node = "testNode-92"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-927", .policy = k8spolicy.UID{.uid = "testNP-927"}, .node = "testNode-92"}: -1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 22644253725290928640231557611890804044, .address = "10.10.93.6"}: -1
AddressGroupAddress{.addressGroup = 28035633820864827285289142082221939225, .address = "10.10.94.5"}: -1
AddressGroupAddress{.addressGroup = 41222766383973271318512058935010269125, .address = "10.10.95.1"}: -1
AddressGroupAddress{.addressGroup = 67098069245097654131426564816705044690, .address = "10.10.93.2"}: -1
AddressGroupAddress{.addressGroup = 78694635668396274531784444203009793713, .address = "10.10.95.8"}: -1
AddressGroupAddress{.addressGroup = 91241772504908683776781434872618921585, .address = "10.10.95.2"}: -1
AddressGroupAddress{.addressGroup = 100444576583123224799837278022147750242, .address = "10.10.95.3"}: -1
AddressGroupAddress{.addressGroup = 135970361690114177319395643735779157372, .address = "10.10.95.4"}: -1
AddressGroupAddress{.addressGroup = 139257722318377983010910379350606130564, .address = "10.10.95.7"}: -1
AddressGroupAddress{.addressGroup = 142278977582764137450706381106654140015, .address = "10.10.93.5"}: -1
AddressGroupAddress{.addressGroup = 144679705734765771383424614329978934963, .address = "10.10.94.7"}: -1
AddressGroupAddress{.addressGroup = 157832453976694039397936153148739564370, .address = "10.10.95.9"}: -1
AddressGroupAddress{.addressGroup = 165955253148851010787037661879322972000, .address = "10.10.96.0"}: -1
AddressGroupAddress{.addressGroup = 170180023383795290405935208413263291343, .address = "10.10.93.9"}: -1
AddressGroupAddress{.addressGroup = 182835475002275863146609398249234826144, .address = "10.10.92.9"}: -1
AddressGroupAddress{.addressGroup = 190441149640467033953620392360271644975, .address = "10.10.93.1"}: -1
AddressGroupAddress{.addressGroup = 197394531688979768514698467973151916378, .address = "10.10.94.6"}: -1
AddressGroupAddress{.addressGroup = 207484811570300099771179964418689917973, .address = "10.10.94.8"}: -1
AddressGroupAddress{.addressGroup = 212018859850742054076739919732658823861, .address = "10.10.95.6"}: -1
AddressGroupAddress{.addressGroup = 215516683071444669454098825092112700210, .address = "10.10.93.0"}: -1
AddressGroupAddress{.addressGroup = 224568550930731558504236309638539404275, .address = "10.10.94.9"}: -1
AddressGroupAddress{.addressGroup = 226358369160067895483295188054720646819, .address = "10.10.94.0"}: -1
AddressGroupAddress{.addressGroup = 228976924987340901700564889195045382803, .address = "10.10.95.0"}: -1
AddressGroupAddress{.addressGroup = 232436588221897914260673175466484333579, .address = "10.10.93.4"}: -1
AddressGroupAddress{.addressGroup = 238530022762936351723332763909404448473, .address = "10.10.95.5"}: -1
AddressGroupAddress{.addressGroup = 239716845774323234046385734049732776003, .address = "10.10.93.7"}: -1
AddressGroupAddress{.addressGroup = 284276812696431317722329384651848990239, .address = "10.10.94.1"}: -1
AddressGroupAddress{.addressGroup = 285690536665355970054173881991793205113, .address = "10.10.93.8"}: -1
AddressGroupAddress{.addressGroup = 287850734721851701042837025825477490912, .address = "10.10.93.3"}: -1
AddressGroupAddress{.addressGroup = 306830314506015856176620586045625347230, .address = "10.10.94.4"}: -1
AddressGroupAddress{.addressGroup = 308245717831027817717477028421452060664, .address = "10.10.94.3"}: -1
AddressGroupAddress{.addressGroup = 331898218482394052943927654159430371627, .address = "10.10.94.2"}: -1
AddressGroupDescr:
AddressGroupDescr{.name = "11091fe7-de5c-5447-9a4c-798bf9ca054c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-936]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-936")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "15177777-9707-58fb-9156-86d565a89a19", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-945]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-945")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "1f03374c-e2d1-5e42-bf57-27f78bf217c5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-951]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-951")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "327a9e3a-4ad5-5842-a95c-df59834e40d2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-932]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-932")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "3b340918-7875-5eed-af0e-e2d05a2f5eb1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-958]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-958")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "44a486b4-08fa-5d04-8395-ae9f858dae71", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-952]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-952")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "4b90ebf9-b9f9-5e5c-bc9c-bb4fc077b962", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-953]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-953")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "664af069-b28d-5f5d-976a-a6316cf5a57c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-954]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-954")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "68c40fce-3187-554d-a351-8dfd5702ad84", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-957]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-957")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "6b09ef30-cc39-54ff-8316-eaee4792d66f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-935]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-935")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "6cd84c3a-20eb-577a-83ab-6d8c386b56b3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-947]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-947")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "76bd6cc8-46e5-5304-886c-914de4703352", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-959]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-959")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "7cd9d1b3-9a5b-5a9e-83d0-e291784a8f60", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-960]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-960")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "80077af4-c0d0-5ca1-b0c5-b03ca4f7e3cf", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-939]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-939")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "898cd4e5-11a6-53d6-b5a9-a15a13cb03a0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-929]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-929")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "8f45a19b-25b8-53c9-bde8-660e583f892f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-931]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-931")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "9480cdcf-42f4-5145-936c-f142ac7d015a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-946]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-946")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "9c181f04-663a-5c47-83fc-ef4ba644e415", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-948]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-948")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "9f8158db-4ae3-5689-9fc7-d219f8de62b5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-956]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-956")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "a22300db-2ae2-54df-afa2-0d2fc5bdd332", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-930]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-930")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "a8f25465-f134-52e0-bca1-5a9d16c463f3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-949]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-949")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "aa4b093f-ffd9-5490-9e4a-66b74d9c0ea3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-940]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-940")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "ac435a05-1fb1-50d4-bf31-20ac6ab2ea93", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-950]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-950")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "aedda896-4265-5fdc-8ca3-ff38691e7c0b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-934]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-934")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "b373361a-ddd5-5382-932b-3e85eaeb56d9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-955]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-955")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "b457c8ff-44a4-5b41-a4bd-c84d79505043", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-937]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-937")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "d5ddb8fc-c0b8-5f52-a656-937f1314be1f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-941]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-941")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "d6edfef5-dedc-5d1d-8b89-9e59d603df79", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-938]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-938")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "d88e08f2-9454-5cc4-9d72-ac18e0f1f8e0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-933]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-933")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "e6d55e7a-684c-5439-af68-04096cd02c9e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-944]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-944")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "e7e5f73f-fa9d-50c2-9fc7-c4260b1e57f8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-943]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-943")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "f9b14591-2c15-52f1-b40b-7126f31ec92b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-942]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-942")], .matchExpressions = []}}}}: -1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 22644253725290928640231557611890804044, .node = "testNode-93"}: -1
AddressGroupSpan{.addressGroup = 28035633820864827285289142082221939225, .node = "testNode-94"}: -1
AddressGroupSpan{.addressGroup = 41222766383973271318512058935010269125, .node = "testNode-95"}: -1
AddressGroupSpan{.addressGroup = 67098069245097654131426564816705044690, .node = "testNode-93"}: -1
AddressGroupSpan{.addressGroup = 78694635668396274531784444203009793713, .node = "testNode-95"}: -1
AddressGroupSpan{.addressGroup = 91241772504908683776781434872618921585, .node = "testNode-95"}: -1
AddressGroupSpan{.addressGroup = 100444576583123224799837278022147750242, .node = "testNode-95"}: -1
AddressGroupSpan{.addressGroup = 135970361690114177319395643735779157372, .node = "testNode-95"}: -1
AddressGroupSpan{.addressGroup = 139257722318377983010910379350606130564, .node = "testNode-95"}: -1
AddressGroupSpan{.addressGroup = 142278977582764137450706381106654140015, .node = "testNode-93"}: -1
AddressGroupSpan{.addressGroup = 144679705734765771383424614329978934963, .node = "testNode-94"}: -1
AddressGroupSpan{.addressGroup = 157832453976694039397936153148739564370, .node = "testNode-95"}: -1
AddressGroupSpan{.addressGroup = 165955253148851010787037661879322972000, .node = "testNode-95"}: -1
AddressGroupSpan{.addressGroup = 170180023383795290405935208413263291343, .node = "testNode-93"}: -1
AddressGroupSpan{.addressGroup = 182835475002275863146609398249234826144, .node = "testNode-92"}: -1
AddressGroupSpan{.addressGroup = 190441149640467033953620392360271644975, .node = "testNode-93"}: -1
AddressGroupSpan{.addressGroup = 197394531688979768514698467973151916378, .node = "testNode-94"}: -1
AddressGroupSpan{.addressGroup = 207484811570300099771179964418689917973, .node = "testNode-94"}: -1
AddressGroupSpan{.addressGroup = 212018859850742054076739919732658823861, .node = "testNode-95"}: -1
AddressGroupSpan{.addressGroup = 215516683071444669454098825092112700210, .node = "testNode-92"}: -1
AddressGroupSpan{.addressGroup = 224568550930731558504236309638539404275, .node = "testNode-94"}: -1
AddressGroupSpan{.addressGroup = 226358369160067895483295188054720646819, .node = "testNode-93"}: -1
AddressGroupSpan{.addressGroup = 228976924987340901700564889195045382803, .node = "testNode-94"}: -1
AddressGroupSpan{.addressGroup = 232436588221897914260673175466484333579, .node = "testNode-93"}: -1
AddressGroupSpan{.addressGroup = 238530022762936351723332763909404448473, .node = "testNode-95"}: -1
AddressGroupSpan{.addressGroup = 239716845774323234046385734049732776003, .node = "testNode-93"}: -1
AddressGroupSpan{.addressGroup = 284276812696431317722329384651848990239, .node = "testNode-94"}: -1
AddressGroupSpan{.addressGroup = 285690536665355970054173881991793205113, .node = "testNode-93"}: -1
AddressGroupSpan{.addressGroup = 287850734721851701042837025825477490912, .node = "testNode-93"}: -1
AddressGroupSpan{.addressGroup = 306830314506015856176620586045625347230, .node = "testNode-94"}: -1
AddressGroupSpan{.addressGroup = 308245717831027817717477028421452060664, .node = "testNode-94"}: -1
AddressGroupSpan{.addressGroup = 331898218482394052943927654159430371627, .node = "testNode-94"}: -1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "11091fe7-de5c-5447-9a4c-798bf9ca054c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-936]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-936")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "15177777-9707-58fb-9156-86d565a89a19", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-945]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-945")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "1f03374c-e2d1-5e42-bf57-27f78bf217c5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-951]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-951")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "2ebe1a50-8580-5c80-b944-cd3bf7b2d3f7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-928]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-928")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "327a9e3a-4ad5-5842-a95c-df59834e40d2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-932]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-932")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "3b340918-7875-5eed-af0e-e2d05a2f5eb1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-958]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-958")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "44a486b4-08fa-5d04-8395-ae9f858dae71", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-952]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-952")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "4b90ebf9-b9f9-5e5c-bc9c-bb4fc077b962", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-953]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-953")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "664af069-b28d-5f5d-976a-a6316cf5a57c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-954]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-954")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "68c40fce-3187-554d-a351-8dfd5702ad84", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-957]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-957")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "6b09ef30-cc39-54ff-8316-eaee4792d66f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-935]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-935")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "6cd84c3a-20eb-577a-83ab-6d8c386b56b3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-947]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-947")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "76bd6cc8-46e5-5304-886c-914de4703352", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-959]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-959")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "80077af4-c0d0-5ca1-b0c5-b03ca4f7e3cf", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-939]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-939")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "898cd4e5-11a6-53d6-b5a9-a15a13cb03a0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-929]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-929")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "8f45a19b-25b8-53c9-bde8-660e583f892f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-931]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-931")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "9480cdcf-42f4-5145-936c-f142ac7d015a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-946]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-946")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "9c181f04-663a-5c47-83fc-ef4ba644e415", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-948]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-948")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "9f8158db-4ae3-5689-9fc7-d219f8de62b5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-956]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-956")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "a22300db-2ae2-54df-afa2-0d2fc5bdd332", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-930]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-930")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "a8f25465-f134-52e0-bca1-5a9d16c463f3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-949]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-949")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "aa4b093f-ffd9-5490-9e4a-66b74d9c0ea3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-940]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-940")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "ac435a05-1fb1-50d4-bf31-20ac6ab2ea93", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-950]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-950")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "aedda896-4265-5fdc-8ca3-ff38691e7c0b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-934]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-934")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "b373361a-ddd5-5382-932b-3e85eaeb56d9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-955]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-955")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "b457c8ff-44a4-5b41-a4bd-c84d79505043", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-937]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-937")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "d5ddb8fc-c0b8-5f52-a656-937f1314be1f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-941]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-941")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "d6edfef5-dedc-5d1d-8b89-9e59d603df79", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-938]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-938")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "d88e08f2-9454-5cc4-9d72-ac18e0f1f8e0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-933]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-933")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "e6d55e7a-684c-5439-af68-04096cd02c9e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-944]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-944")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "e7e5f73f-fa9d-50c2-9fc7-c4260b1e57f8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-943]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-943")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "f9b14591-2c15-52f1-b40b-7126f31ec92b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-942]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-942")], .matchExpressions = []}}}}: -1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 22644253725290928640231557611890804044, .node = "testNode-93", .pods = [k8spolicy.PodReference{.name = "testPod-936", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 28035633820864827285289142082221939225, .node = "testNode-94", .pods = [k8spolicy.PodReference{.name = "testPod-945", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 41222766383973271318512058935010269125, .node = "testNode-95", .pods = [k8spolicy.PodReference{.name = "testPod-951", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 62131557931447129130973202157313119223, .node = "testNode-92", .pods = [k8spolicy.PodReference{.name = "testPod-928", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 67098069245097654131426564816705044690, .node = "testNode-93", .pods = [k8spolicy.PodReference{.name = "testPod-932", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 78694635668396274531784444203009793713, .node = "testNode-95", .pods = [k8spolicy.PodReference{.name = "testPod-958", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 91241772504908683776781434872618921585, .node = "testNode-95", .pods = [k8spolicy.PodReference{.name = "testPod-952", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 100444576583123224799837278022147750242, .node = "testNode-95", .pods = [k8spolicy.PodReference{.name = "testPod-953", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 135970361690114177319395643735779157372, .node = "testNode-95", .pods = [k8spolicy.PodReference{.name = "testPod-954", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 139257722318377983010910379350606130564, .node = "testNode-95", .pods = [k8spolicy.PodReference{.name = "testPod-957", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 142278977582764137450706381106654140015, .node = "testNode-93", .pods = [k8spolicy.PodReference{.name = "testPod-935", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 144679705734765771383424614329978934963, .node = "testNode-94", .pods = [k8spolicy.PodReference{.name = "testPod-947", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 157832453976694039397936153148739564370, .node = "testNode-95", .pods = [k8spolicy.PodReference{.name = "testPod-959", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 170180023383795290405935208413263291343, .node = "testNode-93", .pods = [k8spolicy.PodReference{.name = "testPod-939", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 182835475002275863146609398249234826144, .node = "testNode-92", .pods = [k8spolicy.PodReference{.name = "testPod-929", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 190441149640467033953620392360271644975, .node = "testNode-93", .pods = [k8spolicy.PodReference{.name = "testPod-931", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 197394531688979768514698467973151916378, .node = "testNode-94", .pods = [k8spolicy.PodReference{.name = "testPod-946", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 207484811570300099771179964418689917973, .node = "testNode-94", .pods = [k8spolicy.PodReference{.name = "testPod-948", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 212018859850742054076739919732658823861, .node = "testNode-95", .pods = [k8spolicy.PodReference{.name = "testPod-956", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 215516683071444669454098825092112700210, .node = "testNode-93", .pods = [k8spolicy.PodReference{.name = "testPod-930", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 224568550930731558504236309638539404275, .node = "testNode-94", .pods = [k8spolicy.PodReference{.name = "testPod-949", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 226358369160067895483295188054720646819, .node = "testNode-94", .pods = [k8spolicy.PodReference{.name = "testPod-940", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 228976924987340901700564889195045382803, .node = "testNode-95", .pods = [k8spolicy.PodReference{.name = "testPod-950", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 232436588221897914260673175466484333579, .node = "testNode-93", .pods = [k8spolicy.PodReference{.name = "testPod-934", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 238530022762936351723332763909404448473, .node = "testNode-95", .pods = [k8spolicy.PodReference{.name = "testPod-955", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 239716845774323234046385734049732776003, .node = "testNode-93", .pods = [k8spolicy.PodReference{.name = "testPod-937", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 284276812696431317722329384651848990239, .node = "testNode-94", .pods = [k8spolicy.PodReference{.name = "testPod-941", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 285690536665355970054173881991793205113, .node = "testNode-93", .pods = [k8spolicy.PodReference{.name = "testPod-938", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 287850734721851701042837025825477490912, .node = "testNode-93", .pods = [k8spolicy.PodReference{.name = "testPod-933", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 306830314506015856176620586045625347230, .node = "testNode-94", .pods = [k8spolicy.PodReference{.name = "testPod-944", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 308245717831027817717477028421452060664, .node = "testNode-94", .pods = [k8spolicy.PodReference{.name = "testPod-943", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 331898218482394052943927654159430371627, .node = "testNode-94", .pods = [k8spolicy.PodReference{.name = "testPod-942", .namespace = "testNamespace"}]}: -1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 22644253725290928640231557611890804044, .span = "testNode-93"}: -1
AppliedToGroupSpan{.appliedToGroup = 28035633820864827285289142082221939225, .span = "testNode-94"}: -1
AppliedToGroupSpan{.appliedToGroup = 41222766383973271318512058935010269125, .span = "testNode-95"}: -1
AppliedToGroupSpan{.appliedToGroup = 62131557931447129130973202157313119223, .span = "testNode-92"}: -1
AppliedToGroupSpan{.appliedToGroup = 67098069245097654131426564816705044690, .span = "testNode-93"}: -1
AppliedToGroupSpan{.appliedToGroup = 78694635668396274531784444203009793713, .span = "testNode-95"}: -1
AppliedToGroupSpan{.appliedToGroup = 91241772504908683776781434872618921585, .span = "testNode-95"}: -1
AppliedToGroupSpan{.appliedToGroup = 100444576583123224799837278022147750242, .span = "testNode-95"}: -1
AppliedToGroupSpan{.appliedToGroup = 135970361690114177319395643735779157372, .span = "testNode-95"}: -1
AppliedToGroupSpan{.appliedToGroup = 139257722318377983010910379350606130564, .span = "testNode-95"}: -1
AppliedToGroupSpan{.appliedToGroup = 142278977582764137450706381106654140015, .span = "testNode-93"}: -1
AppliedToGroupSpan{.appliedToGroup = 144679705734765771383424614329978934963, .span = "testNode-94"}: -1
AppliedToGroupSpan{.appliedToGroup = 157832453976694039397936153148739564370, .span = "testNode-95"}: -1
AppliedToGroupSpan{.appliedToGroup = 170180023383795290405935208413263291343, .span = "testNode-93"}: -1
AppliedToGroupSpan{.appliedToGroup = 182835475002275863146609398249234826144, .span = "testNode-92"}: -1
AppliedToGroupSpan{.appliedToGroup = 190441149640467033953620392360271644975, .span = "testNode-93"}: -1
AppliedToGroupSpan{.appliedToGroup = 197394531688979768514698467973151916378, .span = "testNode-94"}: -1
AppliedToGroupSpan{.appliedToGroup = 207484811570300099771179964418689917973, .span = "testNode-94"}: -1
AppliedToGroupSpan{.appliedToGroup = 212018859850742054076739919732658823861, .span = "testNode-95"}: -1
AppliedToGroupSpan{.appliedToGroup = 215516683071444669454098825092112700210, .span = "testNode-93"}: -1
AppliedToGroupSpan{.appliedToGroup = 224568550930731558504236309638539404275, .span = "testNode-94"}: -1
AppliedToGroupSpan{.appliedToGroup = 226358369160067895483295188054720646819, .span = "testNode-94"}: -1
AppliedToGroupSpan{.appliedToGroup = 228976924987340901700564889195045382803, .span = "testNode-95"}: -1
AppliedToGroupSpan{.appliedToGroup = 232436588221897914260673175466484333579, .span = "testNode-93"}: -1
AppliedToGroupSpan{.appliedToGroup = 238530022762936351723332763909404448473, .span = "testNode-95"}: -1
AppliedToGroupSpan{.appliedToGroup = 239716845774323234046385734049732776003, .span = "testNode-93"}: -1
AppliedToGroupSpan{.appliedToGroup = 284276812696431317722329384651848990239, .span = "testNode-94"}: -1
AppliedToGroupSpan{.appliedToGroup = 285690536665355970054173881991793205113, .span = "testNode-93"}: -1
AppliedToGroupSpan{.appliedToGroup = 287850734721851701042837025825477490912, .span = "testNode-93"}: -1
AppliedToGroupSpan{.appliedToGroup = 306830314506015856176620586045625347230, .span = "testNode-94"}: -1
AppliedToGroupSpan{.appliedToGroup = 308245717831027817717477028421452060664, .span = "testNode-94"}: -1
AppliedToGroupSpan{.appliedToGroup = 331898218482394052943927654159430371627, .span = "testNode-94"}: -1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-928"}, .name = "testNP-928", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [182835475002275863146609398249234826144], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [62131557931447129130973202157313119223]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-929"}, .name = "testNP-929", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [215516683071444669454098825092112700210], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [182835475002275863146609398249234826144]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-930"}, .name = "testNP-930", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [190441149640467033953620392360271644975], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [215516683071444669454098825092112700210]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-931"}, .name = "testNP-931", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [67098069245097654131426564816705044690], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [190441149640467033953620392360271644975]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-932"}, .name = "testNP-932", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [287850734721851701042837025825477490912], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [67098069245097654131426564816705044690]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-933"}, .name = "testNP-933", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [232436588221897914260673175466484333579], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [287850734721851701042837025825477490912]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-934"}, .name = "testNP-934", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [142278977582764137450706381106654140015], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [232436588221897914260673175466484333579]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-935"}, .name = "testNP-935", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [22644253725290928640231557611890804044], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [142278977582764137450706381106654140015]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-936"}, .name = "testNP-936", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [239716845774323234046385734049732776003], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [22644253725290928640231557611890804044]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-937"}, .name = "testNP-937", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [285690536665355970054173881991793205113], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [239716845774323234046385734049732776003]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-938"}, .name = "testNP-938", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [170180023383795290405935208413263291343], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [285690536665355970054173881991793205113]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-939"}, .name = "testNP-939", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [226358369160067895483295188054720646819], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [170180023383795290405935208413263291343]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-940"}, .name = "testNP-940", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [284276812696431317722329384651848990239], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [226358369160067895483295188054720646819]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-941"}, .name = "testNP-941", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [331898218482394052943927654159430371627], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [284276812696431317722329384651848990239]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-942"}, .name = "testNP-942", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [308245717831027817717477028421452060664], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [331898218482394052943927654159430371627]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-943"}, .name = "testNP-943", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [306830314506015856176620586045625347230], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [308245717831027817717477028421452060664]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-944"}, .name = "testNP-944", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [28035633820864827285289142082221939225], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [306830314506015856176620586045625347230]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-945"}, .name = "testNP-945", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [197394531688979768514698467973151916378], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [28035633820864827285289142082221939225]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-946"}, .name = "testNP-946", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [144679705734765771383424614329978934963], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [197394531688979768514698467973151916378]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-947"}, .name = "testNP-947", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [207484811570300099771179964418689917973], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [144679705734765771383424614329978934963]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-948"}, .name = "testNP-948", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [224568550930731558504236309638539404275], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [207484811570300099771179964418689917973]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-949"}, .name = "testNP-949", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [228976924987340901700564889195045382803], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [224568550930731558504236309638539404275]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-950"}, .name = "testNP-950", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [41222766383973271318512058935010269125], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [228976924987340901700564889195045382803]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-951"}, .name = "testNP-951", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [91241772504908683776781434872618921585], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [41222766383973271318512058935010269125]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-952"}, .name = "testNP-952", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [100444576583123224799837278022147750242], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [91241772504908683776781434872618921585]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-953"}, .name = "testNP-953", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [135970361690114177319395643735779157372], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [100444576583123224799837278022147750242]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-954"}, .name = "testNP-954", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [238530022762936351723332763909404448473], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [135970361690114177319395643735779157372]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-955"}, .name = "testNP-955", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [212018859850742054076739919732658823861], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [238530022762936351723332763909404448473]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-956"}, .name = "testNP-956", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [139257722318377983010910379350606130564], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [212018859850742054076739919732658823861]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-957"}, .name = "testNP-957", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [78694635668396274531784444203009793713], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [139257722318377983010910379350606130564]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-958"}, .name = "testNP-958", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [157832453976694039397936153148739564370], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [78694635668396274531784444203009793713]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-959"}, .name = "testNP-959", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [165955253148851010787037661879322972000], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [157832453976694039397936153148739564370]}: -1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-928", .policy = k8spolicy.UID{.uid = "testNP-928"}, .node = "testNode-92"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-929", .policy = k8spolicy.UID{.uid = "testNP-929"}, .node = "testNode-92"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-930", .policy = k8spolicy.UID{.uid = "testNP-930"}, .node = "testNode-93"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-931", .policy = k8spolicy.UID{.uid = "testNP-931"}, .node = "testNode-93"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-932", .policy = k8spolicy.UID{.uid = "testNP-932"}, .node = "testNode-93"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-933", .policy = k8spolicy.UID{.uid = "testNP-933"}, .node = "testNode-93"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-934", .policy = k8spolicy.UID{.uid = "testNP-934"}, .node = "testNode-93"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-935", .policy = k8spolicy.UID{.uid = "testNP-935"}, .node = "testNode-93"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-936", .policy = k8spolicy.UID{.uid = "testNP-936"}, .node = "testNode-93"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-937", .policy = k8spolicy.UID{.uid = "testNP-937"}, .node = "testNode-93"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-938", .policy = k8spolicy.UID{.uid = "testNP-938"}, .node = "testNode-93"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-939", .policy = k8spolicy.UID{.uid = "testNP-939"}, .node = "testNode-93"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-940", .policy = k8spolicy.UID{.uid = "testNP-940"}, .node = "testNode-94"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-941", .policy = k8spolicy.UID{.uid = "testNP-941"}, .node = "testNode-94"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-942", .policy = k8spolicy.UID{.uid = "testNP-942"}, .node = "testNode-94"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-943", .policy = k8spolicy.UID{.uid = "testNP-943"}, .node = "testNode-94"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-944", .policy = k8spolicy.UID{.uid = "testNP-944"}, .node = "testNode-94"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-945", .policy = k8spolicy.UID{.uid = "testNP-945"}, .node = "testNode-94"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-946", .policy = k8spolicy.UID{.uid = "testNP-946"}, .node = "testNode-94"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-947", .policy = k8spolicy.UID{.uid = "testNP-947"}, .node = "testNode-94"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-948", .policy = k8spolicy.UID{.uid = "testNP-948"}, .node = "testNode-94"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-949", .policy = k8spolicy.UID{.uid = "testNP-949"}, .node = "testNode-94"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-950", .policy = k8spolicy.UID{.uid = "testNP-950"}, .node = "testNode-95"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-951", .policy = k8spolicy.UID{.uid = "testNP-951"}, .node = "testNode-95"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-952", .policy = k8spolicy.UID{.uid = "testNP-952"}, .node = "testNode-95"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-953", .policy = k8spolicy.UID{.uid = "testNP-953"}, .node = "testNode-95"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-954", .policy = k8spolicy.UID{.uid = "testNP-954"}, .node = "testNode-95"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-955", .policy = k8spolicy.UID{.uid = "testNP-955"}, .node = "testNode-95"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-956", .policy = k8spolicy.UID{.uid = "testNP-956"}, .node = "testNode-95"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-957", .policy = k8spolicy.UID{.uid = "testNP-957"}, .node = "testNode-95"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-958", .policy = k8spolicy.UID{.uid = "testNP-958"}, .node = "testNode-95"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-959", .policy = k8spolicy.UID{.uid = "testNP-959"}, .node = "testNode-95"}: -1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 6955428896405004454325893922592310381, .address = "10.10.97.7"}: -1
AddressGroupAddress{.addressGroup = 12977617920415401539443967260442034781, .address = "10.10.96.3"}: -1
AddressGroupAddress{.addressGroup = 19780984264382063499464797807697988969, .address = "10.10.98.8"}: -1
AddressGroupAddress{.addressGroup = 28067490434767610700932031817057124467, .address = "10.10.97.8"}: -1
AddressGroupAddress{.addressGroup = 58580881636511900247074240901258357817, .address = "10.10.98.3"}: -1
AddressGroupAddress{.addressGroup = 78530837646477164436667492468154438242, .address = "10.10.99.1"}: -1
AddressGroupAddress{.addressGroup = 82828131887249884533723701257438661146, .address = "10.10.97.2"}: -1
AddressGroupAddress{.addressGroup = 90529116978299336604867041053592005814, .address = "10.10.96.7"}: -1
AddressGroupAddress{.addressGroup = 97397905553662350940973787766583353241, .address = "10.10.98.2"}: -1
AddressGroupAddress{.addressGroup = 103776551732556865730733822187495263396, .address = "10.10.96.9"}: -1
AddressGroupAddress{.addressGroup = 122750137078830765493163989058678993709, .address = "10.10.97.4"}: -1
AddressGroupAddress{.addressGroup = 124305456095363608261833557770710852073, .address = "10.10.98.1"}: -1
AddressGroupAddress{.addressGroup = 125457437807456623520271095090074814657, .address = "10.10.98.5"}: -1
AddressGroupAddress{.addressGroup = 147628045017224055507693129211310379936, .address = "10.10.97.9"}: -1
AddressGroupAddress{.addressGroup = 150281684632617380914825377053888167844, .address = "10.10.96.4"}: -1
AddressGroupAddress{.addressGroup = 202632730968193689942333092426544352341, .address = "10.10.98.7"}: -1
AddressGroupAddress{.addressGroup = 205320738554122795774216144233380572324, .address = "10.10.98.0"}: -1
AddressGroupAddress{.addressGroup = 208958934596764046016617930950810457235, .address = "10.10.96.8"}: -1
AddressGroupAddress{.addressGroup = 214516247379047544100044191790965195055, .address = "10.10.98.9"}: -1
AddressGroupAddress{.addressGroup = 226474586797790666991108951146544244350, .address = "10.10.97.0"}: -1
AddressGroupAddress{.addressGroup = 230443388661938050083912444590094774494, .address = "10.10.99.2"}: -1
AddressGroupAddress{.addressGroup = 231397646714241430473412006113042657340, .address = "10.10.98.4"}: -1
AddressGroupAddress{.addressGroup = 241933318919899387164284680472992336446, .address = "10.10.97.6"}: -1
AddressGroupAddress{.addressGroup = 265312899403064056151572050612998779018, .address = "10.10.96.6"}: -1
AddressGroupAddress{.addressGroup = 276878493953706068313013360845652423508, .address = "10.10.96.5"}: -1
AddressGroupAddress{.addressGroup = 294583558913471611450879899960657037137, .address = "10.10.97.3"}: -1
AddressGroupAddress{.addressGroup = 302398038345402927436961354535502970252, .address = "10.10.98.6"}: -1
AddressGroupAddress{.addressGroup = 328353484843600003650135779002917661024, .address = "10.10.97.1"}: -1
AddressGroupAddress{.addressGroup = 329065738897500730756863593153986748985, .address = "10.10.96.1"}: -1
AddressGroupAddress{.addressGroup = 339074160255194639522416675461604207183, .address = "10.10.99.0"}: -1
AddressGroupAddress{.addressGroup = 339317329006400214262769459344852923417, .address = "10.10.96.2"}: -1
AddressGroupAddress{.addressGroup = 339363722217751649784544708855688890761, .address = "10.10.97.5"}: -1
AddressGroupDescr:
AddressGroupDescr{.name = "053b911e-f779-5223-88ad-adeacd6ac46d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-977]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-977")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "09c365f6-b998-5c6a-ba07-88aa29b9025d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-963]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-963")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "0ee1add2-7289-5b58-aae3-e5794b840d69", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-988]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-988")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "151d9a1e-9621-5138-bcb3-e1ad3cbd4073", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-978]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-978")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "2c124475-1012-52ee-b743-a9c0fe4b2c39", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-983]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-983")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "3b147d3a-c6eb-58d9-b74c-268660681262", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-991]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-991")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "3e501e31-92ce-52dc-8056-5a4609d68a1a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-972]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-972")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "441b4612-b19a-57d1-a51d-987a11f82cb6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-967]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-967")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "4946277f-112c-5c0a-b567-7dbf39c25f99", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-982]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-982")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "4e12a308-a5b9-5a87-8bf5-007597bc8ca4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-969]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-969")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "5c58d104-083b-5905-becc-0fb8a350b32d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-974]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-974")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "5d845c29-e8a6-5b71-a48a-d6f40ef0a1e9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-981]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-981")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "5e62393f-49b9-57d7-8f57-b8d07ac308c1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-985]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-985")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "6f102093-a719-56d9-9715-f985470613a0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-979]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-979")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "710f331c-7055-5ef5-9a3e-e183984b3fa4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-964]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-964")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "9871a4f9-437b-5129-9d0c-732851248c55", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-987]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-987")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "9a7755fa-d2bf-5708-bdd0-2558b81deca4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-980]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-980")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "9d3406e4-cce3-549e-bf12-0dbf95c6d493", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-968]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-968")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "a1625391-7909-5d71-af5f-21316088012f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-989]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-989")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "aa616b38-d052-517d-abcd-a27f5a00267e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-970]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-970")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "ad5dc842-e9b1-594a-acc0-da13e87f70de", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-992]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-992")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "ae1590d0-d91f-516f-8406-da4fd6b6703c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-984]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-984")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "b602a98f-75dd-5ff8-bca1-34374622ca3e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-976]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-976")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "c79967df-d6ae-5625-b615-50e91452308a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-966]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-966")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "d04cdbb6-065a-5ae0-84db-719000c6f354", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-965]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-965")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "dd9ebacf-29d0-5cfd-adb2-e690e57fc751", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-973]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-973")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "e37fbe64-4268-584d-b541-f2c27d8d7d8c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-986]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-986")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "f70694b4-9442-56ed-80aa-096d94a52960", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-971]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-971")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "f78fc18a-9f59-51f8-a488-261ae966e239", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-961]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-961")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "ff174ecf-ef7b-5f5f-b5e9-4d9508d26a4f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-990]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-990")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "ff4623f5-131b-5aca-a81a-3ecf31283419", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-962]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-962")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "ff4f1351-b9d3-5650-8c86-db65f6388989", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-975]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-975")], .matchExpressions = []}}}}: -1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 6955428896405004454325893922592310381, .node = "testNode-97"}: -1
AddressGroupSpan{.addressGroup = 12977617920415401539443967260442034781, .node = "testNode-96"}: -1
AddressGroupSpan{.addressGroup = 19780984264382063499464797807697988969, .node = "testNode-98"}: -1
AddressGroupSpan{.addressGroup = 28067490434767610700932031817057124467, .node = "testNode-97"}: -1
AddressGroupSpan{.addressGroup = 58580881636511900247074240901258357817, .node = "testNode-98"}: -1
AddressGroupSpan{.addressGroup = 78530837646477164436667492468154438242, .node = "testNode-99"}: -1
AddressGroupSpan{.addressGroup = 82828131887249884533723701257438661146, .node = "testNode-97"}: -1
AddressGroupSpan{.addressGroup = 90529116978299336604867041053592005814, .node = "testNode-96"}: -1
AddressGroupSpan{.addressGroup = 97397905553662350940973787766583353241, .node = "testNode-98"}: -1
AddressGroupSpan{.addressGroup = 103776551732556865730733822187495263396, .node = "testNode-96"}: -1
AddressGroupSpan{.addressGroup = 122750137078830765493163989058678993709, .node = "testNode-97"}: -1
AddressGroupSpan{.addressGroup = 124305456095363608261833557770710852073, .node = "testNode-98"}: -1
AddressGroupSpan{.addressGroup = 125457437807456623520271095090074814657, .node = "testNode-98"}: -1
AddressGroupSpan{.addressGroup = 147628045017224055507693129211310379936, .node = "testNode-97"}: -1
AddressGroupSpan{.addressGroup = 150281684632617380914825377053888167844, .node = "testNode-96"}: -1
AddressGroupSpan{.addressGroup = 202632730968193689942333092426544352341, .node = "testNode-98"}: -1
AddressGroupSpan{.addressGroup = 205320738554122795774216144233380572324, .node = "testNode-97"}: -1
AddressGroupSpan{.addressGroup = 208958934596764046016617930950810457235, .node = "testNode-96"}: -1
AddressGroupSpan{.addressGroup = 214516247379047544100044191790965195055, .node = "testNode-98"}: -1
AddressGroupSpan{.addressGroup = 226474586797790666991108951146544244350, .node = "testNode-96"}: -1
AddressGroupSpan{.addressGroup = 230443388661938050083912444590094774494, .node = "testNode-99"}: -1
AddressGroupSpan{.addressGroup = 231397646714241430473412006113042657340, .node = "testNode-98"}: -1
AddressGroupSpan{.addressGroup = 241933318919899387164284680472992336446, .node = "testNode-97"}: -1
AddressGroupSpan{.addressGroup = 265312899403064056151572050612998779018, .node = "testNode-96"}: -1
AddressGroupSpan{.addressGroup = 276878493953706068313013360845652423508, .node = "testNode-96"}: -1
AddressGroupSpan{.addressGroup = 294583558913471611450879899960657037137, .node = "testNode-97"}: -1
AddressGroupSpan{.addressGroup = 302398038345402927436961354535502970252, .node = "testNode-98"}: -1
AddressGroupSpan{.addressGroup = 328353484843600003650135779002917661024, .node = "testNode-97"}: -1
AddressGroupSpan{.addressGroup = 329065738897500730756863593153986748985, .node = "testNode-96"}: -1
AddressGroupSpan{.addressGroup = 339074160255194639522416675461604207183, .node = "testNode-98"}: -1
AddressGroupSpan{.addressGroup = 339317329006400214262769459344852923417, .node = "testNode-96"}: -1
AddressGroupSpan{.addressGroup = 339363722217751649784544708855688890761, .node = "testNode-97"}: -1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "053b911e-f779-5223-88ad-adeacd6ac46d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-977]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-977")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "09c365f6-b998-5c6a-ba07-88aa29b9025d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-963]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-963")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "0ee1add2-7289-5b58-aae3-e5794b840d69", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-988]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-988")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "151d9a1e-9621-5138-bcb3-e1ad3cbd4073", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-978]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-978")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "2c124475-1012-52ee-b743-a9c0fe4b2c39", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-983]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-983")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "3b147d3a-c6eb-58d9-b74c-268660681262", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-991]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-991")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "3e501e31-92ce-52dc-8056-5a4609d68a1a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-972]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-972")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "441b4612-b19a-57d1-a51d-987a11f82cb6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-967]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-967")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "4946277f-112c-5c0a-b567-7dbf39c25f99", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-982]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-982")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "4e12a308-a5b9-5a87-8bf5-007597bc8ca4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-969]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-969")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "5c58d104-083b-5905-becc-0fb8a350b32d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-974]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-974")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "5d845c29-e8a6-5b71-a48a-d6f40ef0a1e9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-981]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-981")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "5e62393f-49b9-57d7-8f57-b8d07ac308c1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-985]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-985")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "6f102093-a719-56d9-9715-f985470613a0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-979]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-979")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "710f331c-7055-5ef5-9a3e-e183984b3fa4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-964]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-964")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "7cd9d1b3-9a5b-5a9e-83d0-e291784a8f60", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-960]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-960")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "9871a4f9-437b-5129-9d0c-732851248c55", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-987]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-987")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "9a7755fa-d2bf-5708-bdd0-2558b81deca4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-980]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-980")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "9d3406e4-cce3-549e-bf12-0dbf95c6d493", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-968]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-968")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "a1625391-7909-5d71-af5f-21316088012f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-989]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-989")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "aa616b38-d052-517d-abcd-a27f5a00267e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-970]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-970")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "ae1590d0-d91f-516f-8406-da4fd6b6703c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-984]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-984")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "b602a98f-75dd-5ff8-bca1-34374622ca3e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-976]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-976")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "c79967df-d6ae-5625-b615-50e91452308a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-966]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-966")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "d04cdbb6-065a-5ae0-84db-719000c6f354", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-965]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-965")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "dd9ebacf-29d0-5cfd-adb2-e690e57fc751", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-973]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-973")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "e37fbe64-4268-584d-b541-f2c27d8d7d8c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-986]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-986")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "f70694b4-9442-56ed-80aa-096d94a52960", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-971]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-971")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "f78fc18a-9f59-51f8-a488-261ae966e239", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-961]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-961")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "ff174ecf-ef7b-5f5f-b5e9-4d9508d26a4f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-990]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-990")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "ff4623f5-131b-5aca-a81a-3ecf31283419", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-962]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-962")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "ff4f1351-b9d3-5650-8c86-db65f6388989", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-975]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-975")], .matchExpressions = []}}}}: -1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 6955428896405004454325893922592310381, .node = "testNode-97", .pods = [k8spolicy.PodReference{.name = "testPod-977", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 12977617920415401539443967260442034781, .node = "testNode-96", .pods = [k8spolicy.PodReference{.name = "testPod-963", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 19780984264382063499464797807697988969, .node = "testNode-98", .pods = [k8spolicy.PodReference{.name = "testPod-988", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 28067490434767610700932031817057124467, .node = "testNode-97", .pods = [k8spolicy.PodReference{.name = "testPod-978", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 58580881636511900247074240901258357817, .node = "testNode-98", .pods = [k8spolicy.PodReference{.name = "testPod-983", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 78530837646477164436667492468154438242, .node = "testNode-99", .pods = [k8spolicy.PodReference{.name = "testPod-991", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 82828131887249884533723701257438661146, .node = "testNode-97", .pods = [k8spolicy.PodReference{.name = "testPod-972", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 90529116978299336604867041053592005814, .node = "testNode-96", .pods = [k8spolicy.PodReference{.name = "testPod-967", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 97397905553662350940973787766583353241, .node = "testNode-98", .pods = [k8spolicy.PodReference{.name = "testPod-982", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 103776551732556865730733822187495263396, .node = "testNode-96", .pods = [k8spolicy.PodReference{.name = "testPod-969", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 122750137078830765493163989058678993709, .node = "testNode-97", .pods = [k8spolicy.PodReference{.name = "testPod-974", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 124305456095363608261833557770710852073, .node = "testNode-98", .pods = [k8spolicy.PodReference{.name = "testPod-981", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 125457437807456623520271095090074814657, .node = "testNode-98", .pods = [k8spolicy.PodReference{.name = "testPod-985", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 147628045017224055507693129211310379936, .node = "testNode-97", .pods = [k8spolicy.PodReference{.name = "testPod-979", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 150281684632617380914825377053888167844, .node = "testNode-96", .pods = [k8spolicy.PodReference{.name = "testPod-964", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 165955253148851010787037661879322972000, .node = "testNode-96", .pods = [k8spolicy.PodReference{.name = "testPod-960", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 202632730968193689942333092426544352341, .node = "testNode-98", .pods = [k8spolicy.PodReference{.name = "testPod-987", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 205320738554122795774216144233380572324, .node = "testNode-98", .pods = [k8spolicy.PodReference{.name = "testPod-980", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 208958934596764046016617930950810457235, .node = "testNode-96", .pods = [k8spolicy.PodReference{.name = "testPod-968", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 214516247379047544100044191790965195055, .node = "testNode-98", .pods = [k8spolicy.PodReference{.name = "testPod-989", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 226474586797790666991108951146544244350, .node = "testNode-97", .pods = [k8spolicy.PodReference{.name = "testPod-970", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 231397646714241430473412006113042657340, .node = "testNode-98", .pods = [k8spolicy.PodReference{.name = "testPod-984", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 241933318919899387164284680472992336446, .node = "testNode-97", .pods = [k8spolicy.PodReference{.name = "testPod-976", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 265312899403064056151572050612998779018, .node = "testNode-96", .pods = [k8spolicy.PodReference{.name = "testPod-966", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 276878493953706068313013360845652423508, .node = "testNode-96", .pods = [k8spolicy.PodReference{.name = "testPod-965", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 294583558913471611450879899960657037137, .node = "testNode-97", .pods = [k8spolicy.PodReference{.name = "testPod-973", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 302398038345402927436961354535502970252, .node = "testNode-98", .pods = [k8spolicy.PodReference{.name = "testPod-986", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 328353484843600003650135779002917661024, .node = "testNode-97", .pods = [k8spolicy.PodReference{.name = "testPod-971", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 329065738897500730756863593153986748985, .node = "testNode-96", .pods = [k8spolicy.PodReference{.name = "testPod-961", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 339074160255194639522416675461604207183, .node = "testNode-99", .pods = [k8spolicy.PodReference{.name = "testPod-990", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 339317329006400214262769459344852923417, .node = "testNode-96", .pods = [k8spolicy.PodReference{.name = "testPod-962", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 339363722217751649784544708855688890761, .node = "testNode-97", .pods = [k8spolicy.PodReference{.name = "testPod-975", .namespace = "testNamespace"}]}: -1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 6955428896405004454325893922592310381, .span = "testNode-97"}: -1
AppliedToGroupSpan{.appliedToGroup = 12977617920415401539443967260442034781, .span = "testNode-96"}: -1
AppliedToGroupSpan{.appliedToGroup = 19780984264382063499464797807697988969, .span = "testNode-98"}: -1
AppliedToGroupSpan{.appliedToGroup = 28067490434767610700932031817057124467, .span = "testNode-97"}: -1
AppliedToGroupSpan{.appliedToGroup = 58580881636511900247074240901258357817, .span = "testNode-98"}: -1
AppliedToGroupSpan{.appliedToGroup = 78530837646477164436667492468154438242, .span = "testNode-99"}: -1
AppliedToGroupSpan{.appliedToGroup = 82828131887249884533723701257438661146, .span = "testNode-97"}: -1
AppliedToGroupSpan{.appliedToGroup = 90529116978299336604867041053592005814, .span = "testNode-96"}: -1
AppliedToGroupSpan{.appliedToGroup = 97397905553662350940973787766583353241, .span = "testNode-98"}: -1
AppliedToGroupSpan{.appliedToGroup = 103776551732556865730733822187495263396, .span = "testNode-96"}: -1
AppliedToGroupSpan{.appliedToGroup = 122750137078830765493163989058678993709, .span = "testNode-97"}: -1
AppliedToGroupSpan{.appliedToGroup = 124305456095363608261833557770710852073, .span = "testNode-98"}: -1
AppliedToGroupSpan{.appliedToGroup = 125457437807456623520271095090074814657, .span = "testNode-98"}: -1
AppliedToGroupSpan{.appliedToGroup = 147628045017224055507693129211310379936, .span = "testNode-97"}: -1
AppliedToGroupSpan{.appliedToGroup = 150281684632617380914825377053888167844, .span = "testNode-96"}: -1
AppliedToGroupSpan{.appliedToGroup = 165955253148851010787037661879322972000, .span = "testNode-96"}: -1
AppliedToGroupSpan{.appliedToGroup = 202632730968193689942333092426544352341, .span = "testNode-98"}: -1
AppliedToGroupSpan{.appliedToGroup = 205320738554122795774216144233380572324, .span = "testNode-98"}: -1
AppliedToGroupSpan{.appliedToGroup = 208958934596764046016617930950810457235, .span = "testNode-96"}: -1
AppliedToGroupSpan{.appliedToGroup = 214516247379047544100044191790965195055, .span = "testNode-98"}: -1
AppliedToGroupSpan{.appliedToGroup = 226474586797790666991108951146544244350, .span = "testNode-97"}: -1
AppliedToGroupSpan{.appliedToGroup = 231397646714241430473412006113042657340, .span = "testNode-98"}: -1
AppliedToGroupSpan{.appliedToGroup = 241933318919899387164284680472992336446, .span = "testNode-97"}: -1
AppliedToGroupSpan{.appliedToGroup = 265312899403064056151572050612998779018, .span = "testNode-96"}: -1
AppliedToGroupSpan{.appliedToGroup = 276878493953706068313013360845652423508, .span = "testNode-96"}: -1
AppliedToGroupSpan{.appliedToGroup = 294583558913471611450879899960657037137, .span = "testNode-97"}: -1
AppliedToGroupSpan{.appliedToGroup = 302398038345402927436961354535502970252, .span = "testNode-98"}: -1
AppliedToGroupSpan{.appliedToGroup = 328353484843600003650135779002917661024, .span = "testNode-97"}: -1
AppliedToGroupSpan{.appliedToGroup = 329065738897500730756863593153986748985, .span = "testNode-96"}: -1
AppliedToGroupSpan{.appliedToGroup = 339074160255194639522416675461604207183, .span = "testNode-99"}: -1
AppliedToGroupSpan{.appliedToGroup = 339317329006400214262769459344852923417, .span = "testNode-96"}: -1
AppliedToGroupSpan{.appliedToGroup = 339363722217751649784544708855688890761, .span = "testNode-97"}: -1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-960"}, .name = "testNP-960", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [329065738897500730756863593153986748985], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [165955253148851010787037661879322972000]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-961"}, .name = "testNP-961", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [339317329006400214262769459344852923417], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [329065738897500730756863593153986748985]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-962"}, .name = "testNP-962", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [12977617920415401539443967260442034781], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [339317329006400214262769459344852923417]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-963"}, .name = "testNP-963", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [150281684632617380914825377053888167844], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [12977617920415401539443967260442034781]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-964"}, .name = "testNP-964", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [276878493953706068313013360845652423508], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [150281684632617380914825377053888167844]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-965"}, .name = "testNP-965", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [265312899403064056151572050612998779018], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [276878493953706068313013360845652423508]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-966"}, .name = "testNP-966", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [90529116978299336604867041053592005814], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [265312899403064056151572050612998779018]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-967"}, .name = "testNP-967", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [208958934596764046016617930950810457235], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [90529116978299336604867041053592005814]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-968"}, .name = "testNP-968", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [103776551732556865730733822187495263396], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [208958934596764046016617930950810457235]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-969"}, .name = "testNP-969", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [226474586797790666991108951146544244350], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [103776551732556865730733822187495263396]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-970"}, .name = "testNP-970", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [328353484843600003650135779002917661024], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [226474586797790666991108951146544244350]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-971"}, .name = "testNP-971", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [82828131887249884533723701257438661146], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [328353484843600003650135779002917661024]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-972"}, .name = "testNP-972", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [294583558913471611450879899960657037137], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [82828131887249884533723701257438661146]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-973"}, .name = "testNP-973", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [122750137078830765493163989058678993709], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [294583558913471611450879899960657037137]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-974"}, .name = "testNP-974", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [339363722217751649784544708855688890761], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [122750137078830765493163989058678993709]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-975"}, .name = "testNP-975", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [241933318919899387164284680472992336446], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [339363722217751649784544708855688890761]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-976"}, .name = "testNP-976", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [6955428896405004454325893922592310381], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [241933318919899387164284680472992336446]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-977"}, .name = "testNP-977", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [28067490434767610700932031817057124467], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [6955428896405004454325893922592310381]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-978"}, .name = "testNP-978", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [147628045017224055507693129211310379936], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [28067490434767610700932031817057124467]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-979"}, .name = "testNP-979", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [205320738554122795774216144233380572324], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [147628045017224055507693129211310379936]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-980"}, .name = "testNP-980", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [124305456095363608261833557770710852073], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [205320738554122795774216144233380572324]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-981"}, .name = "testNP-981", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [97397905553662350940973787766583353241], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [124305456095363608261833557770710852073]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-982"}, .name = "testNP-982", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [58580881636511900247074240901258357817], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [97397905553662350940973787766583353241]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-983"}, .name = "testNP-983", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [231397646714241430473412006113042657340], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [58580881636511900247074240901258357817]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-984"}, .name = "testNP-984", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [125457437807456623520271095090074814657], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [231397646714241430473412006113042657340]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-985"}, .name = "testNP-985", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [302398038345402927436961354535502970252], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [125457437807456623520271095090074814657]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-986"}, .name = "testNP-986", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [202632730968193689942333092426544352341], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [302398038345402927436961354535502970252]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-987"}, .name = "testNP-987", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [19780984264382063499464797807697988969], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [202632730968193689942333092426544352341]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-988"}, .name = "testNP-988", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [214516247379047544100044191790965195055], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [19780984264382063499464797807697988969]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-989"}, .name = "testNP-989", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [339074160255194639522416675461604207183], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [214516247379047544100044191790965195055]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-990"}, .name = "testNP-990", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [78530837646477164436667492468154438242], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [339074160255194639522416675461604207183]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-991"}, .name = "testNP-991", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [230443388661938050083912444590094774494], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [78530837646477164436667492468154438242]}: -1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-960", .policy = k8spolicy.UID{.uid = "testNP-960"}, .node = "testNode-96"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-961", .policy = k8spolicy.UID{.uid = "testNP-961"}, .node = "testNode-96"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-962", .policy = k8spolicy.UID{.uid = "testNP-962"}, .node = "testNode-96"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-963", .policy = k8spolicy.UID{.uid = "testNP-963"}, .node = "testNode-96"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-964", .policy = k8spolicy.UID{.uid = "testNP-964"}, .node = "testNode-96"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-965", .policy = k8spolicy.UID{.uid = "testNP-965"}, .node = "testNode-96"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-966", .policy = k8spolicy.UID{.uid = "testNP-966"}, .node = "testNode-96"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-967", .policy = k8spolicy.UID{.uid = "testNP-967"}, .node = "testNode-96"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-968", .policy = k8spolicy.UID{.uid = "testNP-968"}, .node = "testNode-96"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-969", .policy = k8spolicy.UID{.uid = "testNP-969"}, .node = "testNode-96"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-970", .policy = k8spolicy.UID{.uid = "testNP-970"}, .node = "testNode-97"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-971", .policy = k8spolicy.UID{.uid = "testNP-971"}, .node = "testNode-97"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-972", .policy = k8spolicy.UID{.uid = "testNP-972"}, .node = "testNode-97"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-973", .policy = k8spolicy.UID{.uid = "testNP-973"}, .node = "testNode-97"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-974", .policy = k8spolicy.UID{.uid = "testNP-974"}, .node = "testNode-97"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-975", .policy = k8spolicy.UID{.uid = "testNP-975"}, .node = "testNode-97"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-976", .policy = k8spolicy.UID{.uid = "testNP-976"}, .node = "testNode-97"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-977", .policy = k8spolicy.UID{.uid = "testNP-977"}, .node = "testNode-97"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-978", .policy = k8spolicy.UID{.uid = "testNP-978"}, .node = "testNode-97"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-979", .policy = k8spolicy.UID{.uid = "testNP-979"}, .node = "testNode-97"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-980", .policy = k8spolicy.UID{.uid = "testNP-980"}, .node = "testNode-98"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-981", .policy = k8spolicy.UID{.uid = "testNP-981"}, .node = "testNode-98"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-982", .policy = k8spolicy.UID{.uid = "testNP-982"}, .node = "testNode-98"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-983", .policy = k8spolicy.UID{.uid = "testNP-983"}, .node = "testNode-98"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-984", .policy = k8spolicy.UID{.uid = "testNP-984"}, .node = "testNode-98"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-985", .policy = k8spolicy.UID{.uid = "testNP-985"}, .node = "testNode-98"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-986", .policy = k8spolicy.UID{.uid = "testNP-986"}, .node = "testNode-98"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-987", .policy = k8spolicy.UID{.uid = "testNP-987"}, .node = "testNode-98"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-988", .policy = k8spolicy.UID{.uid = "testNP-988"}, .node = "testNode-98"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-989", .policy = k8spolicy.UID{.uid = "testNP-989"}, .node = "testNode-98"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-990", .policy = k8spolicy.UID{.uid = "testNP-990"}, .node = "testNode-99"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-991", .policy = k8spolicy.UID{.uid = "testNP-991"}, .node = "testNode-99"}: -1
AddressGroupAddress:
AddressGroupAddress{.addressGroup = 26013505902303635868547526954876935271, .address = "10.10.99.4"}: -1
AddressGroupAddress{.addressGroup = 104522203589244290409050200849711159826, .address = "10.10.99.5"}: -1
AddressGroupAddress{.addressGroup = 106135039592768831683516347285194217116, .address = "10.10.0.0"}: -1
AddressGroupAddress{.addressGroup = 214554090761034450290647451098611736497, .address = "10.10.99.7"}: -1
AddressGroupAddress{.addressGroup = 231712728745164061900922256187351744785, .address = "10.10.99.6"}: -1
AddressGroupAddress{.addressGroup = 238344327590017704986812704519914182940, .address = "10.10.99.8"}: -1
AddressGroupAddress{.addressGroup = 318480578417254718287109121835430459875, .address = "10.10.99.3"}: -1
AddressGroupAddress{.addressGroup = 333866812920312720468549882465320413402, .address = "10.10.99.9"}: -1
AddressGroupDescr:
AddressGroupDescr{.name = "139204dd-0667-5289-9758-35e557541c67", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-994]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-994")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "4ea23e82-39c7-5c27-beb4-60d8c278da12", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-995]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-995")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "4fd8dd76-8a86-5dfc-8d03-690d43e9169c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-0]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-0")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "a1699d64-1b1e-5f4e-8b14-aea884b85fb1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-997]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-997")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "ae523f8f-2fae-5a35-8da4-01bc8ab1c111", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-996]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-996")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "b34f72a0-4572-56f0-8824-233988fed91c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-998]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-998")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "ef9920d6-2b33-52b0-8c61-8c9a61ee39e3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-993]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-993")], .matchExpressions = []}}}}: -1
AddressGroupDescr{.name = "fb2c68c4-3797-5ee0-9955-6f457273a8da", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-999]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-999")], .matchExpressions = []}}}}: -1
AddressGroupSpan:
AddressGroupSpan{.addressGroup = 26013505902303635868547526954876935271, .node = "testNode-99"}: -1
AddressGroupSpan{.addressGroup = 104522203589244290409050200849711159826, .node = "testNode-99"}: -1
AddressGroupSpan{.addressGroup = 106135039592768831683516347285194217116, .node = "testNode-99"}: -1
AddressGroupSpan{.addressGroup = 214554090761034450290647451098611736497, .node = "testNode-99"}: -1
AddressGroupSpan{.addressGroup = 231712728745164061900922256187351744785, .node = "testNode-99"}: -1
AddressGroupSpan{.addressGroup = 238344327590017704986812704519914182940, .node = "testNode-99"}: -1
AddressGroupSpan{.addressGroup = 318480578417254718287109121835430459875, .node = "testNode-99"}: -1
AddressGroupSpan{.addressGroup = 333866812920312720468549882465320413402, .node = "testNode-99"}: -1
AppliedToGroupDescr:
AppliedToGroupDescr{.name = "139204dd-0667-5289-9758-35e557541c67", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-994]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-994")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "4ea23e82-39c7-5c27-beb4-60d8c278da12", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-995]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-995")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "a1699d64-1b1e-5f4e-8b14-aea884b85fb1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-997]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-997")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "ad5dc842-e9b1-594a-acc0-da13e87f70de", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-992]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-992")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "ae523f8f-2fae-5a35-8da4-01bc8ab1c111", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-996]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-996")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "b34f72a0-4572-56f0-8824-233988fed91c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-998]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-998")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "ef9920d6-2b33-52b0-8c61-8c9a61ee39e3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-993]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-993")], .matchExpressions = []}}}}: -1
AppliedToGroupDescr{.name = "fb2c68c4-3797-5ee0-9955-6f457273a8da", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-999]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-999")], .matchExpressions = []}}}}: -1
AppliedToGroupPodsByNode:
AppliedToGroupPodsByNode{.appliedToGroup = 26013505902303635868547526954876935271, .node = "testNode-99", .pods = [k8spolicy.PodReference{.name = "testPod-994", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 104522203589244290409050200849711159826, .node = "testNode-99", .pods = [k8spolicy.PodReference{.name = "testPod-995", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 214554090761034450290647451098611736497, .node = "testNode-99", .pods = [k8spolicy.PodReference{.name = "testPod-997", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 230443388661938050083912444590094774494, .node = "testNode-99", .pods = [k8spolicy.PodReference{.name = "testPod-992", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 231712728745164061900922256187351744785, .node = "testNode-99", .pods = [k8spolicy.PodReference{.name = "testPod-996", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 238344327590017704986812704519914182940, .node = "testNode-99", .pods = [k8spolicy.PodReference{.name = "testPod-998", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 318480578417254718287109121835430459875, .node = "testNode-99", .pods = [k8spolicy.PodReference{.name = "testPod-993", .namespace = "testNamespace"}]}: -1
AppliedToGroupPodsByNode{.appliedToGroup = 333866812920312720468549882465320413402, .node = "testNode-99", .pods = [k8spolicy.PodReference{.name = "testPod-999", .namespace = "testNamespace"}]}: -1
AppliedToGroupSpan:
AppliedToGroupSpan{.appliedToGroup = 26013505902303635868547526954876935271, .span = "testNode-99"}: -1
AppliedToGroupSpan{.appliedToGroup = 104522203589244290409050200849711159826, .span = "testNode-99"}: -1
AppliedToGroupSpan{.appliedToGroup = 214554090761034450290647451098611736497, .span = "testNode-99"}: -1
AppliedToGroupSpan{.appliedToGroup = 230443388661938050083912444590094774494, .span = "testNode-99"}: -1
AppliedToGroupSpan{.appliedToGroup = 231712728745164061900922256187351744785, .span = "testNode-99"}: -1
AppliedToGroupSpan{.appliedToGroup = 238344327590017704986812704519914182940, .span = "testNode-99"}: -1
AppliedToGroupSpan{.appliedToGroup = 318480578417254718287109121835430459875, .span = "testNode-99"}: -1
AppliedToGroupSpan{.appliedToGroup = 333866812920312720468549882465320413402, .span = "testNode-99"}: -1
NetworkPolicyDescr:
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-992"}, .name = "testNP-992", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [318480578417254718287109121835430459875], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [230443388661938050083912444590094774494]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-993"}, .name = "testNP-993", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [26013505902303635868547526954876935271], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [318480578417254718287109121835430459875]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-994"}, .name = "testNP-994", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [104522203589244290409050200849711159826], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [26013505902303635868547526954876935271]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-995"}, .name = "testNP-995", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [231712728745164061900922256187351744785], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [104522203589244290409050200849711159826]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-996"}, .name = "testNP-996", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [214554090761034450290647451098611736497], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [231712728745164061900922256187351744785]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-997"}, .name = "testNP-997", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [238344327590017704986812704519914182940], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [214554090761034450290647451098611736497]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-998"}, .name = "testNP-998", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [333866812920312720468549882465320413402], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [238344327590017704986812704519914182940]}: -1
NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-999"}, .name = "testNP-999", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = [106135039592768831683516347285194217116], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = [333866812920312720468549882465320413402]}: -1
NetworkPolicySpan:
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-992", .policy = k8spolicy.UID{.uid = "testNP-992"}, .node = "testNode-99"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-993", .policy = k8spolicy.UID{.uid = "testNP-993"}, .node = "testNode-99"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-994", .policy = k8spolicy.UID{.uid = "testNP-994"}, .node = "testNode-99"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-995", .policy = k8spolicy.UID{.uid = "testNP-995"}, .node = "testNode-99"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-996", .policy = k8spolicy.UID{.uid = "testNP-996"}, .node = "testNode-99"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-997", .policy = k8spolicy.UID{.uid = "testNP-997"}, .node = "testNode-99"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-998", .policy = k8spolicy.UID{.uid = "testNP-998"}, .node = "testNode-99"}: -1
NetworkPolicySpan{.namespace = "testNamespace", .policy_name = "testNP-999", .policy = k8spolicy.UID{.uid = "testNP-999"}, .node = "testNode-99"}: -1
Profile:

Arrangement size profile
2000      Arrange: AddressGroupSpan.threshold_total 402
2000      Arrange: (&k8spolicy.Pod{.name=_, .namespace=_0, .uid=_, .labels=_, .spec=_, .status=_}) 134
2000      Arrange: NetworkPolicySpan.threshold_total 414
2000      Arrange: AddressGroupDescr.threshold_total 76
2000      Reduce: PodSelector(.uid=sel_uid, .namespace=namespace, .requirements=(positive_requirements, _)), var expected_matches = std.vec_len(positive_requirements), var req = FlatMap(positive_requirements), PodSatisfiesRequirement(.pod=(pod@ (&k8spolicy.Pod{.name=_, .namespace=namespace, .uid=_, .labels=_, .spec=_, .status=_})), .requirement=req), var num_matches = Aggregate((sel_uid,                                                                                                                                                                                                                                                                                                                                                                             pod,                                                                                                                                                                                                                                                                                                                                                                             expected_matches), std.group_count(())) 233
2000      Arrange: PodMatchesSelector{.uid=_0, .pod=(&k8spolicy.Pod{.name=_, .namespace=_1, .uid=_, .labels=_, .spec=_, .status=_})} 290
2000      Reduce: AppliedToGroupPod(.appliedToGroup=appliedToGroup, .pod=pod, .nodeName=nodeName), var pods = Aggregate((appliedToGroup,                                                                                                        nodeName), std.group2set(pod)) 343
2000      Arrange: PodLabel{.pod=(&k8spolicy.Pod{.name=_, .namespace=_0, .uid=_, .labels=_, .spec=_, .status=_}), .label=_1, .val=_2} 150
2000      Arrange: AppliedToGroupSpan.threshold_total 362
2000      Arrange: PodLabel{.pod=(&k8spolicy.Pod{.name=_, .namespace=_0, .uid=_, .labels=_, .spec=_, .status=_}), .label=_1, .val=_} 146
2000      Arrange: NetworkPolicyDescr.threshold_total 125
2000      Arrange: AppliedToGroupSpan{.appliedToGroup=_0, .span=_} 368
2000      Arrange: arrange AddressGroupDescrInternal[(addressGroup@ (&AddressGroupDescrInternal{.uid=_, .name=_, .namespace=_, .selector=types.GroupSelector{.normalizedName=_, .nsSelector=types.NSSelectorNS{.ns=ns}, .podSelector=_}}))] by (addressGroup.uid, ns) 295
2000      Arrange: (&AppliedToGroupDescrInternal{.uid=_0, .name=_, .namespace=_, .selector=types.GroupSelector{.normalizedName=_, .nsSelector=types.NSSelectorNS{.ns=_1}, .podSelector=std.Some{.x=_}}}) 32
2000      Arrange: arrange NetworkPolicyDescr[(descr@ (&NetworkPolicyDescr{.uid=_, .name=_, .namespace=_, .rules=_, .appliedToGroups=_}))], var appliedToGroup = FlatMap(descr.appliedToGroups) by (appliedToGroup) 375
2000      Arrange: AppliedToGroupDescr.threshold_total 42
2000      Arrange: PodMatchesPositiveRequirements{.selector=_0, .pod=_1} 246
2000      Arrange: AppliedToGroupPod{.appliedToGroup=_0, .pod=_, .nodeName=_1} 340
2000      Arrange: AddressGroupAddress.threshold_total 327
154      Arrange: arrange PodSelector(.uid=sel_uid, .namespace=namespace, .requirements=(positive_requirements, _)), var expected_matches = std.vec_len(positive_requirements), var req = FlatMap(positive_requirements), PodSatisfiesRequirement(.pod=(pod@ (&k8spolicy.Pod{.name=_, .namespace=namespace, .uid=_, .labels=_, .spec=_, .status=_})), .requirement=req) by (sel_uid, pod, expected_matches) 231
154      Arrange: arrange PositiveRequirement(.requirement=(requirement@ (&k8spolicy.LabelSelectorRequirement{.reqkey=label, .operator=k8spolicy.LabelSelectorOpIn{}, .values=values})), .namespace=namespace), var value = FlatMap(values) by (namespace, label, value) 206
154      Arrange: PodSatisfiesRequirement{.pod=(&k8spolicy.Pod{.name=_, .namespace=_0, .uid=_, .labels=_, .spec=_, .status=_}), .requirement=_1} 217
118      Arrange: arrange PodSelector(.uid=sel_uid, .namespace=namespace, .requirements=(positive_requirements, _)), var expected_matches = std.vec_len(positive_requirements), var req = FlatMap(positive_requirements) by (namespace, req) 224
2      Arrange: _ 13
0      Arrange: PodViolatesNegativeRequirements{.selector=_0, .pod=_1} 196
0      Arrange: NegativeRequirement{.requirement=(&k8spolicy.LabelSelectorRequirement{.reqkey=_1, .operator=k8spolicy.LabelSelectorOpDoesNotExist{}, .values=_}), .namespace=_0} 103
0      Arrange: _ 6
0      Arrange: (&AddressGroupDescrInternal{.uid=_, .name=_, .namespace=_, .selector=types.GroupSelector{.normalizedName=_, .nsSelector=types.NSSelectorLS{.selector=_}, .podSelector=std.None{}}}) 66
0      Arrange: PodViolatesRequirement{.pod=(&k8spolicy.Pod{.name=_, .namespace=_0, .uid=_, .labels=_, .spec=_, .status=_}), .requirement=_1} 171
0      Arrange: PositiveRequirement{.requirement=(&k8spolicy.LabelSelectorRequirement{.reqkey=_1, .operator=k8spolicy.LabelSelectorOpExists{}, .values=_}), .namespace=_0} 115
0      Arrange: arrange NegativeRequirement(.requirement=(requirement@ (&k8spolicy.LabelSelectorRequirement{.reqkey=label, .operator=k8spolicy.LabelSelectorOpNotIn{}, .values=values})), .namespace=namespace), var value = FlatMap(values) by (namespace, label, value) 160
0      Arrange: arrange PodSelector(.uid=sel_uid, .namespace=namespace, .requirements=(std.vec_empty(), _)), k8spolicy.Pod[(pod@ (&k8spolicy.Pod{.name=_, .namespace=namespace, .uid=_, .labels=_, .spec=_, .status=_}))] by (sel_uid, pod) 268
0      Arrange: arrange AddressGroupDescrInternal[(addressGroup@ (&AddressGroupDescrInternal{.uid=_, .name=_, .namespace=_, .selector=types.GroupSelector{.normalizedName=_, .nsSelector=types.NSSelectorLS{.selector=namespaceSelector}, .podSelector=_}}))], k8spolicy.Namespace[(namespace@ k8spolicy.Namespace{.name=_, .uid=_, .labels=_})], k8spolicy.labelSelectorMatches(std.Some{.x=namespaceSelector}, namespace.labels) by (addressGroup.uid, namespace.name) 305
0      Arrange: arrange PodSelector(.uid=sel_uid, .namespace=namespace, .requirements=(_, negative_requirements)), var req = FlatMap(negative_requirements) by (namespace, req) 178
0      Arrange: arrange AddressGroupDescrInternal[(addressGroup@ (&AddressGroupDescrInternal{.uid=_, .name=_, .namespace=_, .selector=types.GroupSelector{.normalizedName=_, .nsSelector=types.NSSelectorLS{.selector=namespaceSelector}, .podSelector=std.None{}}}))], k8spolicy.Namespace[(namespace@ k8spolicy.Namespace{.name=_, .uid=_, .labels=_})], k8spolicy.labelSelectorMatches(std.Some{.x=namespaceSelector}, namespace.labels) by (namespace.name) 315
0      Arrange: (&AddressGroupDescrInternal{.uid=_, .name=_, .namespace=_, .selector=types.GroupSelector{.normalizedName=_, .nsSelector=types.NSSelectorLS{.selector=_}, .podSelector=_}}) 62
0      Arrange: PodViolatesNegativeRequirements{.selector=_0, .pod=_1} 190
0      Arrange: PodSelector{.uid=_, .namespace=_0, .requirements=(std.vec_empty(), _)} 91

Arrangement peak sizes
2000      Arrange: AddressGroupSpan.threshold_total 402
2000      Arrange: (&k8spolicy.Pod{.name=_, .namespace=_0, .uid=_, .labels=_, .spec=_, .status=_}) 134
2000      Arrange: NetworkPolicySpan.threshold_total 414
2000      Arrange: AddressGroupDescr.threshold_total 76
2000      Reduce: PodSelector(.uid=sel_uid, .namespace=namespace, .requirements=(positive_requirements, _)), var expected_matches = std.vec_len(positive_requirements), var req = FlatMap(positive_requirements), PodSatisfiesRequirement(.pod=(pod@ (&k8spolicy.Pod{.name=_, .namespace=namespace, .uid=_, .labels=_, .spec=_, .status=_})), .requirement=req), var num_matches = Aggregate((sel_uid,                                                                                                                                                                                                                                                                                                                                                                             pod,                                                                                                                                                                                                                                                                                                                                                                             expected_matches), std.group_count(())) 233
2000      Arrange: PodMatchesSelector{.uid=_0, .pod=(&k8spolicy.Pod{.name=_, .namespace=_1, .uid=_, .labels=_, .spec=_, .status=_})} 290
2000      Reduce: AppliedToGroupPod(.appliedToGroup=appliedToGroup, .pod=pod, .nodeName=nodeName), var pods = Aggregate((appliedToGroup,                                                                                                        nodeName), std.group2set(pod)) 343
2000      Arrange: PodLabel{.pod=(&k8spolicy.Pod{.name=_, .namespace=_0, .uid=_, .labels=_, .spec=_, .status=_}), .label=_1, .val=_2} 150
2000      Arrange: AppliedToGroupSpan.threshold_total 362
2000      Arrange: PodLabel{.pod=(&k8spolicy.Pod{.name=_, .namespace=_0, .uid=_, .labels=_, .spec=_, .status=_}), .label=_1, .val=_} 146
2000      Arrange: NetworkPolicyDescr.threshold_total 125
2000      Arrange: AppliedToGroupSpan{.appliedToGroup=_0, .span=_} 368
2000      Arrange: arrange AddressGroupDescrInternal[(addressGroup@ (&AddressGroupDescrInternal{.uid=_, .name=_, .namespace=_, .selector=types.GroupSelector{.normalizedName=_, .nsSelector=types.NSSelectorNS{.ns=ns}, .podSelector=_}}))] by (addressGroup.uid, ns) 295
2000      Arrange: (&AppliedToGroupDescrInternal{.uid=_0, .name=_, .namespace=_, .selector=types.GroupSelector{.normalizedName=_, .nsSelector=types.NSSelectorNS{.ns=_1}, .podSelector=std.Some{.x=_}}}) 32
2000      Arrange: arrange NetworkPolicyDescr[(descr@ (&NetworkPolicyDescr{.uid=_, .name=_, .namespace=_, .rules=_, .appliedToGroups=_}))], var appliedToGroup = FlatMap(descr.appliedToGroups) by (appliedToGroup) 375
2000      Arrange: AppliedToGroupDescr.threshold_total 42
2000      Arrange: PodMatchesPositiveRequirements{.selector=_0, .pod=_1} 246
2000      Arrange: AppliedToGroupPod{.appliedToGroup=_0, .pod=_, .nodeName=_1} 340
2000      Arrange: AddressGroupAddress.threshold_total 327
1675      Arrange: arrange PodSelector(.uid=sel_uid, .namespace=namespace, .requirements=(positive_requirements, _)), var expected_matches = std.vec_len(positive_requirements), var req = FlatMap(positive_requirements), PodSatisfiesRequirement(.pod=(pod@ (&k8spolicy.Pod{.name=_, .namespace=namespace, .uid=_, .labels=_, .spec=_, .status=_})), .requirement=req) by (sel_uid, pod, expected_matches) 231
1675      Arrange: arrange PositiveRequirement(.requirement=(requirement@ (&k8spolicy.LabelSelectorRequirement{.reqkey=label, .operator=k8spolicy.LabelSelectorOpIn{}, .values=values})), .namespace=namespace), var value = FlatMap(values) by (namespace, label, value) 206
1675      Arrange: PodSatisfiesRequirement{.pod=(&k8spolicy.Pod{.name=_, .namespace=_0, .uid=_, .labels=_, .spec=_, .status=_}), .requirement=_1} 217
1674      Arrange: arrange PodSelector(.uid=sel_uid, .namespace=namespace, .requirements=(positive_requirements, _)), var expected_matches = std.vec_len(positive_requirements), var req = FlatMap(positive_requirements) by (namespace, req) 224
2      Arrange: _ 13
0      Arrange: PodViolatesNegativeRequirements{.selector=_0, .pod=_1} 196
0      Arrange: NegativeRequirement{.requirement=(&k8spolicy.LabelSelectorRequirement{.reqkey=_1, .operator=k8spolicy.LabelSelectorOpDoesNotExist{}, .values=_}), .namespace=_0} 103
0      Arrange: _ 6
0      Arrange: (&AddressGroupDescrInternal{.uid=_, .name=_, .namespace=_, .selector=types.GroupSelector{.normalizedName=_, .nsSelector=types.NSSelectorLS{.selector=_}, .podSelector=std.None{}}}) 66
0      Arrange: PodViolatesRequirement{.pod=(&k8spolicy.Pod{.name=_, .namespace=_0, .uid=_, .labels=_, .spec=_, .status=_}), .requirement=_1} 171
0      Arrange: PositiveRequirement{.requirement=(&k8spolicy.LabelSelectorRequirement{.reqkey=_1, .operator=k8spolicy.LabelSelectorOpExists{}, .values=_}), .namespace=_0} 115
0      Arrange: arrange NegativeRequirement(.requirement=(requirement@ (&k8spolicy.LabelSelectorRequirement{.reqkey=label, .operator=k8spolicy.LabelSelectorOpNotIn{}, .values=values})), .namespace=namespace), var value = FlatMap(values) by (namespace, label, value) 160
0      Arrange: arrange PodSelector(.uid=sel_uid, .namespace=namespace, .requirements=(std.vec_empty(), _)), k8spolicy.Pod[(pod@ (&k8spolicy.Pod{.name=_, .namespace=namespace, .uid=_, .labels=_, .spec=_, .status=_}))] by (sel_uid, pod) 268
0      Arrange: arrange AddressGroupDescrInternal[(addressGroup@ (&AddressGroupDescrInternal{.uid=_, .name=_, .namespace=_, .selector=types.GroupSelector{.normalizedName=_, .nsSelector=types.NSSelectorLS{.selector=namespaceSelector}, .podSelector=_}}))], k8spolicy.Namespace[(namespace@ k8spolicy.Namespace{.name=_, .uid=_, .labels=_})], k8spolicy.labelSelectorMatches(std.Some{.x=namespaceSelector}, namespace.labels) by (addressGroup.uid, namespace.name) 305
0      Arrange: arrange PodSelector(.uid=sel_uid, .namespace=namespace, .requirements=(_, negative_requirements)), var req = FlatMap(negative_requirements) by (namespace, req) 178
0      Arrange: arrange AddressGroupDescrInternal[(addressGroup@ (&AddressGroupDescrInternal{.uid=_, .name=_, .namespace=_, .selector=types.GroupSelector{.normalizedName=_, .nsSelector=types.NSSelectorLS{.selector=namespaceSelector}, .podSelector=std.None{}}}))], k8spolicy.Namespace[(namespace@ k8spolicy.Namespace{.name=_, .uid=_, .labels=_})], k8spolicy.labelSelectorMatches(std.Some{.x=namespaceSelector}, namespace.labels) by (namespace.name) 315
0      Arrange: (&AddressGroupDescrInternal{.uid=_, .name=_, .namespace=_, .selector=types.GroupSelector{.normalizedName=_, .nsSelector=types.NSSelectorLS{.selector=_}, .podSelector=_}}) 62
0      Arrange: PodViolatesNegativeRequirements{.selector=_0, .pod=_1} 190
0      Arrange: PodSelector{.uid=_, .namespace=_0, .requirements=(std.vec_empty(), _)} 91

CPU profile
     0s187056us (     1016calls)     Dataflow:  0
       0s010858us (      128calls)     FlatMap: head of __MultiHead_3[(addrGroups, appliedTo, internalPolicy)] :- k8spolicy.NetworkPolicy[policy], (var internalPolicy, var appliedTo, var addrGroups) = processNetworkPolicy(policy). 19
       0s009888us (      190calls)     Reduce: PodSelector(.uid=sel_uid, .namespace=namespace, .requirements=(positive_requirements, _)), var expected_matches = std.vec_len(positive_requirements), var req = FlatMap(positive_requirements), PodSatisfiesRequirement(.pod=(pod@ (&k8spolicy.Pod{.name=_, .namespace=namespace, .uid=_, .labels=_, .spec=_, .status=_})), .requirement=req), var num_matches = Aggregate((sel_uid,                                                                                                                                                                                                                                                                                                                                                                             pod,                                                                                                                                                                                                                                                                                                                                                                             expected_matches), std.group_count(())) 233
       0s009082us (      316calls)     Join: PodSelector(.uid=sel_uid, .namespace=namespace, .requirements=(positive_requirements, _)), var expected_matches = std.vec_len(positive_requirements), var req = FlatMap(positive_requirements), PodSatisfiesRequirement(.pod=(pod@ (&k8spolicy.Pod{.name=_, .namespace=namespace, .uid=_, .labels=_, .spec=_, .status=_})), .requirement=req) 226
       0s008210us (      380calls)     Join: NetworkPolicyDescr[(descr@ (&NetworkPolicyDescr{.uid=_, .name=_, .namespace=_, .rules=_, .appliedToGroups=_}))], var appliedToGroup = FlatMap(descr.appliedToGroups), AppliedToGroupSpan(.appliedToGroup=appliedToGroup, .span=node) 377
       0s008132us (      190calls)     Reduce: AppliedToGroupPod(.appliedToGroup=appliedToGroup, .pod=pod, .nodeName=nodeName), var pods = Aggregate((appliedToGroup,                                                                                                        nodeName), std.group2set(pod)) 343
       0s007518us (      380calls)     Join: AppliedToGroupDescrInternal[(&AppliedToGroupDescrInternal{.uid=appliedToGroup, .name=_, .namespace=_, .selector=types.GroupSelector{.normalizedName=_, .nsSelector=types.NSSelectorNS{.ns=namespace}, .podSelector=std.Some{.x=_}}})], PodMatchesSelector(.uid=appliedToGroup, .pod=(pod@ (&k8spolicy.Pod{.name=_, .namespace=namespace, .uid=_, .labels=_, .spec=_, .status=_}))) 332
       0s007233us (      380calls)     Join: AddressGroupDescrInternal[(addressGroup@ (&AddressGroupDescrInternal{.uid=_, .name=_, .namespace=_, .selector=types.GroupSelector{.normalizedName=_, .nsSelector=types.NSSelectorNS{.ns=ns}, .podSelector=_}}))], PodMatchesSelector(.uid=addressGroup.uid, .pod=(pod@ (&k8spolicy.Pod{.name=_, .namespace=ns, .uid=_, .labels=_, .spec=_, .status=_}))) 297
       0s005322us (      252calls)     Join: PositiveRequirement(.requirement=(requirement@ (&k8spolicy.LabelSelectorRequirement{.reqkey=label, .operator=k8spolicy.LabelSelectorOpIn{}, .values=values})), .namespace=namespace), var value = FlatMap(values), PodLabel(.pod=(pod@ (&k8spolicy.Pod{.name=_, .namespace=namespace, .uid=_, .labels=_, .spec=_, .status=_})), .label=label, .val=value) 208
       0s004343us (      190calls)     ThresholdTotal: AppliedToGroupDescr.threshold_total 44
       0s003698us (      190calls)     ThresholdTotal: AddressGroupDescr.threshold_total 78
       0s002694us (      253calls)     Arrange: arrange PodSelector(.uid=sel_uid, .namespace=namespace, .requirements=(positive_requirements, _)), var expected_matches = std.vec_len(positive_requirements), var req = FlatMap(positive_requirements), PodSatisfiesRequirement(.pod=(pod@ (&k8spolicy.Pod{.name=_, .namespace=namespace, .uid=_, .labels=_, .spec=_, .status=_})), .requirement=req) by (sel_uid, pod, expected_matches) 231
       0s002662us (      190calls)     ThresholdTotal: AddressGroupAddress.threshold_total 329
       0s002517us (      190calls)     ThresholdTotal: AddressGroupSpan.threshold_total 404
       0s002341us (      190calls)     ThresholdTotal: AppliedToGroupSpan.threshold_total 364
       0s002050us (      190calls)     ThresholdTotal: NetworkPolicyDescr.threshold_total 127
       0s002008us (      254calls)     Join: PodMatchesPositiveRequirements(.selector=sel_uid, .pod=pod), not PodViolatesNegativeRequirements(.selector=sel_uid, .pod=pod) 251
       0s001879us (      190calls)     Arrange: arrange PodSelector(.uid=sel_uid, .namespace=namespace, .requirements=(positive_requirements, _)), var expected_matches = std.vec_len(positive_requirements), var req = FlatMap(positive_requirements) by (namespace, req) 224
       0s001730us (      190calls)     ThresholdTotal: NetworkPolicySpan.threshold_total 416
       0s001581us (      190calls)     Arrange: arrange PositiveRequirement(.requirement=(requirement@ (&k8spolicy.LabelSelectorRequirement{.reqkey=label, .operator=k8spolicy.LabelSelectorOpIn{}, .values=values})), .namespace=namespace), var value = FlatMap(values) by (namespace, label, value) 206
       0s001281us (      190calls)     Arrange: PodSatisfiesRequirement{.pod=(&k8spolicy.Pod{.name=_, .namespace=_0, .uid=_, .labels=_, .spec=_, .status=_}), .requirement=_1} 217
       0s001232us (      191calls)     FlatMap: arrange PodSelector(.uid=sel_uid, .namespace=namespace, .requirements=(positive_requirements, _)), var expected_matches = std.vec_len(positive_requirements), var req = FlatMap(positive_requirements), PodSatisfiesRequirement(.pod=(pod@ (&k8spolicy.Pod{.name=_, .namespace=namespace, .uid=_, .labels=_, .spec=_, .status=_})), .requirement=req) by (sel_uid, pod, expected_matches) 229
       0s001227us (      128calls)     FlatMap: PositiveRequirement(.requirement=(requirement@ (&k8spolicy.LabelSelectorRequirement{.reqkey=label, .operator=k8spolicy.LabelSelectorOpIn{}, .values=values})), .namespace=namespace), var value = FlatMap(values) 202
       0s001136us (      128calls)     FlatMap: NetworkPolicySpanInternal(.policy=np, .node=node), var rule = FlatMap(np.rules) 384
       0s001111us (      128calls)     FlatMap: head of PodSelector(.uid=descr.uid, .namespace=descr.namespace, .requirements=types.labelSelectorToRequirements(selector)) :- AppliedToGroupDescrInternal[(descr@ (&AppliedToGroupDescrInternal{.uid=_, .name=_, .namespace=_, .selector=_}))], std.Some{.x=var selector} = descr.selector.podSelector. 81
       0s001006us (      128calls)     FlatMap: head of PodSelector(.uid=descr.uid, .namespace=descr.namespace, .requirements=types.labelSelectorToRequirements(selector)) :- AddressGroupDescrInternal[(descr@ (&AddressGroupDescrInternal{.uid=_, .name=_, .namespace=_, .selector=_}))], std.Some{.x=var selector} = descr.selector.podSelector. 83
       0s000912us (      128calls)     FlatMap: NetworkPolicySpanInternal(.policy=np, .node=node), var rule = FlatMap(np.rules) 390
       0s000865us (      190calls)     Arrange: AppliedToGroupDescr.threshold_total 42
       0s000860us (      190calls)     Join: PositiveRequirement(.requirement=(requirement@ (&k8spolicy.LabelSelectorRequirement{.reqkey=label, .operator=k8spolicy.LabelSelectorOpExists{}, .values=_})), .namespace=namespace), PodLabel(.pod=(pod@ (&k8spolicy.Pod{.name=_, .namespace=namespace, .uid=_, .labels=_, .spec=_, .status=_})), .label=label, .val=_) 199
       0s000828us (      190calls)     Arrange: (&AppliedToGroupDescrInternal{.uid=_0, .name=_, .namespace=_, .selector=types.GroupSelector{.normalizedName=_, .nsSelector=types.NSSelectorNS{.ns=_1}, .podSelector=std.Some{.x=_}}}) 32
       0s000808us (      128calls)     FlatMap: PodSelector(.uid=sel_uid, .namespace=namespace, .requirements=(positive_requirements, _)), var expected_matches = std.vec_len(positive_requirements), var req = FlatMap(positive_requirements) 220
       0s000806us (      128calls)     FlatMap: arrange PositiveRequirement(.requirement=(requirement@ (&k8spolicy.LabelSelectorRequirement{.reqkey=label, .operator=k8spolicy.LabelSelectorOpIn{}, .values=values})), .namespace=namespace), var value = FlatMap(values) by (namespace, label, value) 204
       0s000780us (      190calls)     Join: AddressGroupDescrInternal[(addressGroup@ (&AddressGroupDescrInternal{.uid=_, .name=_, .namespace=_, .selector=types.GroupSelector{.normalizedName=_, .nsSelector=types.NSSelectorLS{.selector=namespaceSelector}, .podSelector=std.None{}}}))], k8spolicy.Namespace[(namespace@ k8spolicy.Namespace{.name=_, .uid=_, .labels=_})], k8spolicy.labelSelectorMatches(std.Some{.x=namespaceSelector}, namespace.labels), k8spolicy.Pod[(pod@ (&k8spolicy.Pod{.name=_, .namespace=namespace.name, .uid=_, .labels=_, .spec=_, .status=_}))] 317
       0s000757us (      190calls)     Concatenate: concatenate rules for PodSelector 85
       0s000757us (      190calls)     Arrange: arrange NetworkPolicyDescr[(descr@ (&NetworkPolicyDescr{.uid=_, .name=_, .namespace=_, .rules=_, .appliedToGroups=_}))], var appliedToGroup = FlatMap(descr.appliedToGroups) by (appliedToGroup) 375
       0s000732us (      128calls)     FlatMap: arrange PodSelector(.uid=sel_uid, .namespace=namespace, .requirements=(positive_requirements, _)), var expected_matches = std.vec_len(positive_requirements), var req = FlatMap(positive_requirements) by (namespace, req) 222
       0s000702us (      190calls)     Join: NegativeRequirement(.requirement=(requirement@ (&k8spolicy.LabelSelectorRequirement{.reqkey=label, .operator=k8spolicy.LabelSelectorOpDoesNotExist{}, .values=_})), .namespace=namespace), PodLabel(.pod=(pod@ (&k8spolicy.Pod{.name=_, .namespace=namespace, .uid=_, .labels=_, .spec=_, .status=_})), .label=label, .val=_) 153
       0s000697us (      128calls)     FlatMap: k8spolicy.Pod[(pod@ (&k8spolicy.Pod{.name=_, .namespace=_, .uid=_, .labels=_, .spec=_, .status=_}))], var label = FlatMap(pod.labels) 137
       0s000682us (      284calls)     Arrange: AppliedToGroupPod{.appliedToGroup=_0, .pod=_, .nodeName=_1} 340
       0s000667us (      128calls)     FlatMap: head of AppliedToGroupPodsByNode(.appliedToGroup=appliedToGroup, .node=nodeName, .pods=pods) :- AppliedToGroupPod(.appliedToGroup=appliedToGroup, .pod=pod, .nodeName=nodeName), var pods = Aggregate((appliedToGroup,                                                                                                                                                                                                        nodeName), std.group2set(pod)). 349
       0s000661us (      128calls)     FlatMap: PodSatisfiesRequirement{.pod=(&k8spolicy.Pod{.name=_, .namespace=_0, .uid=_, .labels=_, .spec=_, .status=_}), .requirement=_1} 215
       0s000658us (      190calls)     Arrange: PodLabel{.pod=(&k8spolicy.Pod{.name=_, .namespace=_0, .uid=_, .labels=_, .spec=_, .status=_}), .label=_1, .val=_} 146
       0s000655us (      222calls)     Arrange: NetworkPolicySpan.threshold_total 414
       0s000638us (      190calls)     Arrange: PodMatchesPositiveRequirements{.selector=_0, .pod=_1} 246
       0s000625us (      225calls)     Arrange: AddressGroupAddress.threshold_total 327
       0s000623us (      284calls)     Arrange: AppliedToGroupSpan.threshold_total 362
       0s000622us (      190calls)     Arrange: arrange AddressGroupDescrInternal[(addressGroup@ (&AddressGroupDescrInternal{.uid=_, .name=_, .namespace=_, .selector=types.GroupSelector{.normalizedName=_, .nsSelector=types.NSSelectorNS{.ns=ns}, .podSelector=_}}))] by (addressGroup.uid, ns) 295
       0s000617us (      128calls)     FlatMap: NetworkPolicySpanInternal(.policy=np, .node=node), var rule = FlatMap(np.rules), var addressGroup = FlatMap(rule.from.addressGroups) 386
       0s000613us (      190calls)     Arrange: (&k8spolicy.Pod{.name=_, .namespace=_0, .uid=_, .labels=_, .spec=_, .status=_}) 134
       0s000607us (      190calls)     Arrange: AppliedToGroupSpan{.appliedToGroup=_0, .span=_} 368
       0s000606us (      190calls)     Arrange: AddressGroupDescr.threshold_total 76
       0s000599us (      190calls)     Join: NegativeRequirement(.requirement=(requirement@ (&k8spolicy.LabelSelectorRequirement{.reqkey=label, .operator=k8spolicy.LabelSelectorOpNotIn{}, .values=values})), .namespace=namespace), var value = FlatMap(values), PodLabel(.pod=(pod@ (&k8spolicy.Pod{.name=_, .namespace=namespace, .uid=_, .labels=_, .spec=_, .status=_})), .label=label, .val=value) 162
       0s000580us (      190calls)     Arrange: PodMatchesSelector{.uid=_0, .pod=(&k8spolicy.Pod{.name=_, .namespace=_1, .uid=_, .labels=_, .spec=_, .status=_})} 290
       0s000574us (      190calls)     Consolidate:  420
       0s000574us (      222calls)     Arrange: AddressGroupSpan.threshold_total 402
       0s000567us (      128calls)     FlatMap: PodSelector(.uid=_, .namespace=namespace, .requirements=requirements), var req = FlatMap(requirements.0) 106
       0s000556us (      190calls)     FlatMap: AppliedToGroupPod{.appliedToGroup=_0, .pod=_, .nodeName=_1} 338
       0s000546us (      128calls)     FlatMap: PodLabel{.pod=(&k8spolicy.Pod{.name=_, .namespace=_0, .uid=_, .labels=_, .spec=_, .status=_}), .label=_1, .val=_2} 148
       0s000537us (      126calls)     Join: PodSelector(.uid=sel_uid, .namespace=namespace, .requirements=(std.vec_empty(), _)), k8spolicy.Pod[(pod@ (&k8spolicy.Pod{.name=_, .namespace=namespace, .uid=_, .labels=_, .spec=_, .status=_}))], not PodViolatesNegativeRequirements(.selector=sel_uid, .pod=pod) 272
       0s000532us (      128calls)     Join: AddressGroupDescrInternal[(addressGroup@ (&AddressGroupDescrInternal{.uid=_, .name=_, .namespace=_, .selector=types.GroupSelector{.normalizedName=_, .nsSelector=types.NSSelectorLS{.selector=namespaceSelector}, .podSelector=std.None{}}}))], k8spolicy.Namespace[(namespace@ k8spolicy.Namespace{.name=_, .uid=_, .labels=_})] 310
       0s000532us (      190calls)     Arrange: PodLabel{.pod=(&k8spolicy.Pod{.name=_, .namespace=_0, .uid=_, .labels=_, .spec=_, .status=_}), .label=_1, .val=_2} 150
       0s000531us (      190calls)     Arrange: NetworkPolicyDescr.threshold_total 125
       0s000526us (      128calls)     FlatMap: head of NetworkPolicySpan(.namespace=policy.namespace, .policy_name=policy.name, .policy=policy.uid, .node=node) :- NetworkPolicySpanInternal(.policy=policy, .node=node). 407
       0s000510us (      190calls)     Consolidate:  440
       0s000500us (      314calls)     Join: AddressGroupDescrInternal[(addressGroup@ (&AddressGroupDescrInternal{.uid=_, .name=_, .namespace=_, .selector=types.GroupSelector{.normalizedName=_, .nsSelector=types.NSSelectorLS{.selector=namespaceSelector}, .podSelector=_}}))], k8spolicy.Namespace[(namespace@ k8spolicy.Namespace{.name=_, .uid=_, .labels=_})], k8spolicy.labelSelectorMatches(std.Some{.x=namespaceSelector}, namespace.labels), PodMatchesSelector(.uid=addressGroup.uid, .pod=(pod@ (&k8spolicy.Pod{.name=_, .namespace=namespace.name, .uid=_, .labels=_, .spec=_, .status=_}))) 307
       0s000494us (      190calls)     Consolidate:  430
       0s000488us (      128calls)     FlatMap: PodSelector{.uid=_, .namespace=_0, .requirements=(std.vec_empty(), _)} 89
       0s000474us (      128calls)     FlatMap: head of AddressGroupDescr(.name=name, .selector=selector) :- AddressGroupDescrInternal[(&AddressGroupDescrInternal{.uid=_, .name=name, .namespace=_, .selector=selector})]. 69
       0s000471us (      128calls)     FlatMap: NetworkPolicyDescr[(descr@ (&NetworkPolicyDescr{.uid=_, .name=_, .namespace=_, .rules=_, .appliedToGroups=_}))], var appliedToGroup = FlatMap(descr.appliedToGroups) 371
       0s000466us (      190calls)     Consolidate:  490
       0s000453us (      128calls)     InspectBatch:  424
       0s000440us (      128calls)     Arrange: _ 13
       0s000437us (      128calls)     FlatMap: head of AppliedToGroupDescr(.name=name, .selector=selector) :- AppliedToGroupDescrInternal[(&AppliedToGroupDescrInternal{.uid=_, .name=name, .namespace=_, .selector=selector})]. 35
       0s000435us (      190calls)     Consolidate:  470
       0s000427us (      128calls)     FlatMap: AppliedToGroupSpan{.appliedToGroup=_0, .span=_} 366
       0s000426us (      128calls)     FlatMap: (&AppliedToGroupDescrInternal{.uid=_0, .name=_, .namespace=_, .selector=types.GroupSelector{.normalizedName=_, .nsSelector=types.NSSelectorNS{.ns=_1}, .podSelector=std.Some{.x=_}}}) 30
       0s000423us (      128calls)     FlatMap: PodLabel{.pod=(&k8spolicy.Pod{.name=_, .namespace=_0, .uid=_, .labels=_, .spec=_, .status=_}), .label=_1, .val=_} 144
       0s000423us (      190calls)     Consolidate:  450
       0s000415us (      190calls)     Concatenate: concatenate rules for AddressGroupDescrInternal 57
       0s000412us (      128calls)     InspectBatch:  434
       0s000411us (      190calls)     Consolidate:  460
       0s000408us (      190calls)     Join: PodSelector(.uid=sel_uid, .namespace=namespace, .requirements=(_, negative_requirements)), var req = FlatMap(negative_requirements), PodViolatesRequirement(.pod=(pod@ (&k8spolicy.Pod{.name=_, .namespace=namespace, .uid=_, .labels=_, .spec=_, .status=_})), .requirement=req) 180
       0s000402us (      128calls)     InspectBatch:  474
       0s000399us (      190calls)     Join: PodSelector(.uid=sel_uid, .namespace=namespace, .requirements=(std.vec_empty(), _)), k8spolicy.Pod[(pod@ (&k8spolicy.Pod{.name=_, .namespace=namespace, .uid=_, .labels=_, .spec=_, .status=_}))] 263
       0s000373us (      190calls)     FlatMap: head of AppliedToGroupSpan(.appliedToGroup=appliedToGroup, .span=nodeName) :- AppliedToGroupPod(.appliedToGroup=appliedToGroup, .pod=_, .nodeName=nodeName). 355
       0s000368us (      128calls)     FlatMap: arrange AddressGroupDescrInternal[(addressGroup@ (&AddressGroupDescrInternal{.uid=_, .name=_, .namespace=_, .selector=types.GroupSelector{.normalizedName=_, .nsSelector=types.NSSelectorNS{.ns=ns}, .podSelector=_}}))] by (addressGroup.uid, ns) 293
       0s000367us (      190calls)     Consolidate:  480
       0s000341us (      128calls)     FlatMap: NetworkPolicySpanInternal(.policy=np, .node=node), var rule = FlatMap(np.rules), var addressGroup = FlatMap(rule.to.addressGroups) 392
       0s000335us (      128calls)     FlatMap: head of NetworkPolicyExt(.policy=internalPolicy, .addressGroups=addrGroups) :- __MultiHead_3[(addrGroups, appliedTo, internalPolicy)]. 47
       0s000328us (      128calls)     FlatMap: PodMatchesSelector{.uid=_0, .pod=(&k8spolicy.Pod{.name=_, .namespace=_1, .uid=_, .labels=_, .spec=_, .status=_})} 288
       0s000328us (      128calls)     FlatMap: head of PositiveRequirement(.requirement=req, .namespace=namespace) :- PodSelector(.uid=_, .namespace=namespace, .requirements=requirements), var req = FlatMap(requirements.0). 108
       0s000323us (      126calls)     Arrange: PodViolatesNegativeRequirements{.selector=_0, .pod=_1} 196
       0s000321us (      128calls)     FlatMap: PodMatchesPositiveRequirements{.selector=_0, .pod=_1} 244
       0s000321us (      128calls)     FlatMap: head of PodLabel(.pod=pod, .label=label.0, .val=label.1) :- k8spolicy.Pod[(pod@ (&k8spolicy.Pod{.name=_, .namespace=_, .uid=_, .labels=_, .spec=_, .status=_}))], var label = FlatMap(pod.labels). 139
       0s000319us (      128calls)     AsCollection: AppliedToGroupPod(.appliedToGroup=appliedToGroup, .pod=pod, .nodeName=nodeName), var pods = Aggregate((appliedToGroup,                                                                                                        nodeName), std.group2set(pod)) 345
       0s000314us (      284calls)     Concatenate: concatenate rules for AppliedToGroupPod 335
       0s000312us (      128calls)     InspectBatch:  464
       0s000310us (      128calls)     FlatMap: NetworkPolicyExt(.policy=_, .addressGroups=groups), var group = FlatMap(groups) 53
       0s000308us (      128calls)     FlatMap: arrange NetworkPolicyDescr[(descr@ (&NetworkPolicyDescr{.uid=_, .name=_, .namespace=_, .rules=_, .appliedToGroups=_}))], var appliedToGroup = FlatMap(descr.appliedToGroups) by (appliedToGroup) 373
       0s000308us (      128calls)     InspectBatch:  484
       0s000306us (      128calls)     FlatMap: head of NetworkPolicyDescr[policy] :- NetworkPolicyExt(.policy=policy, .addressGroups=_). 118
       0s000303us (      126calls)     Arrange: arrange NegativeRequirement(.requirement=(requirement@ (&k8spolicy.LabelSelectorRequirement{.reqkey=label, .operator=k8spolicy.LabelSelectorOpNotIn{}, .values=values})), .namespace=namespace), var value = FlatMap(values) by (namespace, label, value) 160
       0s000297us (      128calls)     Join: AddressGroupDescrInternal[(addressGroup@ (&AddressGroupDescrInternal{.uid=_, .name=_, .namespace=_, .selector=types.GroupSelector{.normalizedName=_, .nsSelector=types.NSSelectorLS{.selector=namespaceSelector}, .podSelector=_}}))], k8spolicy.Namespace[(namespace@ k8spolicy.Namespace{.name=_, .uid=_, .labels=_})] 300
       0s000297us (      128calls)     FlatMap: PodSelector(.uid=_, .namespace=namespace, .requirements=requirements), var req = FlatMap(requirements.1) 94
       0s000296us (      128calls)     InspectBatch:  454
       0s000294us (      128calls)     AsCollection: PodSelector(.uid=sel_uid, .namespace=namespace, .requirements=(positive_requirements, _)), var expected_matches = std.vec_len(positive_requirements), var req = FlatMap(positive_requirements), PodSatisfiesRequirement(.pod=(pod@ (&k8spolicy.Pod{.name=_, .namespace=namespace, .uid=_, .labels=_, .spec=_, .status=_})), .requirement=req), var num_matches = Aggregate((sel_uid,                                                                                                                                                                                                                                                                                                                                                                             pod,                                                                                                                                                                                                                                                                                                                                                                             expected_matches), std.group_count(())) 235
       0s000284us (      128calls)     FlatMap: PositiveRequirement{.requirement=(&k8spolicy.LabelSelectorRequirement{.reqkey=_1, .operator=k8spolicy.LabelSelectorOpExists{}, .values=_}), .namespace=_0} 113
       0s000281us (      128calls)     AsCollection: PodMatchesPositiveRequirements(.selector=sel_uid, .pod=pod), not PodViolatesNegativeRequirements(.selector=sel_uid, .pod=pod) 249
       0s000277us (      128calls)     FlatMap: PodSelector(.uid=sel_uid, .namespace=namespace, .requirements=(_, negative_requirements)), var req = FlatMap(negative_requirements) 174
       0s000275us (      222calls)     Concatenate: concatenate rules for NetworkPolicySpanInternal 380
       0s000270us (      126calls)     ThresholdTotal: PodViolatesNegativeRequirements{.selector=_0, .pod=_1} 192
       0s000270us (      128calls)     InspectBatch:  444
       0s000269us (      128calls)     FlatMap: head of AddressGroupSpan(.addressGroup=addressGroup, .node=node) :- NetworkPolicySpanInternal(.policy=np, .node=node), var rule = FlatMap(np.rules), var addressGroup = FlatMap(rule.from.addressGroups). 388
       0s000261us (      128calls)     AsCollection:  422
       0s000253us (      128calls)     FlatMap: head of PodMatchesSelector(.uid=sel_uid, .pod=pod) :- PodMatchesPositiveRequirements(.selector=sel_uid, .pod=pod), not PodViolatesNegativeRequirements(.selector=sel_uid, .pod=pod). 261
       0s000249us (      256calls)     Concatenate: concatenate rules for AddressGroupAddress 320
       0s000247us (      128calls)     InspectBatch:  494
       0s000237us (      128calls)     AsCollection:  442
       0s000233us (      128calls)     FlatMap: head of PodMatchesPositiveRequirements(.selector=sel_uid, .pod=pod) :- PodSelector(.uid=sel_uid, .namespace=namespace, .requirements=(positive_requirements, _)), var expected_matches = std.vec_len(positive_requirements), var req = FlatMap(positive_requirements), PodSatisfiesRequirement(.pod=(pod@ (&k8spolicy.Pod{.name=_, .namespace=namespace, .uid=_, .labels=_, .spec=_, .status=_})), .requirement=req), var num_matches = Aggregate((sel_uid,                                                                                                                                                                                                                                                                                                                                                                                                                                                    pod,                                                                                                                                                                                                                                                                                                                                                                                                                                                    expected_matches), std.group_count(())), (num_matches == expected_matches). 239
       0s000232us (      128calls)     AsCollection:  432
       0s000222us (      222calls)     Concatenate: concatenate rules for AddressGroupSpan 396
       0s000217us (      190calls)     Concatenate: concatenate rules for AppliedToGroupDescrInternal 27
       0s000215us (      128calls)     AsCollection:  472
       0s000211us (      128calls)     AsCollection:  452
       0s000210us (      190calls)     Concatenate: concatenate rules for __MultiHead_3 21
       0s000210us (      128calls)     FlatMap: (&k8spolicy.Pod{.name=_, .namespace=_0, .uid=_, .labels=_, .spec=_, .status=_}) 132
       0s000209us (      128calls)     AsCollection:  482
       0s000209us (      126calls)     Arrange: PodViolatesNegativeRequirements{.selector=_0, .pod=_1} 190
       0s000203us (      126calls)     Arrange: (&AddressGroupDescrInternal{.uid=_, .name=_, .namespace=_, .selector=types.GroupSelector{.normalizedName=_, .nsSelector=types.NSSelectorLS{.selector=_}, .podSelector=_}}) 62
       0s000198us (      126calls)     Arrange: PodViolatesRequirement{.pod=(&k8spolicy.Pod{.name=_, .namespace=_0, .uid=_, .labels=_, .spec=_, .status=_}), .requirement=_1} 171
       0s000196us (      128calls)     AsCollection:  492
       0s000196us (      190calls)     Concatenate: PodMatchesPositiveRequirements(.selector=sel_uid, .pod=pod), not PodViolatesNegativeRequirements(.selector=sel_uid, .pod=pod) 256
       0s000193us (      128calls)     Map: AppliedToGroupDescr.threshold_total 40
       0s000189us (      128calls)     Map: PodSelector(.uid=sel_uid, .namespace=namespace, .requirements=(positive_requirements, _)), var expected_matches = std.vec_len(positive_requirements), var req = FlatMap(positive_requirements), PodSatisfiesRequirement(.pod=(pod@ (&k8spolicy.Pod{.name=_, .namespace=namespace, .uid=_, .labels=_, .spec=_, .status=_})), .requirement=req), var num_matches = Aggregate((sel_uid,                                                                                                                                                                                                                                                                                                                                                                             pod,                                                                                                                                                                                                                                                                                                                                                                             expected_matches), std.group_count(())) 237
       0s000188us (      190calls)     Concatenate: concatenate rules for k8spolicy.NetworkPolicy 16
       0s000186us (      254calls)     Concatenate: concatenate rules for PodMatchesSelector 284
       0s000185us (      128calls)     AsCollection:  462
       0s000181us (      190calls)     Concatenate: concatenate rules for k8spolicy.Pod 130
       0s000179us (      128calls)     FlatMap: head of AppliedToGroupDescrInternal[appliedTo] :- __MultiHead_3[(addrGroups, appliedTo, internalPolicy)]. 25
       0s000178us (      128calls)     FlatMap: (&AddressGroupDescrInternal{.uid=_, .name=_, .namespace=_, .selector=types.GroupSelector{.normalizedName=_, .nsSelector=types.NSSelectorLS{.selector=_}, .podSelector=_}}) 60
       0s000178us (      126calls)     Arrange: PositiveRequirement{.requirement=(&k8spolicy.LabelSelectorRequirement{.reqkey=_1, .operator=k8spolicy.LabelSelectorOpExists{}, .values=_}), .namespace=_0} 115
       0s000177us (      126calls)     Arrange: NegativeRequirement{.requirement=(&k8spolicy.LabelSelectorRequirement{.reqkey=_1, .operator=k8spolicy.LabelSelectorOpDoesNotExist{}, .values=_}), .namespace=_0} 103
       0s000175us (      128calls)     Map: AppliedToGroupPod(.appliedToGroup=appliedToGroup, .pod=pod, .nodeName=nodeName), var pods = Aggregate((appliedToGroup,                                                                                                        nodeName), std.group2set(pod)) 347
       0s000174us (      190calls)     Concatenate: concatenate rules for PodSatisfiesRequirement 211
       0s000171us (      126calls)     Arrange: arrange PodSelector(.uid=sel_uid, .namespace=namespace, .requirements=(std.vec_empty(), _)), k8spolicy.Pod[(pod@ (&k8spolicy.Pod{.name=_, .namespace=namespace, .uid=_, .labels=_, .spec=_, .status=_}))] by (sel_uid, pod) 268
       0s000171us (      126calls)     Arrange: PodSelector{.uid=_, .namespace=_0, .requirements=(std.vec_empty(), _)} 91
       0s000169us (      128calls)     Map:  428
       0s000165us (      132calls)     Map: AddressGroupAddress.threshold_total 325
       0s000164us (      190calls)     Concatenate: concatenate rules for PositiveRequirement 110
       0s000162us (      190calls)     Concatenate: concatenate rules for NetworkPolicyExt 49
       0s000161us (      126calls)     Arrange: (&AddressGroupDescrInternal{.uid=_, .name=_, .namespace=_, .selector=types.GroupSelector{.normalizedName=_, .nsSelector=types.NSSelectorLS{.selector=_}, .podSelector=std.None{}}}) 66
       0s000159us (      190calls)     Map: AppliedToGroupSpan.threshold_total 360
       0s000159us (      126calls)     Arrange: arrange PodSelector(.uid=sel_uid, .namespace=namespace, .requirements=(_, negative_requirements)), var req = FlatMap(negative_requirements) by (namespace, req) 178
       0s000158us (      128calls)     FlatMap: head of AddressGroupDescrInternal[group] :- NetworkPolicyExt(.policy=_, .addressGroups=groups), var group = FlatMap(groups). 55
       0s000156us (      128calls)     Map: PodMatchesPositiveRequirements(.selector=sel_uid, .pod=pod), not PodViolatesNegativeRequirements(.selector=sel_uid, .pod=pod) 259
       0s000156us (      126calls)     Arrange: arrange AddressGroupDescrInternal[(addressGroup@ (&AddressGroupDescrInternal{.uid=_, .name=_, .namespace=_, .selector=types.GroupSelector{.normalizedName=_, .nsSelector=types.NSSelectorLS{.selector=namespaceSelector}, .podSelector=_}}))], k8spolicy.Namespace[(namespace@ k8spolicy.Namespace{.name=_, .uid=_, .labels=_})], k8spolicy.labelSelectorMatches(std.Some{.x=namespaceSelector}, namespace.labels) by (addressGroup.uid, namespace.name) 305
       0s000153us (      128calls)     Map:  418
       0s000152us (      128calls)     Map: AddressGroupSpan.threshold_total 400
       0s000149us (      190calls)     Concatenate: concatenate rules for AppliedToGroupPodsByNode 351
       0s000148us (      284calls)     Concatenate: concatenate rules for AppliedToGroupSpan 357
       0s000146us (      126calls)     Arrange: arrange AddressGroupDescrInternal[(addressGroup@ (&AddressGroupDescrInternal{.uid=_, .name=_, .namespace=_, .selector=types.GroupSelector{.normalizedName=_, .nsSelector=types.NSSelectorLS{.selector=namespaceSelector}, .podSelector=std.None{}}}))], k8spolicy.Namespace[(namespace@ k8spolicy.Namespace{.name=_, .uid=_, .labels=_})], k8spolicy.labelSelectorMatches(std.Some{.x=namespaceSelector}, namespace.labels) by (namespace.name) 315
       0s000144us (      128calls)     Map: NetworkPolicyDescr.threshold_total 123
       0s000144us (      222calls)     Concatenate: concatenate rules for NetworkPolicySpan 409
       0s000139us (      128calls)     Map:  458
       0s000136us (      190calls)     Concatenate: concatenate rules for PodLabel 141
       0s000135us (      128calls)     Map:  488
       0s000134us (      128calls)     Map:  478
       0s000132us (      128calls)     Map: AddressGroupDescr.threshold_total 74
       0s000129us (      128calls)     FlatMap: (&AddressGroupDescrInternal{.uid=_, .name=_, .namespace=_, .selector=types.GroupSelector{.normalizedName=_, .nsSelector=types.NSSelectorLS{.selector=_}, .podSelector=std.None{}}}) 64
       0s000127us (      128calls)     Map:  448
       0s000124us (      128calls)     Map:  438
       0s000120us (      190calls)     Concatenate: concatenate rules for NetworkPolicyDescr 120
       0s000118us (      190calls)     Concatenate: concatenate rules for PodMatchesPositiveRequirements 241
       0s000114us (      190calls)     Concatenate: concatenate rules for AddressGroupDescr 71
       0s000113us (      190calls)     Concatenate: concatenate rules for AppliedToGroupDescr 37
       0s000112us (      128calls)     Map:  468
       0s000111us (      190calls)     Probe:  426
       0s000110us (      190calls)     Probe:  436
       0s000107us (      128calls)     Map: NetworkPolicySpan.threshold_total 412
       0s000096us (      128calls)     Concatenate: concatenate rules for k8spolicy.Namespace 9
       0s000095us (      126calls)     Concatenate: PodSelector(.uid=sel_uid, .namespace=namespace, .requirements=(std.vec_empty(), _)), k8spolicy.Pod[(pod@ (&k8spolicy.Pod{.name=_, .namespace=namespace, .uid=_, .labels=_, .spec=_, .status=_}))], not PodViolatesNegativeRequirements(.selector=sel_uid, .pod=pod) 277
       0s000089us (      190calls)     Probe:  466
       0s000086us (      190calls)     Probe:  476
       0s000084us (      190calls)     Probe:  446
       0s000084us (      190calls)     Probe:  456
       0s000080us (      126calls)     Concatenate: concatenate rules for PodViolatesRequirement 165
       0s000078us (      190calls)     Probe:  486
       0s000073us (      190calls)     Probe:  496
       0s000050us (      126calls)     Concatenate: concatenate rules for NegativeRequirement 98
       0s000050us (      126calls)     Concatenate: concatenate rules for PodViolatesNegativeRequirements 183
       0s000031us (      126calls)     Input:  8
       0s000015us (      126calls)     Input:  15
       0s000015us (      126calls)     Input:  129
       0s000009us (        4calls)     FlatMap: _ 11
       0s000000us (        0calls)     Input:  68
       0s000000us (        0calls)     Input:  34
       0s000000us (        0calls)     FlatMap: PodViolatesNegativeRequirements{.selector=_0, .pod=_1} 186
       0s000000us (        0calls)     Input:  105
       0s000000us (        0calls)     Probe:  500
       0s000000us (        0calls)     Input:  117
       0s000000us (        0calls)     MapInPlace: PodMatchesPositiveRequirements(.selector=sel_uid, .pod=pod), not PodViolatesNegativeRequirements(.selector=sel_uid, .pod=pod) 254
       0s000000us (        0calls)     Input:  331
       0s000000us (        0calls)     Input:  219
       0s000000us (        0calls)     Input:  93
       0s000000us (        0calls)     Input:  342
       0s000000us (        0calls)     FlatMap: _ 4
       0s000000us (        0calls)     Input:  52
       0s000000us (        0calls)     Map: PodViolatesNegativeRequirements{.selector=_0, .pod=_1} 194
       0s000000us (        0calls)     Input:  18
       0s000000us (        0calls)     AsCollection: PodSelector(.uid=sel_uid, .namespace=namespace, .requirements=(std.vec_empty(), _)), k8spolicy.Pod[(pod@ (&k8spolicy.Pod{.name=_, .namespace=namespace, .uid=_, .labels=_, .spec=_, .status=_}))], not PodViolatesNegativeRequirements(.selector=sel_uid, .pod=pod) 270
       0s000000us (        0calls)     Map: PodSelector(.uid=sel_uid, .namespace=namespace, .requirements=(std.vec_empty(), _)), k8spolicy.Pod[(pod@ (&k8spolicy.Pod{.name=_, .namespace=namespace, .uid=_, .labels=_, .spec=_, .status=_}))], not PodViolatesNegativeRequirements(.selector=sel_uid, .pod=pod) 280
       0s000000us (        0calls)     AsCollection:  498
       0s000000us (        0calls)     FlatMap: arrange PodSelector(.uid=sel_uid, .namespace=namespace, .requirements=(_, negative_requirements)), var req = FlatMap(negative_requirements) by (namespace, req) 176
       0s000000us (        0calls)     Input:  46
       0s000000us (        0calls)     FlatMap: head of PodMatchesSelector(.uid=sel_uid, .pod=pod) :- PodSelector(.uid=sel_uid, .namespace=namespace, .requirements=(std.vec_empty(), _)), k8spolicy.Pod[(pod@ (&k8spolicy.Pod{.name=_, .namespace=namespace, .uid=_, .labels=_, .spec=_, .status=_}))], not PodViolatesNegativeRequirements(.selector=sel_uid, .pod=pod). 282
       0s000000us (        0calls)     FlatMap: NegativeRequirement(.requirement=(requirement@ (&k8spolicy.LabelSelectorRequirement{.reqkey=label, .operator=k8spolicy.LabelSelectorOpNotIn{}, .values=values})), .namespace=namespace), var value = FlatMap(values) 156
       0s000000us (        0calls)     MapInPlace: PodSelector(.uid=sel_uid, .namespace=namespace, .requirements=(std.vec_empty(), _)), k8spolicy.Pod[(pod@ (&k8spolicy.Pod{.name=_, .namespace=namespace, .uid=_, .labels=_, .spec=_, .status=_}))], not PodViolatesNegativeRequirements(.selector=sel_uid, .pod=pod) 275
       0s000000us (        0calls)     Input:  198
       0s000000us (        0calls)     FlatMap: PodViolatesRequirement{.pod=(&k8spolicy.Pod{.name=_, .namespace=_0, .uid=_, .labels=_, .spec=_, .status=_}), .requirement=_1} 169
       0s000000us (        0calls)     FlatMap: NegativeRequirement{.requirement=(&k8spolicy.LabelSelectorRequirement{.reqkey=_1, .operator=k8spolicy.LabelSelectorOpDoesNotExist{}, .values=_}), .namespace=_0} 101
       0s000000us (        0calls)     Input:  292
       0s000000us (        0calls)     Input:  354
       0s000000us (        0calls)     Input:  80
       0s000000us (        0calls)     FlatMap: arrange AddressGroupDescrInternal[(addressGroup@ (&AddressGroupDescrInternal{.uid=_, .name=_, .namespace=_, .selector=types.GroupSelector{.normalizedName=_, .nsSelector=types.NSSelectorLS{.selector=namespaceSelector}, .podSelector=_}}))], k8spolicy.Namespace[(namespace@ k8spolicy.Namespace{.name=_, .uid=_, .labels=_})], k8spolicy.labelSelectorMatches(std.Some{.x=namespaceSelector}, namespace.labels) by (addressGroup.uid, namespace.name) 303
       0s000000us (        0calls)     Input:  370
       0s000000us (        0calls)     Input:  248
       0s000000us (        0calls)     Input:  406
       0s000000us (        0calls)     FlatMap: head of AddressGroupSpan(.addressGroup=addressGroup, .node=node) :- NetworkPolicySpanInternal(.policy=np, .node=node), var rule = FlatMap(np.rules), var addressGroup = FlatMap(rule.to.addressGroups). 394
       0s000000us (        0calls)     Concatenate: concatenate rules for __Null 2
       0s000000us (        0calls)     Input:  152
       0s000000us (        0calls)     Input:  24
       0s000000us (        0calls)     FlatMap: arrange PodSelector(.uid=sel_uid, .namespace=namespace, .requirements=(std.vec_empty(), _)), k8spolicy.Pod[(pod@ (&k8spolicy.Pod{.name=_, .namespace=namespace, .uid=_, .labels=_, .spec=_, .status=_}))] by (sel_uid, pod) 266
       0s000000us (        0calls)     Input:  1
       0s000000us (        0calls)     Input:  136
       0s000000us (        0calls)     Arrange: _ 6
       0s000000us (        0calls)     Map: PodViolatesNegativeRequirements{.selector=_0, .pod=_1} 188
       0s000000us (        0calls)     FlatMap: head of NegativeRequirement(.requirement=req, .namespace=namespace) :- PodSelector(.uid=_, .namespace=namespace, .requirements=requirements), var req = FlatMap(requirements.1). 96
       0s000000us (        0calls)     FlatMap: arrange NegativeRequirement(.requirement=(requirement@ (&k8spolicy.LabelSelectorRequirement{.reqkey=label, .operator=k8spolicy.LabelSelectorOpNotIn{}, .values=values})), .namespace=namespace), var value = FlatMap(values) by (namespace, label, value) 158
       0s000000us (        0calls)     FlatMap: arrange AddressGroupDescrInternal[(addressGroup@ (&AddressGroupDescrInternal{.uid=_, .name=_, .namespace=_, .selector=types.GroupSelector{.normalizedName=_, .nsSelector=types.NSSelectorLS{.selector=namespaceSelector}, .podSelector=std.None{}}}))], k8spolicy.Namespace[(namespace@ k8spolicy.Namespace{.name=_, .uid=_, .labels=_})], k8spolicy.labelSelectorMatches(std.Some{.x=namespaceSelector}, namespace.labels) by (namespace.name) 313
       0s000000us (        0calls)     Input:  383
       0s000000us (        0calls)     Input:  173

