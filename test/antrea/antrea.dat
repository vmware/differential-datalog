profile cpu on;
start;
insert_or_update k8spolicy::Namespace[k8spolicy::Namespace{"testNamespace",k8spolicy::UID{"testNamespaceUID"},[]}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-0","testNamespace",k8spolicy::UID{"testPod-0"},[("pod-name","testPod-0")],k8spolicy::PodSpec{"testNode-0"},k8spolicy::PodStatus{"10.10.0.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-1","testNamespace",k8spolicy::UID{"testPod-1"},[("pod-name","testPod-1")],k8spolicy::PodSpec{"testNode-0"},k8spolicy::PodStatus{"10.10.0.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-2","testNamespace",k8spolicy::UID{"testPod-2"},[("pod-name","testPod-2")],k8spolicy::PodSpec{"testNode-0"},k8spolicy::PodStatus{"10.10.0.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-3","testNamespace",k8spolicy::UID{"testPod-3"},[("pod-name","testPod-3")],k8spolicy::PodSpec{"testNode-0"},k8spolicy::PodStatus{"10.10.0.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-4","testNamespace",k8spolicy::UID{"testPod-4"},[("pod-name","testPod-4")],k8spolicy::PodSpec{"testNode-0"},k8spolicy::PodStatus{"10.10.0.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-5","testNamespace",k8spolicy::UID{"testPod-5"},[("pod-name","testPod-5")],k8spolicy::PodSpec{"testNode-0"},k8spolicy::PodStatus{"10.10.0.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-6","testNamespace",k8spolicy::UID{"testPod-6"},[("pod-name","testPod-6")],k8spolicy::PodSpec{"testNode-0"},k8spolicy::PodStatus{"10.10.0.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-7","testNamespace",k8spolicy::UID{"testPod-7"},[("pod-name","testPod-7")],k8spolicy::PodSpec{"testNode-0"},k8spolicy::PodStatus{"10.10.0.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-8","testNamespace",k8spolicy::UID{"testPod-8"},[("pod-name","testPod-8")],k8spolicy::PodSpec{"testNode-0"},k8spolicy::PodStatus{"10.10.0.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-9","testNamespace",k8spolicy::UID{"testPod-9"},[("pod-name","testPod-9")],k8spolicy::PodSpec{"testNode-0"},k8spolicy::PodStatus{"10.10.0.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-10","testNamespace",k8spolicy::UID{"testPod-10"},[("pod-name","testPod-10")],k8spolicy::PodSpec{"testNode-1"},k8spolicy::PodStatus{"10.10.1.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-11","testNamespace",k8spolicy::UID{"testPod-11"},[("pod-name","testPod-11")],k8spolicy::PodSpec{"testNode-1"},k8spolicy::PodStatus{"10.10.1.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-12","testNamespace",k8spolicy::UID{"testPod-12"},[("pod-name","testPod-12")],k8spolicy::PodSpec{"testNode-1"},k8spolicy::PodStatus{"10.10.1.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-13","testNamespace",k8spolicy::UID{"testPod-13"},[("pod-name","testPod-13")],k8spolicy::PodSpec{"testNode-1"},k8spolicy::PodStatus{"10.10.1.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-14","testNamespace",k8spolicy::UID{"testPod-14"},[("pod-name","testPod-14")],k8spolicy::PodSpec{"testNode-1"},k8spolicy::PodStatus{"10.10.1.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-15","testNamespace",k8spolicy::UID{"testPod-15"},[("pod-name","testPod-15")],k8spolicy::PodSpec{"testNode-1"},k8spolicy::PodStatus{"10.10.1.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-16","testNamespace",k8spolicy::UID{"testPod-16"},[("pod-name","testPod-16")],k8spolicy::PodSpec{"testNode-1"},k8spolicy::PodStatus{"10.10.1.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-17","testNamespace",k8spolicy::UID{"testPod-17"},[("pod-name","testPod-17")],k8spolicy::PodSpec{"testNode-1"},k8spolicy::PodStatus{"10.10.1.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-18","testNamespace",k8spolicy::UID{"testPod-18"},[("pod-name","testPod-18")],k8spolicy::PodSpec{"testNode-1"},k8spolicy::PodStatus{"10.10.1.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-19","testNamespace",k8spolicy::UID{"testPod-19"},[("pod-name","testPod-19")],k8spolicy::PodSpec{"testNode-1"},k8spolicy::PodStatus{"10.10.1.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-20","testNamespace",k8spolicy::UID{"testPod-20"},[("pod-name","testPod-20")],k8spolicy::PodSpec{"testNode-2"},k8spolicy::PodStatus{"10.10.2.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-21","testNamespace",k8spolicy::UID{"testPod-21"},[("pod-name","testPod-21")],k8spolicy::PodSpec{"testNode-2"},k8spolicy::PodStatus{"10.10.2.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-22","testNamespace",k8spolicy::UID{"testPod-22"},[("pod-name","testPod-22")],k8spolicy::PodSpec{"testNode-2"},k8spolicy::PodStatus{"10.10.2.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-23","testNamespace",k8spolicy::UID{"testPod-23"},[("pod-name","testPod-23")],k8spolicy::PodSpec{"testNode-2"},k8spolicy::PodStatus{"10.10.2.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-24","testNamespace",k8spolicy::UID{"testPod-24"},[("pod-name","testPod-24")],k8spolicy::PodSpec{"testNode-2"},k8spolicy::PodStatus{"10.10.2.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-25","testNamespace",k8spolicy::UID{"testPod-25"},[("pod-name","testPod-25")],k8spolicy::PodSpec{"testNode-2"},k8spolicy::PodStatus{"10.10.2.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-26","testNamespace",k8spolicy::UID{"testPod-26"},[("pod-name","testPod-26")],k8spolicy::PodSpec{"testNode-2"},k8spolicy::PodStatus{"10.10.2.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-27","testNamespace",k8spolicy::UID{"testPod-27"},[("pod-name","testPod-27")],k8spolicy::PodSpec{"testNode-2"},k8spolicy::PodStatus{"10.10.2.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-28","testNamespace",k8spolicy::UID{"testPod-28"},[("pod-name","testPod-28")],k8spolicy::PodSpec{"testNode-2"},k8spolicy::PodStatus{"10.10.2.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-29","testNamespace",k8spolicy::UID{"testPod-29"},[("pod-name","testPod-29")],k8spolicy::PodSpec{"testNode-2"},k8spolicy::PodStatus{"10.10.2.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-30","testNamespace",k8spolicy::UID{"testPod-30"},[("pod-name","testPod-30")],k8spolicy::PodSpec{"testNode-3"},k8spolicy::PodStatus{"10.10.3.0"}}];
commit dump_changes;
start;
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-31","testNamespace",k8spolicy::UID{"testPod-31"},[("pod-name","testPod-31")],k8spolicy::PodSpec{"testNode-3"},k8spolicy::PodStatus{"10.10.3.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-32","testNamespace",k8spolicy::UID{"testPod-32"},[("pod-name","testPod-32")],k8spolicy::PodSpec{"testNode-3"},k8spolicy::PodStatus{"10.10.3.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-33","testNamespace",k8spolicy::UID{"testPod-33"},[("pod-name","testPod-33")],k8spolicy::PodSpec{"testNode-3"},k8spolicy::PodStatus{"10.10.3.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-34","testNamespace",k8spolicy::UID{"testPod-34"},[("pod-name","testPod-34")],k8spolicy::PodSpec{"testNode-3"},k8spolicy::PodStatus{"10.10.3.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-35","testNamespace",k8spolicy::UID{"testPod-35"},[("pod-name","testPod-35")],k8spolicy::PodSpec{"testNode-3"},k8spolicy::PodStatus{"10.10.3.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-36","testNamespace",k8spolicy::UID{"testPod-36"},[("pod-name","testPod-36")],k8spolicy::PodSpec{"testNode-3"},k8spolicy::PodStatus{"10.10.3.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-37","testNamespace",k8spolicy::UID{"testPod-37"},[("pod-name","testPod-37")],k8spolicy::PodSpec{"testNode-3"},k8spolicy::PodStatus{"10.10.3.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-38","testNamespace",k8spolicy::UID{"testPod-38"},[("pod-name","testPod-38")],k8spolicy::PodSpec{"testNode-3"},k8spolicy::PodStatus{"10.10.3.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-39","testNamespace",k8spolicy::UID{"testPod-39"},[("pod-name","testPod-39")],k8spolicy::PodSpec{"testNode-3"},k8spolicy::PodStatus{"10.10.3.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-40","testNamespace",k8spolicy::UID{"testPod-40"},[("pod-name","testPod-40")],k8spolicy::PodSpec{"testNode-4"},k8spolicy::PodStatus{"10.10.4.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-41","testNamespace",k8spolicy::UID{"testPod-41"},[("pod-name","testPod-41")],k8spolicy::PodSpec{"testNode-4"},k8spolicy::PodStatus{"10.10.4.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-42","testNamespace",k8spolicy::UID{"testPod-42"},[("pod-name","testPod-42")],k8spolicy::PodSpec{"testNode-4"},k8spolicy::PodStatus{"10.10.4.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-43","testNamespace",k8spolicy::UID{"testPod-43"},[("pod-name","testPod-43")],k8spolicy::PodSpec{"testNode-4"},k8spolicy::PodStatus{"10.10.4.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-44","testNamespace",k8spolicy::UID{"testPod-44"},[("pod-name","testPod-44")],k8spolicy::PodSpec{"testNode-4"},k8spolicy::PodStatus{"10.10.4.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-45","testNamespace",k8spolicy::UID{"testPod-45"},[("pod-name","testPod-45")],k8spolicy::PodSpec{"testNode-4"},k8spolicy::PodStatus{"10.10.4.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-46","testNamespace",k8spolicy::UID{"testPod-46"},[("pod-name","testPod-46")],k8spolicy::PodSpec{"testNode-4"},k8spolicy::PodStatus{"10.10.4.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-47","testNamespace",k8spolicy::UID{"testPod-47"},[("pod-name","testPod-47")],k8spolicy::PodSpec{"testNode-4"},k8spolicy::PodStatus{"10.10.4.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-48","testNamespace",k8spolicy::UID{"testPod-48"},[("pod-name","testPod-48")],k8spolicy::PodSpec{"testNode-4"},k8spolicy::PodStatus{"10.10.4.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-49","testNamespace",k8spolicy::UID{"testPod-49"},[("pod-name","testPod-49")],k8spolicy::PodSpec{"testNode-4"},k8spolicy::PodStatus{"10.10.4.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-50","testNamespace",k8spolicy::UID{"testPod-50"},[("pod-name","testPod-50")],k8spolicy::PodSpec{"testNode-5"},k8spolicy::PodStatus{"10.10.5.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-51","testNamespace",k8spolicy::UID{"testPod-51"},[("pod-name","testPod-51")],k8spolicy::PodSpec{"testNode-5"},k8spolicy::PodStatus{"10.10.5.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-52","testNamespace",k8spolicy::UID{"testPod-52"},[("pod-name","testPod-52")],k8spolicy::PodSpec{"testNode-5"},k8spolicy::PodStatus{"10.10.5.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-53","testNamespace",k8spolicy::UID{"testPod-53"},[("pod-name","testPod-53")],k8spolicy::PodSpec{"testNode-5"},k8spolicy::PodStatus{"10.10.5.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-54","testNamespace",k8spolicy::UID{"testPod-54"},[("pod-name","testPod-54")],k8spolicy::PodSpec{"testNode-5"},k8spolicy::PodStatus{"10.10.5.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-55","testNamespace",k8spolicy::UID{"testPod-55"},[("pod-name","testPod-55")],k8spolicy::PodSpec{"testNode-5"},k8spolicy::PodStatus{"10.10.5.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-56","testNamespace",k8spolicy::UID{"testPod-56"},[("pod-name","testPod-56")],k8spolicy::PodSpec{"testNode-5"},k8spolicy::PodStatus{"10.10.5.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-57","testNamespace",k8spolicy::UID{"testPod-57"},[("pod-name","testPod-57")],k8spolicy::PodSpec{"testNode-5"},k8spolicy::PodStatus{"10.10.5.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-58","testNamespace",k8spolicy::UID{"testPod-58"},[("pod-name","testPod-58")],k8spolicy::PodSpec{"testNode-5"},k8spolicy::PodStatus{"10.10.5.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-59","testNamespace",k8spolicy::UID{"testPod-59"},[("pod-name","testPod-59")],k8spolicy::PodSpec{"testNode-5"},k8spolicy::PodStatus{"10.10.5.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-60","testNamespace",k8spolicy::UID{"testPod-60"},[("pod-name","testPod-60")],k8spolicy::PodSpec{"testNode-6"},k8spolicy::PodStatus{"10.10.6.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-61","testNamespace",k8spolicy::UID{"testPod-61"},[("pod-name","testPod-61")],k8spolicy::PodSpec{"testNode-6"},k8spolicy::PodStatus{"10.10.6.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-62","testNamespace",k8spolicy::UID{"testPod-62"},[("pod-name","testPod-62")],k8spolicy::PodSpec{"testNode-6"},k8spolicy::PodStatus{"10.10.6.2"}}];
commit dump_changes;
start;
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-63","testNamespace",k8spolicy::UID{"testPod-63"},[("pod-name","testPod-63")],k8spolicy::PodSpec{"testNode-6"},k8spolicy::PodStatus{"10.10.6.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-64","testNamespace",k8spolicy::UID{"testPod-64"},[("pod-name","testPod-64")],k8spolicy::PodSpec{"testNode-6"},k8spolicy::PodStatus{"10.10.6.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-65","testNamespace",k8spolicy::UID{"testPod-65"},[("pod-name","testPod-65")],k8spolicy::PodSpec{"testNode-6"},k8spolicy::PodStatus{"10.10.6.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-66","testNamespace",k8spolicy::UID{"testPod-66"},[("pod-name","testPod-66")],k8spolicy::PodSpec{"testNode-6"},k8spolicy::PodStatus{"10.10.6.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-67","testNamespace",k8spolicy::UID{"testPod-67"},[("pod-name","testPod-67")],k8spolicy::PodSpec{"testNode-6"},k8spolicy::PodStatus{"10.10.6.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-68","testNamespace",k8spolicy::UID{"testPod-68"},[("pod-name","testPod-68")],k8spolicy::PodSpec{"testNode-6"},k8spolicy::PodStatus{"10.10.6.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-69","testNamespace",k8spolicy::UID{"testPod-69"},[("pod-name","testPod-69")],k8spolicy::PodSpec{"testNode-6"},k8spolicy::PodStatus{"10.10.6.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-70","testNamespace",k8spolicy::UID{"testPod-70"},[("pod-name","testPod-70")],k8spolicy::PodSpec{"testNode-7"},k8spolicy::PodStatus{"10.10.7.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-71","testNamespace",k8spolicy::UID{"testPod-71"},[("pod-name","testPod-71")],k8spolicy::PodSpec{"testNode-7"},k8spolicy::PodStatus{"10.10.7.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-72","testNamespace",k8spolicy::UID{"testPod-72"},[("pod-name","testPod-72")],k8spolicy::PodSpec{"testNode-7"},k8spolicy::PodStatus{"10.10.7.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-73","testNamespace",k8spolicy::UID{"testPod-73"},[("pod-name","testPod-73")],k8spolicy::PodSpec{"testNode-7"},k8spolicy::PodStatus{"10.10.7.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-74","testNamespace",k8spolicy::UID{"testPod-74"},[("pod-name","testPod-74")],k8spolicy::PodSpec{"testNode-7"},k8spolicy::PodStatus{"10.10.7.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-75","testNamespace",k8spolicy::UID{"testPod-75"},[("pod-name","testPod-75")],k8spolicy::PodSpec{"testNode-7"},k8spolicy::PodStatus{"10.10.7.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-76","testNamespace",k8spolicy::UID{"testPod-76"},[("pod-name","testPod-76")],k8spolicy::PodSpec{"testNode-7"},k8spolicy::PodStatus{"10.10.7.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-77","testNamespace",k8spolicy::UID{"testPod-77"},[("pod-name","testPod-77")],k8spolicy::PodSpec{"testNode-7"},k8spolicy::PodStatus{"10.10.7.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-78","testNamespace",k8spolicy::UID{"testPod-78"},[("pod-name","testPod-78")],k8spolicy::PodSpec{"testNode-7"},k8spolicy::PodStatus{"10.10.7.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-79","testNamespace",k8spolicy::UID{"testPod-79"},[("pod-name","testPod-79")],k8spolicy::PodSpec{"testNode-7"},k8spolicy::PodStatus{"10.10.7.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-80","testNamespace",k8spolicy::UID{"testPod-80"},[("pod-name","testPod-80")],k8spolicy::PodSpec{"testNode-8"},k8spolicy::PodStatus{"10.10.8.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-81","testNamespace",k8spolicy::UID{"testPod-81"},[("pod-name","testPod-81")],k8spolicy::PodSpec{"testNode-8"},k8spolicy::PodStatus{"10.10.8.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-82","testNamespace",k8spolicy::UID{"testPod-82"},[("pod-name","testPod-82")],k8spolicy::PodSpec{"testNode-8"},k8spolicy::PodStatus{"10.10.8.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-83","testNamespace",k8spolicy::UID{"testPod-83"},[("pod-name","testPod-83")],k8spolicy::PodSpec{"testNode-8"},k8spolicy::PodStatus{"10.10.8.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-84","testNamespace",k8spolicy::UID{"testPod-84"},[("pod-name","testPod-84")],k8spolicy::PodSpec{"testNode-8"},k8spolicy::PodStatus{"10.10.8.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-85","testNamespace",k8spolicy::UID{"testPod-85"},[("pod-name","testPod-85")],k8spolicy::PodSpec{"testNode-8"},k8spolicy::PodStatus{"10.10.8.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-86","testNamespace",k8spolicy::UID{"testPod-86"},[("pod-name","testPod-86")],k8spolicy::PodSpec{"testNode-8"},k8spolicy::PodStatus{"10.10.8.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-87","testNamespace",k8spolicy::UID{"testPod-87"},[("pod-name","testPod-87")],k8spolicy::PodSpec{"testNode-8"},k8spolicy::PodStatus{"10.10.8.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-88","testNamespace",k8spolicy::UID{"testPod-88"},[("pod-name","testPod-88")],k8spolicy::PodSpec{"testNode-8"},k8spolicy::PodStatus{"10.10.8.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-89","testNamespace",k8spolicy::UID{"testPod-89"},[("pod-name","testPod-89")],k8spolicy::PodSpec{"testNode-8"},k8spolicy::PodStatus{"10.10.8.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-90","testNamespace",k8spolicy::UID{"testPod-90"},[("pod-name","testPod-90")],k8spolicy::PodSpec{"testNode-9"},k8spolicy::PodStatus{"10.10.9.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-91","testNamespace",k8spolicy::UID{"testPod-91"},[("pod-name","testPod-91")],k8spolicy::PodSpec{"testNode-9"},k8spolicy::PodStatus{"10.10.9.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-92","testNamespace",k8spolicy::UID{"testPod-92"},[("pod-name","testPod-92")],k8spolicy::PodSpec{"testNode-9"},k8spolicy::PodStatus{"10.10.9.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-93","testNamespace",k8spolicy::UID{"testPod-93"},[("pod-name","testPod-93")],k8spolicy::PodSpec{"testNode-9"},k8spolicy::PodStatus{"10.10.9.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-94","testNamespace",k8spolicy::UID{"testPod-94"},[("pod-name","testPod-94")],k8spolicy::PodSpec{"testNode-9"},k8spolicy::PodStatus{"10.10.9.4"}}];
commit dump_changes;
start;
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-95","testNamespace",k8spolicy::UID{"testPod-95"},[("pod-name","testPod-95")],k8spolicy::PodSpec{"testNode-9"},k8spolicy::PodStatus{"10.10.9.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-96","testNamespace",k8spolicy::UID{"testPod-96"},[("pod-name","testPod-96")],k8spolicy::PodSpec{"testNode-9"},k8spolicy::PodStatus{"10.10.9.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-97","testNamespace",k8spolicy::UID{"testPod-97"},[("pod-name","testPod-97")],k8spolicy::PodSpec{"testNode-9"},k8spolicy::PodStatus{"10.10.9.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-98","testNamespace",k8spolicy::UID{"testPod-98"},[("pod-name","testPod-98")],k8spolicy::PodSpec{"testNode-9"},k8spolicy::PodStatus{"10.10.9.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-99","testNamespace",k8spolicy::UID{"testPod-99"},[("pod-name","testPod-99")],k8spolicy::PodSpec{"testNode-9"},k8spolicy::PodStatus{"10.10.9.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-100","testNamespace",k8spolicy::UID{"testPod-100"},[("pod-name","testPod-100")],k8spolicy::PodSpec{"testNode-10"},k8spolicy::PodStatus{"10.10.10.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-101","testNamespace",k8spolicy::UID{"testPod-101"},[("pod-name","testPod-101")],k8spolicy::PodSpec{"testNode-10"},k8spolicy::PodStatus{"10.10.10.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-102","testNamespace",k8spolicy::UID{"testPod-102"},[("pod-name","testPod-102")],k8spolicy::PodSpec{"testNode-10"},k8spolicy::PodStatus{"10.10.10.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-103","testNamespace",k8spolicy::UID{"testPod-103"},[("pod-name","testPod-103")],k8spolicy::PodSpec{"testNode-10"},k8spolicy::PodStatus{"10.10.10.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-104","testNamespace",k8spolicy::UID{"testPod-104"},[("pod-name","testPod-104")],k8spolicy::PodSpec{"testNode-10"},k8spolicy::PodStatus{"10.10.10.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-105","testNamespace",k8spolicy::UID{"testPod-105"},[("pod-name","testPod-105")],k8spolicy::PodSpec{"testNode-10"},k8spolicy::PodStatus{"10.10.10.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-106","testNamespace",k8spolicy::UID{"testPod-106"},[("pod-name","testPod-106")],k8spolicy::PodSpec{"testNode-10"},k8spolicy::PodStatus{"10.10.10.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-107","testNamespace",k8spolicy::UID{"testPod-107"},[("pod-name","testPod-107")],k8spolicy::PodSpec{"testNode-10"},k8spolicy::PodStatus{"10.10.10.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-108","testNamespace",k8spolicy::UID{"testPod-108"},[("pod-name","testPod-108")],k8spolicy::PodSpec{"testNode-10"},k8spolicy::PodStatus{"10.10.10.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-109","testNamespace",k8spolicy::UID{"testPod-109"},[("pod-name","testPod-109")],k8spolicy::PodSpec{"testNode-10"},k8spolicy::PodStatus{"10.10.10.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-110","testNamespace",k8spolicy::UID{"testPod-110"},[("pod-name","testPod-110")],k8spolicy::PodSpec{"testNode-11"},k8spolicy::PodStatus{"10.10.11.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-111","testNamespace",k8spolicy::UID{"testPod-111"},[("pod-name","testPod-111")],k8spolicy::PodSpec{"testNode-11"},k8spolicy::PodStatus{"10.10.11.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-112","testNamespace",k8spolicy::UID{"testPod-112"},[("pod-name","testPod-112")],k8spolicy::PodSpec{"testNode-11"},k8spolicy::PodStatus{"10.10.11.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-113","testNamespace",k8spolicy::UID{"testPod-113"},[("pod-name","testPod-113")],k8spolicy::PodSpec{"testNode-11"},k8spolicy::PodStatus{"10.10.11.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-114","testNamespace",k8spolicy::UID{"testPod-114"},[("pod-name","testPod-114")],k8spolicy::PodSpec{"testNode-11"},k8spolicy::PodStatus{"10.10.11.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-115","testNamespace",k8spolicy::UID{"testPod-115"},[("pod-name","testPod-115")],k8spolicy::PodSpec{"testNode-11"},k8spolicy::PodStatus{"10.10.11.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-116","testNamespace",k8spolicy::UID{"testPod-116"},[("pod-name","testPod-116")],k8spolicy::PodSpec{"testNode-11"},k8spolicy::PodStatus{"10.10.11.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-117","testNamespace",k8spolicy::UID{"testPod-117"},[("pod-name","testPod-117")],k8spolicy::PodSpec{"testNode-11"},k8spolicy::PodStatus{"10.10.11.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-118","testNamespace",k8spolicy::UID{"testPod-118"},[("pod-name","testPod-118")],k8spolicy::PodSpec{"testNode-11"},k8spolicy::PodStatus{"10.10.11.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-119","testNamespace",k8spolicy::UID{"testPod-119"},[("pod-name","testPod-119")],k8spolicy::PodSpec{"testNode-11"},k8spolicy::PodStatus{"10.10.11.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-120","testNamespace",k8spolicy::UID{"testPod-120"},[("pod-name","testPod-120")],k8spolicy::PodSpec{"testNode-12"},k8spolicy::PodStatus{"10.10.12.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-121","testNamespace",k8spolicy::UID{"testPod-121"},[("pod-name","testPod-121")],k8spolicy::PodSpec{"testNode-12"},k8spolicy::PodStatus{"10.10.12.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-122","testNamespace",k8spolicy::UID{"testPod-122"},[("pod-name","testPod-122")],k8spolicy::PodSpec{"testNode-12"},k8spolicy::PodStatus{"10.10.12.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-123","testNamespace",k8spolicy::UID{"testPod-123"},[("pod-name","testPod-123")],k8spolicy::PodSpec{"testNode-12"},k8spolicy::PodStatus{"10.10.12.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-124","testNamespace",k8spolicy::UID{"testPod-124"},[("pod-name","testPod-124")],k8spolicy::PodSpec{"testNode-12"},k8spolicy::PodStatus{"10.10.12.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-125","testNamespace",k8spolicy::UID{"testPod-125"},[("pod-name","testPod-125")],k8spolicy::PodSpec{"testNode-12"},k8spolicy::PodStatus{"10.10.12.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-126","testNamespace",k8spolicy::UID{"testPod-126"},[("pod-name","testPod-126")],k8spolicy::PodSpec{"testNode-12"},k8spolicy::PodStatus{"10.10.12.6"}}];
commit dump_changes;
start;
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-127","testNamespace",k8spolicy::UID{"testPod-127"},[("pod-name","testPod-127")],k8spolicy::PodSpec{"testNode-12"},k8spolicy::PodStatus{"10.10.12.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-128","testNamespace",k8spolicy::UID{"testPod-128"},[("pod-name","testPod-128")],k8spolicy::PodSpec{"testNode-12"},k8spolicy::PodStatus{"10.10.12.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-129","testNamespace",k8spolicy::UID{"testPod-129"},[("pod-name","testPod-129")],k8spolicy::PodSpec{"testNode-12"},k8spolicy::PodStatus{"10.10.12.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-130","testNamespace",k8spolicy::UID{"testPod-130"},[("pod-name","testPod-130")],k8spolicy::PodSpec{"testNode-13"},k8spolicy::PodStatus{"10.10.13.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-131","testNamespace",k8spolicy::UID{"testPod-131"},[("pod-name","testPod-131")],k8spolicy::PodSpec{"testNode-13"},k8spolicy::PodStatus{"10.10.13.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-132","testNamespace",k8spolicy::UID{"testPod-132"},[("pod-name","testPod-132")],k8spolicy::PodSpec{"testNode-13"},k8spolicy::PodStatus{"10.10.13.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-133","testNamespace",k8spolicy::UID{"testPod-133"},[("pod-name","testPod-133")],k8spolicy::PodSpec{"testNode-13"},k8spolicy::PodStatus{"10.10.13.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-134","testNamespace",k8spolicy::UID{"testPod-134"},[("pod-name","testPod-134")],k8spolicy::PodSpec{"testNode-13"},k8spolicy::PodStatus{"10.10.13.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-135","testNamespace",k8spolicy::UID{"testPod-135"},[("pod-name","testPod-135")],k8spolicy::PodSpec{"testNode-13"},k8spolicy::PodStatus{"10.10.13.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-136","testNamespace",k8spolicy::UID{"testPod-136"},[("pod-name","testPod-136")],k8spolicy::PodSpec{"testNode-13"},k8spolicy::PodStatus{"10.10.13.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-137","testNamespace",k8spolicy::UID{"testPod-137"},[("pod-name","testPod-137")],k8spolicy::PodSpec{"testNode-13"},k8spolicy::PodStatus{"10.10.13.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-138","testNamespace",k8spolicy::UID{"testPod-138"},[("pod-name","testPod-138")],k8spolicy::PodSpec{"testNode-13"},k8spolicy::PodStatus{"10.10.13.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-139","testNamespace",k8spolicy::UID{"testPod-139"},[("pod-name","testPod-139")],k8spolicy::PodSpec{"testNode-13"},k8spolicy::PodStatus{"10.10.13.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-140","testNamespace",k8spolicy::UID{"testPod-140"},[("pod-name","testPod-140")],k8spolicy::PodSpec{"testNode-14"},k8spolicy::PodStatus{"10.10.14.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-141","testNamespace",k8spolicy::UID{"testPod-141"},[("pod-name","testPod-141")],k8spolicy::PodSpec{"testNode-14"},k8spolicy::PodStatus{"10.10.14.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-142","testNamespace",k8spolicy::UID{"testPod-142"},[("pod-name","testPod-142")],k8spolicy::PodSpec{"testNode-14"},k8spolicy::PodStatus{"10.10.14.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-143","testNamespace",k8spolicy::UID{"testPod-143"},[("pod-name","testPod-143")],k8spolicy::PodSpec{"testNode-14"},k8spolicy::PodStatus{"10.10.14.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-144","testNamespace",k8spolicy::UID{"testPod-144"},[("pod-name","testPod-144")],k8spolicy::PodSpec{"testNode-14"},k8spolicy::PodStatus{"10.10.14.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-145","testNamespace",k8spolicy::UID{"testPod-145"},[("pod-name","testPod-145")],k8spolicy::PodSpec{"testNode-14"},k8spolicy::PodStatus{"10.10.14.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-146","testNamespace",k8spolicy::UID{"testPod-146"},[("pod-name","testPod-146")],k8spolicy::PodSpec{"testNode-14"},k8spolicy::PodStatus{"10.10.14.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-147","testNamespace",k8spolicy::UID{"testPod-147"},[("pod-name","testPod-147")],k8spolicy::PodSpec{"testNode-14"},k8spolicy::PodStatus{"10.10.14.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-148","testNamespace",k8spolicy::UID{"testPod-148"},[("pod-name","testPod-148")],k8spolicy::PodSpec{"testNode-14"},k8spolicy::PodStatus{"10.10.14.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-149","testNamespace",k8spolicy::UID{"testPod-149"},[("pod-name","testPod-149")],k8spolicy::PodSpec{"testNode-14"},k8spolicy::PodStatus{"10.10.14.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-150","testNamespace",k8spolicy::UID{"testPod-150"},[("pod-name","testPod-150")],k8spolicy::PodSpec{"testNode-15"},k8spolicy::PodStatus{"10.10.15.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-151","testNamespace",k8spolicy::UID{"testPod-151"},[("pod-name","testPod-151")],k8spolicy::PodSpec{"testNode-15"},k8spolicy::PodStatus{"10.10.15.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-152","testNamespace",k8spolicy::UID{"testPod-152"},[("pod-name","testPod-152")],k8spolicy::PodSpec{"testNode-15"},k8spolicy::PodStatus{"10.10.15.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-153","testNamespace",k8spolicy::UID{"testPod-153"},[("pod-name","testPod-153")],k8spolicy::PodSpec{"testNode-15"},k8spolicy::PodStatus{"10.10.15.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-154","testNamespace",k8spolicy::UID{"testPod-154"},[("pod-name","testPod-154")],k8spolicy::PodSpec{"testNode-15"},k8spolicy::PodStatus{"10.10.15.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-155","testNamespace",k8spolicy::UID{"testPod-155"},[("pod-name","testPod-155")],k8spolicy::PodSpec{"testNode-15"},k8spolicy::PodStatus{"10.10.15.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-156","testNamespace",k8spolicy::UID{"testPod-156"},[("pod-name","testPod-156")],k8spolicy::PodSpec{"testNode-15"},k8spolicy::PodStatus{"10.10.15.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-157","testNamespace",k8spolicy::UID{"testPod-157"},[("pod-name","testPod-157")],k8spolicy::PodSpec{"testNode-15"},k8spolicy::PodStatus{"10.10.15.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-158","testNamespace",k8spolicy::UID{"testPod-158"},[("pod-name","testPod-158")],k8spolicy::PodSpec{"testNode-15"},k8spolicy::PodStatus{"10.10.15.8"}}];
commit dump_changes;
start;
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-159","testNamespace",k8spolicy::UID{"testPod-159"},[("pod-name","testPod-159")],k8spolicy::PodSpec{"testNode-15"},k8spolicy::PodStatus{"10.10.15.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-160","testNamespace",k8spolicy::UID{"testPod-160"},[("pod-name","testPod-160")],k8spolicy::PodSpec{"testNode-16"},k8spolicy::PodStatus{"10.10.16.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-161","testNamespace",k8spolicy::UID{"testPod-161"},[("pod-name","testPod-161")],k8spolicy::PodSpec{"testNode-16"},k8spolicy::PodStatus{"10.10.16.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-162","testNamespace",k8spolicy::UID{"testPod-162"},[("pod-name","testPod-162")],k8spolicy::PodSpec{"testNode-16"},k8spolicy::PodStatus{"10.10.16.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-163","testNamespace",k8spolicy::UID{"testPod-163"},[("pod-name","testPod-163")],k8spolicy::PodSpec{"testNode-16"},k8spolicy::PodStatus{"10.10.16.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-164","testNamespace",k8spolicy::UID{"testPod-164"},[("pod-name","testPod-164")],k8spolicy::PodSpec{"testNode-16"},k8spolicy::PodStatus{"10.10.16.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-165","testNamespace",k8spolicy::UID{"testPod-165"},[("pod-name","testPod-165")],k8spolicy::PodSpec{"testNode-16"},k8spolicy::PodStatus{"10.10.16.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-166","testNamespace",k8spolicy::UID{"testPod-166"},[("pod-name","testPod-166")],k8spolicy::PodSpec{"testNode-16"},k8spolicy::PodStatus{"10.10.16.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-167","testNamespace",k8spolicy::UID{"testPod-167"},[("pod-name","testPod-167")],k8spolicy::PodSpec{"testNode-16"},k8spolicy::PodStatus{"10.10.16.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-168","testNamespace",k8spolicy::UID{"testPod-168"},[("pod-name","testPod-168")],k8spolicy::PodSpec{"testNode-16"},k8spolicy::PodStatus{"10.10.16.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-169","testNamespace",k8spolicy::UID{"testPod-169"},[("pod-name","testPod-169")],k8spolicy::PodSpec{"testNode-16"},k8spolicy::PodStatus{"10.10.16.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-170","testNamespace",k8spolicy::UID{"testPod-170"},[("pod-name","testPod-170")],k8spolicy::PodSpec{"testNode-17"},k8spolicy::PodStatus{"10.10.17.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-171","testNamespace",k8spolicy::UID{"testPod-171"},[("pod-name","testPod-171")],k8spolicy::PodSpec{"testNode-17"},k8spolicy::PodStatus{"10.10.17.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-172","testNamespace",k8spolicy::UID{"testPod-172"},[("pod-name","testPod-172")],k8spolicy::PodSpec{"testNode-17"},k8spolicy::PodStatus{"10.10.17.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-173","testNamespace",k8spolicy::UID{"testPod-173"},[("pod-name","testPod-173")],k8spolicy::PodSpec{"testNode-17"},k8spolicy::PodStatus{"10.10.17.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-174","testNamespace",k8spolicy::UID{"testPod-174"},[("pod-name","testPod-174")],k8spolicy::PodSpec{"testNode-17"},k8spolicy::PodStatus{"10.10.17.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-175","testNamespace",k8spolicy::UID{"testPod-175"},[("pod-name","testPod-175")],k8spolicy::PodSpec{"testNode-17"},k8spolicy::PodStatus{"10.10.17.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-176","testNamespace",k8spolicy::UID{"testPod-176"},[("pod-name","testPod-176")],k8spolicy::PodSpec{"testNode-17"},k8spolicy::PodStatus{"10.10.17.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-177","testNamespace",k8spolicy::UID{"testPod-177"},[("pod-name","testPod-177")],k8spolicy::PodSpec{"testNode-17"},k8spolicy::PodStatus{"10.10.17.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-178","testNamespace",k8spolicy::UID{"testPod-178"},[("pod-name","testPod-178")],k8spolicy::PodSpec{"testNode-17"},k8spolicy::PodStatus{"10.10.17.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-179","testNamespace",k8spolicy::UID{"testPod-179"},[("pod-name","testPod-179")],k8spolicy::PodSpec{"testNode-17"},k8spolicy::PodStatus{"10.10.17.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-180","testNamespace",k8spolicy::UID{"testPod-180"},[("pod-name","testPod-180")],k8spolicy::PodSpec{"testNode-18"},k8spolicy::PodStatus{"10.10.18.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-181","testNamespace",k8spolicy::UID{"testPod-181"},[("pod-name","testPod-181")],k8spolicy::PodSpec{"testNode-18"},k8spolicy::PodStatus{"10.10.18.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-182","testNamespace",k8spolicy::UID{"testPod-182"},[("pod-name","testPod-182")],k8spolicy::PodSpec{"testNode-18"},k8spolicy::PodStatus{"10.10.18.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-183","testNamespace",k8spolicy::UID{"testPod-183"},[("pod-name","testPod-183")],k8spolicy::PodSpec{"testNode-18"},k8spolicy::PodStatus{"10.10.18.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-184","testNamespace",k8spolicy::UID{"testPod-184"},[("pod-name","testPod-184")],k8spolicy::PodSpec{"testNode-18"},k8spolicy::PodStatus{"10.10.18.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-185","testNamespace",k8spolicy::UID{"testPod-185"},[("pod-name","testPod-185")],k8spolicy::PodSpec{"testNode-18"},k8spolicy::PodStatus{"10.10.18.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-186","testNamespace",k8spolicy::UID{"testPod-186"},[("pod-name","testPod-186")],k8spolicy::PodSpec{"testNode-18"},k8spolicy::PodStatus{"10.10.18.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-187","testNamespace",k8spolicy::UID{"testPod-187"},[("pod-name","testPod-187")],k8spolicy::PodSpec{"testNode-18"},k8spolicy::PodStatus{"10.10.18.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-188","testNamespace",k8spolicy::UID{"testPod-188"},[("pod-name","testPod-188")],k8spolicy::PodSpec{"testNode-18"},k8spolicy::PodStatus{"10.10.18.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-189","testNamespace",k8spolicy::UID{"testPod-189"},[("pod-name","testPod-189")],k8spolicy::PodSpec{"testNode-18"},k8spolicy::PodStatus{"10.10.18.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-190","testNamespace",k8spolicy::UID{"testPod-190"},[("pod-name","testPod-190")],k8spolicy::PodSpec{"testNode-19"},k8spolicy::PodStatus{"10.10.19.0"}}];
commit dump_changes;
start;
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-191","testNamespace",k8spolicy::UID{"testPod-191"},[("pod-name","testPod-191")],k8spolicy::PodSpec{"testNode-19"},k8spolicy::PodStatus{"10.10.19.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-192","testNamespace",k8spolicy::UID{"testPod-192"},[("pod-name","testPod-192")],k8spolicy::PodSpec{"testNode-19"},k8spolicy::PodStatus{"10.10.19.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-193","testNamespace",k8spolicy::UID{"testPod-193"},[("pod-name","testPod-193")],k8spolicy::PodSpec{"testNode-19"},k8spolicy::PodStatus{"10.10.19.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-194","testNamespace",k8spolicy::UID{"testPod-194"},[("pod-name","testPod-194")],k8spolicy::PodSpec{"testNode-19"},k8spolicy::PodStatus{"10.10.19.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-195","testNamespace",k8spolicy::UID{"testPod-195"},[("pod-name","testPod-195")],k8spolicy::PodSpec{"testNode-19"},k8spolicy::PodStatus{"10.10.19.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-196","testNamespace",k8spolicy::UID{"testPod-196"},[("pod-name","testPod-196")],k8spolicy::PodSpec{"testNode-19"},k8spolicy::PodStatus{"10.10.19.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-197","testNamespace",k8spolicy::UID{"testPod-197"},[("pod-name","testPod-197")],k8spolicy::PodSpec{"testNode-19"},k8spolicy::PodStatus{"10.10.19.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-198","testNamespace",k8spolicy::UID{"testPod-198"},[("pod-name","testPod-198")],k8spolicy::PodSpec{"testNode-19"},k8spolicy::PodStatus{"10.10.19.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-199","testNamespace",k8spolicy::UID{"testPod-199"},[("pod-name","testPod-199")],k8spolicy::PodSpec{"testNode-19"},k8spolicy::PodStatus{"10.10.19.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-200","testNamespace",k8spolicy::UID{"testPod-200"},[("pod-name","testPod-200")],k8spolicy::PodSpec{"testNode-20"},k8spolicy::PodStatus{"10.10.20.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-201","testNamespace",k8spolicy::UID{"testPod-201"},[("pod-name","testPod-201")],k8spolicy::PodSpec{"testNode-20"},k8spolicy::PodStatus{"10.10.20.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-202","testNamespace",k8spolicy::UID{"testPod-202"},[("pod-name","testPod-202")],k8spolicy::PodSpec{"testNode-20"},k8spolicy::PodStatus{"10.10.20.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-203","testNamespace",k8spolicy::UID{"testPod-203"},[("pod-name","testPod-203")],k8spolicy::PodSpec{"testNode-20"},k8spolicy::PodStatus{"10.10.20.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-204","testNamespace",k8spolicy::UID{"testPod-204"},[("pod-name","testPod-204")],k8spolicy::PodSpec{"testNode-20"},k8spolicy::PodStatus{"10.10.20.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-205","testNamespace",k8spolicy::UID{"testPod-205"},[("pod-name","testPod-205")],k8spolicy::PodSpec{"testNode-20"},k8spolicy::PodStatus{"10.10.20.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-206","testNamespace",k8spolicy::UID{"testPod-206"},[("pod-name","testPod-206")],k8spolicy::PodSpec{"testNode-20"},k8spolicy::PodStatus{"10.10.20.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-207","testNamespace",k8spolicy::UID{"testPod-207"},[("pod-name","testPod-207")],k8spolicy::PodSpec{"testNode-20"},k8spolicy::PodStatus{"10.10.20.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-208","testNamespace",k8spolicy::UID{"testPod-208"},[("pod-name","testPod-208")],k8spolicy::PodSpec{"testNode-20"},k8spolicy::PodStatus{"10.10.20.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-209","testNamespace",k8spolicy::UID{"testPod-209"},[("pod-name","testPod-209")],k8spolicy::PodSpec{"testNode-20"},k8spolicy::PodStatus{"10.10.20.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-210","testNamespace",k8spolicy::UID{"testPod-210"},[("pod-name","testPod-210")],k8spolicy::PodSpec{"testNode-21"},k8spolicy::PodStatus{"10.10.21.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-211","testNamespace",k8spolicy::UID{"testPod-211"},[("pod-name","testPod-211")],k8spolicy::PodSpec{"testNode-21"},k8spolicy::PodStatus{"10.10.21.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-212","testNamespace",k8spolicy::UID{"testPod-212"},[("pod-name","testPod-212")],k8spolicy::PodSpec{"testNode-21"},k8spolicy::PodStatus{"10.10.21.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-213","testNamespace",k8spolicy::UID{"testPod-213"},[("pod-name","testPod-213")],k8spolicy::PodSpec{"testNode-21"},k8spolicy::PodStatus{"10.10.21.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-214","testNamespace",k8spolicy::UID{"testPod-214"},[("pod-name","testPod-214")],k8spolicy::PodSpec{"testNode-21"},k8spolicy::PodStatus{"10.10.21.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-215","testNamespace",k8spolicy::UID{"testPod-215"},[("pod-name","testPod-215")],k8spolicy::PodSpec{"testNode-21"},k8spolicy::PodStatus{"10.10.21.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-216","testNamespace",k8spolicy::UID{"testPod-216"},[("pod-name","testPod-216")],k8spolicy::PodSpec{"testNode-21"},k8spolicy::PodStatus{"10.10.21.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-217","testNamespace",k8spolicy::UID{"testPod-217"},[("pod-name","testPod-217")],k8spolicy::PodSpec{"testNode-21"},k8spolicy::PodStatus{"10.10.21.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-218","testNamespace",k8spolicy::UID{"testPod-218"},[("pod-name","testPod-218")],k8spolicy::PodSpec{"testNode-21"},k8spolicy::PodStatus{"10.10.21.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-219","testNamespace",k8spolicy::UID{"testPod-219"},[("pod-name","testPod-219")],k8spolicy::PodSpec{"testNode-21"},k8spolicy::PodStatus{"10.10.21.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-220","testNamespace",k8spolicy::UID{"testPod-220"},[("pod-name","testPod-220")],k8spolicy::PodSpec{"testNode-22"},k8spolicy::PodStatus{"10.10.22.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-221","testNamespace",k8spolicy::UID{"testPod-221"},[("pod-name","testPod-221")],k8spolicy::PodSpec{"testNode-22"},k8spolicy::PodStatus{"10.10.22.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-222","testNamespace",k8spolicy::UID{"testPod-222"},[("pod-name","testPod-222")],k8spolicy::PodSpec{"testNode-22"},k8spolicy::PodStatus{"10.10.22.2"}}];
commit dump_changes;
start;
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-223","testNamespace",k8spolicy::UID{"testPod-223"},[("pod-name","testPod-223")],k8spolicy::PodSpec{"testNode-22"},k8spolicy::PodStatus{"10.10.22.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-224","testNamespace",k8spolicy::UID{"testPod-224"},[("pod-name","testPod-224")],k8spolicy::PodSpec{"testNode-22"},k8spolicy::PodStatus{"10.10.22.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-225","testNamespace",k8spolicy::UID{"testPod-225"},[("pod-name","testPod-225")],k8spolicy::PodSpec{"testNode-22"},k8spolicy::PodStatus{"10.10.22.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-226","testNamespace",k8spolicy::UID{"testPod-226"},[("pod-name","testPod-226")],k8spolicy::PodSpec{"testNode-22"},k8spolicy::PodStatus{"10.10.22.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-227","testNamespace",k8spolicy::UID{"testPod-227"},[("pod-name","testPod-227")],k8spolicy::PodSpec{"testNode-22"},k8spolicy::PodStatus{"10.10.22.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-228","testNamespace",k8spolicy::UID{"testPod-228"},[("pod-name","testPod-228")],k8spolicy::PodSpec{"testNode-22"},k8spolicy::PodStatus{"10.10.22.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-229","testNamespace",k8spolicy::UID{"testPod-229"},[("pod-name","testPod-229")],k8spolicy::PodSpec{"testNode-22"},k8spolicy::PodStatus{"10.10.22.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-230","testNamespace",k8spolicy::UID{"testPod-230"},[("pod-name","testPod-230")],k8spolicy::PodSpec{"testNode-23"},k8spolicy::PodStatus{"10.10.23.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-231","testNamespace",k8spolicy::UID{"testPod-231"},[("pod-name","testPod-231")],k8spolicy::PodSpec{"testNode-23"},k8spolicy::PodStatus{"10.10.23.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-232","testNamespace",k8spolicy::UID{"testPod-232"},[("pod-name","testPod-232")],k8spolicy::PodSpec{"testNode-23"},k8spolicy::PodStatus{"10.10.23.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-233","testNamespace",k8spolicy::UID{"testPod-233"},[("pod-name","testPod-233")],k8spolicy::PodSpec{"testNode-23"},k8spolicy::PodStatus{"10.10.23.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-234","testNamespace",k8spolicy::UID{"testPod-234"},[("pod-name","testPod-234")],k8spolicy::PodSpec{"testNode-23"},k8spolicy::PodStatus{"10.10.23.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-235","testNamespace",k8spolicy::UID{"testPod-235"},[("pod-name","testPod-235")],k8spolicy::PodSpec{"testNode-23"},k8spolicy::PodStatus{"10.10.23.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-236","testNamespace",k8spolicy::UID{"testPod-236"},[("pod-name","testPod-236")],k8spolicy::PodSpec{"testNode-23"},k8spolicy::PodStatus{"10.10.23.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-237","testNamespace",k8spolicy::UID{"testPod-237"},[("pod-name","testPod-237")],k8spolicy::PodSpec{"testNode-23"},k8spolicy::PodStatus{"10.10.23.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-238","testNamespace",k8spolicy::UID{"testPod-238"},[("pod-name","testPod-238")],k8spolicy::PodSpec{"testNode-23"},k8spolicy::PodStatus{"10.10.23.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-239","testNamespace",k8spolicy::UID{"testPod-239"},[("pod-name","testPod-239")],k8spolicy::PodSpec{"testNode-23"},k8spolicy::PodStatus{"10.10.23.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-240","testNamespace",k8spolicy::UID{"testPod-240"},[("pod-name","testPod-240")],k8spolicy::PodSpec{"testNode-24"},k8spolicy::PodStatus{"10.10.24.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-241","testNamespace",k8spolicy::UID{"testPod-241"},[("pod-name","testPod-241")],k8spolicy::PodSpec{"testNode-24"},k8spolicy::PodStatus{"10.10.24.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-242","testNamespace",k8spolicy::UID{"testPod-242"},[("pod-name","testPod-242")],k8spolicy::PodSpec{"testNode-24"},k8spolicy::PodStatus{"10.10.24.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-243","testNamespace",k8spolicy::UID{"testPod-243"},[("pod-name","testPod-243")],k8spolicy::PodSpec{"testNode-24"},k8spolicy::PodStatus{"10.10.24.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-244","testNamespace",k8spolicy::UID{"testPod-244"},[("pod-name","testPod-244")],k8spolicy::PodSpec{"testNode-24"},k8spolicy::PodStatus{"10.10.24.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-245","testNamespace",k8spolicy::UID{"testPod-245"},[("pod-name","testPod-245")],k8spolicy::PodSpec{"testNode-24"},k8spolicy::PodStatus{"10.10.24.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-246","testNamespace",k8spolicy::UID{"testPod-246"},[("pod-name","testPod-246")],k8spolicy::PodSpec{"testNode-24"},k8spolicy::PodStatus{"10.10.24.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-247","testNamespace",k8spolicy::UID{"testPod-247"},[("pod-name","testPod-247")],k8spolicy::PodSpec{"testNode-24"},k8spolicy::PodStatus{"10.10.24.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-248","testNamespace",k8spolicy::UID{"testPod-248"},[("pod-name","testPod-248")],k8spolicy::PodSpec{"testNode-24"},k8spolicy::PodStatus{"10.10.24.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-249","testNamespace",k8spolicy::UID{"testPod-249"},[("pod-name","testPod-249")],k8spolicy::PodSpec{"testNode-24"},k8spolicy::PodStatus{"10.10.24.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-250","testNamespace",k8spolicy::UID{"testPod-250"},[("pod-name","testPod-250")],k8spolicy::PodSpec{"testNode-25"},k8spolicy::PodStatus{"10.10.25.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-251","testNamespace",k8spolicy::UID{"testPod-251"},[("pod-name","testPod-251")],k8spolicy::PodSpec{"testNode-25"},k8spolicy::PodStatus{"10.10.25.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-252","testNamespace",k8spolicy::UID{"testPod-252"},[("pod-name","testPod-252")],k8spolicy::PodSpec{"testNode-25"},k8spolicy::PodStatus{"10.10.25.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-253","testNamespace",k8spolicy::UID{"testPod-253"},[("pod-name","testPod-253")],k8spolicy::PodSpec{"testNode-25"},k8spolicy::PodStatus{"10.10.25.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-254","testNamespace",k8spolicy::UID{"testPod-254"},[("pod-name","testPod-254")],k8spolicy::PodSpec{"testNode-25"},k8spolicy::PodStatus{"10.10.25.4"}}];
commit dump_changes;
start;
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-255","testNamespace",k8spolicy::UID{"testPod-255"},[("pod-name","testPod-255")],k8spolicy::PodSpec{"testNode-25"},k8spolicy::PodStatus{"10.10.25.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-256","testNamespace",k8spolicy::UID{"testPod-256"},[("pod-name","testPod-256")],k8spolicy::PodSpec{"testNode-25"},k8spolicy::PodStatus{"10.10.25.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-257","testNamespace",k8spolicy::UID{"testPod-257"},[("pod-name","testPod-257")],k8spolicy::PodSpec{"testNode-25"},k8spolicy::PodStatus{"10.10.25.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-258","testNamespace",k8spolicy::UID{"testPod-258"},[("pod-name","testPod-258")],k8spolicy::PodSpec{"testNode-25"},k8spolicy::PodStatus{"10.10.25.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-259","testNamespace",k8spolicy::UID{"testPod-259"},[("pod-name","testPod-259")],k8spolicy::PodSpec{"testNode-25"},k8spolicy::PodStatus{"10.10.25.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-260","testNamespace",k8spolicy::UID{"testPod-260"},[("pod-name","testPod-260")],k8spolicy::PodSpec{"testNode-26"},k8spolicy::PodStatus{"10.10.26.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-261","testNamespace",k8spolicy::UID{"testPod-261"},[("pod-name","testPod-261")],k8spolicy::PodSpec{"testNode-26"},k8spolicy::PodStatus{"10.10.26.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-262","testNamespace",k8spolicy::UID{"testPod-262"},[("pod-name","testPod-262")],k8spolicy::PodSpec{"testNode-26"},k8spolicy::PodStatus{"10.10.26.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-263","testNamespace",k8spolicy::UID{"testPod-263"},[("pod-name","testPod-263")],k8spolicy::PodSpec{"testNode-26"},k8spolicy::PodStatus{"10.10.26.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-264","testNamespace",k8spolicy::UID{"testPod-264"},[("pod-name","testPod-264")],k8spolicy::PodSpec{"testNode-26"},k8spolicy::PodStatus{"10.10.26.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-265","testNamespace",k8spolicy::UID{"testPod-265"},[("pod-name","testPod-265")],k8spolicy::PodSpec{"testNode-26"},k8spolicy::PodStatus{"10.10.26.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-266","testNamespace",k8spolicy::UID{"testPod-266"},[("pod-name","testPod-266")],k8spolicy::PodSpec{"testNode-26"},k8spolicy::PodStatus{"10.10.26.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-267","testNamespace",k8spolicy::UID{"testPod-267"},[("pod-name","testPod-267")],k8spolicy::PodSpec{"testNode-26"},k8spolicy::PodStatus{"10.10.26.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-268","testNamespace",k8spolicy::UID{"testPod-268"},[("pod-name","testPod-268")],k8spolicy::PodSpec{"testNode-26"},k8spolicy::PodStatus{"10.10.26.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-269","testNamespace",k8spolicy::UID{"testPod-269"},[("pod-name","testPod-269")],k8spolicy::PodSpec{"testNode-26"},k8spolicy::PodStatus{"10.10.26.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-270","testNamespace",k8spolicy::UID{"testPod-270"},[("pod-name","testPod-270")],k8spolicy::PodSpec{"testNode-27"},k8spolicy::PodStatus{"10.10.27.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-271","testNamespace",k8spolicy::UID{"testPod-271"},[("pod-name","testPod-271")],k8spolicy::PodSpec{"testNode-27"},k8spolicy::PodStatus{"10.10.27.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-272","testNamespace",k8spolicy::UID{"testPod-272"},[("pod-name","testPod-272")],k8spolicy::PodSpec{"testNode-27"},k8spolicy::PodStatus{"10.10.27.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-273","testNamespace",k8spolicy::UID{"testPod-273"},[("pod-name","testPod-273")],k8spolicy::PodSpec{"testNode-27"},k8spolicy::PodStatus{"10.10.27.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-274","testNamespace",k8spolicy::UID{"testPod-274"},[("pod-name","testPod-274")],k8spolicy::PodSpec{"testNode-27"},k8spolicy::PodStatus{"10.10.27.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-275","testNamespace",k8spolicy::UID{"testPod-275"},[("pod-name","testPod-275")],k8spolicy::PodSpec{"testNode-27"},k8spolicy::PodStatus{"10.10.27.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-276","testNamespace",k8spolicy::UID{"testPod-276"},[("pod-name","testPod-276")],k8spolicy::PodSpec{"testNode-27"},k8spolicy::PodStatus{"10.10.27.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-277","testNamespace",k8spolicy::UID{"testPod-277"},[("pod-name","testPod-277")],k8spolicy::PodSpec{"testNode-27"},k8spolicy::PodStatus{"10.10.27.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-278","testNamespace",k8spolicy::UID{"testPod-278"},[("pod-name","testPod-278")],k8spolicy::PodSpec{"testNode-27"},k8spolicy::PodStatus{"10.10.27.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-279","testNamespace",k8spolicy::UID{"testPod-279"},[("pod-name","testPod-279")],k8spolicy::PodSpec{"testNode-27"},k8spolicy::PodStatus{"10.10.27.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-280","testNamespace",k8spolicy::UID{"testPod-280"},[("pod-name","testPod-280")],k8spolicy::PodSpec{"testNode-28"},k8spolicy::PodStatus{"10.10.28.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-281","testNamespace",k8spolicy::UID{"testPod-281"},[("pod-name","testPod-281")],k8spolicy::PodSpec{"testNode-28"},k8spolicy::PodStatus{"10.10.28.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-282","testNamespace",k8spolicy::UID{"testPod-282"},[("pod-name","testPod-282")],k8spolicy::PodSpec{"testNode-28"},k8spolicy::PodStatus{"10.10.28.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-283","testNamespace",k8spolicy::UID{"testPod-283"},[("pod-name","testPod-283")],k8spolicy::PodSpec{"testNode-28"},k8spolicy::PodStatus{"10.10.28.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-284","testNamespace",k8spolicy::UID{"testPod-284"},[("pod-name","testPod-284")],k8spolicy::PodSpec{"testNode-28"},k8spolicy::PodStatus{"10.10.28.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-285","testNamespace",k8spolicy::UID{"testPod-285"},[("pod-name","testPod-285")],k8spolicy::PodSpec{"testNode-28"},k8spolicy::PodStatus{"10.10.28.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-286","testNamespace",k8spolicy::UID{"testPod-286"},[("pod-name","testPod-286")],k8spolicy::PodSpec{"testNode-28"},k8spolicy::PodStatus{"10.10.28.6"}}];
commit dump_changes;
start;
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-287","testNamespace",k8spolicy::UID{"testPod-287"},[("pod-name","testPod-287")],k8spolicy::PodSpec{"testNode-28"},k8spolicy::PodStatus{"10.10.28.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-288","testNamespace",k8spolicy::UID{"testPod-288"},[("pod-name","testPod-288")],k8spolicy::PodSpec{"testNode-28"},k8spolicy::PodStatus{"10.10.28.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-289","testNamespace",k8spolicy::UID{"testPod-289"},[("pod-name","testPod-289")],k8spolicy::PodSpec{"testNode-28"},k8spolicy::PodStatus{"10.10.28.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-290","testNamespace",k8spolicy::UID{"testPod-290"},[("pod-name","testPod-290")],k8spolicy::PodSpec{"testNode-29"},k8spolicy::PodStatus{"10.10.29.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-291","testNamespace",k8spolicy::UID{"testPod-291"},[("pod-name","testPod-291")],k8spolicy::PodSpec{"testNode-29"},k8spolicy::PodStatus{"10.10.29.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-292","testNamespace",k8spolicy::UID{"testPod-292"},[("pod-name","testPod-292")],k8spolicy::PodSpec{"testNode-29"},k8spolicy::PodStatus{"10.10.29.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-293","testNamespace",k8spolicy::UID{"testPod-293"},[("pod-name","testPod-293")],k8spolicy::PodSpec{"testNode-29"},k8spolicy::PodStatus{"10.10.29.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-294","testNamespace",k8spolicy::UID{"testPod-294"},[("pod-name","testPod-294")],k8spolicy::PodSpec{"testNode-29"},k8spolicy::PodStatus{"10.10.29.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-295","testNamespace",k8spolicy::UID{"testPod-295"},[("pod-name","testPod-295")],k8spolicy::PodSpec{"testNode-29"},k8spolicy::PodStatus{"10.10.29.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-296","testNamespace",k8spolicy::UID{"testPod-296"},[("pod-name","testPod-296")],k8spolicy::PodSpec{"testNode-29"},k8spolicy::PodStatus{"10.10.29.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-297","testNamespace",k8spolicy::UID{"testPod-297"},[("pod-name","testPod-297")],k8spolicy::PodSpec{"testNode-29"},k8spolicy::PodStatus{"10.10.29.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-298","testNamespace",k8spolicy::UID{"testPod-298"},[("pod-name","testPod-298")],k8spolicy::PodSpec{"testNode-29"},k8spolicy::PodStatus{"10.10.29.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-299","testNamespace",k8spolicy::UID{"testPod-299"},[("pod-name","testPod-299")],k8spolicy::PodSpec{"testNode-29"},k8spolicy::PodStatus{"10.10.29.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-300","testNamespace",k8spolicy::UID{"testPod-300"},[("pod-name","testPod-300")],k8spolicy::PodSpec{"testNode-30"},k8spolicy::PodStatus{"10.10.30.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-301","testNamespace",k8spolicy::UID{"testPod-301"},[("pod-name","testPod-301")],k8spolicy::PodSpec{"testNode-30"},k8spolicy::PodStatus{"10.10.30.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-302","testNamespace",k8spolicy::UID{"testPod-302"},[("pod-name","testPod-302")],k8spolicy::PodSpec{"testNode-30"},k8spolicy::PodStatus{"10.10.30.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-303","testNamespace",k8spolicy::UID{"testPod-303"},[("pod-name","testPod-303")],k8spolicy::PodSpec{"testNode-30"},k8spolicy::PodStatus{"10.10.30.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-304","testNamespace",k8spolicy::UID{"testPod-304"},[("pod-name","testPod-304")],k8spolicy::PodSpec{"testNode-30"},k8spolicy::PodStatus{"10.10.30.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-305","testNamespace",k8spolicy::UID{"testPod-305"},[("pod-name","testPod-305")],k8spolicy::PodSpec{"testNode-30"},k8spolicy::PodStatus{"10.10.30.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-306","testNamespace",k8spolicy::UID{"testPod-306"},[("pod-name","testPod-306")],k8spolicy::PodSpec{"testNode-30"},k8spolicy::PodStatus{"10.10.30.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-307","testNamespace",k8spolicy::UID{"testPod-307"},[("pod-name","testPod-307")],k8spolicy::PodSpec{"testNode-30"},k8spolicy::PodStatus{"10.10.30.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-308","testNamespace",k8spolicy::UID{"testPod-308"},[("pod-name","testPod-308")],k8spolicy::PodSpec{"testNode-30"},k8spolicy::PodStatus{"10.10.30.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-309","testNamespace",k8spolicy::UID{"testPod-309"},[("pod-name","testPod-309")],k8spolicy::PodSpec{"testNode-30"},k8spolicy::PodStatus{"10.10.30.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-310","testNamespace",k8spolicy::UID{"testPod-310"},[("pod-name","testPod-310")],k8spolicy::PodSpec{"testNode-31"},k8spolicy::PodStatus{"10.10.31.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-311","testNamespace",k8spolicy::UID{"testPod-311"},[("pod-name","testPod-311")],k8spolicy::PodSpec{"testNode-31"},k8spolicy::PodStatus{"10.10.31.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-312","testNamespace",k8spolicy::UID{"testPod-312"},[("pod-name","testPod-312")],k8spolicy::PodSpec{"testNode-31"},k8spolicy::PodStatus{"10.10.31.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-313","testNamespace",k8spolicy::UID{"testPod-313"},[("pod-name","testPod-313")],k8spolicy::PodSpec{"testNode-31"},k8spolicy::PodStatus{"10.10.31.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-314","testNamespace",k8spolicy::UID{"testPod-314"},[("pod-name","testPod-314")],k8spolicy::PodSpec{"testNode-31"},k8spolicy::PodStatus{"10.10.31.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-315","testNamespace",k8spolicy::UID{"testPod-315"},[("pod-name","testPod-315")],k8spolicy::PodSpec{"testNode-31"},k8spolicy::PodStatus{"10.10.31.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-316","testNamespace",k8spolicy::UID{"testPod-316"},[("pod-name","testPod-316")],k8spolicy::PodSpec{"testNode-31"},k8spolicy::PodStatus{"10.10.31.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-317","testNamespace",k8spolicy::UID{"testPod-317"},[("pod-name","testPod-317")],k8spolicy::PodSpec{"testNode-31"},k8spolicy::PodStatus{"10.10.31.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-318","testNamespace",k8spolicy::UID{"testPod-318"},[("pod-name","testPod-318")],k8spolicy::PodSpec{"testNode-31"},k8spolicy::PodStatus{"10.10.31.8"}}];
commit dump_changes;
start;
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-319","testNamespace",k8spolicy::UID{"testPod-319"},[("pod-name","testPod-319")],k8spolicy::PodSpec{"testNode-31"},k8spolicy::PodStatus{"10.10.31.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-320","testNamespace",k8spolicy::UID{"testPod-320"},[("pod-name","testPod-320")],k8spolicy::PodSpec{"testNode-32"},k8spolicy::PodStatus{"10.10.32.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-321","testNamespace",k8spolicy::UID{"testPod-321"},[("pod-name","testPod-321")],k8spolicy::PodSpec{"testNode-32"},k8spolicy::PodStatus{"10.10.32.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-322","testNamespace",k8spolicy::UID{"testPod-322"},[("pod-name","testPod-322")],k8spolicy::PodSpec{"testNode-32"},k8spolicy::PodStatus{"10.10.32.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-323","testNamespace",k8spolicy::UID{"testPod-323"},[("pod-name","testPod-323")],k8spolicy::PodSpec{"testNode-32"},k8spolicy::PodStatus{"10.10.32.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-324","testNamespace",k8spolicy::UID{"testPod-324"},[("pod-name","testPod-324")],k8spolicy::PodSpec{"testNode-32"},k8spolicy::PodStatus{"10.10.32.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-325","testNamespace",k8spolicy::UID{"testPod-325"},[("pod-name","testPod-325")],k8spolicy::PodSpec{"testNode-32"},k8spolicy::PodStatus{"10.10.32.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-326","testNamespace",k8spolicy::UID{"testPod-326"},[("pod-name","testPod-326")],k8spolicy::PodSpec{"testNode-32"},k8spolicy::PodStatus{"10.10.32.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-327","testNamespace",k8spolicy::UID{"testPod-327"},[("pod-name","testPod-327")],k8spolicy::PodSpec{"testNode-32"},k8spolicy::PodStatus{"10.10.32.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-328","testNamespace",k8spolicy::UID{"testPod-328"},[("pod-name","testPod-328")],k8spolicy::PodSpec{"testNode-32"},k8spolicy::PodStatus{"10.10.32.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-329","testNamespace",k8spolicy::UID{"testPod-329"},[("pod-name","testPod-329")],k8spolicy::PodSpec{"testNode-32"},k8spolicy::PodStatus{"10.10.32.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-330","testNamespace",k8spolicy::UID{"testPod-330"},[("pod-name","testPod-330")],k8spolicy::PodSpec{"testNode-33"},k8spolicy::PodStatus{"10.10.33.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-331","testNamespace",k8spolicy::UID{"testPod-331"},[("pod-name","testPod-331")],k8spolicy::PodSpec{"testNode-33"},k8spolicy::PodStatus{"10.10.33.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-332","testNamespace",k8spolicy::UID{"testPod-332"},[("pod-name","testPod-332")],k8spolicy::PodSpec{"testNode-33"},k8spolicy::PodStatus{"10.10.33.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-333","testNamespace",k8spolicy::UID{"testPod-333"},[("pod-name","testPod-333")],k8spolicy::PodSpec{"testNode-33"},k8spolicy::PodStatus{"10.10.33.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-334","testNamespace",k8spolicy::UID{"testPod-334"},[("pod-name","testPod-334")],k8spolicy::PodSpec{"testNode-33"},k8spolicy::PodStatus{"10.10.33.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-335","testNamespace",k8spolicy::UID{"testPod-335"},[("pod-name","testPod-335")],k8spolicy::PodSpec{"testNode-33"},k8spolicy::PodStatus{"10.10.33.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-336","testNamespace",k8spolicy::UID{"testPod-336"},[("pod-name","testPod-336")],k8spolicy::PodSpec{"testNode-33"},k8spolicy::PodStatus{"10.10.33.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-337","testNamespace",k8spolicy::UID{"testPod-337"},[("pod-name","testPod-337")],k8spolicy::PodSpec{"testNode-33"},k8spolicy::PodStatus{"10.10.33.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-338","testNamespace",k8spolicy::UID{"testPod-338"},[("pod-name","testPod-338")],k8spolicy::PodSpec{"testNode-33"},k8spolicy::PodStatus{"10.10.33.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-339","testNamespace",k8spolicy::UID{"testPod-339"},[("pod-name","testPod-339")],k8spolicy::PodSpec{"testNode-33"},k8spolicy::PodStatus{"10.10.33.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-340","testNamespace",k8spolicy::UID{"testPod-340"},[("pod-name","testPod-340")],k8spolicy::PodSpec{"testNode-34"},k8spolicy::PodStatus{"10.10.34.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-341","testNamespace",k8spolicy::UID{"testPod-341"},[("pod-name","testPod-341")],k8spolicy::PodSpec{"testNode-34"},k8spolicy::PodStatus{"10.10.34.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-342","testNamespace",k8spolicy::UID{"testPod-342"},[("pod-name","testPod-342")],k8spolicy::PodSpec{"testNode-34"},k8spolicy::PodStatus{"10.10.34.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-343","testNamespace",k8spolicy::UID{"testPod-343"},[("pod-name","testPod-343")],k8spolicy::PodSpec{"testNode-34"},k8spolicy::PodStatus{"10.10.34.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-344","testNamespace",k8spolicy::UID{"testPod-344"},[("pod-name","testPod-344")],k8spolicy::PodSpec{"testNode-34"},k8spolicy::PodStatus{"10.10.34.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-345","testNamespace",k8spolicy::UID{"testPod-345"},[("pod-name","testPod-345")],k8spolicy::PodSpec{"testNode-34"},k8spolicy::PodStatus{"10.10.34.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-346","testNamespace",k8spolicy::UID{"testPod-346"},[("pod-name","testPod-346")],k8spolicy::PodSpec{"testNode-34"},k8spolicy::PodStatus{"10.10.34.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-347","testNamespace",k8spolicy::UID{"testPod-347"},[("pod-name","testPod-347")],k8spolicy::PodSpec{"testNode-34"},k8spolicy::PodStatus{"10.10.34.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-348","testNamespace",k8spolicy::UID{"testPod-348"},[("pod-name","testPod-348")],k8spolicy::PodSpec{"testNode-34"},k8spolicy::PodStatus{"10.10.34.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-349","testNamespace",k8spolicy::UID{"testPod-349"},[("pod-name","testPod-349")],k8spolicy::PodSpec{"testNode-34"},k8spolicy::PodStatus{"10.10.34.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-350","testNamespace",k8spolicy::UID{"testPod-350"},[("pod-name","testPod-350")],k8spolicy::PodSpec{"testNode-35"},k8spolicy::PodStatus{"10.10.35.0"}}];
commit dump_changes;
start;
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-351","testNamespace",k8spolicy::UID{"testPod-351"},[("pod-name","testPod-351")],k8spolicy::PodSpec{"testNode-35"},k8spolicy::PodStatus{"10.10.35.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-352","testNamespace",k8spolicy::UID{"testPod-352"},[("pod-name","testPod-352")],k8spolicy::PodSpec{"testNode-35"},k8spolicy::PodStatus{"10.10.35.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-353","testNamespace",k8spolicy::UID{"testPod-353"},[("pod-name","testPod-353")],k8spolicy::PodSpec{"testNode-35"},k8spolicy::PodStatus{"10.10.35.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-354","testNamespace",k8spolicy::UID{"testPod-354"},[("pod-name","testPod-354")],k8spolicy::PodSpec{"testNode-35"},k8spolicy::PodStatus{"10.10.35.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-355","testNamespace",k8spolicy::UID{"testPod-355"},[("pod-name","testPod-355")],k8spolicy::PodSpec{"testNode-35"},k8spolicy::PodStatus{"10.10.35.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-356","testNamespace",k8spolicy::UID{"testPod-356"},[("pod-name","testPod-356")],k8spolicy::PodSpec{"testNode-35"},k8spolicy::PodStatus{"10.10.35.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-357","testNamespace",k8spolicy::UID{"testPod-357"},[("pod-name","testPod-357")],k8spolicy::PodSpec{"testNode-35"},k8spolicy::PodStatus{"10.10.35.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-358","testNamespace",k8spolicy::UID{"testPod-358"},[("pod-name","testPod-358")],k8spolicy::PodSpec{"testNode-35"},k8spolicy::PodStatus{"10.10.35.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-359","testNamespace",k8spolicy::UID{"testPod-359"},[("pod-name","testPod-359")],k8spolicy::PodSpec{"testNode-35"},k8spolicy::PodStatus{"10.10.35.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-360","testNamespace",k8spolicy::UID{"testPod-360"},[("pod-name","testPod-360")],k8spolicy::PodSpec{"testNode-36"},k8spolicy::PodStatus{"10.10.36.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-361","testNamespace",k8spolicy::UID{"testPod-361"},[("pod-name","testPod-361")],k8spolicy::PodSpec{"testNode-36"},k8spolicy::PodStatus{"10.10.36.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-362","testNamespace",k8spolicy::UID{"testPod-362"},[("pod-name","testPod-362")],k8spolicy::PodSpec{"testNode-36"},k8spolicy::PodStatus{"10.10.36.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-363","testNamespace",k8spolicy::UID{"testPod-363"},[("pod-name","testPod-363")],k8spolicy::PodSpec{"testNode-36"},k8spolicy::PodStatus{"10.10.36.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-364","testNamespace",k8spolicy::UID{"testPod-364"},[("pod-name","testPod-364")],k8spolicy::PodSpec{"testNode-36"},k8spolicy::PodStatus{"10.10.36.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-365","testNamespace",k8spolicy::UID{"testPod-365"},[("pod-name","testPod-365")],k8spolicy::PodSpec{"testNode-36"},k8spolicy::PodStatus{"10.10.36.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-366","testNamespace",k8spolicy::UID{"testPod-366"},[("pod-name","testPod-366")],k8spolicy::PodSpec{"testNode-36"},k8spolicy::PodStatus{"10.10.36.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-367","testNamespace",k8spolicy::UID{"testPod-367"},[("pod-name","testPod-367")],k8spolicy::PodSpec{"testNode-36"},k8spolicy::PodStatus{"10.10.36.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-368","testNamespace",k8spolicy::UID{"testPod-368"},[("pod-name","testPod-368")],k8spolicy::PodSpec{"testNode-36"},k8spolicy::PodStatus{"10.10.36.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-369","testNamespace",k8spolicy::UID{"testPod-369"},[("pod-name","testPod-369")],k8spolicy::PodSpec{"testNode-36"},k8spolicy::PodStatus{"10.10.36.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-370","testNamespace",k8spolicy::UID{"testPod-370"},[("pod-name","testPod-370")],k8spolicy::PodSpec{"testNode-37"},k8spolicy::PodStatus{"10.10.37.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-371","testNamespace",k8spolicy::UID{"testPod-371"},[("pod-name","testPod-371")],k8spolicy::PodSpec{"testNode-37"},k8spolicy::PodStatus{"10.10.37.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-372","testNamespace",k8spolicy::UID{"testPod-372"},[("pod-name","testPod-372")],k8spolicy::PodSpec{"testNode-37"},k8spolicy::PodStatus{"10.10.37.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-373","testNamespace",k8spolicy::UID{"testPod-373"},[("pod-name","testPod-373")],k8spolicy::PodSpec{"testNode-37"},k8spolicy::PodStatus{"10.10.37.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-374","testNamespace",k8spolicy::UID{"testPod-374"},[("pod-name","testPod-374")],k8spolicy::PodSpec{"testNode-37"},k8spolicy::PodStatus{"10.10.37.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-375","testNamespace",k8spolicy::UID{"testPod-375"},[("pod-name","testPod-375")],k8spolicy::PodSpec{"testNode-37"},k8spolicy::PodStatus{"10.10.37.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-376","testNamespace",k8spolicy::UID{"testPod-376"},[("pod-name","testPod-376")],k8spolicy::PodSpec{"testNode-37"},k8spolicy::PodStatus{"10.10.37.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-377","testNamespace",k8spolicy::UID{"testPod-377"},[("pod-name","testPod-377")],k8spolicy::PodSpec{"testNode-37"},k8spolicy::PodStatus{"10.10.37.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-378","testNamespace",k8spolicy::UID{"testPod-378"},[("pod-name","testPod-378")],k8spolicy::PodSpec{"testNode-37"},k8spolicy::PodStatus{"10.10.37.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-379","testNamespace",k8spolicy::UID{"testPod-379"},[("pod-name","testPod-379")],k8spolicy::PodSpec{"testNode-37"},k8spolicy::PodStatus{"10.10.37.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-380","testNamespace",k8spolicy::UID{"testPod-380"},[("pod-name","testPod-380")],k8spolicy::PodSpec{"testNode-38"},k8spolicy::PodStatus{"10.10.38.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-381","testNamespace",k8spolicy::UID{"testPod-381"},[("pod-name","testPod-381")],k8spolicy::PodSpec{"testNode-38"},k8spolicy::PodStatus{"10.10.38.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-382","testNamespace",k8spolicy::UID{"testPod-382"},[("pod-name","testPod-382")],k8spolicy::PodSpec{"testNode-38"},k8spolicy::PodStatus{"10.10.38.2"}}];
commit dump_changes;
start;
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-383","testNamespace",k8spolicy::UID{"testPod-383"},[("pod-name","testPod-383")],k8spolicy::PodSpec{"testNode-38"},k8spolicy::PodStatus{"10.10.38.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-384","testNamespace",k8spolicy::UID{"testPod-384"},[("pod-name","testPod-384")],k8spolicy::PodSpec{"testNode-38"},k8spolicy::PodStatus{"10.10.38.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-385","testNamespace",k8spolicy::UID{"testPod-385"},[("pod-name","testPod-385")],k8spolicy::PodSpec{"testNode-38"},k8spolicy::PodStatus{"10.10.38.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-386","testNamespace",k8spolicy::UID{"testPod-386"},[("pod-name","testPod-386")],k8spolicy::PodSpec{"testNode-38"},k8spolicy::PodStatus{"10.10.38.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-387","testNamespace",k8spolicy::UID{"testPod-387"},[("pod-name","testPod-387")],k8spolicy::PodSpec{"testNode-38"},k8spolicy::PodStatus{"10.10.38.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-388","testNamespace",k8spolicy::UID{"testPod-388"},[("pod-name","testPod-388")],k8spolicy::PodSpec{"testNode-38"},k8spolicy::PodStatus{"10.10.38.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-389","testNamespace",k8spolicy::UID{"testPod-389"},[("pod-name","testPod-389")],k8spolicy::PodSpec{"testNode-38"},k8spolicy::PodStatus{"10.10.38.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-390","testNamespace",k8spolicy::UID{"testPod-390"},[("pod-name","testPod-390")],k8spolicy::PodSpec{"testNode-39"},k8spolicy::PodStatus{"10.10.39.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-391","testNamespace",k8spolicy::UID{"testPod-391"},[("pod-name","testPod-391")],k8spolicy::PodSpec{"testNode-39"},k8spolicy::PodStatus{"10.10.39.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-392","testNamespace",k8spolicy::UID{"testPod-392"},[("pod-name","testPod-392")],k8spolicy::PodSpec{"testNode-39"},k8spolicy::PodStatus{"10.10.39.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-393","testNamespace",k8spolicy::UID{"testPod-393"},[("pod-name","testPod-393")],k8spolicy::PodSpec{"testNode-39"},k8spolicy::PodStatus{"10.10.39.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-394","testNamespace",k8spolicy::UID{"testPod-394"},[("pod-name","testPod-394")],k8spolicy::PodSpec{"testNode-39"},k8spolicy::PodStatus{"10.10.39.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-395","testNamespace",k8spolicy::UID{"testPod-395"},[("pod-name","testPod-395")],k8spolicy::PodSpec{"testNode-39"},k8spolicy::PodStatus{"10.10.39.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-396","testNamespace",k8spolicy::UID{"testPod-396"},[("pod-name","testPod-396")],k8spolicy::PodSpec{"testNode-39"},k8spolicy::PodStatus{"10.10.39.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-397","testNamespace",k8spolicy::UID{"testPod-397"},[("pod-name","testPod-397")],k8spolicy::PodSpec{"testNode-39"},k8spolicy::PodStatus{"10.10.39.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-398","testNamespace",k8spolicy::UID{"testPod-398"},[("pod-name","testPod-398")],k8spolicy::PodSpec{"testNode-39"},k8spolicy::PodStatus{"10.10.39.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-399","testNamespace",k8spolicy::UID{"testPod-399"},[("pod-name","testPod-399")],k8spolicy::PodSpec{"testNode-39"},k8spolicy::PodStatus{"10.10.39.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-400","testNamespace",k8spolicy::UID{"testPod-400"},[("pod-name","testPod-400")],k8spolicy::PodSpec{"testNode-40"},k8spolicy::PodStatus{"10.10.40.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-401","testNamespace",k8spolicy::UID{"testPod-401"},[("pod-name","testPod-401")],k8spolicy::PodSpec{"testNode-40"},k8spolicy::PodStatus{"10.10.40.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-402","testNamespace",k8spolicy::UID{"testPod-402"},[("pod-name","testPod-402")],k8spolicy::PodSpec{"testNode-40"},k8spolicy::PodStatus{"10.10.40.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-403","testNamespace",k8spolicy::UID{"testPod-403"},[("pod-name","testPod-403")],k8spolicy::PodSpec{"testNode-40"},k8spolicy::PodStatus{"10.10.40.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-404","testNamespace",k8spolicy::UID{"testPod-404"},[("pod-name","testPod-404")],k8spolicy::PodSpec{"testNode-40"},k8spolicy::PodStatus{"10.10.40.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-405","testNamespace",k8spolicy::UID{"testPod-405"},[("pod-name","testPod-405")],k8spolicy::PodSpec{"testNode-40"},k8spolicy::PodStatus{"10.10.40.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-406","testNamespace",k8spolicy::UID{"testPod-406"},[("pod-name","testPod-406")],k8spolicy::PodSpec{"testNode-40"},k8spolicy::PodStatus{"10.10.40.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-407","testNamespace",k8spolicy::UID{"testPod-407"},[("pod-name","testPod-407")],k8spolicy::PodSpec{"testNode-40"},k8spolicy::PodStatus{"10.10.40.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-408","testNamespace",k8spolicy::UID{"testPod-408"},[("pod-name","testPod-408")],k8spolicy::PodSpec{"testNode-40"},k8spolicy::PodStatus{"10.10.40.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-409","testNamespace",k8spolicy::UID{"testPod-409"},[("pod-name","testPod-409")],k8spolicy::PodSpec{"testNode-40"},k8spolicy::PodStatus{"10.10.40.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-410","testNamespace",k8spolicy::UID{"testPod-410"},[("pod-name","testPod-410")],k8spolicy::PodSpec{"testNode-41"},k8spolicy::PodStatus{"10.10.41.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-411","testNamespace",k8spolicy::UID{"testPod-411"},[("pod-name","testPod-411")],k8spolicy::PodSpec{"testNode-41"},k8spolicy::PodStatus{"10.10.41.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-412","testNamespace",k8spolicy::UID{"testPod-412"},[("pod-name","testPod-412")],k8spolicy::PodSpec{"testNode-41"},k8spolicy::PodStatus{"10.10.41.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-413","testNamespace",k8spolicy::UID{"testPod-413"},[("pod-name","testPod-413")],k8spolicy::PodSpec{"testNode-41"},k8spolicy::PodStatus{"10.10.41.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-414","testNamespace",k8spolicy::UID{"testPod-414"},[("pod-name","testPod-414")],k8spolicy::PodSpec{"testNode-41"},k8spolicy::PodStatus{"10.10.41.4"}}];
commit dump_changes;
start;
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-415","testNamespace",k8spolicy::UID{"testPod-415"},[("pod-name","testPod-415")],k8spolicy::PodSpec{"testNode-41"},k8spolicy::PodStatus{"10.10.41.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-416","testNamespace",k8spolicy::UID{"testPod-416"},[("pod-name","testPod-416")],k8spolicy::PodSpec{"testNode-41"},k8spolicy::PodStatus{"10.10.41.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-417","testNamespace",k8spolicy::UID{"testPod-417"},[("pod-name","testPod-417")],k8spolicy::PodSpec{"testNode-41"},k8spolicy::PodStatus{"10.10.41.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-418","testNamespace",k8spolicy::UID{"testPod-418"},[("pod-name","testPod-418")],k8spolicy::PodSpec{"testNode-41"},k8spolicy::PodStatus{"10.10.41.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-419","testNamespace",k8spolicy::UID{"testPod-419"},[("pod-name","testPod-419")],k8spolicy::PodSpec{"testNode-41"},k8spolicy::PodStatus{"10.10.41.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-420","testNamespace",k8spolicy::UID{"testPod-420"},[("pod-name","testPod-420")],k8spolicy::PodSpec{"testNode-42"},k8spolicy::PodStatus{"10.10.42.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-421","testNamespace",k8spolicy::UID{"testPod-421"},[("pod-name","testPod-421")],k8spolicy::PodSpec{"testNode-42"},k8spolicy::PodStatus{"10.10.42.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-422","testNamespace",k8spolicy::UID{"testPod-422"},[("pod-name","testPod-422")],k8spolicy::PodSpec{"testNode-42"},k8spolicy::PodStatus{"10.10.42.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-423","testNamespace",k8spolicy::UID{"testPod-423"},[("pod-name","testPod-423")],k8spolicy::PodSpec{"testNode-42"},k8spolicy::PodStatus{"10.10.42.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-424","testNamespace",k8spolicy::UID{"testPod-424"},[("pod-name","testPod-424")],k8spolicy::PodSpec{"testNode-42"},k8spolicy::PodStatus{"10.10.42.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-425","testNamespace",k8spolicy::UID{"testPod-425"},[("pod-name","testPod-425")],k8spolicy::PodSpec{"testNode-42"},k8spolicy::PodStatus{"10.10.42.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-426","testNamespace",k8spolicy::UID{"testPod-426"},[("pod-name","testPod-426")],k8spolicy::PodSpec{"testNode-42"},k8spolicy::PodStatus{"10.10.42.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-427","testNamespace",k8spolicy::UID{"testPod-427"},[("pod-name","testPod-427")],k8spolicy::PodSpec{"testNode-42"},k8spolicy::PodStatus{"10.10.42.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-428","testNamespace",k8spolicy::UID{"testPod-428"},[("pod-name","testPod-428")],k8spolicy::PodSpec{"testNode-42"},k8spolicy::PodStatus{"10.10.42.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-429","testNamespace",k8spolicy::UID{"testPod-429"},[("pod-name","testPod-429")],k8spolicy::PodSpec{"testNode-42"},k8spolicy::PodStatus{"10.10.42.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-430","testNamespace",k8spolicy::UID{"testPod-430"},[("pod-name","testPod-430")],k8spolicy::PodSpec{"testNode-43"},k8spolicy::PodStatus{"10.10.43.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-431","testNamespace",k8spolicy::UID{"testPod-431"},[("pod-name","testPod-431")],k8spolicy::PodSpec{"testNode-43"},k8spolicy::PodStatus{"10.10.43.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-432","testNamespace",k8spolicy::UID{"testPod-432"},[("pod-name","testPod-432")],k8spolicy::PodSpec{"testNode-43"},k8spolicy::PodStatus{"10.10.43.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-433","testNamespace",k8spolicy::UID{"testPod-433"},[("pod-name","testPod-433")],k8spolicy::PodSpec{"testNode-43"},k8spolicy::PodStatus{"10.10.43.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-434","testNamespace",k8spolicy::UID{"testPod-434"},[("pod-name","testPod-434")],k8spolicy::PodSpec{"testNode-43"},k8spolicy::PodStatus{"10.10.43.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-435","testNamespace",k8spolicy::UID{"testPod-435"},[("pod-name","testPod-435")],k8spolicy::PodSpec{"testNode-43"},k8spolicy::PodStatus{"10.10.43.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-436","testNamespace",k8spolicy::UID{"testPod-436"},[("pod-name","testPod-436")],k8spolicy::PodSpec{"testNode-43"},k8spolicy::PodStatus{"10.10.43.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-437","testNamespace",k8spolicy::UID{"testPod-437"},[("pod-name","testPod-437")],k8spolicy::PodSpec{"testNode-43"},k8spolicy::PodStatus{"10.10.43.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-438","testNamespace",k8spolicy::UID{"testPod-438"},[("pod-name","testPod-438")],k8spolicy::PodSpec{"testNode-43"},k8spolicy::PodStatus{"10.10.43.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-439","testNamespace",k8spolicy::UID{"testPod-439"},[("pod-name","testPod-439")],k8spolicy::PodSpec{"testNode-43"},k8spolicy::PodStatus{"10.10.43.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-440","testNamespace",k8spolicy::UID{"testPod-440"},[("pod-name","testPod-440")],k8spolicy::PodSpec{"testNode-44"},k8spolicy::PodStatus{"10.10.44.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-441","testNamespace",k8spolicy::UID{"testPod-441"},[("pod-name","testPod-441")],k8spolicy::PodSpec{"testNode-44"},k8spolicy::PodStatus{"10.10.44.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-442","testNamespace",k8spolicy::UID{"testPod-442"},[("pod-name","testPod-442")],k8spolicy::PodSpec{"testNode-44"},k8spolicy::PodStatus{"10.10.44.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-443","testNamespace",k8spolicy::UID{"testPod-443"},[("pod-name","testPod-443")],k8spolicy::PodSpec{"testNode-44"},k8spolicy::PodStatus{"10.10.44.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-444","testNamespace",k8spolicy::UID{"testPod-444"},[("pod-name","testPod-444")],k8spolicy::PodSpec{"testNode-44"},k8spolicy::PodStatus{"10.10.44.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-445","testNamespace",k8spolicy::UID{"testPod-445"},[("pod-name","testPod-445")],k8spolicy::PodSpec{"testNode-44"},k8spolicy::PodStatus{"10.10.44.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-446","testNamespace",k8spolicy::UID{"testPod-446"},[("pod-name","testPod-446")],k8spolicy::PodSpec{"testNode-44"},k8spolicy::PodStatus{"10.10.44.6"}}];
commit dump_changes;
start;
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-447","testNamespace",k8spolicy::UID{"testPod-447"},[("pod-name","testPod-447")],k8spolicy::PodSpec{"testNode-44"},k8spolicy::PodStatus{"10.10.44.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-448","testNamespace",k8spolicy::UID{"testPod-448"},[("pod-name","testPod-448")],k8spolicy::PodSpec{"testNode-44"},k8spolicy::PodStatus{"10.10.44.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-449","testNamespace",k8spolicy::UID{"testPod-449"},[("pod-name","testPod-449")],k8spolicy::PodSpec{"testNode-44"},k8spolicy::PodStatus{"10.10.44.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-450","testNamespace",k8spolicy::UID{"testPod-450"},[("pod-name","testPod-450")],k8spolicy::PodSpec{"testNode-45"},k8spolicy::PodStatus{"10.10.45.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-451","testNamespace",k8spolicy::UID{"testPod-451"},[("pod-name","testPod-451")],k8spolicy::PodSpec{"testNode-45"},k8spolicy::PodStatus{"10.10.45.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-452","testNamespace",k8spolicy::UID{"testPod-452"},[("pod-name","testPod-452")],k8spolicy::PodSpec{"testNode-45"},k8spolicy::PodStatus{"10.10.45.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-453","testNamespace",k8spolicy::UID{"testPod-453"},[("pod-name","testPod-453")],k8spolicy::PodSpec{"testNode-45"},k8spolicy::PodStatus{"10.10.45.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-454","testNamespace",k8spolicy::UID{"testPod-454"},[("pod-name","testPod-454")],k8spolicy::PodSpec{"testNode-45"},k8spolicy::PodStatus{"10.10.45.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-455","testNamespace",k8spolicy::UID{"testPod-455"},[("pod-name","testPod-455")],k8spolicy::PodSpec{"testNode-45"},k8spolicy::PodStatus{"10.10.45.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-456","testNamespace",k8spolicy::UID{"testPod-456"},[("pod-name","testPod-456")],k8spolicy::PodSpec{"testNode-45"},k8spolicy::PodStatus{"10.10.45.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-457","testNamespace",k8spolicy::UID{"testPod-457"},[("pod-name","testPod-457")],k8spolicy::PodSpec{"testNode-45"},k8spolicy::PodStatus{"10.10.45.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-458","testNamespace",k8spolicy::UID{"testPod-458"},[("pod-name","testPod-458")],k8spolicy::PodSpec{"testNode-45"},k8spolicy::PodStatus{"10.10.45.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-459","testNamespace",k8spolicy::UID{"testPod-459"},[("pod-name","testPod-459")],k8spolicy::PodSpec{"testNode-45"},k8spolicy::PodStatus{"10.10.45.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-460","testNamespace",k8spolicy::UID{"testPod-460"},[("pod-name","testPod-460")],k8spolicy::PodSpec{"testNode-46"},k8spolicy::PodStatus{"10.10.46.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-461","testNamespace",k8spolicy::UID{"testPod-461"},[("pod-name","testPod-461")],k8spolicy::PodSpec{"testNode-46"},k8spolicy::PodStatus{"10.10.46.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-462","testNamespace",k8spolicy::UID{"testPod-462"},[("pod-name","testPod-462")],k8spolicy::PodSpec{"testNode-46"},k8spolicy::PodStatus{"10.10.46.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-463","testNamespace",k8spolicy::UID{"testPod-463"},[("pod-name","testPod-463")],k8spolicy::PodSpec{"testNode-46"},k8spolicy::PodStatus{"10.10.46.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-464","testNamespace",k8spolicy::UID{"testPod-464"},[("pod-name","testPod-464")],k8spolicy::PodSpec{"testNode-46"},k8spolicy::PodStatus{"10.10.46.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-465","testNamespace",k8spolicy::UID{"testPod-465"},[("pod-name","testPod-465")],k8spolicy::PodSpec{"testNode-46"},k8spolicy::PodStatus{"10.10.46.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-466","testNamespace",k8spolicy::UID{"testPod-466"},[("pod-name","testPod-466")],k8spolicy::PodSpec{"testNode-46"},k8spolicy::PodStatus{"10.10.46.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-467","testNamespace",k8spolicy::UID{"testPod-467"},[("pod-name","testPod-467")],k8spolicy::PodSpec{"testNode-46"},k8spolicy::PodStatus{"10.10.46.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-468","testNamespace",k8spolicy::UID{"testPod-468"},[("pod-name","testPod-468")],k8spolicy::PodSpec{"testNode-46"},k8spolicy::PodStatus{"10.10.46.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-469","testNamespace",k8spolicy::UID{"testPod-469"},[("pod-name","testPod-469")],k8spolicy::PodSpec{"testNode-46"},k8spolicy::PodStatus{"10.10.46.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-470","testNamespace",k8spolicy::UID{"testPod-470"},[("pod-name","testPod-470")],k8spolicy::PodSpec{"testNode-47"},k8spolicy::PodStatus{"10.10.47.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-471","testNamespace",k8spolicy::UID{"testPod-471"},[("pod-name","testPod-471")],k8spolicy::PodSpec{"testNode-47"},k8spolicy::PodStatus{"10.10.47.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-472","testNamespace",k8spolicy::UID{"testPod-472"},[("pod-name","testPod-472")],k8spolicy::PodSpec{"testNode-47"},k8spolicy::PodStatus{"10.10.47.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-473","testNamespace",k8spolicy::UID{"testPod-473"},[("pod-name","testPod-473")],k8spolicy::PodSpec{"testNode-47"},k8spolicy::PodStatus{"10.10.47.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-474","testNamespace",k8spolicy::UID{"testPod-474"},[("pod-name","testPod-474")],k8spolicy::PodSpec{"testNode-47"},k8spolicy::PodStatus{"10.10.47.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-475","testNamespace",k8spolicy::UID{"testPod-475"},[("pod-name","testPod-475")],k8spolicy::PodSpec{"testNode-47"},k8spolicy::PodStatus{"10.10.47.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-476","testNamespace",k8spolicy::UID{"testPod-476"},[("pod-name","testPod-476")],k8spolicy::PodSpec{"testNode-47"},k8spolicy::PodStatus{"10.10.47.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-477","testNamespace",k8spolicy::UID{"testPod-477"},[("pod-name","testPod-477")],k8spolicy::PodSpec{"testNode-47"},k8spolicy::PodStatus{"10.10.47.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-478","testNamespace",k8spolicy::UID{"testPod-478"},[("pod-name","testPod-478")],k8spolicy::PodSpec{"testNode-47"},k8spolicy::PodStatus{"10.10.47.8"}}];
commit dump_changes;
start;
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-479","testNamespace",k8spolicy::UID{"testPod-479"},[("pod-name","testPod-479")],k8spolicy::PodSpec{"testNode-47"},k8spolicy::PodStatus{"10.10.47.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-480","testNamespace",k8spolicy::UID{"testPod-480"},[("pod-name","testPod-480")],k8spolicy::PodSpec{"testNode-48"},k8spolicy::PodStatus{"10.10.48.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-481","testNamespace",k8spolicy::UID{"testPod-481"},[("pod-name","testPod-481")],k8spolicy::PodSpec{"testNode-48"},k8spolicy::PodStatus{"10.10.48.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-482","testNamespace",k8spolicy::UID{"testPod-482"},[("pod-name","testPod-482")],k8spolicy::PodSpec{"testNode-48"},k8spolicy::PodStatus{"10.10.48.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-483","testNamespace",k8spolicy::UID{"testPod-483"},[("pod-name","testPod-483")],k8spolicy::PodSpec{"testNode-48"},k8spolicy::PodStatus{"10.10.48.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-484","testNamespace",k8spolicy::UID{"testPod-484"},[("pod-name","testPod-484")],k8spolicy::PodSpec{"testNode-48"},k8spolicy::PodStatus{"10.10.48.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-485","testNamespace",k8spolicy::UID{"testPod-485"},[("pod-name","testPod-485")],k8spolicy::PodSpec{"testNode-48"},k8spolicy::PodStatus{"10.10.48.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-486","testNamespace",k8spolicy::UID{"testPod-486"},[("pod-name","testPod-486")],k8spolicy::PodSpec{"testNode-48"},k8spolicy::PodStatus{"10.10.48.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-487","testNamespace",k8spolicy::UID{"testPod-487"},[("pod-name","testPod-487")],k8spolicy::PodSpec{"testNode-48"},k8spolicy::PodStatus{"10.10.48.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-488","testNamespace",k8spolicy::UID{"testPod-488"},[("pod-name","testPod-488")],k8spolicy::PodSpec{"testNode-48"},k8spolicy::PodStatus{"10.10.48.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-489","testNamespace",k8spolicy::UID{"testPod-489"},[("pod-name","testPod-489")],k8spolicy::PodSpec{"testNode-48"},k8spolicy::PodStatus{"10.10.48.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-490","testNamespace",k8spolicy::UID{"testPod-490"},[("pod-name","testPod-490")],k8spolicy::PodSpec{"testNode-49"},k8spolicy::PodStatus{"10.10.49.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-491","testNamespace",k8spolicy::UID{"testPod-491"},[("pod-name","testPod-491")],k8spolicy::PodSpec{"testNode-49"},k8spolicy::PodStatus{"10.10.49.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-492","testNamespace",k8spolicy::UID{"testPod-492"},[("pod-name","testPod-492")],k8spolicy::PodSpec{"testNode-49"},k8spolicy::PodStatus{"10.10.49.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-493","testNamespace",k8spolicy::UID{"testPod-493"},[("pod-name","testPod-493")],k8spolicy::PodSpec{"testNode-49"},k8spolicy::PodStatus{"10.10.49.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-494","testNamespace",k8spolicy::UID{"testPod-494"},[("pod-name","testPod-494")],k8spolicy::PodSpec{"testNode-49"},k8spolicy::PodStatus{"10.10.49.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-495","testNamespace",k8spolicy::UID{"testPod-495"},[("pod-name","testPod-495")],k8spolicy::PodSpec{"testNode-49"},k8spolicy::PodStatus{"10.10.49.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-496","testNamespace",k8spolicy::UID{"testPod-496"},[("pod-name","testPod-496")],k8spolicy::PodSpec{"testNode-49"},k8spolicy::PodStatus{"10.10.49.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-497","testNamespace",k8spolicy::UID{"testPod-497"},[("pod-name","testPod-497")],k8spolicy::PodSpec{"testNode-49"},k8spolicy::PodStatus{"10.10.49.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-498","testNamespace",k8spolicy::UID{"testPod-498"},[("pod-name","testPod-498")],k8spolicy::PodSpec{"testNode-49"},k8spolicy::PodStatus{"10.10.49.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-499","testNamespace",k8spolicy::UID{"testPod-499"},[("pod-name","testPod-499")],k8spolicy::PodSpec{"testNode-49"},k8spolicy::PodStatus{"10.10.49.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-500","testNamespace",k8spolicy::UID{"testPod-500"},[("pod-name","testPod-500")],k8spolicy::PodSpec{"testNode-50"},k8spolicy::PodStatus{"10.10.50.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-501","testNamespace",k8spolicy::UID{"testPod-501"},[("pod-name","testPod-501")],k8spolicy::PodSpec{"testNode-50"},k8spolicy::PodStatus{"10.10.50.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-502","testNamespace",k8spolicy::UID{"testPod-502"},[("pod-name","testPod-502")],k8spolicy::PodSpec{"testNode-50"},k8spolicy::PodStatus{"10.10.50.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-503","testNamespace",k8spolicy::UID{"testPod-503"},[("pod-name","testPod-503")],k8spolicy::PodSpec{"testNode-50"},k8spolicy::PodStatus{"10.10.50.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-504","testNamespace",k8spolicy::UID{"testPod-504"},[("pod-name","testPod-504")],k8spolicy::PodSpec{"testNode-50"},k8spolicy::PodStatus{"10.10.50.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-505","testNamespace",k8spolicy::UID{"testPod-505"},[("pod-name","testPod-505")],k8spolicy::PodSpec{"testNode-50"},k8spolicy::PodStatus{"10.10.50.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-506","testNamespace",k8spolicy::UID{"testPod-506"},[("pod-name","testPod-506")],k8spolicy::PodSpec{"testNode-50"},k8spolicy::PodStatus{"10.10.50.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-507","testNamespace",k8spolicy::UID{"testPod-507"},[("pod-name","testPod-507")],k8spolicy::PodSpec{"testNode-50"},k8spolicy::PodStatus{"10.10.50.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-508","testNamespace",k8spolicy::UID{"testPod-508"},[("pod-name","testPod-508")],k8spolicy::PodSpec{"testNode-50"},k8spolicy::PodStatus{"10.10.50.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-509","testNamespace",k8spolicy::UID{"testPod-509"},[("pod-name","testPod-509")],k8spolicy::PodSpec{"testNode-50"},k8spolicy::PodStatus{"10.10.50.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-510","testNamespace",k8spolicy::UID{"testPod-510"},[("pod-name","testPod-510")],k8spolicy::PodSpec{"testNode-51"},k8spolicy::PodStatus{"10.10.51.0"}}];
commit dump_changes;
start;
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-511","testNamespace",k8spolicy::UID{"testPod-511"},[("pod-name","testPod-511")],k8spolicy::PodSpec{"testNode-51"},k8spolicy::PodStatus{"10.10.51.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-512","testNamespace",k8spolicy::UID{"testPod-512"},[("pod-name","testPod-512")],k8spolicy::PodSpec{"testNode-51"},k8spolicy::PodStatus{"10.10.51.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-513","testNamespace",k8spolicy::UID{"testPod-513"},[("pod-name","testPod-513")],k8spolicy::PodSpec{"testNode-51"},k8spolicy::PodStatus{"10.10.51.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-514","testNamespace",k8spolicy::UID{"testPod-514"},[("pod-name","testPod-514")],k8spolicy::PodSpec{"testNode-51"},k8spolicy::PodStatus{"10.10.51.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-515","testNamespace",k8spolicy::UID{"testPod-515"},[("pod-name","testPod-515")],k8spolicy::PodSpec{"testNode-51"},k8spolicy::PodStatus{"10.10.51.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-516","testNamespace",k8spolicy::UID{"testPod-516"},[("pod-name","testPod-516")],k8spolicy::PodSpec{"testNode-51"},k8spolicy::PodStatus{"10.10.51.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-517","testNamespace",k8spolicy::UID{"testPod-517"},[("pod-name","testPod-517")],k8spolicy::PodSpec{"testNode-51"},k8spolicy::PodStatus{"10.10.51.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-518","testNamespace",k8spolicy::UID{"testPod-518"},[("pod-name","testPod-518")],k8spolicy::PodSpec{"testNode-51"},k8spolicy::PodStatus{"10.10.51.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-519","testNamespace",k8spolicy::UID{"testPod-519"},[("pod-name","testPod-519")],k8spolicy::PodSpec{"testNode-51"},k8spolicy::PodStatus{"10.10.51.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-520","testNamespace",k8spolicy::UID{"testPod-520"},[("pod-name","testPod-520")],k8spolicy::PodSpec{"testNode-52"},k8spolicy::PodStatus{"10.10.52.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-521","testNamespace",k8spolicy::UID{"testPod-521"},[("pod-name","testPod-521")],k8spolicy::PodSpec{"testNode-52"},k8spolicy::PodStatus{"10.10.52.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-522","testNamespace",k8spolicy::UID{"testPod-522"},[("pod-name","testPod-522")],k8spolicy::PodSpec{"testNode-52"},k8spolicy::PodStatus{"10.10.52.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-523","testNamespace",k8spolicy::UID{"testPod-523"},[("pod-name","testPod-523")],k8spolicy::PodSpec{"testNode-52"},k8spolicy::PodStatus{"10.10.52.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-524","testNamespace",k8spolicy::UID{"testPod-524"},[("pod-name","testPod-524")],k8spolicy::PodSpec{"testNode-52"},k8spolicy::PodStatus{"10.10.52.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-525","testNamespace",k8spolicy::UID{"testPod-525"},[("pod-name","testPod-525")],k8spolicy::PodSpec{"testNode-52"},k8spolicy::PodStatus{"10.10.52.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-526","testNamespace",k8spolicy::UID{"testPod-526"},[("pod-name","testPod-526")],k8spolicy::PodSpec{"testNode-52"},k8spolicy::PodStatus{"10.10.52.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-527","testNamespace",k8spolicy::UID{"testPod-527"},[("pod-name","testPod-527")],k8spolicy::PodSpec{"testNode-52"},k8spolicy::PodStatus{"10.10.52.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-528","testNamespace",k8spolicy::UID{"testPod-528"},[("pod-name","testPod-528")],k8spolicy::PodSpec{"testNode-52"},k8spolicy::PodStatus{"10.10.52.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-529","testNamespace",k8spolicy::UID{"testPod-529"},[("pod-name","testPod-529")],k8spolicy::PodSpec{"testNode-52"},k8spolicy::PodStatus{"10.10.52.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-530","testNamespace",k8spolicy::UID{"testPod-530"},[("pod-name","testPod-530")],k8spolicy::PodSpec{"testNode-53"},k8spolicy::PodStatus{"10.10.53.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-531","testNamespace",k8spolicy::UID{"testPod-531"},[("pod-name","testPod-531")],k8spolicy::PodSpec{"testNode-53"},k8spolicy::PodStatus{"10.10.53.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-532","testNamespace",k8spolicy::UID{"testPod-532"},[("pod-name","testPod-532")],k8spolicy::PodSpec{"testNode-53"},k8spolicy::PodStatus{"10.10.53.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-533","testNamespace",k8spolicy::UID{"testPod-533"},[("pod-name","testPod-533")],k8spolicy::PodSpec{"testNode-53"},k8spolicy::PodStatus{"10.10.53.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-534","testNamespace",k8spolicy::UID{"testPod-534"},[("pod-name","testPod-534")],k8spolicy::PodSpec{"testNode-53"},k8spolicy::PodStatus{"10.10.53.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-535","testNamespace",k8spolicy::UID{"testPod-535"},[("pod-name","testPod-535")],k8spolicy::PodSpec{"testNode-53"},k8spolicy::PodStatus{"10.10.53.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-536","testNamespace",k8spolicy::UID{"testPod-536"},[("pod-name","testPod-536")],k8spolicy::PodSpec{"testNode-53"},k8spolicy::PodStatus{"10.10.53.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-537","testNamespace",k8spolicy::UID{"testPod-537"},[("pod-name","testPod-537")],k8spolicy::PodSpec{"testNode-53"},k8spolicy::PodStatus{"10.10.53.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-538","testNamespace",k8spolicy::UID{"testPod-538"},[("pod-name","testPod-538")],k8spolicy::PodSpec{"testNode-53"},k8spolicy::PodStatus{"10.10.53.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-539","testNamespace",k8spolicy::UID{"testPod-539"},[("pod-name","testPod-539")],k8spolicy::PodSpec{"testNode-53"},k8spolicy::PodStatus{"10.10.53.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-540","testNamespace",k8spolicy::UID{"testPod-540"},[("pod-name","testPod-540")],k8spolicy::PodSpec{"testNode-54"},k8spolicy::PodStatus{"10.10.54.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-541","testNamespace",k8spolicy::UID{"testPod-541"},[("pod-name","testPod-541")],k8spolicy::PodSpec{"testNode-54"},k8spolicy::PodStatus{"10.10.54.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-542","testNamespace",k8spolicy::UID{"testPod-542"},[("pod-name","testPod-542")],k8spolicy::PodSpec{"testNode-54"},k8spolicy::PodStatus{"10.10.54.2"}}];
commit dump_changes;
start;
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-543","testNamespace",k8spolicy::UID{"testPod-543"},[("pod-name","testPod-543")],k8spolicy::PodSpec{"testNode-54"},k8spolicy::PodStatus{"10.10.54.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-544","testNamespace",k8spolicy::UID{"testPod-544"},[("pod-name","testPod-544")],k8spolicy::PodSpec{"testNode-54"},k8spolicy::PodStatus{"10.10.54.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-545","testNamespace",k8spolicy::UID{"testPod-545"},[("pod-name","testPod-545")],k8spolicy::PodSpec{"testNode-54"},k8spolicy::PodStatus{"10.10.54.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-546","testNamespace",k8spolicy::UID{"testPod-546"},[("pod-name","testPod-546")],k8spolicy::PodSpec{"testNode-54"},k8spolicy::PodStatus{"10.10.54.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-547","testNamespace",k8spolicy::UID{"testPod-547"},[("pod-name","testPod-547")],k8spolicy::PodSpec{"testNode-54"},k8spolicy::PodStatus{"10.10.54.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-548","testNamespace",k8spolicy::UID{"testPod-548"},[("pod-name","testPod-548")],k8spolicy::PodSpec{"testNode-54"},k8spolicy::PodStatus{"10.10.54.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-549","testNamespace",k8spolicy::UID{"testPod-549"},[("pod-name","testPod-549")],k8spolicy::PodSpec{"testNode-54"},k8spolicy::PodStatus{"10.10.54.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-550","testNamespace",k8spolicy::UID{"testPod-550"},[("pod-name","testPod-550")],k8spolicy::PodSpec{"testNode-55"},k8spolicy::PodStatus{"10.10.55.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-551","testNamespace",k8spolicy::UID{"testPod-551"},[("pod-name","testPod-551")],k8spolicy::PodSpec{"testNode-55"},k8spolicy::PodStatus{"10.10.55.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-552","testNamespace",k8spolicy::UID{"testPod-552"},[("pod-name","testPod-552")],k8spolicy::PodSpec{"testNode-55"},k8spolicy::PodStatus{"10.10.55.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-553","testNamespace",k8spolicy::UID{"testPod-553"},[("pod-name","testPod-553")],k8spolicy::PodSpec{"testNode-55"},k8spolicy::PodStatus{"10.10.55.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-554","testNamespace",k8spolicy::UID{"testPod-554"},[("pod-name","testPod-554")],k8spolicy::PodSpec{"testNode-55"},k8spolicy::PodStatus{"10.10.55.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-555","testNamespace",k8spolicy::UID{"testPod-555"},[("pod-name","testPod-555")],k8spolicy::PodSpec{"testNode-55"},k8spolicy::PodStatus{"10.10.55.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-556","testNamespace",k8spolicy::UID{"testPod-556"},[("pod-name","testPod-556")],k8spolicy::PodSpec{"testNode-55"},k8spolicy::PodStatus{"10.10.55.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-557","testNamespace",k8spolicy::UID{"testPod-557"},[("pod-name","testPod-557")],k8spolicy::PodSpec{"testNode-55"},k8spolicy::PodStatus{"10.10.55.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-558","testNamespace",k8spolicy::UID{"testPod-558"},[("pod-name","testPod-558")],k8spolicy::PodSpec{"testNode-55"},k8spolicy::PodStatus{"10.10.55.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-559","testNamespace",k8spolicy::UID{"testPod-559"},[("pod-name","testPod-559")],k8spolicy::PodSpec{"testNode-55"},k8spolicy::PodStatus{"10.10.55.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-560","testNamespace",k8spolicy::UID{"testPod-560"},[("pod-name","testPod-560")],k8spolicy::PodSpec{"testNode-56"},k8spolicy::PodStatus{"10.10.56.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-561","testNamespace",k8spolicy::UID{"testPod-561"},[("pod-name","testPod-561")],k8spolicy::PodSpec{"testNode-56"},k8spolicy::PodStatus{"10.10.56.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-562","testNamespace",k8spolicy::UID{"testPod-562"},[("pod-name","testPod-562")],k8spolicy::PodSpec{"testNode-56"},k8spolicy::PodStatus{"10.10.56.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-563","testNamespace",k8spolicy::UID{"testPod-563"},[("pod-name","testPod-563")],k8spolicy::PodSpec{"testNode-56"},k8spolicy::PodStatus{"10.10.56.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-564","testNamespace",k8spolicy::UID{"testPod-564"},[("pod-name","testPod-564")],k8spolicy::PodSpec{"testNode-56"},k8spolicy::PodStatus{"10.10.56.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-565","testNamespace",k8spolicy::UID{"testPod-565"},[("pod-name","testPod-565")],k8spolicy::PodSpec{"testNode-56"},k8spolicy::PodStatus{"10.10.56.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-566","testNamespace",k8spolicy::UID{"testPod-566"},[("pod-name","testPod-566")],k8spolicy::PodSpec{"testNode-56"},k8spolicy::PodStatus{"10.10.56.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-567","testNamespace",k8spolicy::UID{"testPod-567"},[("pod-name","testPod-567")],k8spolicy::PodSpec{"testNode-56"},k8spolicy::PodStatus{"10.10.56.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-568","testNamespace",k8spolicy::UID{"testPod-568"},[("pod-name","testPod-568")],k8spolicy::PodSpec{"testNode-56"},k8spolicy::PodStatus{"10.10.56.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-569","testNamespace",k8spolicy::UID{"testPod-569"},[("pod-name","testPod-569")],k8spolicy::PodSpec{"testNode-56"},k8spolicy::PodStatus{"10.10.56.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-570","testNamespace",k8spolicy::UID{"testPod-570"},[("pod-name","testPod-570")],k8spolicy::PodSpec{"testNode-57"},k8spolicy::PodStatus{"10.10.57.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-571","testNamespace",k8spolicy::UID{"testPod-571"},[("pod-name","testPod-571")],k8spolicy::PodSpec{"testNode-57"},k8spolicy::PodStatus{"10.10.57.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-572","testNamespace",k8spolicy::UID{"testPod-572"},[("pod-name","testPod-572")],k8spolicy::PodSpec{"testNode-57"},k8spolicy::PodStatus{"10.10.57.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-573","testNamespace",k8spolicy::UID{"testPod-573"},[("pod-name","testPod-573")],k8spolicy::PodSpec{"testNode-57"},k8spolicy::PodStatus{"10.10.57.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-574","testNamespace",k8spolicy::UID{"testPod-574"},[("pod-name","testPod-574")],k8spolicy::PodSpec{"testNode-57"},k8spolicy::PodStatus{"10.10.57.4"}}];
commit dump_changes;
start;
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-575","testNamespace",k8spolicy::UID{"testPod-575"},[("pod-name","testPod-575")],k8spolicy::PodSpec{"testNode-57"},k8spolicy::PodStatus{"10.10.57.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-576","testNamespace",k8spolicy::UID{"testPod-576"},[("pod-name","testPod-576")],k8spolicy::PodSpec{"testNode-57"},k8spolicy::PodStatus{"10.10.57.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-577","testNamespace",k8spolicy::UID{"testPod-577"},[("pod-name","testPod-577")],k8spolicy::PodSpec{"testNode-57"},k8spolicy::PodStatus{"10.10.57.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-578","testNamespace",k8spolicy::UID{"testPod-578"},[("pod-name","testPod-578")],k8spolicy::PodSpec{"testNode-57"},k8spolicy::PodStatus{"10.10.57.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-579","testNamespace",k8spolicy::UID{"testPod-579"},[("pod-name","testPod-579")],k8spolicy::PodSpec{"testNode-57"},k8spolicy::PodStatus{"10.10.57.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-580","testNamespace",k8spolicy::UID{"testPod-580"},[("pod-name","testPod-580")],k8spolicy::PodSpec{"testNode-58"},k8spolicy::PodStatus{"10.10.58.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-581","testNamespace",k8spolicy::UID{"testPod-581"},[("pod-name","testPod-581")],k8spolicy::PodSpec{"testNode-58"},k8spolicy::PodStatus{"10.10.58.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-582","testNamespace",k8spolicy::UID{"testPod-582"},[("pod-name","testPod-582")],k8spolicy::PodSpec{"testNode-58"},k8spolicy::PodStatus{"10.10.58.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-583","testNamespace",k8spolicy::UID{"testPod-583"},[("pod-name","testPod-583")],k8spolicy::PodSpec{"testNode-58"},k8spolicy::PodStatus{"10.10.58.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-584","testNamespace",k8spolicy::UID{"testPod-584"},[("pod-name","testPod-584")],k8spolicy::PodSpec{"testNode-58"},k8spolicy::PodStatus{"10.10.58.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-585","testNamespace",k8spolicy::UID{"testPod-585"},[("pod-name","testPod-585")],k8spolicy::PodSpec{"testNode-58"},k8spolicy::PodStatus{"10.10.58.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-586","testNamespace",k8spolicy::UID{"testPod-586"},[("pod-name","testPod-586")],k8spolicy::PodSpec{"testNode-58"},k8spolicy::PodStatus{"10.10.58.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-587","testNamespace",k8spolicy::UID{"testPod-587"},[("pod-name","testPod-587")],k8spolicy::PodSpec{"testNode-58"},k8spolicy::PodStatus{"10.10.58.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-588","testNamespace",k8spolicy::UID{"testPod-588"},[("pod-name","testPod-588")],k8spolicy::PodSpec{"testNode-58"},k8spolicy::PodStatus{"10.10.58.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-589","testNamespace",k8spolicy::UID{"testPod-589"},[("pod-name","testPod-589")],k8spolicy::PodSpec{"testNode-58"},k8spolicy::PodStatus{"10.10.58.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-590","testNamespace",k8spolicy::UID{"testPod-590"},[("pod-name","testPod-590")],k8spolicy::PodSpec{"testNode-59"},k8spolicy::PodStatus{"10.10.59.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-591","testNamespace",k8spolicy::UID{"testPod-591"},[("pod-name","testPod-591")],k8spolicy::PodSpec{"testNode-59"},k8spolicy::PodStatus{"10.10.59.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-592","testNamespace",k8spolicy::UID{"testPod-592"},[("pod-name","testPod-592")],k8spolicy::PodSpec{"testNode-59"},k8spolicy::PodStatus{"10.10.59.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-593","testNamespace",k8spolicy::UID{"testPod-593"},[("pod-name","testPod-593")],k8spolicy::PodSpec{"testNode-59"},k8spolicy::PodStatus{"10.10.59.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-594","testNamespace",k8spolicy::UID{"testPod-594"},[("pod-name","testPod-594")],k8spolicy::PodSpec{"testNode-59"},k8spolicy::PodStatus{"10.10.59.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-595","testNamespace",k8spolicy::UID{"testPod-595"},[("pod-name","testPod-595")],k8spolicy::PodSpec{"testNode-59"},k8spolicy::PodStatus{"10.10.59.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-596","testNamespace",k8spolicy::UID{"testPod-596"},[("pod-name","testPod-596")],k8spolicy::PodSpec{"testNode-59"},k8spolicy::PodStatus{"10.10.59.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-597","testNamespace",k8spolicy::UID{"testPod-597"},[("pod-name","testPod-597")],k8spolicy::PodSpec{"testNode-59"},k8spolicy::PodStatus{"10.10.59.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-598","testNamespace",k8spolicy::UID{"testPod-598"},[("pod-name","testPod-598")],k8spolicy::PodSpec{"testNode-59"},k8spolicy::PodStatus{"10.10.59.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-599","testNamespace",k8spolicy::UID{"testPod-599"},[("pod-name","testPod-599")],k8spolicy::PodSpec{"testNode-59"},k8spolicy::PodStatus{"10.10.59.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-600","testNamespace",k8spolicy::UID{"testPod-600"},[("pod-name","testPod-600")],k8spolicy::PodSpec{"testNode-60"},k8spolicy::PodStatus{"10.10.60.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-601","testNamespace",k8spolicy::UID{"testPod-601"},[("pod-name","testPod-601")],k8spolicy::PodSpec{"testNode-60"},k8spolicy::PodStatus{"10.10.60.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-602","testNamespace",k8spolicy::UID{"testPod-602"},[("pod-name","testPod-602")],k8spolicy::PodSpec{"testNode-60"},k8spolicy::PodStatus{"10.10.60.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-603","testNamespace",k8spolicy::UID{"testPod-603"},[("pod-name","testPod-603")],k8spolicy::PodSpec{"testNode-60"},k8spolicy::PodStatus{"10.10.60.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-604","testNamespace",k8spolicy::UID{"testPod-604"},[("pod-name","testPod-604")],k8spolicy::PodSpec{"testNode-60"},k8spolicy::PodStatus{"10.10.60.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-605","testNamespace",k8spolicy::UID{"testPod-605"},[("pod-name","testPod-605")],k8spolicy::PodSpec{"testNode-60"},k8spolicy::PodStatus{"10.10.60.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-606","testNamespace",k8spolicy::UID{"testPod-606"},[("pod-name","testPod-606")],k8spolicy::PodSpec{"testNode-60"},k8spolicy::PodStatus{"10.10.60.6"}}];
commit dump_changes;
start;
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-607","testNamespace",k8spolicy::UID{"testPod-607"},[("pod-name","testPod-607")],k8spolicy::PodSpec{"testNode-60"},k8spolicy::PodStatus{"10.10.60.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-608","testNamespace",k8spolicy::UID{"testPod-608"},[("pod-name","testPod-608")],k8spolicy::PodSpec{"testNode-60"},k8spolicy::PodStatus{"10.10.60.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-609","testNamespace",k8spolicy::UID{"testPod-609"},[("pod-name","testPod-609")],k8spolicy::PodSpec{"testNode-60"},k8spolicy::PodStatus{"10.10.60.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-610","testNamespace",k8spolicy::UID{"testPod-610"},[("pod-name","testPod-610")],k8spolicy::PodSpec{"testNode-61"},k8spolicy::PodStatus{"10.10.61.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-611","testNamespace",k8spolicy::UID{"testPod-611"},[("pod-name","testPod-611")],k8spolicy::PodSpec{"testNode-61"},k8spolicy::PodStatus{"10.10.61.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-612","testNamespace",k8spolicy::UID{"testPod-612"},[("pod-name","testPod-612")],k8spolicy::PodSpec{"testNode-61"},k8spolicy::PodStatus{"10.10.61.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-613","testNamespace",k8spolicy::UID{"testPod-613"},[("pod-name","testPod-613")],k8spolicy::PodSpec{"testNode-61"},k8spolicy::PodStatus{"10.10.61.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-614","testNamespace",k8spolicy::UID{"testPod-614"},[("pod-name","testPod-614")],k8spolicy::PodSpec{"testNode-61"},k8spolicy::PodStatus{"10.10.61.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-615","testNamespace",k8spolicy::UID{"testPod-615"},[("pod-name","testPod-615")],k8spolicy::PodSpec{"testNode-61"},k8spolicy::PodStatus{"10.10.61.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-616","testNamespace",k8spolicy::UID{"testPod-616"},[("pod-name","testPod-616")],k8spolicy::PodSpec{"testNode-61"},k8spolicy::PodStatus{"10.10.61.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-617","testNamespace",k8spolicy::UID{"testPod-617"},[("pod-name","testPod-617")],k8spolicy::PodSpec{"testNode-61"},k8spolicy::PodStatus{"10.10.61.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-618","testNamespace",k8spolicy::UID{"testPod-618"},[("pod-name","testPod-618")],k8spolicy::PodSpec{"testNode-61"},k8spolicy::PodStatus{"10.10.61.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-619","testNamespace",k8spolicy::UID{"testPod-619"},[("pod-name","testPod-619")],k8spolicy::PodSpec{"testNode-61"},k8spolicy::PodStatus{"10.10.61.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-620","testNamespace",k8spolicy::UID{"testPod-620"},[("pod-name","testPod-620")],k8spolicy::PodSpec{"testNode-62"},k8spolicy::PodStatus{"10.10.62.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-621","testNamespace",k8spolicy::UID{"testPod-621"},[("pod-name","testPod-621")],k8spolicy::PodSpec{"testNode-62"},k8spolicy::PodStatus{"10.10.62.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-622","testNamespace",k8spolicy::UID{"testPod-622"},[("pod-name","testPod-622")],k8spolicy::PodSpec{"testNode-62"},k8spolicy::PodStatus{"10.10.62.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-623","testNamespace",k8spolicy::UID{"testPod-623"},[("pod-name","testPod-623")],k8spolicy::PodSpec{"testNode-62"},k8spolicy::PodStatus{"10.10.62.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-624","testNamespace",k8spolicy::UID{"testPod-624"},[("pod-name","testPod-624")],k8spolicy::PodSpec{"testNode-62"},k8spolicy::PodStatus{"10.10.62.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-625","testNamespace",k8spolicy::UID{"testPod-625"},[("pod-name","testPod-625")],k8spolicy::PodSpec{"testNode-62"},k8spolicy::PodStatus{"10.10.62.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-626","testNamespace",k8spolicy::UID{"testPod-626"},[("pod-name","testPod-626")],k8spolicy::PodSpec{"testNode-62"},k8spolicy::PodStatus{"10.10.62.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-627","testNamespace",k8spolicy::UID{"testPod-627"},[("pod-name","testPod-627")],k8spolicy::PodSpec{"testNode-62"},k8spolicy::PodStatus{"10.10.62.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-628","testNamespace",k8spolicy::UID{"testPod-628"},[("pod-name","testPod-628")],k8spolicy::PodSpec{"testNode-62"},k8spolicy::PodStatus{"10.10.62.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-629","testNamespace",k8spolicy::UID{"testPod-629"},[("pod-name","testPod-629")],k8spolicy::PodSpec{"testNode-62"},k8spolicy::PodStatus{"10.10.62.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-630","testNamespace",k8spolicy::UID{"testPod-630"},[("pod-name","testPod-630")],k8spolicy::PodSpec{"testNode-63"},k8spolicy::PodStatus{"10.10.63.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-631","testNamespace",k8spolicy::UID{"testPod-631"},[("pod-name","testPod-631")],k8spolicy::PodSpec{"testNode-63"},k8spolicy::PodStatus{"10.10.63.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-632","testNamespace",k8spolicy::UID{"testPod-632"},[("pod-name","testPod-632")],k8spolicy::PodSpec{"testNode-63"},k8spolicy::PodStatus{"10.10.63.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-633","testNamespace",k8spolicy::UID{"testPod-633"},[("pod-name","testPod-633")],k8spolicy::PodSpec{"testNode-63"},k8spolicy::PodStatus{"10.10.63.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-634","testNamespace",k8spolicy::UID{"testPod-634"},[("pod-name","testPod-634")],k8spolicy::PodSpec{"testNode-63"},k8spolicy::PodStatus{"10.10.63.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-635","testNamespace",k8spolicy::UID{"testPod-635"},[("pod-name","testPod-635")],k8spolicy::PodSpec{"testNode-63"},k8spolicy::PodStatus{"10.10.63.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-636","testNamespace",k8spolicy::UID{"testPod-636"},[("pod-name","testPod-636")],k8spolicy::PodSpec{"testNode-63"},k8spolicy::PodStatus{"10.10.63.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-637","testNamespace",k8spolicy::UID{"testPod-637"},[("pod-name","testPod-637")],k8spolicy::PodSpec{"testNode-63"},k8spolicy::PodStatus{"10.10.63.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-638","testNamespace",k8spolicy::UID{"testPod-638"},[("pod-name","testPod-638")],k8spolicy::PodSpec{"testNode-63"},k8spolicy::PodStatus{"10.10.63.8"}}];
commit dump_changes;
start;
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-639","testNamespace",k8spolicy::UID{"testPod-639"},[("pod-name","testPod-639")],k8spolicy::PodSpec{"testNode-63"},k8spolicy::PodStatus{"10.10.63.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-640","testNamespace",k8spolicy::UID{"testPod-640"},[("pod-name","testPod-640")],k8spolicy::PodSpec{"testNode-64"},k8spolicy::PodStatus{"10.10.64.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-641","testNamespace",k8spolicy::UID{"testPod-641"},[("pod-name","testPod-641")],k8spolicy::PodSpec{"testNode-64"},k8spolicy::PodStatus{"10.10.64.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-642","testNamespace",k8spolicy::UID{"testPod-642"},[("pod-name","testPod-642")],k8spolicy::PodSpec{"testNode-64"},k8spolicy::PodStatus{"10.10.64.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-643","testNamespace",k8spolicy::UID{"testPod-643"},[("pod-name","testPod-643")],k8spolicy::PodSpec{"testNode-64"},k8spolicy::PodStatus{"10.10.64.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-644","testNamespace",k8spolicy::UID{"testPod-644"},[("pod-name","testPod-644")],k8spolicy::PodSpec{"testNode-64"},k8spolicy::PodStatus{"10.10.64.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-645","testNamespace",k8spolicy::UID{"testPod-645"},[("pod-name","testPod-645")],k8spolicy::PodSpec{"testNode-64"},k8spolicy::PodStatus{"10.10.64.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-646","testNamespace",k8spolicy::UID{"testPod-646"},[("pod-name","testPod-646")],k8spolicy::PodSpec{"testNode-64"},k8spolicy::PodStatus{"10.10.64.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-647","testNamespace",k8spolicy::UID{"testPod-647"},[("pod-name","testPod-647")],k8spolicy::PodSpec{"testNode-64"},k8spolicy::PodStatus{"10.10.64.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-648","testNamespace",k8spolicy::UID{"testPod-648"},[("pod-name","testPod-648")],k8spolicy::PodSpec{"testNode-64"},k8spolicy::PodStatus{"10.10.64.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-649","testNamespace",k8spolicy::UID{"testPod-649"},[("pod-name","testPod-649")],k8spolicy::PodSpec{"testNode-64"},k8spolicy::PodStatus{"10.10.64.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-650","testNamespace",k8spolicy::UID{"testPod-650"},[("pod-name","testPod-650")],k8spolicy::PodSpec{"testNode-65"},k8spolicy::PodStatus{"10.10.65.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-651","testNamespace",k8spolicy::UID{"testPod-651"},[("pod-name","testPod-651")],k8spolicy::PodSpec{"testNode-65"},k8spolicy::PodStatus{"10.10.65.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-652","testNamespace",k8spolicy::UID{"testPod-652"},[("pod-name","testPod-652")],k8spolicy::PodSpec{"testNode-65"},k8spolicy::PodStatus{"10.10.65.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-653","testNamespace",k8spolicy::UID{"testPod-653"},[("pod-name","testPod-653")],k8spolicy::PodSpec{"testNode-65"},k8spolicy::PodStatus{"10.10.65.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-654","testNamespace",k8spolicy::UID{"testPod-654"},[("pod-name","testPod-654")],k8spolicy::PodSpec{"testNode-65"},k8spolicy::PodStatus{"10.10.65.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-655","testNamespace",k8spolicy::UID{"testPod-655"},[("pod-name","testPod-655")],k8spolicy::PodSpec{"testNode-65"},k8spolicy::PodStatus{"10.10.65.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-656","testNamespace",k8spolicy::UID{"testPod-656"},[("pod-name","testPod-656")],k8spolicy::PodSpec{"testNode-65"},k8spolicy::PodStatus{"10.10.65.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-657","testNamespace",k8spolicy::UID{"testPod-657"},[("pod-name","testPod-657")],k8spolicy::PodSpec{"testNode-65"},k8spolicy::PodStatus{"10.10.65.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-658","testNamespace",k8spolicy::UID{"testPod-658"},[("pod-name","testPod-658")],k8spolicy::PodSpec{"testNode-65"},k8spolicy::PodStatus{"10.10.65.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-659","testNamespace",k8spolicy::UID{"testPod-659"},[("pod-name","testPod-659")],k8spolicy::PodSpec{"testNode-65"},k8spolicy::PodStatus{"10.10.65.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-660","testNamespace",k8spolicy::UID{"testPod-660"},[("pod-name","testPod-660")],k8spolicy::PodSpec{"testNode-66"},k8spolicy::PodStatus{"10.10.66.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-661","testNamespace",k8spolicy::UID{"testPod-661"},[("pod-name","testPod-661")],k8spolicy::PodSpec{"testNode-66"},k8spolicy::PodStatus{"10.10.66.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-662","testNamespace",k8spolicy::UID{"testPod-662"},[("pod-name","testPod-662")],k8spolicy::PodSpec{"testNode-66"},k8spolicy::PodStatus{"10.10.66.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-663","testNamespace",k8spolicy::UID{"testPod-663"},[("pod-name","testPod-663")],k8spolicy::PodSpec{"testNode-66"},k8spolicy::PodStatus{"10.10.66.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-664","testNamespace",k8spolicy::UID{"testPod-664"},[("pod-name","testPod-664")],k8spolicy::PodSpec{"testNode-66"},k8spolicy::PodStatus{"10.10.66.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-665","testNamespace",k8spolicy::UID{"testPod-665"},[("pod-name","testPod-665")],k8spolicy::PodSpec{"testNode-66"},k8spolicy::PodStatus{"10.10.66.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-666","testNamespace",k8spolicy::UID{"testPod-666"},[("pod-name","testPod-666")],k8spolicy::PodSpec{"testNode-66"},k8spolicy::PodStatus{"10.10.66.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-667","testNamespace",k8spolicy::UID{"testPod-667"},[("pod-name","testPod-667")],k8spolicy::PodSpec{"testNode-66"},k8spolicy::PodStatus{"10.10.66.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-668","testNamespace",k8spolicy::UID{"testPod-668"},[("pod-name","testPod-668")],k8spolicy::PodSpec{"testNode-66"},k8spolicy::PodStatus{"10.10.66.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-669","testNamespace",k8spolicy::UID{"testPod-669"},[("pod-name","testPod-669")],k8spolicy::PodSpec{"testNode-66"},k8spolicy::PodStatus{"10.10.66.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-670","testNamespace",k8spolicy::UID{"testPod-670"},[("pod-name","testPod-670")],k8spolicy::PodSpec{"testNode-67"},k8spolicy::PodStatus{"10.10.67.0"}}];
commit dump_changes;
start;
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-671","testNamespace",k8spolicy::UID{"testPod-671"},[("pod-name","testPod-671")],k8spolicy::PodSpec{"testNode-67"},k8spolicy::PodStatus{"10.10.67.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-672","testNamespace",k8spolicy::UID{"testPod-672"},[("pod-name","testPod-672")],k8spolicy::PodSpec{"testNode-67"},k8spolicy::PodStatus{"10.10.67.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-673","testNamespace",k8spolicy::UID{"testPod-673"},[("pod-name","testPod-673")],k8spolicy::PodSpec{"testNode-67"},k8spolicy::PodStatus{"10.10.67.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-674","testNamespace",k8spolicy::UID{"testPod-674"},[("pod-name","testPod-674")],k8spolicy::PodSpec{"testNode-67"},k8spolicy::PodStatus{"10.10.67.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-675","testNamespace",k8spolicy::UID{"testPod-675"},[("pod-name","testPod-675")],k8spolicy::PodSpec{"testNode-67"},k8spolicy::PodStatus{"10.10.67.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-676","testNamespace",k8spolicy::UID{"testPod-676"},[("pod-name","testPod-676")],k8spolicy::PodSpec{"testNode-67"},k8spolicy::PodStatus{"10.10.67.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-677","testNamespace",k8spolicy::UID{"testPod-677"},[("pod-name","testPod-677")],k8spolicy::PodSpec{"testNode-67"},k8spolicy::PodStatus{"10.10.67.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-678","testNamespace",k8spolicy::UID{"testPod-678"},[("pod-name","testPod-678")],k8spolicy::PodSpec{"testNode-67"},k8spolicy::PodStatus{"10.10.67.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-679","testNamespace",k8spolicy::UID{"testPod-679"},[("pod-name","testPod-679")],k8spolicy::PodSpec{"testNode-67"},k8spolicy::PodStatus{"10.10.67.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-680","testNamespace",k8spolicy::UID{"testPod-680"},[("pod-name","testPod-680")],k8spolicy::PodSpec{"testNode-68"},k8spolicy::PodStatus{"10.10.68.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-681","testNamespace",k8spolicy::UID{"testPod-681"},[("pod-name","testPod-681")],k8spolicy::PodSpec{"testNode-68"},k8spolicy::PodStatus{"10.10.68.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-682","testNamespace",k8spolicy::UID{"testPod-682"},[("pod-name","testPod-682")],k8spolicy::PodSpec{"testNode-68"},k8spolicy::PodStatus{"10.10.68.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-683","testNamespace",k8spolicy::UID{"testPod-683"},[("pod-name","testPod-683")],k8spolicy::PodSpec{"testNode-68"},k8spolicy::PodStatus{"10.10.68.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-684","testNamespace",k8spolicy::UID{"testPod-684"},[("pod-name","testPod-684")],k8spolicy::PodSpec{"testNode-68"},k8spolicy::PodStatus{"10.10.68.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-685","testNamespace",k8spolicy::UID{"testPod-685"},[("pod-name","testPod-685")],k8spolicy::PodSpec{"testNode-68"},k8spolicy::PodStatus{"10.10.68.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-686","testNamespace",k8spolicy::UID{"testPod-686"},[("pod-name","testPod-686")],k8spolicy::PodSpec{"testNode-68"},k8spolicy::PodStatus{"10.10.68.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-687","testNamespace",k8spolicy::UID{"testPod-687"},[("pod-name","testPod-687")],k8spolicy::PodSpec{"testNode-68"},k8spolicy::PodStatus{"10.10.68.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-688","testNamespace",k8spolicy::UID{"testPod-688"},[("pod-name","testPod-688")],k8spolicy::PodSpec{"testNode-68"},k8spolicy::PodStatus{"10.10.68.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-689","testNamespace",k8spolicy::UID{"testPod-689"},[("pod-name","testPod-689")],k8spolicy::PodSpec{"testNode-68"},k8spolicy::PodStatus{"10.10.68.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-690","testNamespace",k8spolicy::UID{"testPod-690"},[("pod-name","testPod-690")],k8spolicy::PodSpec{"testNode-69"},k8spolicy::PodStatus{"10.10.69.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-691","testNamespace",k8spolicy::UID{"testPod-691"},[("pod-name","testPod-691")],k8spolicy::PodSpec{"testNode-69"},k8spolicy::PodStatus{"10.10.69.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-692","testNamespace",k8spolicy::UID{"testPod-692"},[("pod-name","testPod-692")],k8spolicy::PodSpec{"testNode-69"},k8spolicy::PodStatus{"10.10.69.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-693","testNamespace",k8spolicy::UID{"testPod-693"},[("pod-name","testPod-693")],k8spolicy::PodSpec{"testNode-69"},k8spolicy::PodStatus{"10.10.69.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-694","testNamespace",k8spolicy::UID{"testPod-694"},[("pod-name","testPod-694")],k8spolicy::PodSpec{"testNode-69"},k8spolicy::PodStatus{"10.10.69.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-695","testNamespace",k8spolicy::UID{"testPod-695"},[("pod-name","testPod-695")],k8spolicy::PodSpec{"testNode-69"},k8spolicy::PodStatus{"10.10.69.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-696","testNamespace",k8spolicy::UID{"testPod-696"},[("pod-name","testPod-696")],k8spolicy::PodSpec{"testNode-69"},k8spolicy::PodStatus{"10.10.69.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-697","testNamespace",k8spolicy::UID{"testPod-697"},[("pod-name","testPod-697")],k8spolicy::PodSpec{"testNode-69"},k8spolicy::PodStatus{"10.10.69.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-698","testNamespace",k8spolicy::UID{"testPod-698"},[("pod-name","testPod-698")],k8spolicy::PodSpec{"testNode-69"},k8spolicy::PodStatus{"10.10.69.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-699","testNamespace",k8spolicy::UID{"testPod-699"},[("pod-name","testPod-699")],k8spolicy::PodSpec{"testNode-69"},k8spolicy::PodStatus{"10.10.69.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-700","testNamespace",k8spolicy::UID{"testPod-700"},[("pod-name","testPod-700")],k8spolicy::PodSpec{"testNode-70"},k8spolicy::PodStatus{"10.10.70.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-701","testNamespace",k8spolicy::UID{"testPod-701"},[("pod-name","testPod-701")],k8spolicy::PodSpec{"testNode-70"},k8spolicy::PodStatus{"10.10.70.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-702","testNamespace",k8spolicy::UID{"testPod-702"},[("pod-name","testPod-702")],k8spolicy::PodSpec{"testNode-70"},k8spolicy::PodStatus{"10.10.70.2"}}];
commit dump_changes;
start;
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-703","testNamespace",k8spolicy::UID{"testPod-703"},[("pod-name","testPod-703")],k8spolicy::PodSpec{"testNode-70"},k8spolicy::PodStatus{"10.10.70.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-704","testNamespace",k8spolicy::UID{"testPod-704"},[("pod-name","testPod-704")],k8spolicy::PodSpec{"testNode-70"},k8spolicy::PodStatus{"10.10.70.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-705","testNamespace",k8spolicy::UID{"testPod-705"},[("pod-name","testPod-705")],k8spolicy::PodSpec{"testNode-70"},k8spolicy::PodStatus{"10.10.70.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-706","testNamespace",k8spolicy::UID{"testPod-706"},[("pod-name","testPod-706")],k8spolicy::PodSpec{"testNode-70"},k8spolicy::PodStatus{"10.10.70.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-707","testNamespace",k8spolicy::UID{"testPod-707"},[("pod-name","testPod-707")],k8spolicy::PodSpec{"testNode-70"},k8spolicy::PodStatus{"10.10.70.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-708","testNamespace",k8spolicy::UID{"testPod-708"},[("pod-name","testPod-708")],k8spolicy::PodSpec{"testNode-70"},k8spolicy::PodStatus{"10.10.70.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-709","testNamespace",k8spolicy::UID{"testPod-709"},[("pod-name","testPod-709")],k8spolicy::PodSpec{"testNode-70"},k8spolicy::PodStatus{"10.10.70.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-710","testNamespace",k8spolicy::UID{"testPod-710"},[("pod-name","testPod-710")],k8spolicy::PodSpec{"testNode-71"},k8spolicy::PodStatus{"10.10.71.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-711","testNamespace",k8spolicy::UID{"testPod-711"},[("pod-name","testPod-711")],k8spolicy::PodSpec{"testNode-71"},k8spolicy::PodStatus{"10.10.71.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-712","testNamespace",k8spolicy::UID{"testPod-712"},[("pod-name","testPod-712")],k8spolicy::PodSpec{"testNode-71"},k8spolicy::PodStatus{"10.10.71.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-713","testNamespace",k8spolicy::UID{"testPod-713"},[("pod-name","testPod-713")],k8spolicy::PodSpec{"testNode-71"},k8spolicy::PodStatus{"10.10.71.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-714","testNamespace",k8spolicy::UID{"testPod-714"},[("pod-name","testPod-714")],k8spolicy::PodSpec{"testNode-71"},k8spolicy::PodStatus{"10.10.71.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-715","testNamespace",k8spolicy::UID{"testPod-715"},[("pod-name","testPod-715")],k8spolicy::PodSpec{"testNode-71"},k8spolicy::PodStatus{"10.10.71.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-716","testNamespace",k8spolicy::UID{"testPod-716"},[("pod-name","testPod-716")],k8spolicy::PodSpec{"testNode-71"},k8spolicy::PodStatus{"10.10.71.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-717","testNamespace",k8spolicy::UID{"testPod-717"},[("pod-name","testPod-717")],k8spolicy::PodSpec{"testNode-71"},k8spolicy::PodStatus{"10.10.71.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-718","testNamespace",k8spolicy::UID{"testPod-718"},[("pod-name","testPod-718")],k8spolicy::PodSpec{"testNode-71"},k8spolicy::PodStatus{"10.10.71.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-719","testNamespace",k8spolicy::UID{"testPod-719"},[("pod-name","testPod-719")],k8spolicy::PodSpec{"testNode-71"},k8spolicy::PodStatus{"10.10.71.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-720","testNamespace",k8spolicy::UID{"testPod-720"},[("pod-name","testPod-720")],k8spolicy::PodSpec{"testNode-72"},k8spolicy::PodStatus{"10.10.72.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-721","testNamespace",k8spolicy::UID{"testPod-721"},[("pod-name","testPod-721")],k8spolicy::PodSpec{"testNode-72"},k8spolicy::PodStatus{"10.10.72.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-722","testNamespace",k8spolicy::UID{"testPod-722"},[("pod-name","testPod-722")],k8spolicy::PodSpec{"testNode-72"},k8spolicy::PodStatus{"10.10.72.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-723","testNamespace",k8spolicy::UID{"testPod-723"},[("pod-name","testPod-723")],k8spolicy::PodSpec{"testNode-72"},k8spolicy::PodStatus{"10.10.72.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-724","testNamespace",k8spolicy::UID{"testPod-724"},[("pod-name","testPod-724")],k8spolicy::PodSpec{"testNode-72"},k8spolicy::PodStatus{"10.10.72.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-725","testNamespace",k8spolicy::UID{"testPod-725"},[("pod-name","testPod-725")],k8spolicy::PodSpec{"testNode-72"},k8spolicy::PodStatus{"10.10.72.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-726","testNamespace",k8spolicy::UID{"testPod-726"},[("pod-name","testPod-726")],k8spolicy::PodSpec{"testNode-72"},k8spolicy::PodStatus{"10.10.72.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-727","testNamespace",k8spolicy::UID{"testPod-727"},[("pod-name","testPod-727")],k8spolicy::PodSpec{"testNode-72"},k8spolicy::PodStatus{"10.10.72.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-728","testNamespace",k8spolicy::UID{"testPod-728"},[("pod-name","testPod-728")],k8spolicy::PodSpec{"testNode-72"},k8spolicy::PodStatus{"10.10.72.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-729","testNamespace",k8spolicy::UID{"testPod-729"},[("pod-name","testPod-729")],k8spolicy::PodSpec{"testNode-72"},k8spolicy::PodStatus{"10.10.72.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-730","testNamespace",k8spolicy::UID{"testPod-730"},[("pod-name","testPod-730")],k8spolicy::PodSpec{"testNode-73"},k8spolicy::PodStatus{"10.10.73.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-731","testNamespace",k8spolicy::UID{"testPod-731"},[("pod-name","testPod-731")],k8spolicy::PodSpec{"testNode-73"},k8spolicy::PodStatus{"10.10.73.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-732","testNamespace",k8spolicy::UID{"testPod-732"},[("pod-name","testPod-732")],k8spolicy::PodSpec{"testNode-73"},k8spolicy::PodStatus{"10.10.73.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-733","testNamespace",k8spolicy::UID{"testPod-733"},[("pod-name","testPod-733")],k8spolicy::PodSpec{"testNode-73"},k8spolicy::PodStatus{"10.10.73.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-734","testNamespace",k8spolicy::UID{"testPod-734"},[("pod-name","testPod-734")],k8spolicy::PodSpec{"testNode-73"},k8spolicy::PodStatus{"10.10.73.4"}}];
commit dump_changes;
start;
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-735","testNamespace",k8spolicy::UID{"testPod-735"},[("pod-name","testPod-735")],k8spolicy::PodSpec{"testNode-73"},k8spolicy::PodStatus{"10.10.73.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-736","testNamespace",k8spolicy::UID{"testPod-736"},[("pod-name","testPod-736")],k8spolicy::PodSpec{"testNode-73"},k8spolicy::PodStatus{"10.10.73.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-737","testNamespace",k8spolicy::UID{"testPod-737"},[("pod-name","testPod-737")],k8spolicy::PodSpec{"testNode-73"},k8spolicy::PodStatus{"10.10.73.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-738","testNamespace",k8spolicy::UID{"testPod-738"},[("pod-name","testPod-738")],k8spolicy::PodSpec{"testNode-73"},k8spolicy::PodStatus{"10.10.73.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-739","testNamespace",k8spolicy::UID{"testPod-739"},[("pod-name","testPod-739")],k8spolicy::PodSpec{"testNode-73"},k8spolicy::PodStatus{"10.10.73.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-740","testNamespace",k8spolicy::UID{"testPod-740"},[("pod-name","testPod-740")],k8spolicy::PodSpec{"testNode-74"},k8spolicy::PodStatus{"10.10.74.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-741","testNamespace",k8spolicy::UID{"testPod-741"},[("pod-name","testPod-741")],k8spolicy::PodSpec{"testNode-74"},k8spolicy::PodStatus{"10.10.74.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-742","testNamespace",k8spolicy::UID{"testPod-742"},[("pod-name","testPod-742")],k8spolicy::PodSpec{"testNode-74"},k8spolicy::PodStatus{"10.10.74.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-743","testNamespace",k8spolicy::UID{"testPod-743"},[("pod-name","testPod-743")],k8spolicy::PodSpec{"testNode-74"},k8spolicy::PodStatus{"10.10.74.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-744","testNamespace",k8spolicy::UID{"testPod-744"},[("pod-name","testPod-744")],k8spolicy::PodSpec{"testNode-74"},k8spolicy::PodStatus{"10.10.74.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-745","testNamespace",k8spolicy::UID{"testPod-745"},[("pod-name","testPod-745")],k8spolicy::PodSpec{"testNode-74"},k8spolicy::PodStatus{"10.10.74.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-746","testNamespace",k8spolicy::UID{"testPod-746"},[("pod-name","testPod-746")],k8spolicy::PodSpec{"testNode-74"},k8spolicy::PodStatus{"10.10.74.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-747","testNamespace",k8spolicy::UID{"testPod-747"},[("pod-name","testPod-747")],k8spolicy::PodSpec{"testNode-74"},k8spolicy::PodStatus{"10.10.74.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-748","testNamespace",k8spolicy::UID{"testPod-748"},[("pod-name","testPod-748")],k8spolicy::PodSpec{"testNode-74"},k8spolicy::PodStatus{"10.10.74.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-749","testNamespace",k8spolicy::UID{"testPod-749"},[("pod-name","testPod-749")],k8spolicy::PodSpec{"testNode-74"},k8spolicy::PodStatus{"10.10.74.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-750","testNamespace",k8spolicy::UID{"testPod-750"},[("pod-name","testPod-750")],k8spolicy::PodSpec{"testNode-75"},k8spolicy::PodStatus{"10.10.75.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-751","testNamespace",k8spolicy::UID{"testPod-751"},[("pod-name","testPod-751")],k8spolicy::PodSpec{"testNode-75"},k8spolicy::PodStatus{"10.10.75.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-752","testNamespace",k8spolicy::UID{"testPod-752"},[("pod-name","testPod-752")],k8spolicy::PodSpec{"testNode-75"},k8spolicy::PodStatus{"10.10.75.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-753","testNamespace",k8spolicy::UID{"testPod-753"},[("pod-name","testPod-753")],k8spolicy::PodSpec{"testNode-75"},k8spolicy::PodStatus{"10.10.75.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-754","testNamespace",k8spolicy::UID{"testPod-754"},[("pod-name","testPod-754")],k8spolicy::PodSpec{"testNode-75"},k8spolicy::PodStatus{"10.10.75.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-755","testNamespace",k8spolicy::UID{"testPod-755"},[("pod-name","testPod-755")],k8spolicy::PodSpec{"testNode-75"},k8spolicy::PodStatus{"10.10.75.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-756","testNamespace",k8spolicy::UID{"testPod-756"},[("pod-name","testPod-756")],k8spolicy::PodSpec{"testNode-75"},k8spolicy::PodStatus{"10.10.75.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-757","testNamespace",k8spolicy::UID{"testPod-757"},[("pod-name","testPod-757")],k8spolicy::PodSpec{"testNode-75"},k8spolicy::PodStatus{"10.10.75.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-758","testNamespace",k8spolicy::UID{"testPod-758"},[("pod-name","testPod-758")],k8spolicy::PodSpec{"testNode-75"},k8spolicy::PodStatus{"10.10.75.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-759","testNamespace",k8spolicy::UID{"testPod-759"},[("pod-name","testPod-759")],k8spolicy::PodSpec{"testNode-75"},k8spolicy::PodStatus{"10.10.75.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-760","testNamespace",k8spolicy::UID{"testPod-760"},[("pod-name","testPod-760")],k8spolicy::PodSpec{"testNode-76"},k8spolicy::PodStatus{"10.10.76.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-761","testNamespace",k8spolicy::UID{"testPod-761"},[("pod-name","testPod-761")],k8spolicy::PodSpec{"testNode-76"},k8spolicy::PodStatus{"10.10.76.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-762","testNamespace",k8spolicy::UID{"testPod-762"},[("pod-name","testPod-762")],k8spolicy::PodSpec{"testNode-76"},k8spolicy::PodStatus{"10.10.76.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-763","testNamespace",k8spolicy::UID{"testPod-763"},[("pod-name","testPod-763")],k8spolicy::PodSpec{"testNode-76"},k8spolicy::PodStatus{"10.10.76.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-764","testNamespace",k8spolicy::UID{"testPod-764"},[("pod-name","testPod-764")],k8spolicy::PodSpec{"testNode-76"},k8spolicy::PodStatus{"10.10.76.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-765","testNamespace",k8spolicy::UID{"testPod-765"},[("pod-name","testPod-765")],k8spolicy::PodSpec{"testNode-76"},k8spolicy::PodStatus{"10.10.76.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-766","testNamespace",k8spolicy::UID{"testPod-766"},[("pod-name","testPod-766")],k8spolicy::PodSpec{"testNode-76"},k8spolicy::PodStatus{"10.10.76.6"}}];
commit dump_changes;
start;
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-767","testNamespace",k8spolicy::UID{"testPod-767"},[("pod-name","testPod-767")],k8spolicy::PodSpec{"testNode-76"},k8spolicy::PodStatus{"10.10.76.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-768","testNamespace",k8spolicy::UID{"testPod-768"},[("pod-name","testPod-768")],k8spolicy::PodSpec{"testNode-76"},k8spolicy::PodStatus{"10.10.76.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-769","testNamespace",k8spolicy::UID{"testPod-769"},[("pod-name","testPod-769")],k8spolicy::PodSpec{"testNode-76"},k8spolicy::PodStatus{"10.10.76.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-770","testNamespace",k8spolicy::UID{"testPod-770"},[("pod-name","testPod-770")],k8spolicy::PodSpec{"testNode-77"},k8spolicy::PodStatus{"10.10.77.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-771","testNamespace",k8spolicy::UID{"testPod-771"},[("pod-name","testPod-771")],k8spolicy::PodSpec{"testNode-77"},k8spolicy::PodStatus{"10.10.77.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-772","testNamespace",k8spolicy::UID{"testPod-772"},[("pod-name","testPod-772")],k8spolicy::PodSpec{"testNode-77"},k8spolicy::PodStatus{"10.10.77.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-773","testNamespace",k8spolicy::UID{"testPod-773"},[("pod-name","testPod-773")],k8spolicy::PodSpec{"testNode-77"},k8spolicy::PodStatus{"10.10.77.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-774","testNamespace",k8spolicy::UID{"testPod-774"},[("pod-name","testPod-774")],k8spolicy::PodSpec{"testNode-77"},k8spolicy::PodStatus{"10.10.77.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-775","testNamespace",k8spolicy::UID{"testPod-775"},[("pod-name","testPod-775")],k8spolicy::PodSpec{"testNode-77"},k8spolicy::PodStatus{"10.10.77.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-776","testNamespace",k8spolicy::UID{"testPod-776"},[("pod-name","testPod-776")],k8spolicy::PodSpec{"testNode-77"},k8spolicy::PodStatus{"10.10.77.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-777","testNamespace",k8spolicy::UID{"testPod-777"},[("pod-name","testPod-777")],k8spolicy::PodSpec{"testNode-77"},k8spolicy::PodStatus{"10.10.77.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-778","testNamespace",k8spolicy::UID{"testPod-778"},[("pod-name","testPod-778")],k8spolicy::PodSpec{"testNode-77"},k8spolicy::PodStatus{"10.10.77.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-779","testNamespace",k8spolicy::UID{"testPod-779"},[("pod-name","testPod-779")],k8spolicy::PodSpec{"testNode-77"},k8spolicy::PodStatus{"10.10.77.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-780","testNamespace",k8spolicy::UID{"testPod-780"},[("pod-name","testPod-780")],k8spolicy::PodSpec{"testNode-78"},k8spolicy::PodStatus{"10.10.78.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-781","testNamespace",k8spolicy::UID{"testPod-781"},[("pod-name","testPod-781")],k8spolicy::PodSpec{"testNode-78"},k8spolicy::PodStatus{"10.10.78.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-782","testNamespace",k8spolicy::UID{"testPod-782"},[("pod-name","testPod-782")],k8spolicy::PodSpec{"testNode-78"},k8spolicy::PodStatus{"10.10.78.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-783","testNamespace",k8spolicy::UID{"testPod-783"},[("pod-name","testPod-783")],k8spolicy::PodSpec{"testNode-78"},k8spolicy::PodStatus{"10.10.78.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-784","testNamespace",k8spolicy::UID{"testPod-784"},[("pod-name","testPod-784")],k8spolicy::PodSpec{"testNode-78"},k8spolicy::PodStatus{"10.10.78.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-785","testNamespace",k8spolicy::UID{"testPod-785"},[("pod-name","testPod-785")],k8spolicy::PodSpec{"testNode-78"},k8spolicy::PodStatus{"10.10.78.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-786","testNamespace",k8spolicy::UID{"testPod-786"},[("pod-name","testPod-786")],k8spolicy::PodSpec{"testNode-78"},k8spolicy::PodStatus{"10.10.78.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-787","testNamespace",k8spolicy::UID{"testPod-787"},[("pod-name","testPod-787")],k8spolicy::PodSpec{"testNode-78"},k8spolicy::PodStatus{"10.10.78.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-788","testNamespace",k8spolicy::UID{"testPod-788"},[("pod-name","testPod-788")],k8spolicy::PodSpec{"testNode-78"},k8spolicy::PodStatus{"10.10.78.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-789","testNamespace",k8spolicy::UID{"testPod-789"},[("pod-name","testPod-789")],k8spolicy::PodSpec{"testNode-78"},k8spolicy::PodStatus{"10.10.78.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-790","testNamespace",k8spolicy::UID{"testPod-790"},[("pod-name","testPod-790")],k8spolicy::PodSpec{"testNode-79"},k8spolicy::PodStatus{"10.10.79.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-791","testNamespace",k8spolicy::UID{"testPod-791"},[("pod-name","testPod-791")],k8spolicy::PodSpec{"testNode-79"},k8spolicy::PodStatus{"10.10.79.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-792","testNamespace",k8spolicy::UID{"testPod-792"},[("pod-name","testPod-792")],k8spolicy::PodSpec{"testNode-79"},k8spolicy::PodStatus{"10.10.79.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-793","testNamespace",k8spolicy::UID{"testPod-793"},[("pod-name","testPod-793")],k8spolicy::PodSpec{"testNode-79"},k8spolicy::PodStatus{"10.10.79.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-794","testNamespace",k8spolicy::UID{"testPod-794"},[("pod-name","testPod-794")],k8spolicy::PodSpec{"testNode-79"},k8spolicy::PodStatus{"10.10.79.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-795","testNamespace",k8spolicy::UID{"testPod-795"},[("pod-name","testPod-795")],k8spolicy::PodSpec{"testNode-79"},k8spolicy::PodStatus{"10.10.79.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-796","testNamespace",k8spolicy::UID{"testPod-796"},[("pod-name","testPod-796")],k8spolicy::PodSpec{"testNode-79"},k8spolicy::PodStatus{"10.10.79.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-797","testNamespace",k8spolicy::UID{"testPod-797"},[("pod-name","testPod-797")],k8spolicy::PodSpec{"testNode-79"},k8spolicy::PodStatus{"10.10.79.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-798","testNamespace",k8spolicy::UID{"testPod-798"},[("pod-name","testPod-798")],k8spolicy::PodSpec{"testNode-79"},k8spolicy::PodStatus{"10.10.79.8"}}];
commit dump_changes;
start;
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-799","testNamespace",k8spolicy::UID{"testPod-799"},[("pod-name","testPod-799")],k8spolicy::PodSpec{"testNode-79"},k8spolicy::PodStatus{"10.10.79.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-800","testNamespace",k8spolicy::UID{"testPod-800"},[("pod-name","testPod-800")],k8spolicy::PodSpec{"testNode-80"},k8spolicy::PodStatus{"10.10.80.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-801","testNamespace",k8spolicy::UID{"testPod-801"},[("pod-name","testPod-801")],k8spolicy::PodSpec{"testNode-80"},k8spolicy::PodStatus{"10.10.80.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-802","testNamespace",k8spolicy::UID{"testPod-802"},[("pod-name","testPod-802")],k8spolicy::PodSpec{"testNode-80"},k8spolicy::PodStatus{"10.10.80.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-803","testNamespace",k8spolicy::UID{"testPod-803"},[("pod-name","testPod-803")],k8spolicy::PodSpec{"testNode-80"},k8spolicy::PodStatus{"10.10.80.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-804","testNamespace",k8spolicy::UID{"testPod-804"},[("pod-name","testPod-804")],k8spolicy::PodSpec{"testNode-80"},k8spolicy::PodStatus{"10.10.80.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-805","testNamespace",k8spolicy::UID{"testPod-805"},[("pod-name","testPod-805")],k8spolicy::PodSpec{"testNode-80"},k8spolicy::PodStatus{"10.10.80.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-806","testNamespace",k8spolicy::UID{"testPod-806"},[("pod-name","testPod-806")],k8spolicy::PodSpec{"testNode-80"},k8spolicy::PodStatus{"10.10.80.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-807","testNamespace",k8spolicy::UID{"testPod-807"},[("pod-name","testPod-807")],k8spolicy::PodSpec{"testNode-80"},k8spolicy::PodStatus{"10.10.80.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-808","testNamespace",k8spolicy::UID{"testPod-808"},[("pod-name","testPod-808")],k8spolicy::PodSpec{"testNode-80"},k8spolicy::PodStatus{"10.10.80.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-809","testNamespace",k8spolicy::UID{"testPod-809"},[("pod-name","testPod-809")],k8spolicy::PodSpec{"testNode-80"},k8spolicy::PodStatus{"10.10.80.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-810","testNamespace",k8spolicy::UID{"testPod-810"},[("pod-name","testPod-810")],k8spolicy::PodSpec{"testNode-81"},k8spolicy::PodStatus{"10.10.81.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-811","testNamespace",k8spolicy::UID{"testPod-811"},[("pod-name","testPod-811")],k8spolicy::PodSpec{"testNode-81"},k8spolicy::PodStatus{"10.10.81.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-812","testNamespace",k8spolicy::UID{"testPod-812"},[("pod-name","testPod-812")],k8spolicy::PodSpec{"testNode-81"},k8spolicy::PodStatus{"10.10.81.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-813","testNamespace",k8spolicy::UID{"testPod-813"},[("pod-name","testPod-813")],k8spolicy::PodSpec{"testNode-81"},k8spolicy::PodStatus{"10.10.81.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-814","testNamespace",k8spolicy::UID{"testPod-814"},[("pod-name","testPod-814")],k8spolicy::PodSpec{"testNode-81"},k8spolicy::PodStatus{"10.10.81.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-815","testNamespace",k8spolicy::UID{"testPod-815"},[("pod-name","testPod-815")],k8spolicy::PodSpec{"testNode-81"},k8spolicy::PodStatus{"10.10.81.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-816","testNamespace",k8spolicy::UID{"testPod-816"},[("pod-name","testPod-816")],k8spolicy::PodSpec{"testNode-81"},k8spolicy::PodStatus{"10.10.81.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-817","testNamespace",k8spolicy::UID{"testPod-817"},[("pod-name","testPod-817")],k8spolicy::PodSpec{"testNode-81"},k8spolicy::PodStatus{"10.10.81.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-818","testNamespace",k8spolicy::UID{"testPod-818"},[("pod-name","testPod-818")],k8spolicy::PodSpec{"testNode-81"},k8spolicy::PodStatus{"10.10.81.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-819","testNamespace",k8spolicy::UID{"testPod-819"},[("pod-name","testPod-819")],k8spolicy::PodSpec{"testNode-81"},k8spolicy::PodStatus{"10.10.81.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-820","testNamespace",k8spolicy::UID{"testPod-820"},[("pod-name","testPod-820")],k8spolicy::PodSpec{"testNode-82"},k8spolicy::PodStatus{"10.10.82.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-821","testNamespace",k8spolicy::UID{"testPod-821"},[("pod-name","testPod-821")],k8spolicy::PodSpec{"testNode-82"},k8spolicy::PodStatus{"10.10.82.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-822","testNamespace",k8spolicy::UID{"testPod-822"},[("pod-name","testPod-822")],k8spolicy::PodSpec{"testNode-82"},k8spolicy::PodStatus{"10.10.82.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-823","testNamespace",k8spolicy::UID{"testPod-823"},[("pod-name","testPod-823")],k8spolicy::PodSpec{"testNode-82"},k8spolicy::PodStatus{"10.10.82.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-824","testNamespace",k8spolicy::UID{"testPod-824"},[("pod-name","testPod-824")],k8spolicy::PodSpec{"testNode-82"},k8spolicy::PodStatus{"10.10.82.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-825","testNamespace",k8spolicy::UID{"testPod-825"},[("pod-name","testPod-825")],k8spolicy::PodSpec{"testNode-82"},k8spolicy::PodStatus{"10.10.82.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-826","testNamespace",k8spolicy::UID{"testPod-826"},[("pod-name","testPod-826")],k8spolicy::PodSpec{"testNode-82"},k8spolicy::PodStatus{"10.10.82.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-827","testNamespace",k8spolicy::UID{"testPod-827"},[("pod-name","testPod-827")],k8spolicy::PodSpec{"testNode-82"},k8spolicy::PodStatus{"10.10.82.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-828","testNamespace",k8spolicy::UID{"testPod-828"},[("pod-name","testPod-828")],k8spolicy::PodSpec{"testNode-82"},k8spolicy::PodStatus{"10.10.82.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-829","testNamespace",k8spolicy::UID{"testPod-829"},[("pod-name","testPod-829")],k8spolicy::PodSpec{"testNode-82"},k8spolicy::PodStatus{"10.10.82.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-830","testNamespace",k8spolicy::UID{"testPod-830"},[("pod-name","testPod-830")],k8spolicy::PodSpec{"testNode-83"},k8spolicy::PodStatus{"10.10.83.0"}}];
commit dump_changes;
start;
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-831","testNamespace",k8spolicy::UID{"testPod-831"},[("pod-name","testPod-831")],k8spolicy::PodSpec{"testNode-83"},k8spolicy::PodStatus{"10.10.83.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-832","testNamespace",k8spolicy::UID{"testPod-832"},[("pod-name","testPod-832")],k8spolicy::PodSpec{"testNode-83"},k8spolicy::PodStatus{"10.10.83.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-833","testNamespace",k8spolicy::UID{"testPod-833"},[("pod-name","testPod-833")],k8spolicy::PodSpec{"testNode-83"},k8spolicy::PodStatus{"10.10.83.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-834","testNamespace",k8spolicy::UID{"testPod-834"},[("pod-name","testPod-834")],k8spolicy::PodSpec{"testNode-83"},k8spolicy::PodStatus{"10.10.83.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-835","testNamespace",k8spolicy::UID{"testPod-835"},[("pod-name","testPod-835")],k8spolicy::PodSpec{"testNode-83"},k8spolicy::PodStatus{"10.10.83.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-836","testNamespace",k8spolicy::UID{"testPod-836"},[("pod-name","testPod-836")],k8spolicy::PodSpec{"testNode-83"},k8spolicy::PodStatus{"10.10.83.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-837","testNamespace",k8spolicy::UID{"testPod-837"},[("pod-name","testPod-837")],k8spolicy::PodSpec{"testNode-83"},k8spolicy::PodStatus{"10.10.83.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-838","testNamespace",k8spolicy::UID{"testPod-838"},[("pod-name","testPod-838")],k8spolicy::PodSpec{"testNode-83"},k8spolicy::PodStatus{"10.10.83.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-839","testNamespace",k8spolicy::UID{"testPod-839"},[("pod-name","testPod-839")],k8spolicy::PodSpec{"testNode-83"},k8spolicy::PodStatus{"10.10.83.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-840","testNamespace",k8spolicy::UID{"testPod-840"},[("pod-name","testPod-840")],k8spolicy::PodSpec{"testNode-84"},k8spolicy::PodStatus{"10.10.84.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-841","testNamespace",k8spolicy::UID{"testPod-841"},[("pod-name","testPod-841")],k8spolicy::PodSpec{"testNode-84"},k8spolicy::PodStatus{"10.10.84.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-842","testNamespace",k8spolicy::UID{"testPod-842"},[("pod-name","testPod-842")],k8spolicy::PodSpec{"testNode-84"},k8spolicy::PodStatus{"10.10.84.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-843","testNamespace",k8spolicy::UID{"testPod-843"},[("pod-name","testPod-843")],k8spolicy::PodSpec{"testNode-84"},k8spolicy::PodStatus{"10.10.84.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-844","testNamespace",k8spolicy::UID{"testPod-844"},[("pod-name","testPod-844")],k8spolicy::PodSpec{"testNode-84"},k8spolicy::PodStatus{"10.10.84.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-845","testNamespace",k8spolicy::UID{"testPod-845"},[("pod-name","testPod-845")],k8spolicy::PodSpec{"testNode-84"},k8spolicy::PodStatus{"10.10.84.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-846","testNamespace",k8spolicy::UID{"testPod-846"},[("pod-name","testPod-846")],k8spolicy::PodSpec{"testNode-84"},k8spolicy::PodStatus{"10.10.84.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-847","testNamespace",k8spolicy::UID{"testPod-847"},[("pod-name","testPod-847")],k8spolicy::PodSpec{"testNode-84"},k8spolicy::PodStatus{"10.10.84.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-848","testNamespace",k8spolicy::UID{"testPod-848"},[("pod-name","testPod-848")],k8spolicy::PodSpec{"testNode-84"},k8spolicy::PodStatus{"10.10.84.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-849","testNamespace",k8spolicy::UID{"testPod-849"},[("pod-name","testPod-849")],k8spolicy::PodSpec{"testNode-84"},k8spolicy::PodStatus{"10.10.84.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-850","testNamespace",k8spolicy::UID{"testPod-850"},[("pod-name","testPod-850")],k8spolicy::PodSpec{"testNode-85"},k8spolicy::PodStatus{"10.10.85.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-851","testNamespace",k8spolicy::UID{"testPod-851"},[("pod-name","testPod-851")],k8spolicy::PodSpec{"testNode-85"},k8spolicy::PodStatus{"10.10.85.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-852","testNamespace",k8spolicy::UID{"testPod-852"},[("pod-name","testPod-852")],k8spolicy::PodSpec{"testNode-85"},k8spolicy::PodStatus{"10.10.85.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-853","testNamespace",k8spolicy::UID{"testPod-853"},[("pod-name","testPod-853")],k8spolicy::PodSpec{"testNode-85"},k8spolicy::PodStatus{"10.10.85.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-854","testNamespace",k8spolicy::UID{"testPod-854"},[("pod-name","testPod-854")],k8spolicy::PodSpec{"testNode-85"},k8spolicy::PodStatus{"10.10.85.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-855","testNamespace",k8spolicy::UID{"testPod-855"},[("pod-name","testPod-855")],k8spolicy::PodSpec{"testNode-85"},k8spolicy::PodStatus{"10.10.85.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-856","testNamespace",k8spolicy::UID{"testPod-856"},[("pod-name","testPod-856")],k8spolicy::PodSpec{"testNode-85"},k8spolicy::PodStatus{"10.10.85.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-857","testNamespace",k8spolicy::UID{"testPod-857"},[("pod-name","testPod-857")],k8spolicy::PodSpec{"testNode-85"},k8spolicy::PodStatus{"10.10.85.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-858","testNamespace",k8spolicy::UID{"testPod-858"},[("pod-name","testPod-858")],k8spolicy::PodSpec{"testNode-85"},k8spolicy::PodStatus{"10.10.85.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-859","testNamespace",k8spolicy::UID{"testPod-859"},[("pod-name","testPod-859")],k8spolicy::PodSpec{"testNode-85"},k8spolicy::PodStatus{"10.10.85.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-860","testNamespace",k8spolicy::UID{"testPod-860"},[("pod-name","testPod-860")],k8spolicy::PodSpec{"testNode-86"},k8spolicy::PodStatus{"10.10.86.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-861","testNamespace",k8spolicy::UID{"testPod-861"},[("pod-name","testPod-861")],k8spolicy::PodSpec{"testNode-86"},k8spolicy::PodStatus{"10.10.86.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-862","testNamespace",k8spolicy::UID{"testPod-862"},[("pod-name","testPod-862")],k8spolicy::PodSpec{"testNode-86"},k8spolicy::PodStatus{"10.10.86.2"}}];
commit dump_changes;
start;
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-863","testNamespace",k8spolicy::UID{"testPod-863"},[("pod-name","testPod-863")],k8spolicy::PodSpec{"testNode-86"},k8spolicy::PodStatus{"10.10.86.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-864","testNamespace",k8spolicy::UID{"testPod-864"},[("pod-name","testPod-864")],k8spolicy::PodSpec{"testNode-86"},k8spolicy::PodStatus{"10.10.86.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-865","testNamespace",k8spolicy::UID{"testPod-865"},[("pod-name","testPod-865")],k8spolicy::PodSpec{"testNode-86"},k8spolicy::PodStatus{"10.10.86.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-866","testNamespace",k8spolicy::UID{"testPod-866"},[("pod-name","testPod-866")],k8spolicy::PodSpec{"testNode-86"},k8spolicy::PodStatus{"10.10.86.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-867","testNamespace",k8spolicy::UID{"testPod-867"},[("pod-name","testPod-867")],k8spolicy::PodSpec{"testNode-86"},k8spolicy::PodStatus{"10.10.86.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-868","testNamespace",k8spolicy::UID{"testPod-868"},[("pod-name","testPod-868")],k8spolicy::PodSpec{"testNode-86"},k8spolicy::PodStatus{"10.10.86.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-869","testNamespace",k8spolicy::UID{"testPod-869"},[("pod-name","testPod-869")],k8spolicy::PodSpec{"testNode-86"},k8spolicy::PodStatus{"10.10.86.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-870","testNamespace",k8spolicy::UID{"testPod-870"},[("pod-name","testPod-870")],k8spolicy::PodSpec{"testNode-87"},k8spolicy::PodStatus{"10.10.87.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-871","testNamespace",k8spolicy::UID{"testPod-871"},[("pod-name","testPod-871")],k8spolicy::PodSpec{"testNode-87"},k8spolicy::PodStatus{"10.10.87.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-872","testNamespace",k8spolicy::UID{"testPod-872"},[("pod-name","testPod-872")],k8spolicy::PodSpec{"testNode-87"},k8spolicy::PodStatus{"10.10.87.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-873","testNamespace",k8spolicy::UID{"testPod-873"},[("pod-name","testPod-873")],k8spolicy::PodSpec{"testNode-87"},k8spolicy::PodStatus{"10.10.87.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-874","testNamespace",k8spolicy::UID{"testPod-874"},[("pod-name","testPod-874")],k8spolicy::PodSpec{"testNode-87"},k8spolicy::PodStatus{"10.10.87.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-875","testNamespace",k8spolicy::UID{"testPod-875"},[("pod-name","testPod-875")],k8spolicy::PodSpec{"testNode-87"},k8spolicy::PodStatus{"10.10.87.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-876","testNamespace",k8spolicy::UID{"testPod-876"},[("pod-name","testPod-876")],k8spolicy::PodSpec{"testNode-87"},k8spolicy::PodStatus{"10.10.87.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-877","testNamespace",k8spolicy::UID{"testPod-877"},[("pod-name","testPod-877")],k8spolicy::PodSpec{"testNode-87"},k8spolicy::PodStatus{"10.10.87.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-878","testNamespace",k8spolicy::UID{"testPod-878"},[("pod-name","testPod-878")],k8spolicy::PodSpec{"testNode-87"},k8spolicy::PodStatus{"10.10.87.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-879","testNamespace",k8spolicy::UID{"testPod-879"},[("pod-name","testPod-879")],k8spolicy::PodSpec{"testNode-87"},k8spolicy::PodStatus{"10.10.87.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-880","testNamespace",k8spolicy::UID{"testPod-880"},[("pod-name","testPod-880")],k8spolicy::PodSpec{"testNode-88"},k8spolicy::PodStatus{"10.10.88.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-881","testNamespace",k8spolicy::UID{"testPod-881"},[("pod-name","testPod-881")],k8spolicy::PodSpec{"testNode-88"},k8spolicy::PodStatus{"10.10.88.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-882","testNamespace",k8spolicy::UID{"testPod-882"},[("pod-name","testPod-882")],k8spolicy::PodSpec{"testNode-88"},k8spolicy::PodStatus{"10.10.88.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-883","testNamespace",k8spolicy::UID{"testPod-883"},[("pod-name","testPod-883")],k8spolicy::PodSpec{"testNode-88"},k8spolicy::PodStatus{"10.10.88.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-884","testNamespace",k8spolicy::UID{"testPod-884"},[("pod-name","testPod-884")],k8spolicy::PodSpec{"testNode-88"},k8spolicy::PodStatus{"10.10.88.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-885","testNamespace",k8spolicy::UID{"testPod-885"},[("pod-name","testPod-885")],k8spolicy::PodSpec{"testNode-88"},k8spolicy::PodStatus{"10.10.88.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-886","testNamespace",k8spolicy::UID{"testPod-886"},[("pod-name","testPod-886")],k8spolicy::PodSpec{"testNode-88"},k8spolicy::PodStatus{"10.10.88.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-887","testNamespace",k8spolicy::UID{"testPod-887"},[("pod-name","testPod-887")],k8spolicy::PodSpec{"testNode-88"},k8spolicy::PodStatus{"10.10.88.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-888","testNamespace",k8spolicy::UID{"testPod-888"},[("pod-name","testPod-888")],k8spolicy::PodSpec{"testNode-88"},k8spolicy::PodStatus{"10.10.88.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-889","testNamespace",k8spolicy::UID{"testPod-889"},[("pod-name","testPod-889")],k8spolicy::PodSpec{"testNode-88"},k8spolicy::PodStatus{"10.10.88.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-890","testNamespace",k8spolicy::UID{"testPod-890"},[("pod-name","testPod-890")],k8spolicy::PodSpec{"testNode-89"},k8spolicy::PodStatus{"10.10.89.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-891","testNamespace",k8spolicy::UID{"testPod-891"},[("pod-name","testPod-891")],k8spolicy::PodSpec{"testNode-89"},k8spolicy::PodStatus{"10.10.89.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-892","testNamespace",k8spolicy::UID{"testPod-892"},[("pod-name","testPod-892")],k8spolicy::PodSpec{"testNode-89"},k8spolicy::PodStatus{"10.10.89.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-893","testNamespace",k8spolicy::UID{"testPod-893"},[("pod-name","testPod-893")],k8spolicy::PodSpec{"testNode-89"},k8spolicy::PodStatus{"10.10.89.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-894","testNamespace",k8spolicy::UID{"testPod-894"},[("pod-name","testPod-894")],k8spolicy::PodSpec{"testNode-89"},k8spolicy::PodStatus{"10.10.89.4"}}];
commit dump_changes;
start;
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-895","testNamespace",k8spolicy::UID{"testPod-895"},[("pod-name","testPod-895")],k8spolicy::PodSpec{"testNode-89"},k8spolicy::PodStatus{"10.10.89.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-896","testNamespace",k8spolicy::UID{"testPod-896"},[("pod-name","testPod-896")],k8spolicy::PodSpec{"testNode-89"},k8spolicy::PodStatus{"10.10.89.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-897","testNamespace",k8spolicy::UID{"testPod-897"},[("pod-name","testPod-897")],k8spolicy::PodSpec{"testNode-89"},k8spolicy::PodStatus{"10.10.89.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-898","testNamespace",k8spolicy::UID{"testPod-898"},[("pod-name","testPod-898")],k8spolicy::PodSpec{"testNode-89"},k8spolicy::PodStatus{"10.10.89.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-899","testNamespace",k8spolicy::UID{"testPod-899"},[("pod-name","testPod-899")],k8spolicy::PodSpec{"testNode-89"},k8spolicy::PodStatus{"10.10.89.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-900","testNamespace",k8spolicy::UID{"testPod-900"},[("pod-name","testPod-900")],k8spolicy::PodSpec{"testNode-90"},k8spolicy::PodStatus{"10.10.90.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-901","testNamespace",k8spolicy::UID{"testPod-901"},[("pod-name","testPod-901")],k8spolicy::PodSpec{"testNode-90"},k8spolicy::PodStatus{"10.10.90.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-902","testNamespace",k8spolicy::UID{"testPod-902"},[("pod-name","testPod-902")],k8spolicy::PodSpec{"testNode-90"},k8spolicy::PodStatus{"10.10.90.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-903","testNamespace",k8spolicy::UID{"testPod-903"},[("pod-name","testPod-903")],k8spolicy::PodSpec{"testNode-90"},k8spolicy::PodStatus{"10.10.90.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-904","testNamespace",k8spolicy::UID{"testPod-904"},[("pod-name","testPod-904")],k8spolicy::PodSpec{"testNode-90"},k8spolicy::PodStatus{"10.10.90.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-905","testNamespace",k8spolicy::UID{"testPod-905"},[("pod-name","testPod-905")],k8spolicy::PodSpec{"testNode-90"},k8spolicy::PodStatus{"10.10.90.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-906","testNamespace",k8spolicy::UID{"testPod-906"},[("pod-name","testPod-906")],k8spolicy::PodSpec{"testNode-90"},k8spolicy::PodStatus{"10.10.90.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-907","testNamespace",k8spolicy::UID{"testPod-907"},[("pod-name","testPod-907")],k8spolicy::PodSpec{"testNode-90"},k8spolicy::PodStatus{"10.10.90.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-908","testNamespace",k8spolicy::UID{"testPod-908"},[("pod-name","testPod-908")],k8spolicy::PodSpec{"testNode-90"},k8spolicy::PodStatus{"10.10.90.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-909","testNamespace",k8spolicy::UID{"testPod-909"},[("pod-name","testPod-909")],k8spolicy::PodSpec{"testNode-90"},k8spolicy::PodStatus{"10.10.90.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-910","testNamespace",k8spolicy::UID{"testPod-910"},[("pod-name","testPod-910")],k8spolicy::PodSpec{"testNode-91"},k8spolicy::PodStatus{"10.10.91.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-911","testNamespace",k8spolicy::UID{"testPod-911"},[("pod-name","testPod-911")],k8spolicy::PodSpec{"testNode-91"},k8spolicy::PodStatus{"10.10.91.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-912","testNamespace",k8spolicy::UID{"testPod-912"},[("pod-name","testPod-912")],k8spolicy::PodSpec{"testNode-91"},k8spolicy::PodStatus{"10.10.91.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-913","testNamespace",k8spolicy::UID{"testPod-913"},[("pod-name","testPod-913")],k8spolicy::PodSpec{"testNode-91"},k8spolicy::PodStatus{"10.10.91.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-914","testNamespace",k8spolicy::UID{"testPod-914"},[("pod-name","testPod-914")],k8spolicy::PodSpec{"testNode-91"},k8spolicy::PodStatus{"10.10.91.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-915","testNamespace",k8spolicy::UID{"testPod-915"},[("pod-name","testPod-915")],k8spolicy::PodSpec{"testNode-91"},k8spolicy::PodStatus{"10.10.91.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-916","testNamespace",k8spolicy::UID{"testPod-916"},[("pod-name","testPod-916")],k8spolicy::PodSpec{"testNode-91"},k8spolicy::PodStatus{"10.10.91.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-917","testNamespace",k8spolicy::UID{"testPod-917"},[("pod-name","testPod-917")],k8spolicy::PodSpec{"testNode-91"},k8spolicy::PodStatus{"10.10.91.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-918","testNamespace",k8spolicy::UID{"testPod-918"},[("pod-name","testPod-918")],k8spolicy::PodSpec{"testNode-91"},k8spolicy::PodStatus{"10.10.91.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-919","testNamespace",k8spolicy::UID{"testPod-919"},[("pod-name","testPod-919")],k8spolicy::PodSpec{"testNode-91"},k8spolicy::PodStatus{"10.10.91.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-920","testNamespace",k8spolicy::UID{"testPod-920"},[("pod-name","testPod-920")],k8spolicy::PodSpec{"testNode-92"},k8spolicy::PodStatus{"10.10.92.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-921","testNamespace",k8spolicy::UID{"testPod-921"},[("pod-name","testPod-921")],k8spolicy::PodSpec{"testNode-92"},k8spolicy::PodStatus{"10.10.92.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-922","testNamespace",k8spolicy::UID{"testPod-922"},[("pod-name","testPod-922")],k8spolicy::PodSpec{"testNode-92"},k8spolicy::PodStatus{"10.10.92.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-923","testNamespace",k8spolicy::UID{"testPod-923"},[("pod-name","testPod-923")],k8spolicy::PodSpec{"testNode-92"},k8spolicy::PodStatus{"10.10.92.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-924","testNamespace",k8spolicy::UID{"testPod-924"},[("pod-name","testPod-924")],k8spolicy::PodSpec{"testNode-92"},k8spolicy::PodStatus{"10.10.92.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-925","testNamespace",k8spolicy::UID{"testPod-925"},[("pod-name","testPod-925")],k8spolicy::PodSpec{"testNode-92"},k8spolicy::PodStatus{"10.10.92.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-926","testNamespace",k8spolicy::UID{"testPod-926"},[("pod-name","testPod-926")],k8spolicy::PodSpec{"testNode-92"},k8spolicy::PodStatus{"10.10.92.6"}}];
commit dump_changes;
start;
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-927","testNamespace",k8spolicy::UID{"testPod-927"},[("pod-name","testPod-927")],k8spolicy::PodSpec{"testNode-92"},k8spolicy::PodStatus{"10.10.92.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-928","testNamespace",k8spolicy::UID{"testPod-928"},[("pod-name","testPod-928")],k8spolicy::PodSpec{"testNode-92"},k8spolicy::PodStatus{"10.10.92.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-929","testNamespace",k8spolicy::UID{"testPod-929"},[("pod-name","testPod-929")],k8spolicy::PodSpec{"testNode-92"},k8spolicy::PodStatus{"10.10.92.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-930","testNamespace",k8spolicy::UID{"testPod-930"},[("pod-name","testPod-930")],k8spolicy::PodSpec{"testNode-93"},k8spolicy::PodStatus{"10.10.93.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-931","testNamespace",k8spolicy::UID{"testPod-931"},[("pod-name","testPod-931")],k8spolicy::PodSpec{"testNode-93"},k8spolicy::PodStatus{"10.10.93.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-932","testNamespace",k8spolicy::UID{"testPod-932"},[("pod-name","testPod-932")],k8spolicy::PodSpec{"testNode-93"},k8spolicy::PodStatus{"10.10.93.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-933","testNamespace",k8spolicy::UID{"testPod-933"},[("pod-name","testPod-933")],k8spolicy::PodSpec{"testNode-93"},k8spolicy::PodStatus{"10.10.93.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-934","testNamespace",k8spolicy::UID{"testPod-934"},[("pod-name","testPod-934")],k8spolicy::PodSpec{"testNode-93"},k8spolicy::PodStatus{"10.10.93.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-935","testNamespace",k8spolicy::UID{"testPod-935"},[("pod-name","testPod-935")],k8spolicy::PodSpec{"testNode-93"},k8spolicy::PodStatus{"10.10.93.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-936","testNamespace",k8spolicy::UID{"testPod-936"},[("pod-name","testPod-936")],k8spolicy::PodSpec{"testNode-93"},k8spolicy::PodStatus{"10.10.93.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-937","testNamespace",k8spolicy::UID{"testPod-937"},[("pod-name","testPod-937")],k8spolicy::PodSpec{"testNode-93"},k8spolicy::PodStatus{"10.10.93.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-938","testNamespace",k8spolicy::UID{"testPod-938"},[("pod-name","testPod-938")],k8spolicy::PodSpec{"testNode-93"},k8spolicy::PodStatus{"10.10.93.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-939","testNamespace",k8spolicy::UID{"testPod-939"},[("pod-name","testPod-939")],k8spolicy::PodSpec{"testNode-93"},k8spolicy::PodStatus{"10.10.93.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-940","testNamespace",k8spolicy::UID{"testPod-940"},[("pod-name","testPod-940")],k8spolicy::PodSpec{"testNode-94"},k8spolicy::PodStatus{"10.10.94.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-941","testNamespace",k8spolicy::UID{"testPod-941"},[("pod-name","testPod-941")],k8spolicy::PodSpec{"testNode-94"},k8spolicy::PodStatus{"10.10.94.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-942","testNamespace",k8spolicy::UID{"testPod-942"},[("pod-name","testPod-942")],k8spolicy::PodSpec{"testNode-94"},k8spolicy::PodStatus{"10.10.94.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-943","testNamespace",k8spolicy::UID{"testPod-943"},[("pod-name","testPod-943")],k8spolicy::PodSpec{"testNode-94"},k8spolicy::PodStatus{"10.10.94.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-944","testNamespace",k8spolicy::UID{"testPod-944"},[("pod-name","testPod-944")],k8spolicy::PodSpec{"testNode-94"},k8spolicy::PodStatus{"10.10.94.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-945","testNamespace",k8spolicy::UID{"testPod-945"},[("pod-name","testPod-945")],k8spolicy::PodSpec{"testNode-94"},k8spolicy::PodStatus{"10.10.94.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-946","testNamespace",k8spolicy::UID{"testPod-946"},[("pod-name","testPod-946")],k8spolicy::PodSpec{"testNode-94"},k8spolicy::PodStatus{"10.10.94.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-947","testNamespace",k8spolicy::UID{"testPod-947"},[("pod-name","testPod-947")],k8spolicy::PodSpec{"testNode-94"},k8spolicy::PodStatus{"10.10.94.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-948","testNamespace",k8spolicy::UID{"testPod-948"},[("pod-name","testPod-948")],k8spolicy::PodSpec{"testNode-94"},k8spolicy::PodStatus{"10.10.94.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-949","testNamespace",k8spolicy::UID{"testPod-949"},[("pod-name","testPod-949")],k8spolicy::PodSpec{"testNode-94"},k8spolicy::PodStatus{"10.10.94.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-950","testNamespace",k8spolicy::UID{"testPod-950"},[("pod-name","testPod-950")],k8spolicy::PodSpec{"testNode-95"},k8spolicy::PodStatus{"10.10.95.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-951","testNamespace",k8spolicy::UID{"testPod-951"},[("pod-name","testPod-951")],k8spolicy::PodSpec{"testNode-95"},k8spolicy::PodStatus{"10.10.95.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-952","testNamespace",k8spolicy::UID{"testPod-952"},[("pod-name","testPod-952")],k8spolicy::PodSpec{"testNode-95"},k8spolicy::PodStatus{"10.10.95.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-953","testNamespace",k8spolicy::UID{"testPod-953"},[("pod-name","testPod-953")],k8spolicy::PodSpec{"testNode-95"},k8spolicy::PodStatus{"10.10.95.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-954","testNamespace",k8spolicy::UID{"testPod-954"},[("pod-name","testPod-954")],k8spolicy::PodSpec{"testNode-95"},k8spolicy::PodStatus{"10.10.95.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-955","testNamespace",k8spolicy::UID{"testPod-955"},[("pod-name","testPod-955")],k8spolicy::PodSpec{"testNode-95"},k8spolicy::PodStatus{"10.10.95.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-956","testNamespace",k8spolicy::UID{"testPod-956"},[("pod-name","testPod-956")],k8spolicy::PodSpec{"testNode-95"},k8spolicy::PodStatus{"10.10.95.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-957","testNamespace",k8spolicy::UID{"testPod-957"},[("pod-name","testPod-957")],k8spolicy::PodSpec{"testNode-95"},k8spolicy::PodStatus{"10.10.95.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-958","testNamespace",k8spolicy::UID{"testPod-958"},[("pod-name","testPod-958")],k8spolicy::PodSpec{"testNode-95"},k8spolicy::PodStatus{"10.10.95.8"}}];
commit dump_changes;
start;
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-959","testNamespace",k8spolicy::UID{"testPod-959"},[("pod-name","testPod-959")],k8spolicy::PodSpec{"testNode-95"},k8spolicy::PodStatus{"10.10.95.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-960","testNamespace",k8spolicy::UID{"testPod-960"},[("pod-name","testPod-960")],k8spolicy::PodSpec{"testNode-96"},k8spolicy::PodStatus{"10.10.96.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-961","testNamespace",k8spolicy::UID{"testPod-961"},[("pod-name","testPod-961")],k8spolicy::PodSpec{"testNode-96"},k8spolicy::PodStatus{"10.10.96.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-962","testNamespace",k8spolicy::UID{"testPod-962"},[("pod-name","testPod-962")],k8spolicy::PodSpec{"testNode-96"},k8spolicy::PodStatus{"10.10.96.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-963","testNamespace",k8spolicy::UID{"testPod-963"},[("pod-name","testPod-963")],k8spolicy::PodSpec{"testNode-96"},k8spolicy::PodStatus{"10.10.96.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-964","testNamespace",k8spolicy::UID{"testPod-964"},[("pod-name","testPod-964")],k8spolicy::PodSpec{"testNode-96"},k8spolicy::PodStatus{"10.10.96.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-965","testNamespace",k8spolicy::UID{"testPod-965"},[("pod-name","testPod-965")],k8spolicy::PodSpec{"testNode-96"},k8spolicy::PodStatus{"10.10.96.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-966","testNamespace",k8spolicy::UID{"testPod-966"},[("pod-name","testPod-966")],k8spolicy::PodSpec{"testNode-96"},k8spolicy::PodStatus{"10.10.96.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-967","testNamespace",k8spolicy::UID{"testPod-967"},[("pod-name","testPod-967")],k8spolicy::PodSpec{"testNode-96"},k8spolicy::PodStatus{"10.10.96.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-968","testNamespace",k8spolicy::UID{"testPod-968"},[("pod-name","testPod-968")],k8spolicy::PodSpec{"testNode-96"},k8spolicy::PodStatus{"10.10.96.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-969","testNamespace",k8spolicy::UID{"testPod-969"},[("pod-name","testPod-969")],k8spolicy::PodSpec{"testNode-96"},k8spolicy::PodStatus{"10.10.96.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-970","testNamespace",k8spolicy::UID{"testPod-970"},[("pod-name","testPod-970")],k8spolicy::PodSpec{"testNode-97"},k8spolicy::PodStatus{"10.10.97.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-971","testNamespace",k8spolicy::UID{"testPod-971"},[("pod-name","testPod-971")],k8spolicy::PodSpec{"testNode-97"},k8spolicy::PodStatus{"10.10.97.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-972","testNamespace",k8spolicy::UID{"testPod-972"},[("pod-name","testPod-972")],k8spolicy::PodSpec{"testNode-97"},k8spolicy::PodStatus{"10.10.97.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-973","testNamespace",k8spolicy::UID{"testPod-973"},[("pod-name","testPod-973")],k8spolicy::PodSpec{"testNode-97"},k8spolicy::PodStatus{"10.10.97.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-974","testNamespace",k8spolicy::UID{"testPod-974"},[("pod-name","testPod-974")],k8spolicy::PodSpec{"testNode-97"},k8spolicy::PodStatus{"10.10.97.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-975","testNamespace",k8spolicy::UID{"testPod-975"},[("pod-name","testPod-975")],k8spolicy::PodSpec{"testNode-97"},k8spolicy::PodStatus{"10.10.97.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-976","testNamespace",k8spolicy::UID{"testPod-976"},[("pod-name","testPod-976")],k8spolicy::PodSpec{"testNode-97"},k8spolicy::PodStatus{"10.10.97.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-977","testNamespace",k8spolicy::UID{"testPod-977"},[("pod-name","testPod-977")],k8spolicy::PodSpec{"testNode-97"},k8spolicy::PodStatus{"10.10.97.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-978","testNamespace",k8spolicy::UID{"testPod-978"},[("pod-name","testPod-978")],k8spolicy::PodSpec{"testNode-97"},k8spolicy::PodStatus{"10.10.97.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-979","testNamespace",k8spolicy::UID{"testPod-979"},[("pod-name","testPod-979")],k8spolicy::PodSpec{"testNode-97"},k8spolicy::PodStatus{"10.10.97.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-980","testNamespace",k8spolicy::UID{"testPod-980"},[("pod-name","testPod-980")],k8spolicy::PodSpec{"testNode-98"},k8spolicy::PodStatus{"10.10.98.0"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-981","testNamespace",k8spolicy::UID{"testPod-981"},[("pod-name","testPod-981")],k8spolicy::PodSpec{"testNode-98"},k8spolicy::PodStatus{"10.10.98.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-982","testNamespace",k8spolicy::UID{"testPod-982"},[("pod-name","testPod-982")],k8spolicy::PodSpec{"testNode-98"},k8spolicy::PodStatus{"10.10.98.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-983","testNamespace",k8spolicy::UID{"testPod-983"},[("pod-name","testPod-983")],k8spolicy::PodSpec{"testNode-98"},k8spolicy::PodStatus{"10.10.98.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-984","testNamespace",k8spolicy::UID{"testPod-984"},[("pod-name","testPod-984")],k8spolicy::PodSpec{"testNode-98"},k8spolicy::PodStatus{"10.10.98.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-985","testNamespace",k8spolicy::UID{"testPod-985"},[("pod-name","testPod-985")],k8spolicy::PodSpec{"testNode-98"},k8spolicy::PodStatus{"10.10.98.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-986","testNamespace",k8spolicy::UID{"testPod-986"},[("pod-name","testPod-986")],k8spolicy::PodSpec{"testNode-98"},k8spolicy::PodStatus{"10.10.98.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-987","testNamespace",k8spolicy::UID{"testPod-987"},[("pod-name","testPod-987")],k8spolicy::PodSpec{"testNode-98"},k8spolicy::PodStatus{"10.10.98.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-988","testNamespace",k8spolicy::UID{"testPod-988"},[("pod-name","testPod-988")],k8spolicy::PodSpec{"testNode-98"},k8spolicy::PodStatus{"10.10.98.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-989","testNamespace",k8spolicy::UID{"testPod-989"},[("pod-name","testPod-989")],k8spolicy::PodSpec{"testNode-98"},k8spolicy::PodStatus{"10.10.98.9"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-990","testNamespace",k8spolicy::UID{"testPod-990"},[("pod-name","testPod-990")],k8spolicy::PodSpec{"testNode-99"},k8spolicy::PodStatus{"10.10.99.0"}}];
commit dump_changes;
start;
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-991","testNamespace",k8spolicy::UID{"testPod-991"},[("pod-name","testPod-991")],k8spolicy::PodSpec{"testNode-99"},k8spolicy::PodStatus{"10.10.99.1"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-992","testNamespace",k8spolicy::UID{"testPod-992"},[("pod-name","testPod-992")],k8spolicy::PodSpec{"testNode-99"},k8spolicy::PodStatus{"10.10.99.2"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-993","testNamespace",k8spolicy::UID{"testPod-993"},[("pod-name","testPod-993")],k8spolicy::PodSpec{"testNode-99"},k8spolicy::PodStatus{"10.10.99.3"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-994","testNamespace",k8spolicy::UID{"testPod-994"},[("pod-name","testPod-994")],k8spolicy::PodSpec{"testNode-99"},k8spolicy::PodStatus{"10.10.99.4"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-995","testNamespace",k8spolicy::UID{"testPod-995"},[("pod-name","testPod-995")],k8spolicy::PodSpec{"testNode-99"},k8spolicy::PodStatus{"10.10.99.5"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-996","testNamespace",k8spolicy::UID{"testPod-996"},[("pod-name","testPod-996")],k8spolicy::PodSpec{"testNode-99"},k8spolicy::PodStatus{"10.10.99.6"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-997","testNamespace",k8spolicy::UID{"testPod-997"},[("pod-name","testPod-997")],k8spolicy::PodSpec{"testNode-99"},k8spolicy::PodStatus{"10.10.99.7"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-998","testNamespace",k8spolicy::UID{"testPod-998"},[("pod-name","testPod-998")],k8spolicy::PodSpec{"testNode-99"},k8spolicy::PodStatus{"10.10.99.8"}}];
insert_or_update k8spolicy::Pod[k8spolicy::Pod{"testPod-999","testNamespace",k8spolicy::UID{"testPod-999"},[("pod-name","testPod-999")],k8spolicy::PodSpec{"testNode-99"},k8spolicy::PodStatus{"10.10.99.9"}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-0","testNamespace",k8spolicy::UID{"testNP-0"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-0")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-1")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-1","testNamespace",k8spolicy::UID{"testNP-1"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-1")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-2")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-2","testNamespace",k8spolicy::UID{"testNP-2"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-2")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-3")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-3","testNamespace",k8spolicy::UID{"testNP-3"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-3")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-4")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-4","testNamespace",k8spolicy::UID{"testNP-4"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-4")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-5")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-5","testNamespace",k8spolicy::UID{"testNP-5"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-5")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-6")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-6","testNamespace",k8spolicy::UID{"testNP-6"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-6")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-7")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-7","testNamespace",k8spolicy::UID{"testNP-7"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-7")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-8")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-8","testNamespace",k8spolicy::UID{"testNP-8"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-8")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-9")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-9","testNamespace",k8spolicy::UID{"testNP-9"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-9")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-10")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-10","testNamespace",k8spolicy::UID{"testNP-10"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-10")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-11")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-11","testNamespace",k8spolicy::UID{"testNP-11"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-11")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-12")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-12","testNamespace",k8spolicy::UID{"testNP-12"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-12")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-13")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-13","testNamespace",k8spolicy::UID{"testNP-13"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-13")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-14")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-14","testNamespace",k8spolicy::UID{"testNP-14"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-14")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-15")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-15","testNamespace",k8spolicy::UID{"testNP-15"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-15")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-16")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-16","testNamespace",k8spolicy::UID{"testNP-16"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-16")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-17")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-17","testNamespace",k8spolicy::UID{"testNP-17"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-17")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-18")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-18","testNamespace",k8spolicy::UID{"testNP-18"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-18")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-19")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-19","testNamespace",k8spolicy::UID{"testNP-19"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-19")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-20")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-20","testNamespace",k8spolicy::UID{"testNP-20"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-20")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-21")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-21","testNamespace",k8spolicy::UID{"testNP-21"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-21")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-22")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-22","testNamespace",k8spolicy::UID{"testNP-22"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-22")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-23")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
commit dump_changes;
start;
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-23","testNamespace",k8spolicy::UID{"testNP-23"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-23")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-24")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-24","testNamespace",k8spolicy::UID{"testNP-24"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-24")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-25")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-25","testNamespace",k8spolicy::UID{"testNP-25"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-25")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-26")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-26","testNamespace",k8spolicy::UID{"testNP-26"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-26")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-27")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-27","testNamespace",k8spolicy::UID{"testNP-27"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-27")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-28")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-28","testNamespace",k8spolicy::UID{"testNP-28"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-28")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-29")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-29","testNamespace",k8spolicy::UID{"testNP-29"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-29")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-30")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-30","testNamespace",k8spolicy::UID{"testNP-30"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-30")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-31")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-31","testNamespace",k8spolicy::UID{"testNP-31"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-31")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-32")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-32","testNamespace",k8spolicy::UID{"testNP-32"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-32")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-33")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-33","testNamespace",k8spolicy::UID{"testNP-33"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-33")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-34")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-34","testNamespace",k8spolicy::UID{"testNP-34"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-34")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-35")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-35","testNamespace",k8spolicy::UID{"testNP-35"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-35")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-36")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-36","testNamespace",k8spolicy::UID{"testNP-36"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-36")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-37")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-37","testNamespace",k8spolicy::UID{"testNP-37"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-37")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-38")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-38","testNamespace",k8spolicy::UID{"testNP-38"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-38")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-39")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-39","testNamespace",k8spolicy::UID{"testNP-39"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-39")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-40")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-40","testNamespace",k8spolicy::UID{"testNP-40"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-40")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-41")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-41","testNamespace",k8spolicy::UID{"testNP-41"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-41")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-42")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-42","testNamespace",k8spolicy::UID{"testNP-42"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-42")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-43")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-43","testNamespace",k8spolicy::UID{"testNP-43"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-43")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-44")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-44","testNamespace",k8spolicy::UID{"testNP-44"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-44")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-45")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-45","testNamespace",k8spolicy::UID{"testNP-45"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-45")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-46")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-46","testNamespace",k8spolicy::UID{"testNP-46"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-46")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-47")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-47","testNamespace",k8spolicy::UID{"testNP-47"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-47")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-48")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-48","testNamespace",k8spolicy::UID{"testNP-48"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-48")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-49")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-49","testNamespace",k8spolicy::UID{"testNP-49"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-49")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-50")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-50","testNamespace",k8spolicy::UID{"testNP-50"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-50")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-51")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-51","testNamespace",k8spolicy::UID{"testNP-51"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-51")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-52")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-52","testNamespace",k8spolicy::UID{"testNP-52"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-52")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-53")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-53","testNamespace",k8spolicy::UID{"testNP-53"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-53")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-54")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-54","testNamespace",k8spolicy::UID{"testNP-54"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-54")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-55")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
commit dump_changes;
start;
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-55","testNamespace",k8spolicy::UID{"testNP-55"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-55")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-56")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-56","testNamespace",k8spolicy::UID{"testNP-56"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-56")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-57")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-57","testNamespace",k8spolicy::UID{"testNP-57"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-57")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-58")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-58","testNamespace",k8spolicy::UID{"testNP-58"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-58")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-59")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-59","testNamespace",k8spolicy::UID{"testNP-59"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-59")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-60")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-60","testNamespace",k8spolicy::UID{"testNP-60"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-60")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-61")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-61","testNamespace",k8spolicy::UID{"testNP-61"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-61")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-62")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-62","testNamespace",k8spolicy::UID{"testNP-62"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-62")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-63")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-63","testNamespace",k8spolicy::UID{"testNP-63"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-63")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-64")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-64","testNamespace",k8spolicy::UID{"testNP-64"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-64")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-65")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-65","testNamespace",k8spolicy::UID{"testNP-65"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-65")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-66")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-66","testNamespace",k8spolicy::UID{"testNP-66"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-66")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-67")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-67","testNamespace",k8spolicy::UID{"testNP-67"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-67")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-68")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-68","testNamespace",k8spolicy::UID{"testNP-68"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-68")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-69")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-69","testNamespace",k8spolicy::UID{"testNP-69"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-69")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-70")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-70","testNamespace",k8spolicy::UID{"testNP-70"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-70")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-71")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-71","testNamespace",k8spolicy::UID{"testNP-71"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-71")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-72")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-72","testNamespace",k8spolicy::UID{"testNP-72"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-72")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-73")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-73","testNamespace",k8spolicy::UID{"testNP-73"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-73")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-74")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-74","testNamespace",k8spolicy::UID{"testNP-74"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-74")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-75")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-75","testNamespace",k8spolicy::UID{"testNP-75"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-75")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-76")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-76","testNamespace",k8spolicy::UID{"testNP-76"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-76")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-77")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-77","testNamespace",k8spolicy::UID{"testNP-77"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-77")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-78")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-78","testNamespace",k8spolicy::UID{"testNP-78"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-78")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-79")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-79","testNamespace",k8spolicy::UID{"testNP-79"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-79")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-80")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-80","testNamespace",k8spolicy::UID{"testNP-80"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-80")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-81")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-81","testNamespace",k8spolicy::UID{"testNP-81"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-81")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-82")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-82","testNamespace",k8spolicy::UID{"testNP-82"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-82")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-83")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-83","testNamespace",k8spolicy::UID{"testNP-83"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-83")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-84")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-84","testNamespace",k8spolicy::UID{"testNP-84"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-84")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-85")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-85","testNamespace",k8spolicy::UID{"testNP-85"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-85")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-86")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-86","testNamespace",k8spolicy::UID{"testNP-86"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-86")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-87")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
commit dump_changes;
start;
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-87","testNamespace",k8spolicy::UID{"testNP-87"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-87")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-88")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-88","testNamespace",k8spolicy::UID{"testNP-88"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-88")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-89")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-89","testNamespace",k8spolicy::UID{"testNP-89"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-89")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-90")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-90","testNamespace",k8spolicy::UID{"testNP-90"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-90")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-91")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-91","testNamespace",k8spolicy::UID{"testNP-91"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-91")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-92")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-92","testNamespace",k8spolicy::UID{"testNP-92"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-92")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-93")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-93","testNamespace",k8spolicy::UID{"testNP-93"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-93")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-94")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-94","testNamespace",k8spolicy::UID{"testNP-94"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-94")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-95")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-95","testNamespace",k8spolicy::UID{"testNP-95"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-95")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-96")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-96","testNamespace",k8spolicy::UID{"testNP-96"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-96")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-97")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-97","testNamespace",k8spolicy::UID{"testNP-97"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-97")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-98")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-98","testNamespace",k8spolicy::UID{"testNP-98"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-98")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-99")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-99","testNamespace",k8spolicy::UID{"testNP-99"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-99")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-100")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-100","testNamespace",k8spolicy::UID{"testNP-100"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-100")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-101")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-101","testNamespace",k8spolicy::UID{"testNP-101"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-101")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-102")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-102","testNamespace",k8spolicy::UID{"testNP-102"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-102")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-103")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-103","testNamespace",k8spolicy::UID{"testNP-103"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-103")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-104")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-104","testNamespace",k8spolicy::UID{"testNP-104"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-104")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-105")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-105","testNamespace",k8spolicy::UID{"testNP-105"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-105")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-106")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-106","testNamespace",k8spolicy::UID{"testNP-106"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-106")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-107")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-107","testNamespace",k8spolicy::UID{"testNP-107"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-107")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-108")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-108","testNamespace",k8spolicy::UID{"testNP-108"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-108")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-109")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-109","testNamespace",k8spolicy::UID{"testNP-109"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-109")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-110")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-110","testNamespace",k8spolicy::UID{"testNP-110"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-110")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-111")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-111","testNamespace",k8spolicy::UID{"testNP-111"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-111")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-112")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-112","testNamespace",k8spolicy::UID{"testNP-112"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-112")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-113")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-113","testNamespace",k8spolicy::UID{"testNP-113"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-113")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-114")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-114","testNamespace",k8spolicy::UID{"testNP-114"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-114")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-115")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-115","testNamespace",k8spolicy::UID{"testNP-115"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-115")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-116")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-116","testNamespace",k8spolicy::UID{"testNP-116"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-116")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-117")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-117","testNamespace",k8spolicy::UID{"testNP-117"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-117")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-118")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-118","testNamespace",k8spolicy::UID{"testNP-118"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-118")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-119")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
commit dump_changes;
start;
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-119","testNamespace",k8spolicy::UID{"testNP-119"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-119")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-120")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-120","testNamespace",k8spolicy::UID{"testNP-120"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-120")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-121")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-121","testNamespace",k8spolicy::UID{"testNP-121"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-121")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-122")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-122","testNamespace",k8spolicy::UID{"testNP-122"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-122")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-123")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-123","testNamespace",k8spolicy::UID{"testNP-123"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-123")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-124")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-124","testNamespace",k8spolicy::UID{"testNP-124"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-124")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-125")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-125","testNamespace",k8spolicy::UID{"testNP-125"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-125")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-126")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-126","testNamespace",k8spolicy::UID{"testNP-126"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-126")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-127")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-127","testNamespace",k8spolicy::UID{"testNP-127"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-127")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-128")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-128","testNamespace",k8spolicy::UID{"testNP-128"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-128")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-129")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-129","testNamespace",k8spolicy::UID{"testNP-129"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-129")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-130")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-130","testNamespace",k8spolicy::UID{"testNP-130"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-130")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-131")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-131","testNamespace",k8spolicy::UID{"testNP-131"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-131")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-132")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-132","testNamespace",k8spolicy::UID{"testNP-132"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-132")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-133")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-133","testNamespace",k8spolicy::UID{"testNP-133"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-133")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-134")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-134","testNamespace",k8spolicy::UID{"testNP-134"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-134")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-135")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-135","testNamespace",k8spolicy::UID{"testNP-135"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-135")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-136")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-136","testNamespace",k8spolicy::UID{"testNP-136"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-136")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-137")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-137","testNamespace",k8spolicy::UID{"testNP-137"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-137")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-138")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-138","testNamespace",k8spolicy::UID{"testNP-138"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-138")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-139")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-139","testNamespace",k8spolicy::UID{"testNP-139"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-139")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-140")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-140","testNamespace",k8spolicy::UID{"testNP-140"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-140")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-141")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-141","testNamespace",k8spolicy::UID{"testNP-141"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-141")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-142")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-142","testNamespace",k8spolicy::UID{"testNP-142"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-142")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-143")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-143","testNamespace",k8spolicy::UID{"testNP-143"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-143")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-144")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-144","testNamespace",k8spolicy::UID{"testNP-144"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-144")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-145")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-145","testNamespace",k8spolicy::UID{"testNP-145"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-145")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-146")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-146","testNamespace",k8spolicy::UID{"testNP-146"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-146")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-147")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-147","testNamespace",k8spolicy::UID{"testNP-147"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-147")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-148")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-148","testNamespace",k8spolicy::UID{"testNP-148"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-148")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-149")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-149","testNamespace",k8spolicy::UID{"testNP-149"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-149")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-150")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-150","testNamespace",k8spolicy::UID{"testNP-150"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-150")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-151")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
commit dump_changes;
start;
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-151","testNamespace",k8spolicy::UID{"testNP-151"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-151")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-152")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-152","testNamespace",k8spolicy::UID{"testNP-152"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-152")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-153")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-153","testNamespace",k8spolicy::UID{"testNP-153"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-153")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-154")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-154","testNamespace",k8spolicy::UID{"testNP-154"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-154")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-155")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-155","testNamespace",k8spolicy::UID{"testNP-155"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-155")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-156")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-156","testNamespace",k8spolicy::UID{"testNP-156"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-156")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-157")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-157","testNamespace",k8spolicy::UID{"testNP-157"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-157")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-158")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-158","testNamespace",k8spolicy::UID{"testNP-158"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-158")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-159")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-159","testNamespace",k8spolicy::UID{"testNP-159"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-159")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-160")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-160","testNamespace",k8spolicy::UID{"testNP-160"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-160")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-161")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-161","testNamespace",k8spolicy::UID{"testNP-161"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-161")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-162")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-162","testNamespace",k8spolicy::UID{"testNP-162"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-162")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-163")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-163","testNamespace",k8spolicy::UID{"testNP-163"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-163")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-164")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-164","testNamespace",k8spolicy::UID{"testNP-164"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-164")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-165")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-165","testNamespace",k8spolicy::UID{"testNP-165"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-165")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-166")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-166","testNamespace",k8spolicy::UID{"testNP-166"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-166")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-167")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-167","testNamespace",k8spolicy::UID{"testNP-167"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-167")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-168")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-168","testNamespace",k8spolicy::UID{"testNP-168"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-168")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-169")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-169","testNamespace",k8spolicy::UID{"testNP-169"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-169")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-170")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-170","testNamespace",k8spolicy::UID{"testNP-170"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-170")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-171")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-171","testNamespace",k8spolicy::UID{"testNP-171"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-171")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-172")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-172","testNamespace",k8spolicy::UID{"testNP-172"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-172")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-173")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-173","testNamespace",k8spolicy::UID{"testNP-173"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-173")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-174")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-174","testNamespace",k8spolicy::UID{"testNP-174"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-174")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-175")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-175","testNamespace",k8spolicy::UID{"testNP-175"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-175")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-176")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-176","testNamespace",k8spolicy::UID{"testNP-176"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-176")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-177")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-177","testNamespace",k8spolicy::UID{"testNP-177"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-177")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-178")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-178","testNamespace",k8spolicy::UID{"testNP-178"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-178")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-179")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-179","testNamespace",k8spolicy::UID{"testNP-179"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-179")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-180")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-180","testNamespace",k8spolicy::UID{"testNP-180"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-180")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-181")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-181","testNamespace",k8spolicy::UID{"testNP-181"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-181")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-182")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-182","testNamespace",k8spolicy::UID{"testNP-182"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-182")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-183")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
commit dump_changes;
start;
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-183","testNamespace",k8spolicy::UID{"testNP-183"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-183")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-184")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-184","testNamespace",k8spolicy::UID{"testNP-184"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-184")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-185")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-185","testNamespace",k8spolicy::UID{"testNP-185"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-185")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-186")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-186","testNamespace",k8spolicy::UID{"testNP-186"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-186")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-187")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-187","testNamespace",k8spolicy::UID{"testNP-187"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-187")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-188")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-188","testNamespace",k8spolicy::UID{"testNP-188"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-188")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-189")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-189","testNamespace",k8spolicy::UID{"testNP-189"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-189")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-190")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-190","testNamespace",k8spolicy::UID{"testNP-190"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-190")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-191")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-191","testNamespace",k8spolicy::UID{"testNP-191"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-191")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-192")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-192","testNamespace",k8spolicy::UID{"testNP-192"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-192")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-193")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-193","testNamespace",k8spolicy::UID{"testNP-193"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-193")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-194")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-194","testNamespace",k8spolicy::UID{"testNP-194"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-194")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-195")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-195","testNamespace",k8spolicy::UID{"testNP-195"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-195")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-196")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-196","testNamespace",k8spolicy::UID{"testNP-196"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-196")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-197")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-197","testNamespace",k8spolicy::UID{"testNP-197"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-197")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-198")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-198","testNamespace",k8spolicy::UID{"testNP-198"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-198")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-199")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-199","testNamespace",k8spolicy::UID{"testNP-199"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-199")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-200")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-200","testNamespace",k8spolicy::UID{"testNP-200"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-200")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-201")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-201","testNamespace",k8spolicy::UID{"testNP-201"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-201")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-202")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-202","testNamespace",k8spolicy::UID{"testNP-202"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-202")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-203")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-203","testNamespace",k8spolicy::UID{"testNP-203"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-203")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-204")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-204","testNamespace",k8spolicy::UID{"testNP-204"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-204")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-205")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-205","testNamespace",k8spolicy::UID{"testNP-205"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-205")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-206")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-206","testNamespace",k8spolicy::UID{"testNP-206"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-206")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-207")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-207","testNamespace",k8spolicy::UID{"testNP-207"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-207")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-208")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-208","testNamespace",k8spolicy::UID{"testNP-208"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-208")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-209")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-209","testNamespace",k8spolicy::UID{"testNP-209"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-209")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-210")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-210","testNamespace",k8spolicy::UID{"testNP-210"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-210")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-211")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-211","testNamespace",k8spolicy::UID{"testNP-211"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-211")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-212")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-212","testNamespace",k8spolicy::UID{"testNP-212"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-212")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-213")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-213","testNamespace",k8spolicy::UID{"testNP-213"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-213")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-214")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-214","testNamespace",k8spolicy::UID{"testNP-214"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-214")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-215")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
commit dump_changes;
start;
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-215","testNamespace",k8spolicy::UID{"testNP-215"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-215")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-216")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-216","testNamespace",k8spolicy::UID{"testNP-216"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-216")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-217")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-217","testNamespace",k8spolicy::UID{"testNP-217"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-217")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-218")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-218","testNamespace",k8spolicy::UID{"testNP-218"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-218")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-219")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-219","testNamespace",k8spolicy::UID{"testNP-219"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-219")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-220")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-220","testNamespace",k8spolicy::UID{"testNP-220"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-220")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-221")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-221","testNamespace",k8spolicy::UID{"testNP-221"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-221")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-222")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-222","testNamespace",k8spolicy::UID{"testNP-222"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-222")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-223")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-223","testNamespace",k8spolicy::UID{"testNP-223"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-223")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-224")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-224","testNamespace",k8spolicy::UID{"testNP-224"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-224")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-225")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-225","testNamespace",k8spolicy::UID{"testNP-225"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-225")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-226")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-226","testNamespace",k8spolicy::UID{"testNP-226"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-226")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-227")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-227","testNamespace",k8spolicy::UID{"testNP-227"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-227")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-228")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-228","testNamespace",k8spolicy::UID{"testNP-228"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-228")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-229")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-229","testNamespace",k8spolicy::UID{"testNP-229"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-229")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-230")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-230","testNamespace",k8spolicy::UID{"testNP-230"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-230")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-231")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-231","testNamespace",k8spolicy::UID{"testNP-231"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-231")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-232")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-232","testNamespace",k8spolicy::UID{"testNP-232"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-232")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-233")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-233","testNamespace",k8spolicy::UID{"testNP-233"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-233")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-234")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-234","testNamespace",k8spolicy::UID{"testNP-234"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-234")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-235")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-235","testNamespace",k8spolicy::UID{"testNP-235"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-235")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-236")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-236","testNamespace",k8spolicy::UID{"testNP-236"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-236")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-237")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-237","testNamespace",k8spolicy::UID{"testNP-237"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-237")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-238")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-238","testNamespace",k8spolicy::UID{"testNP-238"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-238")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-239")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-239","testNamespace",k8spolicy::UID{"testNP-239"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-239")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-240")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-240","testNamespace",k8spolicy::UID{"testNP-240"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-240")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-241")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-241","testNamespace",k8spolicy::UID{"testNP-241"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-241")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-242")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-242","testNamespace",k8spolicy::UID{"testNP-242"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-242")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-243")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-243","testNamespace",k8spolicy::UID{"testNP-243"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-243")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-244")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-244","testNamespace",k8spolicy::UID{"testNP-244"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-244")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-245")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-245","testNamespace",k8spolicy::UID{"testNP-245"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-245")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-246")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-246","testNamespace",k8spolicy::UID{"testNP-246"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-246")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-247")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
commit dump_changes;
start;
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-247","testNamespace",k8spolicy::UID{"testNP-247"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-247")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-248")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-248","testNamespace",k8spolicy::UID{"testNP-248"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-248")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-249")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-249","testNamespace",k8spolicy::UID{"testNP-249"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-249")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-250")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-250","testNamespace",k8spolicy::UID{"testNP-250"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-250")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-251")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-251","testNamespace",k8spolicy::UID{"testNP-251"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-251")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-252")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-252","testNamespace",k8spolicy::UID{"testNP-252"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-252")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-253")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-253","testNamespace",k8spolicy::UID{"testNP-253"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-253")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-254")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-254","testNamespace",k8spolicy::UID{"testNP-254"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-254")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-255")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-255","testNamespace",k8spolicy::UID{"testNP-255"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-255")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-256")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-256","testNamespace",k8spolicy::UID{"testNP-256"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-256")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-257")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-257","testNamespace",k8spolicy::UID{"testNP-257"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-257")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-258")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-258","testNamespace",k8spolicy::UID{"testNP-258"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-258")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-259")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-259","testNamespace",k8spolicy::UID{"testNP-259"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-259")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-260")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-260","testNamespace",k8spolicy::UID{"testNP-260"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-260")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-261")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-261","testNamespace",k8spolicy::UID{"testNP-261"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-261")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-262")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-262","testNamespace",k8spolicy::UID{"testNP-262"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-262")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-263")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-263","testNamespace",k8spolicy::UID{"testNP-263"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-263")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-264")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-264","testNamespace",k8spolicy::UID{"testNP-264"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-264")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-265")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-265","testNamespace",k8spolicy::UID{"testNP-265"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-265")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-266")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-266","testNamespace",k8spolicy::UID{"testNP-266"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-266")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-267")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-267","testNamespace",k8spolicy::UID{"testNP-267"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-267")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-268")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-268","testNamespace",k8spolicy::UID{"testNP-268"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-268")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-269")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-269","testNamespace",k8spolicy::UID{"testNP-269"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-269")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-270")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-270","testNamespace",k8spolicy::UID{"testNP-270"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-270")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-271")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-271","testNamespace",k8spolicy::UID{"testNP-271"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-271")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-272")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-272","testNamespace",k8spolicy::UID{"testNP-272"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-272")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-273")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-273","testNamespace",k8spolicy::UID{"testNP-273"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-273")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-274")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-274","testNamespace",k8spolicy::UID{"testNP-274"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-274")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-275")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-275","testNamespace",k8spolicy::UID{"testNP-275"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-275")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-276")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-276","testNamespace",k8spolicy::UID{"testNP-276"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-276")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-277")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-277","testNamespace",k8spolicy::UID{"testNP-277"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-277")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-278")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-278","testNamespace",k8spolicy::UID{"testNP-278"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-278")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-279")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
commit dump_changes;
start;
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-279","testNamespace",k8spolicy::UID{"testNP-279"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-279")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-280")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-280","testNamespace",k8spolicy::UID{"testNP-280"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-280")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-281")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-281","testNamespace",k8spolicy::UID{"testNP-281"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-281")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-282")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-282","testNamespace",k8spolicy::UID{"testNP-282"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-282")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-283")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-283","testNamespace",k8spolicy::UID{"testNP-283"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-283")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-284")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-284","testNamespace",k8spolicy::UID{"testNP-284"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-284")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-285")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-285","testNamespace",k8spolicy::UID{"testNP-285"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-285")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-286")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-286","testNamespace",k8spolicy::UID{"testNP-286"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-286")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-287")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-287","testNamespace",k8spolicy::UID{"testNP-287"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-287")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-288")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-288","testNamespace",k8spolicy::UID{"testNP-288"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-288")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-289")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-289","testNamespace",k8spolicy::UID{"testNP-289"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-289")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-290")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-290","testNamespace",k8spolicy::UID{"testNP-290"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-290")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-291")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-291","testNamespace",k8spolicy::UID{"testNP-291"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-291")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-292")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-292","testNamespace",k8spolicy::UID{"testNP-292"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-292")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-293")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-293","testNamespace",k8spolicy::UID{"testNP-293"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-293")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-294")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-294","testNamespace",k8spolicy::UID{"testNP-294"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-294")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-295")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-295","testNamespace",k8spolicy::UID{"testNP-295"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-295")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-296")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-296","testNamespace",k8spolicy::UID{"testNP-296"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-296")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-297")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-297","testNamespace",k8spolicy::UID{"testNP-297"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-297")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-298")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-298","testNamespace",k8spolicy::UID{"testNP-298"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-298")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-299")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-299","testNamespace",k8spolicy::UID{"testNP-299"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-299")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-300")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-300","testNamespace",k8spolicy::UID{"testNP-300"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-300")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-301")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-301","testNamespace",k8spolicy::UID{"testNP-301"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-301")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-302")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-302","testNamespace",k8spolicy::UID{"testNP-302"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-302")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-303")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-303","testNamespace",k8spolicy::UID{"testNP-303"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-303")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-304")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-304","testNamespace",k8spolicy::UID{"testNP-304"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-304")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-305")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-305","testNamespace",k8spolicy::UID{"testNP-305"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-305")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-306")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-306","testNamespace",k8spolicy::UID{"testNP-306"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-306")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-307")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-307","testNamespace",k8spolicy::UID{"testNP-307"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-307")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-308")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-308","testNamespace",k8spolicy::UID{"testNP-308"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-308")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-309")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-309","testNamespace",k8spolicy::UID{"testNP-309"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-309")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-310")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-310","testNamespace",k8spolicy::UID{"testNP-310"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-310")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-311")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
commit dump_changes;
start;
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-311","testNamespace",k8spolicy::UID{"testNP-311"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-311")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-312")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-312","testNamespace",k8spolicy::UID{"testNP-312"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-312")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-313")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-313","testNamespace",k8spolicy::UID{"testNP-313"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-313")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-314")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-314","testNamespace",k8spolicy::UID{"testNP-314"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-314")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-315")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-315","testNamespace",k8spolicy::UID{"testNP-315"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-315")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-316")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-316","testNamespace",k8spolicy::UID{"testNP-316"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-316")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-317")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-317","testNamespace",k8spolicy::UID{"testNP-317"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-317")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-318")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-318","testNamespace",k8spolicy::UID{"testNP-318"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-318")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-319")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-319","testNamespace",k8spolicy::UID{"testNP-319"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-319")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-320")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-320","testNamespace",k8spolicy::UID{"testNP-320"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-320")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-321")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-321","testNamespace",k8spolicy::UID{"testNP-321"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-321")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-322")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-322","testNamespace",k8spolicy::UID{"testNP-322"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-322")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-323")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-323","testNamespace",k8spolicy::UID{"testNP-323"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-323")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-324")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-324","testNamespace",k8spolicy::UID{"testNP-324"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-324")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-325")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-325","testNamespace",k8spolicy::UID{"testNP-325"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-325")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-326")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-326","testNamespace",k8spolicy::UID{"testNP-326"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-326")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-327")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-327","testNamespace",k8spolicy::UID{"testNP-327"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-327")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-328")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-328","testNamespace",k8spolicy::UID{"testNP-328"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-328")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-329")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-329","testNamespace",k8spolicy::UID{"testNP-329"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-329")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-330")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-330","testNamespace",k8spolicy::UID{"testNP-330"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-330")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-331")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-331","testNamespace",k8spolicy::UID{"testNP-331"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-331")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-332")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-332","testNamespace",k8spolicy::UID{"testNP-332"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-332")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-333")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-333","testNamespace",k8spolicy::UID{"testNP-333"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-333")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-334")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-334","testNamespace",k8spolicy::UID{"testNP-334"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-334")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-335")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-335","testNamespace",k8spolicy::UID{"testNP-335"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-335")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-336")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-336","testNamespace",k8spolicy::UID{"testNP-336"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-336")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-337")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-337","testNamespace",k8spolicy::UID{"testNP-337"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-337")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-338")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-338","testNamespace",k8spolicy::UID{"testNP-338"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-338")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-339")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-339","testNamespace",k8spolicy::UID{"testNP-339"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-339")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-340")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-340","testNamespace",k8spolicy::UID{"testNP-340"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-340")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-341")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-341","testNamespace",k8spolicy::UID{"testNP-341"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-341")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-342")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-342","testNamespace",k8spolicy::UID{"testNP-342"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-342")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-343")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
commit dump_changes;
start;
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-343","testNamespace",k8spolicy::UID{"testNP-343"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-343")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-344")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-344","testNamespace",k8spolicy::UID{"testNP-344"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-344")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-345")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-345","testNamespace",k8spolicy::UID{"testNP-345"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-345")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-346")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-346","testNamespace",k8spolicy::UID{"testNP-346"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-346")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-347")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-347","testNamespace",k8spolicy::UID{"testNP-347"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-347")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-348")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-348","testNamespace",k8spolicy::UID{"testNP-348"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-348")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-349")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-349","testNamespace",k8spolicy::UID{"testNP-349"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-349")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-350")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-350","testNamespace",k8spolicy::UID{"testNP-350"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-350")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-351")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-351","testNamespace",k8spolicy::UID{"testNP-351"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-351")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-352")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-352","testNamespace",k8spolicy::UID{"testNP-352"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-352")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-353")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-353","testNamespace",k8spolicy::UID{"testNP-353"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-353")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-354")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-354","testNamespace",k8spolicy::UID{"testNP-354"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-354")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-355")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-355","testNamespace",k8spolicy::UID{"testNP-355"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-355")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-356")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-356","testNamespace",k8spolicy::UID{"testNP-356"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-356")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-357")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-357","testNamespace",k8spolicy::UID{"testNP-357"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-357")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-358")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-358","testNamespace",k8spolicy::UID{"testNP-358"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-358")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-359")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-359","testNamespace",k8spolicy::UID{"testNP-359"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-359")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-360")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-360","testNamespace",k8spolicy::UID{"testNP-360"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-360")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-361")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-361","testNamespace",k8spolicy::UID{"testNP-361"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-361")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-362")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-362","testNamespace",k8spolicy::UID{"testNP-362"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-362")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-363")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-363","testNamespace",k8spolicy::UID{"testNP-363"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-363")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-364")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-364","testNamespace",k8spolicy::UID{"testNP-364"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-364")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-365")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-365","testNamespace",k8spolicy::UID{"testNP-365"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-365")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-366")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-366","testNamespace",k8spolicy::UID{"testNP-366"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-366")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-367")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-367","testNamespace",k8spolicy::UID{"testNP-367"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-367")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-368")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-368","testNamespace",k8spolicy::UID{"testNP-368"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-368")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-369")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-369","testNamespace",k8spolicy::UID{"testNP-369"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-369")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-370")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-370","testNamespace",k8spolicy::UID{"testNP-370"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-370")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-371")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-371","testNamespace",k8spolicy::UID{"testNP-371"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-371")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-372")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-372","testNamespace",k8spolicy::UID{"testNP-372"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-372")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-373")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-373","testNamespace",k8spolicy::UID{"testNP-373"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-373")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-374")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-374","testNamespace",k8spolicy::UID{"testNP-374"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-374")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-375")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
commit dump_changes;
start;
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-375","testNamespace",k8spolicy::UID{"testNP-375"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-375")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-376")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-376","testNamespace",k8spolicy::UID{"testNP-376"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-376")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-377")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-377","testNamespace",k8spolicy::UID{"testNP-377"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-377")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-378")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-378","testNamespace",k8spolicy::UID{"testNP-378"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-378")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-379")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-379","testNamespace",k8spolicy::UID{"testNP-379"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-379")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-380")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-380","testNamespace",k8spolicy::UID{"testNP-380"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-380")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-381")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-381","testNamespace",k8spolicy::UID{"testNP-381"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-381")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-382")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-382","testNamespace",k8spolicy::UID{"testNP-382"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-382")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-383")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-383","testNamespace",k8spolicy::UID{"testNP-383"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-383")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-384")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-384","testNamespace",k8spolicy::UID{"testNP-384"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-384")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-385")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-385","testNamespace",k8spolicy::UID{"testNP-385"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-385")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-386")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-386","testNamespace",k8spolicy::UID{"testNP-386"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-386")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-387")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-387","testNamespace",k8spolicy::UID{"testNP-387"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-387")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-388")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-388","testNamespace",k8spolicy::UID{"testNP-388"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-388")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-389")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-389","testNamespace",k8spolicy::UID{"testNP-389"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-389")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-390")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-390","testNamespace",k8spolicy::UID{"testNP-390"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-390")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-391")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-391","testNamespace",k8spolicy::UID{"testNP-391"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-391")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-392")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-392","testNamespace",k8spolicy::UID{"testNP-392"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-392")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-393")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-393","testNamespace",k8spolicy::UID{"testNP-393"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-393")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-394")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-394","testNamespace",k8spolicy::UID{"testNP-394"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-394")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-395")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-395","testNamespace",k8spolicy::UID{"testNP-395"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-395")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-396")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-396","testNamespace",k8spolicy::UID{"testNP-396"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-396")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-397")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-397","testNamespace",k8spolicy::UID{"testNP-397"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-397")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-398")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-398","testNamespace",k8spolicy::UID{"testNP-398"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-398")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-399")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-399","testNamespace",k8spolicy::UID{"testNP-399"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-399")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-400")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-400","testNamespace",k8spolicy::UID{"testNP-400"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-400")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-401")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-401","testNamespace",k8spolicy::UID{"testNP-401"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-401")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-402")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-402","testNamespace",k8spolicy::UID{"testNP-402"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-402")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-403")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-403","testNamespace",k8spolicy::UID{"testNP-403"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-403")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-404")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-404","testNamespace",k8spolicy::UID{"testNP-404"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-404")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-405")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-405","testNamespace",k8spolicy::UID{"testNP-405"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-405")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-406")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-406","testNamespace",k8spolicy::UID{"testNP-406"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-406")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-407")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
commit dump_changes;
start;
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-407","testNamespace",k8spolicy::UID{"testNP-407"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-407")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-408")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-408","testNamespace",k8spolicy::UID{"testNP-408"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-408")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-409")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-409","testNamespace",k8spolicy::UID{"testNP-409"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-409")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-410")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-410","testNamespace",k8spolicy::UID{"testNP-410"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-410")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-411")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-411","testNamespace",k8spolicy::UID{"testNP-411"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-411")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-412")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-412","testNamespace",k8spolicy::UID{"testNP-412"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-412")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-413")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-413","testNamespace",k8spolicy::UID{"testNP-413"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-413")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-414")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-414","testNamespace",k8spolicy::UID{"testNP-414"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-414")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-415")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-415","testNamespace",k8spolicy::UID{"testNP-415"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-415")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-416")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-416","testNamespace",k8spolicy::UID{"testNP-416"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-416")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-417")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-417","testNamespace",k8spolicy::UID{"testNP-417"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-417")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-418")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-418","testNamespace",k8spolicy::UID{"testNP-418"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-418")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-419")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-419","testNamespace",k8spolicy::UID{"testNP-419"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-419")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-420")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-420","testNamespace",k8spolicy::UID{"testNP-420"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-420")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-421")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-421","testNamespace",k8spolicy::UID{"testNP-421"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-421")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-422")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-422","testNamespace",k8spolicy::UID{"testNP-422"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-422")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-423")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-423","testNamespace",k8spolicy::UID{"testNP-423"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-423")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-424")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-424","testNamespace",k8spolicy::UID{"testNP-424"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-424")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-425")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-425","testNamespace",k8spolicy::UID{"testNP-425"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-425")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-426")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-426","testNamespace",k8spolicy::UID{"testNP-426"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-426")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-427")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-427","testNamespace",k8spolicy::UID{"testNP-427"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-427")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-428")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-428","testNamespace",k8spolicy::UID{"testNP-428"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-428")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-429")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-429","testNamespace",k8spolicy::UID{"testNP-429"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-429")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-430")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-430","testNamespace",k8spolicy::UID{"testNP-430"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-430")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-431")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-431","testNamespace",k8spolicy::UID{"testNP-431"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-431")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-432")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-432","testNamespace",k8spolicy::UID{"testNP-432"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-432")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-433")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-433","testNamespace",k8spolicy::UID{"testNP-433"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-433")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-434")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-434","testNamespace",k8spolicy::UID{"testNP-434"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-434")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-435")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-435","testNamespace",k8spolicy::UID{"testNP-435"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-435")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-436")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-436","testNamespace",k8spolicy::UID{"testNP-436"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-436")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-437")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-437","testNamespace",k8spolicy::UID{"testNP-437"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-437")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-438")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-438","testNamespace",k8spolicy::UID{"testNP-438"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-438")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-439")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
commit dump_changes;
start;
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-439","testNamespace",k8spolicy::UID{"testNP-439"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-439")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-440")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-440","testNamespace",k8spolicy::UID{"testNP-440"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-440")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-441")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-441","testNamespace",k8spolicy::UID{"testNP-441"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-441")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-442")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-442","testNamespace",k8spolicy::UID{"testNP-442"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-442")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-443")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-443","testNamespace",k8spolicy::UID{"testNP-443"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-443")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-444")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-444","testNamespace",k8spolicy::UID{"testNP-444"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-444")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-445")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-445","testNamespace",k8spolicy::UID{"testNP-445"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-445")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-446")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-446","testNamespace",k8spolicy::UID{"testNP-446"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-446")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-447")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-447","testNamespace",k8spolicy::UID{"testNP-447"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-447")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-448")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-448","testNamespace",k8spolicy::UID{"testNP-448"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-448")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-449")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-449","testNamespace",k8spolicy::UID{"testNP-449"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-449")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-450")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-450","testNamespace",k8spolicy::UID{"testNP-450"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-450")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-451")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-451","testNamespace",k8spolicy::UID{"testNP-451"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-451")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-452")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-452","testNamespace",k8spolicy::UID{"testNP-452"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-452")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-453")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-453","testNamespace",k8spolicy::UID{"testNP-453"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-453")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-454")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-454","testNamespace",k8spolicy::UID{"testNP-454"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-454")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-455")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-455","testNamespace",k8spolicy::UID{"testNP-455"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-455")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-456")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-456","testNamespace",k8spolicy::UID{"testNP-456"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-456")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-457")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-457","testNamespace",k8spolicy::UID{"testNP-457"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-457")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-458")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-458","testNamespace",k8spolicy::UID{"testNP-458"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-458")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-459")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-459","testNamespace",k8spolicy::UID{"testNP-459"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-459")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-460")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-460","testNamespace",k8spolicy::UID{"testNP-460"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-460")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-461")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-461","testNamespace",k8spolicy::UID{"testNP-461"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-461")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-462")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-462","testNamespace",k8spolicy::UID{"testNP-462"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-462")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-463")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-463","testNamespace",k8spolicy::UID{"testNP-463"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-463")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-464")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-464","testNamespace",k8spolicy::UID{"testNP-464"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-464")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-465")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-465","testNamespace",k8spolicy::UID{"testNP-465"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-465")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-466")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-466","testNamespace",k8spolicy::UID{"testNP-466"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-466")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-467")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-467","testNamespace",k8spolicy::UID{"testNP-467"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-467")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-468")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-468","testNamespace",k8spolicy::UID{"testNP-468"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-468")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-469")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-469","testNamespace",k8spolicy::UID{"testNP-469"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-469")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-470")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-470","testNamespace",k8spolicy::UID{"testNP-470"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-470")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-471")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
commit dump_changes;
start;
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-471","testNamespace",k8spolicy::UID{"testNP-471"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-471")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-472")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-472","testNamespace",k8spolicy::UID{"testNP-472"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-472")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-473")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-473","testNamespace",k8spolicy::UID{"testNP-473"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-473")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-474")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-474","testNamespace",k8spolicy::UID{"testNP-474"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-474")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-475")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-475","testNamespace",k8spolicy::UID{"testNP-475"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-475")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-476")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-476","testNamespace",k8spolicy::UID{"testNP-476"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-476")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-477")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-477","testNamespace",k8spolicy::UID{"testNP-477"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-477")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-478")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-478","testNamespace",k8spolicy::UID{"testNP-478"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-478")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-479")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-479","testNamespace",k8spolicy::UID{"testNP-479"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-479")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-480")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-480","testNamespace",k8spolicy::UID{"testNP-480"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-480")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-481")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-481","testNamespace",k8spolicy::UID{"testNP-481"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-481")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-482")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-482","testNamespace",k8spolicy::UID{"testNP-482"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-482")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-483")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-483","testNamespace",k8spolicy::UID{"testNP-483"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-483")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-484")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-484","testNamespace",k8spolicy::UID{"testNP-484"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-484")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-485")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-485","testNamespace",k8spolicy::UID{"testNP-485"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-485")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-486")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-486","testNamespace",k8spolicy::UID{"testNP-486"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-486")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-487")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-487","testNamespace",k8spolicy::UID{"testNP-487"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-487")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-488")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-488","testNamespace",k8spolicy::UID{"testNP-488"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-488")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-489")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-489","testNamespace",k8spolicy::UID{"testNP-489"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-489")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-490")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-490","testNamespace",k8spolicy::UID{"testNP-490"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-490")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-491")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-491","testNamespace",k8spolicy::UID{"testNP-491"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-491")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-492")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-492","testNamespace",k8spolicy::UID{"testNP-492"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-492")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-493")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-493","testNamespace",k8spolicy::UID{"testNP-493"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-493")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-494")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-494","testNamespace",k8spolicy::UID{"testNP-494"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-494")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-495")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-495","testNamespace",k8spolicy::UID{"testNP-495"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-495")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-496")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-496","testNamespace",k8spolicy::UID{"testNP-496"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-496")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-497")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-497","testNamespace",k8spolicy::UID{"testNP-497"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-497")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-498")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-498","testNamespace",k8spolicy::UID{"testNP-498"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-498")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-499")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-499","testNamespace",k8spolicy::UID{"testNP-499"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-499")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-500")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-500","testNamespace",k8spolicy::UID{"testNP-500"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-500")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-501")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-501","testNamespace",k8spolicy::UID{"testNP-501"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-501")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-502")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-502","testNamespace",k8spolicy::UID{"testNP-502"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-502")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-503")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
commit dump_changes;
start;
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-503","testNamespace",k8spolicy::UID{"testNP-503"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-503")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-504")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-504","testNamespace",k8spolicy::UID{"testNP-504"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-504")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-505")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-505","testNamespace",k8spolicy::UID{"testNP-505"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-505")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-506")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-506","testNamespace",k8spolicy::UID{"testNP-506"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-506")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-507")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-507","testNamespace",k8spolicy::UID{"testNP-507"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-507")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-508")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-508","testNamespace",k8spolicy::UID{"testNP-508"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-508")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-509")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-509","testNamespace",k8spolicy::UID{"testNP-509"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-509")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-510")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-510","testNamespace",k8spolicy::UID{"testNP-510"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-510")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-511")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-511","testNamespace",k8spolicy::UID{"testNP-511"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-511")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-512")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-512","testNamespace",k8spolicy::UID{"testNP-512"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-512")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-513")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-513","testNamespace",k8spolicy::UID{"testNP-513"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-513")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-514")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-514","testNamespace",k8spolicy::UID{"testNP-514"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-514")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-515")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-515","testNamespace",k8spolicy::UID{"testNP-515"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-515")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-516")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-516","testNamespace",k8spolicy::UID{"testNP-516"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-516")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-517")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-517","testNamespace",k8spolicy::UID{"testNP-517"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-517")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-518")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-518","testNamespace",k8spolicy::UID{"testNP-518"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-518")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-519")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-519","testNamespace",k8spolicy::UID{"testNP-519"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-519")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-520")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-520","testNamespace",k8spolicy::UID{"testNP-520"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-520")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-521")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-521","testNamespace",k8spolicy::UID{"testNP-521"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-521")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-522")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-522","testNamespace",k8spolicy::UID{"testNP-522"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-522")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-523")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-523","testNamespace",k8spolicy::UID{"testNP-523"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-523")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-524")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-524","testNamespace",k8spolicy::UID{"testNP-524"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-524")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-525")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-525","testNamespace",k8spolicy::UID{"testNP-525"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-525")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-526")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-526","testNamespace",k8spolicy::UID{"testNP-526"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-526")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-527")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-527","testNamespace",k8spolicy::UID{"testNP-527"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-527")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-528")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-528","testNamespace",k8spolicy::UID{"testNP-528"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-528")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-529")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-529","testNamespace",k8spolicy::UID{"testNP-529"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-529")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-530")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-530","testNamespace",k8spolicy::UID{"testNP-530"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-530")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-531")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-531","testNamespace",k8spolicy::UID{"testNP-531"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-531")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-532")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-532","testNamespace",k8spolicy::UID{"testNP-532"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-532")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-533")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-533","testNamespace",k8spolicy::UID{"testNP-533"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-533")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-534")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-534","testNamespace",k8spolicy::UID{"testNP-534"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-534")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-535")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
commit dump_changes;
start;
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-535","testNamespace",k8spolicy::UID{"testNP-535"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-535")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-536")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-536","testNamespace",k8spolicy::UID{"testNP-536"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-536")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-537")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-537","testNamespace",k8spolicy::UID{"testNP-537"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-537")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-538")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-538","testNamespace",k8spolicy::UID{"testNP-538"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-538")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-539")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-539","testNamespace",k8spolicy::UID{"testNP-539"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-539")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-540")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-540","testNamespace",k8spolicy::UID{"testNP-540"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-540")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-541")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-541","testNamespace",k8spolicy::UID{"testNP-541"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-541")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-542")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-542","testNamespace",k8spolicy::UID{"testNP-542"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-542")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-543")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-543","testNamespace",k8spolicy::UID{"testNP-543"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-543")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-544")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-544","testNamespace",k8spolicy::UID{"testNP-544"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-544")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-545")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-545","testNamespace",k8spolicy::UID{"testNP-545"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-545")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-546")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-546","testNamespace",k8spolicy::UID{"testNP-546"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-546")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-547")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-547","testNamespace",k8spolicy::UID{"testNP-547"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-547")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-548")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-548","testNamespace",k8spolicy::UID{"testNP-548"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-548")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-549")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-549","testNamespace",k8spolicy::UID{"testNP-549"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-549")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-550")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-550","testNamespace",k8spolicy::UID{"testNP-550"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-550")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-551")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-551","testNamespace",k8spolicy::UID{"testNP-551"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-551")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-552")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-552","testNamespace",k8spolicy::UID{"testNP-552"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-552")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-553")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-553","testNamespace",k8spolicy::UID{"testNP-553"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-553")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-554")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-554","testNamespace",k8spolicy::UID{"testNP-554"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-554")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-555")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-555","testNamespace",k8spolicy::UID{"testNP-555"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-555")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-556")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-556","testNamespace",k8spolicy::UID{"testNP-556"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-556")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-557")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-557","testNamespace",k8spolicy::UID{"testNP-557"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-557")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-558")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-558","testNamespace",k8spolicy::UID{"testNP-558"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-558")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-559")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-559","testNamespace",k8spolicy::UID{"testNP-559"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-559")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-560")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-560","testNamespace",k8spolicy::UID{"testNP-560"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-560")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-561")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-561","testNamespace",k8spolicy::UID{"testNP-561"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-561")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-562")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-562","testNamespace",k8spolicy::UID{"testNP-562"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-562")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-563")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-563","testNamespace",k8spolicy::UID{"testNP-563"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-563")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-564")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-564","testNamespace",k8spolicy::UID{"testNP-564"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-564")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-565")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-565","testNamespace",k8spolicy::UID{"testNP-565"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-565")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-566")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-566","testNamespace",k8spolicy::UID{"testNP-566"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-566")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-567")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
commit dump_changes;
start;
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-567","testNamespace",k8spolicy::UID{"testNP-567"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-567")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-568")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-568","testNamespace",k8spolicy::UID{"testNP-568"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-568")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-569")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-569","testNamespace",k8spolicy::UID{"testNP-569"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-569")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-570")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-570","testNamespace",k8spolicy::UID{"testNP-570"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-570")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-571")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-571","testNamespace",k8spolicy::UID{"testNP-571"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-571")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-572")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-572","testNamespace",k8spolicy::UID{"testNP-572"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-572")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-573")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-573","testNamespace",k8spolicy::UID{"testNP-573"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-573")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-574")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-574","testNamespace",k8spolicy::UID{"testNP-574"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-574")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-575")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-575","testNamespace",k8spolicy::UID{"testNP-575"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-575")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-576")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-576","testNamespace",k8spolicy::UID{"testNP-576"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-576")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-577")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-577","testNamespace",k8spolicy::UID{"testNP-577"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-577")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-578")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-578","testNamespace",k8spolicy::UID{"testNP-578"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-578")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-579")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-579","testNamespace",k8spolicy::UID{"testNP-579"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-579")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-580")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-580","testNamespace",k8spolicy::UID{"testNP-580"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-580")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-581")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-581","testNamespace",k8spolicy::UID{"testNP-581"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-581")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-582")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-582","testNamespace",k8spolicy::UID{"testNP-582"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-582")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-583")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-583","testNamespace",k8spolicy::UID{"testNP-583"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-583")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-584")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-584","testNamespace",k8spolicy::UID{"testNP-584"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-584")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-585")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-585","testNamespace",k8spolicy::UID{"testNP-585"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-585")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-586")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-586","testNamespace",k8spolicy::UID{"testNP-586"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-586")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-587")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-587","testNamespace",k8spolicy::UID{"testNP-587"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-587")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-588")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-588","testNamespace",k8spolicy::UID{"testNP-588"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-588")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-589")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-589","testNamespace",k8spolicy::UID{"testNP-589"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-589")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-590")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-590","testNamespace",k8spolicy::UID{"testNP-590"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-590")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-591")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-591","testNamespace",k8spolicy::UID{"testNP-591"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-591")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-592")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-592","testNamespace",k8spolicy::UID{"testNP-592"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-592")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-593")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-593","testNamespace",k8spolicy::UID{"testNP-593"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-593")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-594")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-594","testNamespace",k8spolicy::UID{"testNP-594"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-594")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-595")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-595","testNamespace",k8spolicy::UID{"testNP-595"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-595")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-596")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-596","testNamespace",k8spolicy::UID{"testNP-596"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-596")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-597")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-597","testNamespace",k8spolicy::UID{"testNP-597"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-597")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-598")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-598","testNamespace",k8spolicy::UID{"testNP-598"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-598")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-599")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
commit dump_changes;
start;
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-599","testNamespace",k8spolicy::UID{"testNP-599"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-599")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-600")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-600","testNamespace",k8spolicy::UID{"testNP-600"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-600")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-601")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-601","testNamespace",k8spolicy::UID{"testNP-601"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-601")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-602")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-602","testNamespace",k8spolicy::UID{"testNP-602"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-602")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-603")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-603","testNamespace",k8spolicy::UID{"testNP-603"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-603")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-604")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-604","testNamespace",k8spolicy::UID{"testNP-604"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-604")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-605")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-605","testNamespace",k8spolicy::UID{"testNP-605"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-605")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-606")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-606","testNamespace",k8spolicy::UID{"testNP-606"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-606")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-607")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-607","testNamespace",k8spolicy::UID{"testNP-607"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-607")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-608")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-608","testNamespace",k8spolicy::UID{"testNP-608"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-608")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-609")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-609","testNamespace",k8spolicy::UID{"testNP-609"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-609")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-610")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-610","testNamespace",k8spolicy::UID{"testNP-610"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-610")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-611")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-611","testNamespace",k8spolicy::UID{"testNP-611"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-611")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-612")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-612","testNamespace",k8spolicy::UID{"testNP-612"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-612")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-613")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-613","testNamespace",k8spolicy::UID{"testNP-613"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-613")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-614")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-614","testNamespace",k8spolicy::UID{"testNP-614"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-614")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-615")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-615","testNamespace",k8spolicy::UID{"testNP-615"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-615")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-616")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-616","testNamespace",k8spolicy::UID{"testNP-616"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-616")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-617")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-617","testNamespace",k8spolicy::UID{"testNP-617"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-617")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-618")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-618","testNamespace",k8spolicy::UID{"testNP-618"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-618")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-619")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-619","testNamespace",k8spolicy::UID{"testNP-619"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-619")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-620")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-620","testNamespace",k8spolicy::UID{"testNP-620"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-620")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-621")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-621","testNamespace",k8spolicy::UID{"testNP-621"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-621")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-622")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-622","testNamespace",k8spolicy::UID{"testNP-622"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-622")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-623")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-623","testNamespace",k8spolicy::UID{"testNP-623"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-623")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-624")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-624","testNamespace",k8spolicy::UID{"testNP-624"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-624")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-625")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-625","testNamespace",k8spolicy::UID{"testNP-625"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-625")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-626")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-626","testNamespace",k8spolicy::UID{"testNP-626"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-626")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-627")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-627","testNamespace",k8spolicy::UID{"testNP-627"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-627")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-628")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-628","testNamespace",k8spolicy::UID{"testNP-628"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-628")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-629")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-629","testNamespace",k8spolicy::UID{"testNP-629"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-629")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-630")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-630","testNamespace",k8spolicy::UID{"testNP-630"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-630")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-631")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
commit dump_changes;
start;
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-631","testNamespace",k8spolicy::UID{"testNP-631"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-631")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-632")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-632","testNamespace",k8spolicy::UID{"testNP-632"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-632")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-633")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-633","testNamespace",k8spolicy::UID{"testNP-633"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-633")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-634")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-634","testNamespace",k8spolicy::UID{"testNP-634"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-634")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-635")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-635","testNamespace",k8spolicy::UID{"testNP-635"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-635")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-636")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-636","testNamespace",k8spolicy::UID{"testNP-636"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-636")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-637")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-637","testNamespace",k8spolicy::UID{"testNP-637"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-637")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-638")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-638","testNamespace",k8spolicy::UID{"testNP-638"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-638")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-639")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-639","testNamespace",k8spolicy::UID{"testNP-639"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-639")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-640")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-640","testNamespace",k8spolicy::UID{"testNP-640"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-640")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-641")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-641","testNamespace",k8spolicy::UID{"testNP-641"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-641")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-642")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-642","testNamespace",k8spolicy::UID{"testNP-642"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-642")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-643")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-643","testNamespace",k8spolicy::UID{"testNP-643"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-643")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-644")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-644","testNamespace",k8spolicy::UID{"testNP-644"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-644")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-645")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-645","testNamespace",k8spolicy::UID{"testNP-645"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-645")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-646")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-646","testNamespace",k8spolicy::UID{"testNP-646"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-646")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-647")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-647","testNamespace",k8spolicy::UID{"testNP-647"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-647")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-648")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-648","testNamespace",k8spolicy::UID{"testNP-648"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-648")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-649")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-649","testNamespace",k8spolicy::UID{"testNP-649"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-649")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-650")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-650","testNamespace",k8spolicy::UID{"testNP-650"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-650")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-651")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-651","testNamespace",k8spolicy::UID{"testNP-651"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-651")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-652")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-652","testNamespace",k8spolicy::UID{"testNP-652"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-652")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-653")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-653","testNamespace",k8spolicy::UID{"testNP-653"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-653")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-654")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-654","testNamespace",k8spolicy::UID{"testNP-654"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-654")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-655")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-655","testNamespace",k8spolicy::UID{"testNP-655"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-655")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-656")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-656","testNamespace",k8spolicy::UID{"testNP-656"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-656")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-657")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-657","testNamespace",k8spolicy::UID{"testNP-657"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-657")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-658")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-658","testNamespace",k8spolicy::UID{"testNP-658"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-658")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-659")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-659","testNamespace",k8spolicy::UID{"testNP-659"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-659")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-660")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-660","testNamespace",k8spolicy::UID{"testNP-660"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-660")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-661")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-661","testNamespace",k8spolicy::UID{"testNP-661"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-661")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-662")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-662","testNamespace",k8spolicy::UID{"testNP-662"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-662")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-663")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
commit dump_changes;
start;
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-663","testNamespace",k8spolicy::UID{"testNP-663"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-663")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-664")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-664","testNamespace",k8spolicy::UID{"testNP-664"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-664")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-665")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-665","testNamespace",k8spolicy::UID{"testNP-665"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-665")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-666")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-666","testNamespace",k8spolicy::UID{"testNP-666"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-666")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-667")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-667","testNamespace",k8spolicy::UID{"testNP-667"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-667")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-668")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-668","testNamespace",k8spolicy::UID{"testNP-668"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-668")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-669")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-669","testNamespace",k8spolicy::UID{"testNP-669"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-669")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-670")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-670","testNamespace",k8spolicy::UID{"testNP-670"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-670")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-671")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-671","testNamespace",k8spolicy::UID{"testNP-671"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-671")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-672")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-672","testNamespace",k8spolicy::UID{"testNP-672"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-672")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-673")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-673","testNamespace",k8spolicy::UID{"testNP-673"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-673")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-674")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-674","testNamespace",k8spolicy::UID{"testNP-674"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-674")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-675")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-675","testNamespace",k8spolicy::UID{"testNP-675"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-675")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-676")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-676","testNamespace",k8spolicy::UID{"testNP-676"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-676")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-677")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-677","testNamespace",k8spolicy::UID{"testNP-677"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-677")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-678")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-678","testNamespace",k8spolicy::UID{"testNP-678"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-678")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-679")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-679","testNamespace",k8spolicy::UID{"testNP-679"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-679")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-680")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-680","testNamespace",k8spolicy::UID{"testNP-680"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-680")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-681")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-681","testNamespace",k8spolicy::UID{"testNP-681"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-681")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-682")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-682","testNamespace",k8spolicy::UID{"testNP-682"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-682")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-683")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-683","testNamespace",k8spolicy::UID{"testNP-683"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-683")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-684")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-684","testNamespace",k8spolicy::UID{"testNP-684"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-684")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-685")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-685","testNamespace",k8spolicy::UID{"testNP-685"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-685")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-686")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-686","testNamespace",k8spolicy::UID{"testNP-686"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-686")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-687")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-687","testNamespace",k8spolicy::UID{"testNP-687"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-687")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-688")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-688","testNamespace",k8spolicy::UID{"testNP-688"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-688")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-689")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-689","testNamespace",k8spolicy::UID{"testNP-689"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-689")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-690")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-690","testNamespace",k8spolicy::UID{"testNP-690"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-690")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-691")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-691","testNamespace",k8spolicy::UID{"testNP-691"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-691")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-692")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-692","testNamespace",k8spolicy::UID{"testNP-692"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-692")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-693")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-693","testNamespace",k8spolicy::UID{"testNP-693"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-693")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-694")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-694","testNamespace",k8spolicy::UID{"testNP-694"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-694")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-695")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
commit dump_changes;
start;
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-695","testNamespace",k8spolicy::UID{"testNP-695"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-695")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-696")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-696","testNamespace",k8spolicy::UID{"testNP-696"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-696")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-697")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-697","testNamespace",k8spolicy::UID{"testNP-697"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-697")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-698")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-698","testNamespace",k8spolicy::UID{"testNP-698"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-698")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-699")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-699","testNamespace",k8spolicy::UID{"testNP-699"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-699")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-700")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-700","testNamespace",k8spolicy::UID{"testNP-700"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-700")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-701")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-701","testNamespace",k8spolicy::UID{"testNP-701"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-701")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-702")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-702","testNamespace",k8spolicy::UID{"testNP-702"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-702")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-703")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-703","testNamespace",k8spolicy::UID{"testNP-703"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-703")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-704")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-704","testNamespace",k8spolicy::UID{"testNP-704"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-704")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-705")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-705","testNamespace",k8spolicy::UID{"testNP-705"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-705")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-706")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-706","testNamespace",k8spolicy::UID{"testNP-706"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-706")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-707")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-707","testNamespace",k8spolicy::UID{"testNP-707"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-707")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-708")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-708","testNamespace",k8spolicy::UID{"testNP-708"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-708")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-709")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-709","testNamespace",k8spolicy::UID{"testNP-709"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-709")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-710")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-710","testNamespace",k8spolicy::UID{"testNP-710"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-710")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-711")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-711","testNamespace",k8spolicy::UID{"testNP-711"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-711")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-712")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-712","testNamespace",k8spolicy::UID{"testNP-712"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-712")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-713")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-713","testNamespace",k8spolicy::UID{"testNP-713"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-713")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-714")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-714","testNamespace",k8spolicy::UID{"testNP-714"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-714")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-715")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-715","testNamespace",k8spolicy::UID{"testNP-715"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-715")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-716")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-716","testNamespace",k8spolicy::UID{"testNP-716"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-716")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-717")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-717","testNamespace",k8spolicy::UID{"testNP-717"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-717")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-718")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-718","testNamespace",k8spolicy::UID{"testNP-718"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-718")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-719")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-719","testNamespace",k8spolicy::UID{"testNP-719"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-719")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-720")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-720","testNamespace",k8spolicy::UID{"testNP-720"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-720")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-721")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-721","testNamespace",k8spolicy::UID{"testNP-721"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-721")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-722")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-722","testNamespace",k8spolicy::UID{"testNP-722"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-722")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-723")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-723","testNamespace",k8spolicy::UID{"testNP-723"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-723")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-724")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-724","testNamespace",k8spolicy::UID{"testNP-724"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-724")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-725")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-725","testNamespace",k8spolicy::UID{"testNP-725"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-725")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-726")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-726","testNamespace",k8spolicy::UID{"testNP-726"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-726")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-727")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
commit dump_changes;
start;
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-727","testNamespace",k8spolicy::UID{"testNP-727"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-727")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-728")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-728","testNamespace",k8spolicy::UID{"testNP-728"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-728")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-729")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-729","testNamespace",k8spolicy::UID{"testNP-729"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-729")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-730")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-730","testNamespace",k8spolicy::UID{"testNP-730"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-730")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-731")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-731","testNamespace",k8spolicy::UID{"testNP-731"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-731")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-732")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-732","testNamespace",k8spolicy::UID{"testNP-732"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-732")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-733")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-733","testNamespace",k8spolicy::UID{"testNP-733"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-733")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-734")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-734","testNamespace",k8spolicy::UID{"testNP-734"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-734")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-735")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-735","testNamespace",k8spolicy::UID{"testNP-735"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-735")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-736")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-736","testNamespace",k8spolicy::UID{"testNP-736"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-736")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-737")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-737","testNamespace",k8spolicy::UID{"testNP-737"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-737")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-738")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-738","testNamespace",k8spolicy::UID{"testNP-738"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-738")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-739")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-739","testNamespace",k8spolicy::UID{"testNP-739"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-739")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-740")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-740","testNamespace",k8spolicy::UID{"testNP-740"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-740")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-741")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-741","testNamespace",k8spolicy::UID{"testNP-741"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-741")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-742")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-742","testNamespace",k8spolicy::UID{"testNP-742"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-742")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-743")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-743","testNamespace",k8spolicy::UID{"testNP-743"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-743")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-744")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-744","testNamespace",k8spolicy::UID{"testNP-744"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-744")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-745")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-745","testNamespace",k8spolicy::UID{"testNP-745"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-745")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-746")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-746","testNamespace",k8spolicy::UID{"testNP-746"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-746")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-747")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-747","testNamespace",k8spolicy::UID{"testNP-747"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-747")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-748")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-748","testNamespace",k8spolicy::UID{"testNP-748"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-748")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-749")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-749","testNamespace",k8spolicy::UID{"testNP-749"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-749")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-750")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-750","testNamespace",k8spolicy::UID{"testNP-750"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-750")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-751")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-751","testNamespace",k8spolicy::UID{"testNP-751"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-751")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-752")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-752","testNamespace",k8spolicy::UID{"testNP-752"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-752")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-753")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-753","testNamespace",k8spolicy::UID{"testNP-753"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-753")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-754")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-754","testNamespace",k8spolicy::UID{"testNP-754"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-754")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-755")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-755","testNamespace",k8spolicy::UID{"testNP-755"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-755")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-756")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-756","testNamespace",k8spolicy::UID{"testNP-756"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-756")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-757")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-757","testNamespace",k8spolicy::UID{"testNP-757"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-757")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-758")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-758","testNamespace",k8spolicy::UID{"testNP-758"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-758")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-759")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
commit dump_changes;
start;
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-759","testNamespace",k8spolicy::UID{"testNP-759"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-759")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-760")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-760","testNamespace",k8spolicy::UID{"testNP-760"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-760")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-761")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-761","testNamespace",k8spolicy::UID{"testNP-761"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-761")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-762")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-762","testNamespace",k8spolicy::UID{"testNP-762"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-762")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-763")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-763","testNamespace",k8spolicy::UID{"testNP-763"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-763")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-764")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-764","testNamespace",k8spolicy::UID{"testNP-764"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-764")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-765")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-765","testNamespace",k8spolicy::UID{"testNP-765"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-765")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-766")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-766","testNamespace",k8spolicy::UID{"testNP-766"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-766")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-767")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-767","testNamespace",k8spolicy::UID{"testNP-767"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-767")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-768")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-768","testNamespace",k8spolicy::UID{"testNP-768"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-768")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-769")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-769","testNamespace",k8spolicy::UID{"testNP-769"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-769")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-770")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-770","testNamespace",k8spolicy::UID{"testNP-770"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-770")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-771")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-771","testNamespace",k8spolicy::UID{"testNP-771"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-771")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-772")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-772","testNamespace",k8spolicy::UID{"testNP-772"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-772")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-773")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-773","testNamespace",k8spolicy::UID{"testNP-773"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-773")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-774")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-774","testNamespace",k8spolicy::UID{"testNP-774"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-774")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-775")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-775","testNamespace",k8spolicy::UID{"testNP-775"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-775")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-776")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-776","testNamespace",k8spolicy::UID{"testNP-776"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-776")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-777")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-777","testNamespace",k8spolicy::UID{"testNP-777"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-777")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-778")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-778","testNamespace",k8spolicy::UID{"testNP-778"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-778")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-779")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-779","testNamespace",k8spolicy::UID{"testNP-779"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-779")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-780")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-780","testNamespace",k8spolicy::UID{"testNP-780"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-780")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-781")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-781","testNamespace",k8spolicy::UID{"testNP-781"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-781")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-782")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-782","testNamespace",k8spolicy::UID{"testNP-782"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-782")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-783")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-783","testNamespace",k8spolicy::UID{"testNP-783"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-783")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-784")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-784","testNamespace",k8spolicy::UID{"testNP-784"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-784")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-785")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-785","testNamespace",k8spolicy::UID{"testNP-785"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-785")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-786")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-786","testNamespace",k8spolicy::UID{"testNP-786"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-786")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-787")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-787","testNamespace",k8spolicy::UID{"testNP-787"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-787")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-788")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-788","testNamespace",k8spolicy::UID{"testNP-788"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-788")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-789")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-789","testNamespace",k8spolicy::UID{"testNP-789"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-789")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-790")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-790","testNamespace",k8spolicy::UID{"testNP-790"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-790")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-791")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
commit dump_changes;
start;
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-791","testNamespace",k8spolicy::UID{"testNP-791"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-791")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-792")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-792","testNamespace",k8spolicy::UID{"testNP-792"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-792")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-793")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-793","testNamespace",k8spolicy::UID{"testNP-793"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-793")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-794")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-794","testNamespace",k8spolicy::UID{"testNP-794"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-794")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-795")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-795","testNamespace",k8spolicy::UID{"testNP-795"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-795")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-796")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-796","testNamespace",k8spolicy::UID{"testNP-796"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-796")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-797")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-797","testNamespace",k8spolicy::UID{"testNP-797"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-797")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-798")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-798","testNamespace",k8spolicy::UID{"testNP-798"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-798")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-799")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-799","testNamespace",k8spolicy::UID{"testNP-799"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-799")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-800")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-800","testNamespace",k8spolicy::UID{"testNP-800"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-800")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-801")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-801","testNamespace",k8spolicy::UID{"testNP-801"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-801")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-802")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-802","testNamespace",k8spolicy::UID{"testNP-802"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-802")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-803")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-803","testNamespace",k8spolicy::UID{"testNP-803"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-803")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-804")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-804","testNamespace",k8spolicy::UID{"testNP-804"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-804")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-805")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-805","testNamespace",k8spolicy::UID{"testNP-805"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-805")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-806")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-806","testNamespace",k8spolicy::UID{"testNP-806"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-806")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-807")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-807","testNamespace",k8spolicy::UID{"testNP-807"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-807")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-808")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-808","testNamespace",k8spolicy::UID{"testNP-808"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-808")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-809")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-809","testNamespace",k8spolicy::UID{"testNP-809"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-809")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-810")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-810","testNamespace",k8spolicy::UID{"testNP-810"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-810")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-811")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-811","testNamespace",k8spolicy::UID{"testNP-811"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-811")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-812")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-812","testNamespace",k8spolicy::UID{"testNP-812"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-812")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-813")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-813","testNamespace",k8spolicy::UID{"testNP-813"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-813")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-814")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-814","testNamespace",k8spolicy::UID{"testNP-814"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-814")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-815")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-815","testNamespace",k8spolicy::UID{"testNP-815"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-815")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-816")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-816","testNamespace",k8spolicy::UID{"testNP-816"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-816")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-817")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-817","testNamespace",k8spolicy::UID{"testNP-817"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-817")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-818")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-818","testNamespace",k8spolicy::UID{"testNP-818"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-818")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-819")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-819","testNamespace",k8spolicy::UID{"testNP-819"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-819")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-820")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-820","testNamespace",k8spolicy::UID{"testNP-820"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-820")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-821")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-821","testNamespace",k8spolicy::UID{"testNP-821"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-821")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-822")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-822","testNamespace",k8spolicy::UID{"testNP-822"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-822")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-823")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
commit dump_changes;
start;
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-823","testNamespace",k8spolicy::UID{"testNP-823"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-823")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-824")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-824","testNamespace",k8spolicy::UID{"testNP-824"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-824")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-825")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-825","testNamespace",k8spolicy::UID{"testNP-825"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-825")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-826")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-826","testNamespace",k8spolicy::UID{"testNP-826"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-826")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-827")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-827","testNamespace",k8spolicy::UID{"testNP-827"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-827")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-828")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-828","testNamespace",k8spolicy::UID{"testNP-828"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-828")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-829")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-829","testNamespace",k8spolicy::UID{"testNP-829"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-829")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-830")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-830","testNamespace",k8spolicy::UID{"testNP-830"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-830")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-831")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-831","testNamespace",k8spolicy::UID{"testNP-831"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-831")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-832")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-832","testNamespace",k8spolicy::UID{"testNP-832"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-832")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-833")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-833","testNamespace",k8spolicy::UID{"testNP-833"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-833")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-834")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-834","testNamespace",k8spolicy::UID{"testNP-834"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-834")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-835")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-835","testNamespace",k8spolicy::UID{"testNP-835"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-835")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-836")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-836","testNamespace",k8spolicy::UID{"testNP-836"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-836")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-837")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-837","testNamespace",k8spolicy::UID{"testNP-837"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-837")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-838")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-838","testNamespace",k8spolicy::UID{"testNP-838"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-838")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-839")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-839","testNamespace",k8spolicy::UID{"testNP-839"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-839")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-840")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-840","testNamespace",k8spolicy::UID{"testNP-840"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-840")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-841")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-841","testNamespace",k8spolicy::UID{"testNP-841"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-841")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-842")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-842","testNamespace",k8spolicy::UID{"testNP-842"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-842")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-843")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-843","testNamespace",k8spolicy::UID{"testNP-843"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-843")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-844")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-844","testNamespace",k8spolicy::UID{"testNP-844"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-844")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-845")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-845","testNamespace",k8spolicy::UID{"testNP-845"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-845")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-846")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-846","testNamespace",k8spolicy::UID{"testNP-846"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-846")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-847")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-847","testNamespace",k8spolicy::UID{"testNP-847"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-847")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-848")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-848","testNamespace",k8spolicy::UID{"testNP-848"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-848")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-849")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-849","testNamespace",k8spolicy::UID{"testNP-849"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-849")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-850")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-850","testNamespace",k8spolicy::UID{"testNP-850"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-850")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-851")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-851","testNamespace",k8spolicy::UID{"testNP-851"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-851")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-852")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-852","testNamespace",k8spolicy::UID{"testNP-852"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-852")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-853")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-853","testNamespace",k8spolicy::UID{"testNP-853"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-853")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-854")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-854","testNamespace",k8spolicy::UID{"testNP-854"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-854")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-855")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
commit dump_changes;
start;
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-855","testNamespace",k8spolicy::UID{"testNP-855"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-855")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-856")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-856","testNamespace",k8spolicy::UID{"testNP-856"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-856")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-857")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-857","testNamespace",k8spolicy::UID{"testNP-857"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-857")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-858")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-858","testNamespace",k8spolicy::UID{"testNP-858"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-858")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-859")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-859","testNamespace",k8spolicy::UID{"testNP-859"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-859")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-860")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-860","testNamespace",k8spolicy::UID{"testNP-860"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-860")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-861")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-861","testNamespace",k8spolicy::UID{"testNP-861"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-861")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-862")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-862","testNamespace",k8spolicy::UID{"testNP-862"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-862")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-863")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-863","testNamespace",k8spolicy::UID{"testNP-863"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-863")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-864")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-864","testNamespace",k8spolicy::UID{"testNP-864"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-864")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-865")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-865","testNamespace",k8spolicy::UID{"testNP-865"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-865")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-866")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-866","testNamespace",k8spolicy::UID{"testNP-866"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-866")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-867")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-867","testNamespace",k8spolicy::UID{"testNP-867"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-867")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-868")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-868","testNamespace",k8spolicy::UID{"testNP-868"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-868")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-869")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-869","testNamespace",k8spolicy::UID{"testNP-869"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-869")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-870")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-870","testNamespace",k8spolicy::UID{"testNP-870"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-870")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-871")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-871","testNamespace",k8spolicy::UID{"testNP-871"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-871")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-872")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-872","testNamespace",k8spolicy::UID{"testNP-872"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-872")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-873")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-873","testNamespace",k8spolicy::UID{"testNP-873"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-873")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-874")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-874","testNamespace",k8spolicy::UID{"testNP-874"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-874")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-875")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-875","testNamespace",k8spolicy::UID{"testNP-875"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-875")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-876")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-876","testNamespace",k8spolicy::UID{"testNP-876"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-876")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-877")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-877","testNamespace",k8spolicy::UID{"testNP-877"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-877")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-878")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-878","testNamespace",k8spolicy::UID{"testNP-878"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-878")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-879")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-879","testNamespace",k8spolicy::UID{"testNP-879"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-879")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-880")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-880","testNamespace",k8spolicy::UID{"testNP-880"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-880")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-881")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-881","testNamespace",k8spolicy::UID{"testNP-881"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-881")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-882")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-882","testNamespace",k8spolicy::UID{"testNP-882"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-882")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-883")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-883","testNamespace",k8spolicy::UID{"testNP-883"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-883")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-884")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-884","testNamespace",k8spolicy::UID{"testNP-884"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-884")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-885")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-885","testNamespace",k8spolicy::UID{"testNP-885"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-885")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-886")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-886","testNamespace",k8spolicy::UID{"testNP-886"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-886")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-887")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
commit dump_changes;
start;
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-887","testNamespace",k8spolicy::UID{"testNP-887"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-887")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-888")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-888","testNamespace",k8spolicy::UID{"testNP-888"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-888")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-889")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-889","testNamespace",k8spolicy::UID{"testNP-889"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-889")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-890")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-890","testNamespace",k8spolicy::UID{"testNP-890"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-890")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-891")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-891","testNamespace",k8spolicy::UID{"testNP-891"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-891")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-892")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-892","testNamespace",k8spolicy::UID{"testNP-892"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-892")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-893")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-893","testNamespace",k8spolicy::UID{"testNP-893"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-893")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-894")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-894","testNamespace",k8spolicy::UID{"testNP-894"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-894")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-895")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-895","testNamespace",k8spolicy::UID{"testNP-895"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-895")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-896")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-896","testNamespace",k8spolicy::UID{"testNP-896"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-896")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-897")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-897","testNamespace",k8spolicy::UID{"testNP-897"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-897")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-898")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-898","testNamespace",k8spolicy::UID{"testNP-898"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-898")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-899")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-899","testNamespace",k8spolicy::UID{"testNP-899"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-899")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-900")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-900","testNamespace",k8spolicy::UID{"testNP-900"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-900")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-901")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-901","testNamespace",k8spolicy::UID{"testNP-901"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-901")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-902")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-902","testNamespace",k8spolicy::UID{"testNP-902"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-902")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-903")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-903","testNamespace",k8spolicy::UID{"testNP-903"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-903")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-904")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-904","testNamespace",k8spolicy::UID{"testNP-904"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-904")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-905")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-905","testNamespace",k8spolicy::UID{"testNP-905"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-905")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-906")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-906","testNamespace",k8spolicy::UID{"testNP-906"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-906")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-907")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-907","testNamespace",k8spolicy::UID{"testNP-907"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-907")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-908")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-908","testNamespace",k8spolicy::UID{"testNP-908"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-908")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-909")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-909","testNamespace",k8spolicy::UID{"testNP-909"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-909")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-910")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-910","testNamespace",k8spolicy::UID{"testNP-910"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-910")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-911")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-911","testNamespace",k8spolicy::UID{"testNP-911"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-911")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-912")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-912","testNamespace",k8spolicy::UID{"testNP-912"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-912")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-913")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-913","testNamespace",k8spolicy::UID{"testNP-913"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-913")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-914")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-914","testNamespace",k8spolicy::UID{"testNP-914"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-914")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-915")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-915","testNamespace",k8spolicy::UID{"testNP-915"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-915")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-916")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-916","testNamespace",k8spolicy::UID{"testNP-916"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-916")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-917")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-917","testNamespace",k8spolicy::UID{"testNP-917"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-917")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-918")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-918","testNamespace",k8spolicy::UID{"testNP-918"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-918")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-919")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
commit dump_changes;
start;
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-919","testNamespace",k8spolicy::UID{"testNP-919"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-919")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-920")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-920","testNamespace",k8spolicy::UID{"testNP-920"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-920")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-921")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-921","testNamespace",k8spolicy::UID{"testNP-921"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-921")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-922")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-922","testNamespace",k8spolicy::UID{"testNP-922"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-922")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-923")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-923","testNamespace",k8spolicy::UID{"testNP-923"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-923")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-924")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-924","testNamespace",k8spolicy::UID{"testNP-924"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-924")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-925")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-925","testNamespace",k8spolicy::UID{"testNP-925"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-925")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-926")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-926","testNamespace",k8spolicy::UID{"testNP-926"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-926")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-927")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-927","testNamespace",k8spolicy::UID{"testNP-927"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-927")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-928")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-928","testNamespace",k8spolicy::UID{"testNP-928"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-928")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-929")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-929","testNamespace",k8spolicy::UID{"testNP-929"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-929")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-930")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-930","testNamespace",k8spolicy::UID{"testNP-930"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-930")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-931")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-931","testNamespace",k8spolicy::UID{"testNP-931"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-931")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-932")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-932","testNamespace",k8spolicy::UID{"testNP-932"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-932")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-933")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-933","testNamespace",k8spolicy::UID{"testNP-933"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-933")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-934")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-934","testNamespace",k8spolicy::UID{"testNP-934"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-934")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-935")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-935","testNamespace",k8spolicy::UID{"testNP-935"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-935")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-936")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-936","testNamespace",k8spolicy::UID{"testNP-936"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-936")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-937")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-937","testNamespace",k8spolicy::UID{"testNP-937"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-937")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-938")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-938","testNamespace",k8spolicy::UID{"testNP-938"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-938")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-939")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-939","testNamespace",k8spolicy::UID{"testNP-939"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-939")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-940")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-940","testNamespace",k8spolicy::UID{"testNP-940"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-940")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-941")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-941","testNamespace",k8spolicy::UID{"testNP-941"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-941")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-942")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-942","testNamespace",k8spolicy::UID{"testNP-942"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-942")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-943")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-943","testNamespace",k8spolicy::UID{"testNP-943"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-943")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-944")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-944","testNamespace",k8spolicy::UID{"testNP-944"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-944")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-945")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-945","testNamespace",k8spolicy::UID{"testNP-945"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-945")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-946")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-946","testNamespace",k8spolicy::UID{"testNP-946"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-946")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-947")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-947","testNamespace",k8spolicy::UID{"testNP-947"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-947")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-948")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-948","testNamespace",k8spolicy::UID{"testNP-948"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-948")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-949")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-949","testNamespace",k8spolicy::UID{"testNP-949"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-949")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-950")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-950","testNamespace",k8spolicy::UID{"testNP-950"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-950")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-951")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
commit dump_changes;
start;
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-951","testNamespace",k8spolicy::UID{"testNP-951"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-951")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-952")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-952","testNamespace",k8spolicy::UID{"testNP-952"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-952")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-953")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-953","testNamespace",k8spolicy::UID{"testNP-953"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-953")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-954")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-954","testNamespace",k8spolicy::UID{"testNP-954"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-954")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-955")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-955","testNamespace",k8spolicy::UID{"testNP-955"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-955")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-956")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-956","testNamespace",k8spolicy::UID{"testNP-956"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-956")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-957")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-957","testNamespace",k8spolicy::UID{"testNP-957"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-957")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-958")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-958","testNamespace",k8spolicy::UID{"testNP-958"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-958")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-959")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-959","testNamespace",k8spolicy::UID{"testNP-959"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-959")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-960")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-960","testNamespace",k8spolicy::UID{"testNP-960"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-960")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-961")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-961","testNamespace",k8spolicy::UID{"testNP-961"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-961")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-962")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-962","testNamespace",k8spolicy::UID{"testNP-962"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-962")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-963")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-963","testNamespace",k8spolicy::UID{"testNP-963"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-963")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-964")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-964","testNamespace",k8spolicy::UID{"testNP-964"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-964")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-965")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-965","testNamespace",k8spolicy::UID{"testNP-965"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-965")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-966")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-966","testNamespace",k8spolicy::UID{"testNP-966"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-966")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-967")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-967","testNamespace",k8spolicy::UID{"testNP-967"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-967")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-968")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-968","testNamespace",k8spolicy::UID{"testNP-968"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-968")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-969")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-969","testNamespace",k8spolicy::UID{"testNP-969"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-969")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-970")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-970","testNamespace",k8spolicy::UID{"testNP-970"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-970")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-971")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-971","testNamespace",k8spolicy::UID{"testNP-971"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-971")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-972")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-972","testNamespace",k8spolicy::UID{"testNP-972"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-972")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-973")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-973","testNamespace",k8spolicy::UID{"testNP-973"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-973")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-974")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-974","testNamespace",k8spolicy::UID{"testNP-974"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-974")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-975")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-975","testNamespace",k8spolicy::UID{"testNP-975"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-975")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-976")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-976","testNamespace",k8spolicy::UID{"testNP-976"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-976")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-977")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-977","testNamespace",k8spolicy::UID{"testNP-977"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-977")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-978")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-978","testNamespace",k8spolicy::UID{"testNP-978"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-978")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-979")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-979","testNamespace",k8spolicy::UID{"testNP-979"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-979")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-980")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-980","testNamespace",k8spolicy::UID{"testNP-980"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-980")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-981")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-981","testNamespace",k8spolicy::UID{"testNP-981"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-981")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-982")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-982","testNamespace",k8spolicy::UID{"testNP-982"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-982")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-983")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
commit dump_changes;
start;
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-983","testNamespace",k8spolicy::UID{"testNP-983"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-983")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-984")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-984","testNamespace",k8spolicy::UID{"testNP-984"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-984")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-985")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-985","testNamespace",k8spolicy::UID{"testNP-985"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-985")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-986")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-986","testNamespace",k8spolicy::UID{"testNP-986"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-986")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-987")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-987","testNamespace",k8spolicy::UID{"testNP-987"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-987")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-988")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-988","testNamespace",k8spolicy::UID{"testNP-988"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-988")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-989")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-989","testNamespace",k8spolicy::UID{"testNP-989"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-989")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-990")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-990","testNamespace",k8spolicy::UID{"testNP-990"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-990")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-991")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-991","testNamespace",k8spolicy::UID{"testNP-991"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-991")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-992")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-992","testNamespace",k8spolicy::UID{"testNP-992"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-992")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-993")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-993","testNamespace",k8spolicy::UID{"testNP-993"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-993")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-994")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-994","testNamespace",k8spolicy::UID{"testNP-994"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-994")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-995")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-995","testNamespace",k8spolicy::UID{"testNP-995"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-995")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-996")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-996","testNamespace",k8spolicy::UID{"testNP-996"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-996")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-997")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-997","testNamespace",k8spolicy::UID{"testNP-997"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-997")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-998")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-998","testNamespace",k8spolicy::UID{"testNP-998"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-998")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-999")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
insert_or_update k8spolicy::NetworkPolicy[k8spolicy::NetworkPolicy{"testNP-999","testNamespace",k8spolicy::UID{"testNP-999"},k8spolicy::NetworkPolicySpec{k8spolicy::LabelSelector{[("pod-name","testPod-999")],[]},[k8spolicy::NetworkPolicyIngressRule{[k8spolicy::NetworkPolicyPort{std::Some{"TCP"},std::Some{std::Left{80}}}],[k8spolicy::NetworkPolicyPeer{std::Some{k8spolicy::LabelSelector{[("pod-name","testPod-0")],[]}},std::None{},std::None{}}]}],[],[k8spolicy::PolicyTypeIngress{}]}}];
commit dump_changes;
start;
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-0");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-1");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-2");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-3");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-4");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-5");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-6");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-7");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-8");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-9");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-10");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-11");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-12");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-13");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-14");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-15");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-16");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-17");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-18");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-19");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-20");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-21");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-22");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-23");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-24");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-25");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-26");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-27");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-28");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-29");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-30");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-31");
commit dump_changes;
start;
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-32");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-33");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-34");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-35");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-36");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-37");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-38");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-39");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-40");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-41");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-42");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-43");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-44");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-45");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-46");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-47");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-48");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-49");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-50");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-51");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-52");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-53");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-54");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-55");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-56");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-57");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-58");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-59");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-60");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-61");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-62");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-63");
commit dump_changes;
start;
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-64");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-65");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-66");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-67");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-68");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-69");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-70");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-71");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-72");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-73");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-74");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-75");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-76");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-77");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-78");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-79");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-80");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-81");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-82");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-83");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-84");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-85");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-86");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-87");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-88");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-89");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-90");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-91");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-92");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-93");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-94");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-95");
commit dump_changes;
start;
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-96");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-97");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-98");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-99");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-100");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-101");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-102");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-103");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-104");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-105");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-106");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-107");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-108");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-109");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-110");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-111");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-112");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-113");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-114");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-115");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-116");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-117");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-118");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-119");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-120");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-121");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-122");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-123");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-124");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-125");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-126");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-127");
commit dump_changes;
start;
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-128");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-129");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-130");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-131");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-132");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-133");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-134");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-135");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-136");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-137");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-138");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-139");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-140");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-141");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-142");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-143");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-144");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-145");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-146");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-147");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-148");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-149");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-150");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-151");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-152");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-153");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-154");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-155");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-156");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-157");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-158");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-159");
commit dump_changes;
start;
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-160");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-161");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-162");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-163");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-164");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-165");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-166");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-167");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-168");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-169");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-170");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-171");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-172");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-173");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-174");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-175");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-176");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-177");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-178");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-179");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-180");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-181");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-182");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-183");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-184");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-185");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-186");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-187");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-188");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-189");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-190");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-191");
commit dump_changes;
start;
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-192");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-193");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-194");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-195");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-196");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-197");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-198");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-199");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-200");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-201");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-202");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-203");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-204");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-205");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-206");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-207");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-208");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-209");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-210");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-211");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-212");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-213");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-214");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-215");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-216");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-217");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-218");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-219");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-220");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-221");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-222");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-223");
commit dump_changes;
start;
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-224");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-225");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-226");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-227");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-228");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-229");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-230");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-231");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-232");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-233");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-234");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-235");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-236");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-237");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-238");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-239");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-240");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-241");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-242");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-243");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-244");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-245");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-246");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-247");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-248");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-249");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-250");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-251");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-252");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-253");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-254");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-255");
commit dump_changes;
start;
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-256");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-257");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-258");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-259");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-260");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-261");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-262");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-263");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-264");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-265");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-266");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-267");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-268");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-269");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-270");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-271");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-272");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-273");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-274");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-275");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-276");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-277");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-278");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-279");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-280");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-281");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-282");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-283");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-284");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-285");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-286");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-287");
commit dump_changes;
start;
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-288");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-289");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-290");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-291");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-292");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-293");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-294");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-295");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-296");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-297");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-298");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-299");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-300");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-301");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-302");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-303");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-304");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-305");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-306");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-307");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-308");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-309");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-310");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-311");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-312");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-313");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-314");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-315");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-316");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-317");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-318");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-319");
commit dump_changes;
start;
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-320");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-321");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-322");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-323");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-324");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-325");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-326");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-327");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-328");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-329");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-330");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-331");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-332");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-333");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-334");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-335");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-336");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-337");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-338");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-339");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-340");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-341");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-342");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-343");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-344");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-345");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-346");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-347");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-348");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-349");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-350");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-351");
commit dump_changes;
start;
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-352");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-353");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-354");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-355");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-356");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-357");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-358");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-359");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-360");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-361");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-362");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-363");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-364");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-365");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-366");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-367");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-368");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-369");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-370");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-371");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-372");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-373");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-374");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-375");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-376");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-377");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-378");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-379");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-380");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-381");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-382");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-383");
commit dump_changes;
start;
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-384");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-385");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-386");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-387");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-388");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-389");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-390");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-391");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-392");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-393");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-394");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-395");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-396");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-397");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-398");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-399");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-400");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-401");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-402");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-403");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-404");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-405");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-406");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-407");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-408");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-409");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-410");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-411");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-412");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-413");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-414");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-415");
commit dump_changes;
start;
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-416");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-417");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-418");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-419");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-420");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-421");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-422");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-423");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-424");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-425");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-426");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-427");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-428");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-429");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-430");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-431");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-432");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-433");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-434");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-435");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-436");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-437");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-438");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-439");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-440");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-441");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-442");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-443");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-444");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-445");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-446");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-447");
commit dump_changes;
start;
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-448");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-449");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-450");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-451");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-452");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-453");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-454");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-455");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-456");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-457");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-458");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-459");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-460");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-461");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-462");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-463");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-464");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-465");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-466");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-467");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-468");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-469");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-470");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-471");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-472");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-473");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-474");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-475");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-476");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-477");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-478");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-479");
commit dump_changes;
start;
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-480");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-481");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-482");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-483");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-484");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-485");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-486");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-487");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-488");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-489");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-490");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-491");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-492");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-493");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-494");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-495");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-496");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-497");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-498");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-499");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-500");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-501");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-502");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-503");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-504");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-505");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-506");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-507");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-508");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-509");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-510");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-511");
commit dump_changes;
start;
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-512");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-513");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-514");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-515");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-516");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-517");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-518");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-519");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-520");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-521");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-522");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-523");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-524");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-525");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-526");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-527");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-528");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-529");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-530");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-531");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-532");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-533");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-534");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-535");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-536");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-537");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-538");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-539");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-540");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-541");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-542");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-543");
commit dump_changes;
start;
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-544");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-545");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-546");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-547");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-548");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-549");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-550");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-551");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-552");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-553");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-554");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-555");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-556");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-557");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-558");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-559");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-560");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-561");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-562");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-563");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-564");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-565");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-566");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-567");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-568");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-569");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-570");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-571");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-572");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-573");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-574");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-575");
commit dump_changes;
start;
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-576");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-577");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-578");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-579");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-580");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-581");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-582");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-583");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-584");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-585");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-586");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-587");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-588");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-589");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-590");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-591");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-592");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-593");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-594");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-595");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-596");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-597");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-598");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-599");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-600");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-601");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-602");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-603");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-604");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-605");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-606");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-607");
commit dump_changes;
start;
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-608");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-609");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-610");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-611");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-612");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-613");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-614");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-615");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-616");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-617");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-618");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-619");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-620");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-621");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-622");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-623");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-624");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-625");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-626");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-627");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-628");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-629");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-630");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-631");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-632");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-633");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-634");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-635");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-636");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-637");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-638");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-639");
commit dump_changes;
start;
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-640");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-641");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-642");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-643");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-644");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-645");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-646");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-647");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-648");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-649");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-650");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-651");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-652");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-653");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-654");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-655");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-656");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-657");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-658");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-659");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-660");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-661");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-662");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-663");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-664");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-665");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-666");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-667");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-668");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-669");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-670");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-671");
commit dump_changes;
start;
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-672");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-673");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-674");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-675");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-676");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-677");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-678");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-679");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-680");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-681");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-682");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-683");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-684");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-685");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-686");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-687");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-688");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-689");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-690");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-691");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-692");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-693");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-694");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-695");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-696");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-697");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-698");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-699");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-700");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-701");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-702");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-703");
commit dump_changes;
start;
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-704");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-705");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-706");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-707");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-708");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-709");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-710");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-711");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-712");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-713");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-714");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-715");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-716");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-717");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-718");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-719");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-720");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-721");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-722");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-723");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-724");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-725");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-726");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-727");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-728");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-729");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-730");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-731");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-732");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-733");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-734");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-735");
commit dump_changes;
start;
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-736");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-737");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-738");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-739");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-740");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-741");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-742");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-743");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-744");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-745");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-746");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-747");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-748");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-749");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-750");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-751");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-752");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-753");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-754");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-755");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-756");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-757");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-758");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-759");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-760");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-761");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-762");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-763");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-764");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-765");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-766");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-767");
commit dump_changes;
start;
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-768");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-769");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-770");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-771");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-772");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-773");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-774");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-775");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-776");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-777");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-778");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-779");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-780");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-781");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-782");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-783");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-784");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-785");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-786");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-787");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-788");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-789");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-790");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-791");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-792");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-793");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-794");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-795");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-796");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-797");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-798");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-799");
commit dump_changes;
start;
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-800");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-801");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-802");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-803");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-804");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-805");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-806");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-807");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-808");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-809");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-810");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-811");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-812");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-813");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-814");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-815");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-816");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-817");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-818");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-819");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-820");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-821");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-822");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-823");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-824");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-825");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-826");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-827");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-828");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-829");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-830");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-831");
commit dump_changes;
start;
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-832");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-833");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-834");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-835");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-836");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-837");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-838");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-839");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-840");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-841");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-842");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-843");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-844");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-845");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-846");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-847");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-848");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-849");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-850");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-851");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-852");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-853");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-854");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-855");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-856");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-857");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-858");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-859");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-860");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-861");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-862");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-863");
commit dump_changes;
start;
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-864");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-865");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-866");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-867");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-868");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-869");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-870");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-871");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-872");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-873");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-874");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-875");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-876");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-877");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-878");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-879");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-880");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-881");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-882");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-883");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-884");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-885");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-886");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-887");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-888");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-889");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-890");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-891");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-892");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-893");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-894");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-895");
commit dump_changes;
start;
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-896");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-897");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-898");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-899");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-900");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-901");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-902");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-903");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-904");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-905");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-906");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-907");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-908");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-909");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-910");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-911");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-912");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-913");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-914");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-915");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-916");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-917");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-918");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-919");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-920");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-921");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-922");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-923");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-924");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-925");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-926");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-927");
commit dump_changes;
start;
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-928");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-929");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-930");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-931");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-932");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-933");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-934");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-935");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-936");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-937");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-938");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-939");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-940");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-941");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-942");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-943");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-944");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-945");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-946");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-947");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-948");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-949");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-950");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-951");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-952");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-953");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-954");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-955");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-956");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-957");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-958");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-959");
commit dump_changes;
start;
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-960");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-961");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-962");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-963");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-964");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-965");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-966");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-967");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-968");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-969");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-970");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-971");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-972");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-973");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-974");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-975");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-976");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-977");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-978");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-979");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-980");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-981");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-982");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-983");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-984");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-985");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-986");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-987");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-988");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-989");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-990");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-991");
commit dump_changes;
start;
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-992");
delete_key k8spolicy::Pod ("testNamespace", "testPod-0");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-993");
delete_key k8spolicy::Pod ("testNamespace", "testPod-1");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-994");
delete_key k8spolicy::Pod ("testNamespace", "testPod-2");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-995");
delete_key k8spolicy::Pod ("testNamespace", "testPod-3");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-996");
delete_key k8spolicy::Pod ("testNamespace", "testPod-4");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-997");
delete_key k8spolicy::Pod ("testNamespace", "testPod-5");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-998");
delete_key k8spolicy::Pod ("testNamespace", "testPod-6");
delete_key k8spolicy::NetworkPolicy ("testNamespace", "testNP-999");
delete_key k8spolicy::Pod ("testNamespace", "testPod-7");
delete_key k8spolicy::Pod ("testNamespace", "testPod-8");
delete_key k8spolicy::Pod ("testNamespace", "testPod-9");
delete_key k8spolicy::Pod ("testNamespace", "testPod-10");
delete_key k8spolicy::Pod ("testNamespace", "testPod-11");
delete_key k8spolicy::Pod ("testNamespace", "testPod-12");
delete_key k8spolicy::Pod ("testNamespace", "testPod-13");
delete_key k8spolicy::Pod ("testNamespace", "testPod-14");
delete_key k8spolicy::Pod ("testNamespace", "testPod-15");
delete_key k8spolicy::Pod ("testNamespace", "testPod-16");
delete_key k8spolicy::Pod ("testNamespace", "testPod-17");
delete_key k8spolicy::Pod ("testNamespace", "testPod-18");
delete_key k8spolicy::Pod ("testNamespace", "testPod-19");
delete_key k8spolicy::Pod ("testNamespace", "testPod-20");
delete_key k8spolicy::Pod ("testNamespace", "testPod-21");
delete_key k8spolicy::Pod ("testNamespace", "testPod-22");
delete_key k8spolicy::Pod ("testNamespace", "testPod-23");
commit dump_changes;
start;
delete_key k8spolicy::Pod ("testNamespace", "testPod-24");
delete_key k8spolicy::Pod ("testNamespace", "testPod-25");
delete_key k8spolicy::Pod ("testNamespace", "testPod-26");
delete_key k8spolicy::Pod ("testNamespace", "testPod-27");
delete_key k8spolicy::Pod ("testNamespace", "testPod-28");
delete_key k8spolicy::Pod ("testNamespace", "testPod-29");
delete_key k8spolicy::Pod ("testNamespace", "testPod-30");
delete_key k8spolicy::Pod ("testNamespace", "testPod-31");
delete_key k8spolicy::Pod ("testNamespace", "testPod-32");
delete_key k8spolicy::Pod ("testNamespace", "testPod-33");
delete_key k8spolicy::Pod ("testNamespace", "testPod-34");
delete_key k8spolicy::Pod ("testNamespace", "testPod-35");
delete_key k8spolicy::Pod ("testNamespace", "testPod-36");
delete_key k8spolicy::Pod ("testNamespace", "testPod-37");
delete_key k8spolicy::Pod ("testNamespace", "testPod-38");
delete_key k8spolicy::Pod ("testNamespace", "testPod-39");
delete_key k8spolicy::Pod ("testNamespace", "testPod-40");
delete_key k8spolicy::Pod ("testNamespace", "testPod-41");
delete_key k8spolicy::Pod ("testNamespace", "testPod-42");
delete_key k8spolicy::Pod ("testNamespace", "testPod-43");
delete_key k8spolicy::Pod ("testNamespace", "testPod-44");
delete_key k8spolicy::Pod ("testNamespace", "testPod-45");
delete_key k8spolicy::Pod ("testNamespace", "testPod-46");
delete_key k8spolicy::Pod ("testNamespace", "testPod-47");
delete_key k8spolicy::Pod ("testNamespace", "testPod-48");
delete_key k8spolicy::Pod ("testNamespace", "testPod-49");
delete_key k8spolicy::Pod ("testNamespace", "testPod-50");
delete_key k8spolicy::Pod ("testNamespace", "testPod-51");
delete_key k8spolicy::Pod ("testNamespace", "testPod-52");
delete_key k8spolicy::Pod ("testNamespace", "testPod-53");
delete_key k8spolicy::Pod ("testNamespace", "testPod-54");
delete_key k8spolicy::Pod ("testNamespace", "testPod-55");
commit dump_changes;
start;
delete_key k8spolicy::Pod ("testNamespace", "testPod-56");
delete_key k8spolicy::Pod ("testNamespace", "testPod-57");
delete_key k8spolicy::Pod ("testNamespace", "testPod-58");
delete_key k8spolicy::Pod ("testNamespace", "testPod-59");
delete_key k8spolicy::Pod ("testNamespace", "testPod-60");
delete_key k8spolicy::Pod ("testNamespace", "testPod-61");
delete_key k8spolicy::Pod ("testNamespace", "testPod-62");
delete_key k8spolicy::Pod ("testNamespace", "testPod-63");
delete_key k8spolicy::Pod ("testNamespace", "testPod-64");
delete_key k8spolicy::Pod ("testNamespace", "testPod-65");
delete_key k8spolicy::Pod ("testNamespace", "testPod-66");
delete_key k8spolicy::Pod ("testNamespace", "testPod-67");
delete_key k8spolicy::Pod ("testNamespace", "testPod-68");
delete_key k8spolicy::Pod ("testNamespace", "testPod-69");
delete_key k8spolicy::Pod ("testNamespace", "testPod-70");
delete_key k8spolicy::Pod ("testNamespace", "testPod-71");
delete_key k8spolicy::Pod ("testNamespace", "testPod-72");
delete_key k8spolicy::Pod ("testNamespace", "testPod-73");
delete_key k8spolicy::Pod ("testNamespace", "testPod-74");
delete_key k8spolicy::Pod ("testNamespace", "testPod-75");
delete_key k8spolicy::Pod ("testNamespace", "testPod-76");
delete_key k8spolicy::Pod ("testNamespace", "testPod-77");
delete_key k8spolicy::Pod ("testNamespace", "testPod-78");
delete_key k8spolicy::Pod ("testNamespace", "testPod-79");
delete_key k8spolicy::Pod ("testNamespace", "testPod-80");
delete_key k8spolicy::Pod ("testNamespace", "testPod-81");
delete_key k8spolicy::Pod ("testNamespace", "testPod-82");
delete_key k8spolicy::Pod ("testNamespace", "testPod-83");
delete_key k8spolicy::Pod ("testNamespace", "testPod-84");
delete_key k8spolicy::Pod ("testNamespace", "testPod-85");
delete_key k8spolicy::Pod ("testNamespace", "testPod-86");
delete_key k8spolicy::Pod ("testNamespace", "testPod-87");
commit dump_changes;
start;
delete_key k8spolicy::Pod ("testNamespace", "testPod-88");
delete_key k8spolicy::Pod ("testNamespace", "testPod-89");
delete_key k8spolicy::Pod ("testNamespace", "testPod-90");
delete_key k8spolicy::Pod ("testNamespace", "testPod-91");
delete_key k8spolicy::Pod ("testNamespace", "testPod-92");
delete_key k8spolicy::Pod ("testNamespace", "testPod-93");
delete_key k8spolicy::Pod ("testNamespace", "testPod-94");
delete_key k8spolicy::Pod ("testNamespace", "testPod-95");
delete_key k8spolicy::Pod ("testNamespace", "testPod-96");
delete_key k8spolicy::Pod ("testNamespace", "testPod-97");
delete_key k8spolicy::Pod ("testNamespace", "testPod-98");
delete_key k8spolicy::Pod ("testNamespace", "testPod-99");
delete_key k8spolicy::Pod ("testNamespace", "testPod-100");
delete_key k8spolicy::Pod ("testNamespace", "testPod-101");
delete_key k8spolicy::Pod ("testNamespace", "testPod-102");
delete_key k8spolicy::Pod ("testNamespace", "testPod-103");
delete_key k8spolicy::Pod ("testNamespace", "testPod-104");
delete_key k8spolicy::Pod ("testNamespace", "testPod-105");
delete_key k8spolicy::Pod ("testNamespace", "testPod-106");
delete_key k8spolicy::Pod ("testNamespace", "testPod-107");
delete_key k8spolicy::Pod ("testNamespace", "testPod-108");
delete_key k8spolicy::Pod ("testNamespace", "testPod-109");
delete_key k8spolicy::Pod ("testNamespace", "testPod-110");
delete_key k8spolicy::Pod ("testNamespace", "testPod-111");
delete_key k8spolicy::Pod ("testNamespace", "testPod-112");
delete_key k8spolicy::Pod ("testNamespace", "testPod-113");
delete_key k8spolicy::Pod ("testNamespace", "testPod-114");
delete_key k8spolicy::Pod ("testNamespace", "testPod-115");
delete_key k8spolicy::Pod ("testNamespace", "testPod-116");
delete_key k8spolicy::Pod ("testNamespace", "testPod-117");
delete_key k8spolicy::Pod ("testNamespace", "testPod-118");
delete_key k8spolicy::Pod ("testNamespace", "testPod-119");
commit dump_changes;
start;
delete_key k8spolicy::Pod ("testNamespace", "testPod-120");
delete_key k8spolicy::Pod ("testNamespace", "testPod-121");
delete_key k8spolicy::Pod ("testNamespace", "testPod-122");
delete_key k8spolicy::Pod ("testNamespace", "testPod-123");
delete_key k8spolicy::Pod ("testNamespace", "testPod-124");
delete_key k8spolicy::Pod ("testNamespace", "testPod-125");
delete_key k8spolicy::Pod ("testNamespace", "testPod-126");
delete_key k8spolicy::Pod ("testNamespace", "testPod-127");
delete_key k8spolicy::Pod ("testNamespace", "testPod-128");
delete_key k8spolicy::Pod ("testNamespace", "testPod-129");
delete_key k8spolicy::Pod ("testNamespace", "testPod-130");
delete_key k8spolicy::Pod ("testNamespace", "testPod-131");
delete_key k8spolicy::Pod ("testNamespace", "testPod-132");
delete_key k8spolicy::Pod ("testNamespace", "testPod-133");
delete_key k8spolicy::Pod ("testNamespace", "testPod-134");
delete_key k8spolicy::Pod ("testNamespace", "testPod-135");
delete_key k8spolicy::Pod ("testNamespace", "testPod-136");
delete_key k8spolicy::Pod ("testNamespace", "testPod-137");
delete_key k8spolicy::Pod ("testNamespace", "testPod-138");
delete_key k8spolicy::Pod ("testNamespace", "testPod-139");
delete_key k8spolicy::Pod ("testNamespace", "testPod-140");
delete_key k8spolicy::Pod ("testNamespace", "testPod-141");
delete_key k8spolicy::Pod ("testNamespace", "testPod-142");
delete_key k8spolicy::Pod ("testNamespace", "testPod-143");
delete_key k8spolicy::Pod ("testNamespace", "testPod-144");
delete_key k8spolicy::Pod ("testNamespace", "testPod-145");
delete_key k8spolicy::Pod ("testNamespace", "testPod-146");
delete_key k8spolicy::Pod ("testNamespace", "testPod-147");
delete_key k8spolicy::Pod ("testNamespace", "testPod-148");
delete_key k8spolicy::Pod ("testNamespace", "testPod-149");
delete_key k8spolicy::Pod ("testNamespace", "testPod-150");
delete_key k8spolicy::Pod ("testNamespace", "testPod-151");
commit dump_changes;
start;
delete_key k8spolicy::Pod ("testNamespace", "testPod-152");
delete_key k8spolicy::Pod ("testNamespace", "testPod-153");
delete_key k8spolicy::Pod ("testNamespace", "testPod-154");
delete_key k8spolicy::Pod ("testNamespace", "testPod-155");
delete_key k8spolicy::Pod ("testNamespace", "testPod-156");
delete_key k8spolicy::Pod ("testNamespace", "testPod-157");
delete_key k8spolicy::Pod ("testNamespace", "testPod-158");
delete_key k8spolicy::Pod ("testNamespace", "testPod-159");
delete_key k8spolicy::Pod ("testNamespace", "testPod-160");
delete_key k8spolicy::Pod ("testNamespace", "testPod-161");
delete_key k8spolicy::Pod ("testNamespace", "testPod-162");
delete_key k8spolicy::Pod ("testNamespace", "testPod-163");
delete_key k8spolicy::Pod ("testNamespace", "testPod-164");
delete_key k8spolicy::Pod ("testNamespace", "testPod-165");
delete_key k8spolicy::Pod ("testNamespace", "testPod-166");
delete_key k8spolicy::Pod ("testNamespace", "testPod-167");
delete_key k8spolicy::Pod ("testNamespace", "testPod-168");
delete_key k8spolicy::Pod ("testNamespace", "testPod-169");
delete_key k8spolicy::Pod ("testNamespace", "testPod-170");
delete_key k8spolicy::Pod ("testNamespace", "testPod-171");
delete_key k8spolicy::Pod ("testNamespace", "testPod-172");
delete_key k8spolicy::Pod ("testNamespace", "testPod-173");
delete_key k8spolicy::Pod ("testNamespace", "testPod-174");
delete_key k8spolicy::Pod ("testNamespace", "testPod-175");
delete_key k8spolicy::Pod ("testNamespace", "testPod-176");
delete_key k8spolicy::Pod ("testNamespace", "testPod-177");
delete_key k8spolicy::Pod ("testNamespace", "testPod-178");
delete_key k8spolicy::Pod ("testNamespace", "testPod-179");
delete_key k8spolicy::Pod ("testNamespace", "testPod-180");
delete_key k8spolicy::Pod ("testNamespace", "testPod-181");
delete_key k8spolicy::Pod ("testNamespace", "testPod-182");
delete_key k8spolicy::Pod ("testNamespace", "testPod-183");
commit dump_changes;
start;
delete_key k8spolicy::Pod ("testNamespace", "testPod-184");
delete_key k8spolicy::Pod ("testNamespace", "testPod-185");
delete_key k8spolicy::Pod ("testNamespace", "testPod-186");
delete_key k8spolicy::Pod ("testNamespace", "testPod-187");
delete_key k8spolicy::Pod ("testNamespace", "testPod-188");
delete_key k8spolicy::Pod ("testNamespace", "testPod-189");
delete_key k8spolicy::Pod ("testNamespace", "testPod-190");
delete_key k8spolicy::Pod ("testNamespace", "testPod-191");
delete_key k8spolicy::Pod ("testNamespace", "testPod-192");
delete_key k8spolicy::Pod ("testNamespace", "testPod-193");
delete_key k8spolicy::Pod ("testNamespace", "testPod-194");
delete_key k8spolicy::Pod ("testNamespace", "testPod-195");
delete_key k8spolicy::Pod ("testNamespace", "testPod-196");
delete_key k8spolicy::Pod ("testNamespace", "testPod-197");
delete_key k8spolicy::Pod ("testNamespace", "testPod-198");
delete_key k8spolicy::Pod ("testNamespace", "testPod-199");
delete_key k8spolicy::Pod ("testNamespace", "testPod-200");
delete_key k8spolicy::Pod ("testNamespace", "testPod-201");
delete_key k8spolicy::Pod ("testNamespace", "testPod-202");
delete_key k8spolicy::Pod ("testNamespace", "testPod-203");
delete_key k8spolicy::Pod ("testNamespace", "testPod-204");
delete_key k8spolicy::Pod ("testNamespace", "testPod-205");
delete_key k8spolicy::Pod ("testNamespace", "testPod-206");
delete_key k8spolicy::Pod ("testNamespace", "testPod-207");
delete_key k8spolicy::Pod ("testNamespace", "testPod-208");
delete_key k8spolicy::Pod ("testNamespace", "testPod-209");
delete_key k8spolicy::Pod ("testNamespace", "testPod-210");
delete_key k8spolicy::Pod ("testNamespace", "testPod-211");
delete_key k8spolicy::Pod ("testNamespace", "testPod-212");
delete_key k8spolicy::Pod ("testNamespace", "testPod-213");
delete_key k8spolicy::Pod ("testNamespace", "testPod-214");
delete_key k8spolicy::Pod ("testNamespace", "testPod-215");
commit dump_changes;
start;
delete_key k8spolicy::Pod ("testNamespace", "testPod-216");
delete_key k8spolicy::Pod ("testNamespace", "testPod-217");
delete_key k8spolicy::Pod ("testNamespace", "testPod-218");
delete_key k8spolicy::Pod ("testNamespace", "testPod-219");
delete_key k8spolicy::Pod ("testNamespace", "testPod-220");
delete_key k8spolicy::Pod ("testNamespace", "testPod-221");
delete_key k8spolicy::Pod ("testNamespace", "testPod-222");
delete_key k8spolicy::Pod ("testNamespace", "testPod-223");
delete_key k8spolicy::Pod ("testNamespace", "testPod-224");
delete_key k8spolicy::Pod ("testNamespace", "testPod-225");
delete_key k8spolicy::Pod ("testNamespace", "testPod-226");
delete_key k8spolicy::Pod ("testNamespace", "testPod-227");
delete_key k8spolicy::Pod ("testNamespace", "testPod-228");
delete_key k8spolicy::Pod ("testNamespace", "testPod-229");
delete_key k8spolicy::Pod ("testNamespace", "testPod-230");
delete_key k8spolicy::Pod ("testNamespace", "testPod-231");
delete_key k8spolicy::Pod ("testNamespace", "testPod-232");
delete_key k8spolicy::Pod ("testNamespace", "testPod-233");
delete_key k8spolicy::Pod ("testNamespace", "testPod-234");
delete_key k8spolicy::Pod ("testNamespace", "testPod-235");
delete_key k8spolicy::Pod ("testNamespace", "testPod-236");
delete_key k8spolicy::Pod ("testNamespace", "testPod-237");
delete_key k8spolicy::Pod ("testNamespace", "testPod-238");
delete_key k8spolicy::Pod ("testNamespace", "testPod-239");
delete_key k8spolicy::Pod ("testNamespace", "testPod-240");
delete_key k8spolicy::Pod ("testNamespace", "testPod-241");
delete_key k8spolicy::Pod ("testNamespace", "testPod-242");
delete_key k8spolicy::Pod ("testNamespace", "testPod-243");
delete_key k8spolicy::Pod ("testNamespace", "testPod-244");
delete_key k8spolicy::Pod ("testNamespace", "testPod-245");
delete_key k8spolicy::Pod ("testNamespace", "testPod-246");
delete_key k8spolicy::Pod ("testNamespace", "testPod-247");
commit dump_changes;
start;
delete_key k8spolicy::Pod ("testNamespace", "testPod-248");
delete_key k8spolicy::Pod ("testNamespace", "testPod-249");
delete_key k8spolicy::Pod ("testNamespace", "testPod-250");
delete_key k8spolicy::Pod ("testNamespace", "testPod-251");
delete_key k8spolicy::Pod ("testNamespace", "testPod-252");
delete_key k8spolicy::Pod ("testNamespace", "testPod-253");
delete_key k8spolicy::Pod ("testNamespace", "testPod-254");
delete_key k8spolicy::Pod ("testNamespace", "testPod-255");
delete_key k8spolicy::Pod ("testNamespace", "testPod-256");
delete_key k8spolicy::Pod ("testNamespace", "testPod-257");
delete_key k8spolicy::Pod ("testNamespace", "testPod-258");
delete_key k8spolicy::Pod ("testNamespace", "testPod-259");
delete_key k8spolicy::Pod ("testNamespace", "testPod-260");
delete_key k8spolicy::Pod ("testNamespace", "testPod-261");
delete_key k8spolicy::Pod ("testNamespace", "testPod-262");
delete_key k8spolicy::Pod ("testNamespace", "testPod-263");
delete_key k8spolicy::Pod ("testNamespace", "testPod-264");
delete_key k8spolicy::Pod ("testNamespace", "testPod-265");
delete_key k8spolicy::Pod ("testNamespace", "testPod-266");
delete_key k8spolicy::Pod ("testNamespace", "testPod-267");
delete_key k8spolicy::Pod ("testNamespace", "testPod-268");
delete_key k8spolicy::Pod ("testNamespace", "testPod-269");
delete_key k8spolicy::Pod ("testNamespace", "testPod-270");
delete_key k8spolicy::Pod ("testNamespace", "testPod-271");
delete_key k8spolicy::Pod ("testNamespace", "testPod-272");
delete_key k8spolicy::Pod ("testNamespace", "testPod-273");
delete_key k8spolicy::Pod ("testNamespace", "testPod-274");
delete_key k8spolicy::Pod ("testNamespace", "testPod-275");
delete_key k8spolicy::Pod ("testNamespace", "testPod-276");
delete_key k8spolicy::Pod ("testNamespace", "testPod-277");
delete_key k8spolicy::Pod ("testNamespace", "testPod-278");
delete_key k8spolicy::Pod ("testNamespace", "testPod-279");
commit dump_changes;
start;
delete_key k8spolicy::Pod ("testNamespace", "testPod-280");
delete_key k8spolicy::Pod ("testNamespace", "testPod-281");
delete_key k8spolicy::Pod ("testNamespace", "testPod-282");
delete_key k8spolicy::Pod ("testNamespace", "testPod-283");
delete_key k8spolicy::Pod ("testNamespace", "testPod-284");
delete_key k8spolicy::Pod ("testNamespace", "testPod-285");
delete_key k8spolicy::Pod ("testNamespace", "testPod-286");
delete_key k8spolicy::Pod ("testNamespace", "testPod-287");
delete_key k8spolicy::Pod ("testNamespace", "testPod-288");
delete_key k8spolicy::Pod ("testNamespace", "testPod-289");
delete_key k8spolicy::Pod ("testNamespace", "testPod-290");
delete_key k8spolicy::Pod ("testNamespace", "testPod-291");
delete_key k8spolicy::Pod ("testNamespace", "testPod-292");
delete_key k8spolicy::Pod ("testNamespace", "testPod-293");
delete_key k8spolicy::Pod ("testNamespace", "testPod-294");
delete_key k8spolicy::Pod ("testNamespace", "testPod-295");
delete_key k8spolicy::Pod ("testNamespace", "testPod-296");
delete_key k8spolicy::Pod ("testNamespace", "testPod-297");
delete_key k8spolicy::Pod ("testNamespace", "testPod-298");
delete_key k8spolicy::Pod ("testNamespace", "testPod-299");
delete_key k8spolicy::Pod ("testNamespace", "testPod-300");
delete_key k8spolicy::Pod ("testNamespace", "testPod-301");
delete_key k8spolicy::Pod ("testNamespace", "testPod-302");
delete_key k8spolicy::Pod ("testNamespace", "testPod-303");
delete_key k8spolicy::Pod ("testNamespace", "testPod-304");
delete_key k8spolicy::Pod ("testNamespace", "testPod-305");
delete_key k8spolicy::Pod ("testNamespace", "testPod-306");
delete_key k8spolicy::Pod ("testNamespace", "testPod-307");
delete_key k8spolicy::Pod ("testNamespace", "testPod-308");
delete_key k8spolicy::Pod ("testNamespace", "testPod-309");
delete_key k8spolicy::Pod ("testNamespace", "testPod-310");
delete_key k8spolicy::Pod ("testNamespace", "testPod-311");
commit dump_changes;
start;
delete_key k8spolicy::Pod ("testNamespace", "testPod-312");
delete_key k8spolicy::Pod ("testNamespace", "testPod-313");
delete_key k8spolicy::Pod ("testNamespace", "testPod-314");
delete_key k8spolicy::Pod ("testNamespace", "testPod-315");
delete_key k8spolicy::Pod ("testNamespace", "testPod-316");
delete_key k8spolicy::Pod ("testNamespace", "testPod-317");
delete_key k8spolicy::Pod ("testNamespace", "testPod-318");
delete_key k8spolicy::Pod ("testNamespace", "testPod-319");
delete_key k8spolicy::Pod ("testNamespace", "testPod-320");
delete_key k8spolicy::Pod ("testNamespace", "testPod-321");
delete_key k8spolicy::Pod ("testNamespace", "testPod-322");
delete_key k8spolicy::Pod ("testNamespace", "testPod-323");
delete_key k8spolicy::Pod ("testNamespace", "testPod-324");
delete_key k8spolicy::Pod ("testNamespace", "testPod-325");
delete_key k8spolicy::Pod ("testNamespace", "testPod-326");
delete_key k8spolicy::Pod ("testNamespace", "testPod-327");
delete_key k8spolicy::Pod ("testNamespace", "testPod-328");
delete_key k8spolicy::Pod ("testNamespace", "testPod-329");
delete_key k8spolicy::Pod ("testNamespace", "testPod-330");
delete_key k8spolicy::Pod ("testNamespace", "testPod-331");
delete_key k8spolicy::Pod ("testNamespace", "testPod-332");
delete_key k8spolicy::Pod ("testNamespace", "testPod-333");
delete_key k8spolicy::Pod ("testNamespace", "testPod-334");
delete_key k8spolicy::Pod ("testNamespace", "testPod-335");
delete_key k8spolicy::Pod ("testNamespace", "testPod-336");
delete_key k8spolicy::Pod ("testNamespace", "testPod-337");
delete_key k8spolicy::Pod ("testNamespace", "testPod-338");
delete_key k8spolicy::Pod ("testNamespace", "testPod-339");
delete_key k8spolicy::Pod ("testNamespace", "testPod-340");
delete_key k8spolicy::Pod ("testNamespace", "testPod-341");
delete_key k8spolicy::Pod ("testNamespace", "testPod-342");
delete_key k8spolicy::Pod ("testNamespace", "testPod-343");
commit dump_changes;
start;
delete_key k8spolicy::Pod ("testNamespace", "testPod-344");
delete_key k8spolicy::Pod ("testNamespace", "testPod-345");
delete_key k8spolicy::Pod ("testNamespace", "testPod-346");
delete_key k8spolicy::Pod ("testNamespace", "testPod-347");
delete_key k8spolicy::Pod ("testNamespace", "testPod-348");
delete_key k8spolicy::Pod ("testNamespace", "testPod-349");
delete_key k8spolicy::Pod ("testNamespace", "testPod-350");
delete_key k8spolicy::Pod ("testNamespace", "testPod-351");
delete_key k8spolicy::Pod ("testNamespace", "testPod-352");
delete_key k8spolicy::Pod ("testNamespace", "testPod-353");
delete_key k8spolicy::Pod ("testNamespace", "testPod-354");
delete_key k8spolicy::Pod ("testNamespace", "testPod-355");
delete_key k8spolicy::Pod ("testNamespace", "testPod-356");
delete_key k8spolicy::Pod ("testNamespace", "testPod-357");
delete_key k8spolicy::Pod ("testNamespace", "testPod-358");
delete_key k8spolicy::Pod ("testNamespace", "testPod-359");
delete_key k8spolicy::Pod ("testNamespace", "testPod-360");
delete_key k8spolicy::Pod ("testNamespace", "testPod-361");
delete_key k8spolicy::Pod ("testNamespace", "testPod-362");
delete_key k8spolicy::Pod ("testNamespace", "testPod-363");
delete_key k8spolicy::Pod ("testNamespace", "testPod-364");
delete_key k8spolicy::Pod ("testNamespace", "testPod-365");
delete_key k8spolicy::Pod ("testNamespace", "testPod-366");
delete_key k8spolicy::Pod ("testNamespace", "testPod-367");
delete_key k8spolicy::Pod ("testNamespace", "testPod-368");
delete_key k8spolicy::Pod ("testNamespace", "testPod-369");
delete_key k8spolicy::Pod ("testNamespace", "testPod-370");
delete_key k8spolicy::Pod ("testNamespace", "testPod-371");
delete_key k8spolicy::Pod ("testNamespace", "testPod-372");
delete_key k8spolicy::Pod ("testNamespace", "testPod-373");
delete_key k8spolicy::Pod ("testNamespace", "testPod-374");
delete_key k8spolicy::Pod ("testNamespace", "testPod-375");
commit dump_changes;
start;
delete_key k8spolicy::Pod ("testNamespace", "testPod-376");
delete_key k8spolicy::Pod ("testNamespace", "testPod-377");
delete_key k8spolicy::Pod ("testNamespace", "testPod-378");
delete_key k8spolicy::Pod ("testNamespace", "testPod-379");
delete_key k8spolicy::Pod ("testNamespace", "testPod-380");
delete_key k8spolicy::Pod ("testNamespace", "testPod-381");
delete_key k8spolicy::Pod ("testNamespace", "testPod-382");
delete_key k8spolicy::Pod ("testNamespace", "testPod-383");
delete_key k8spolicy::Pod ("testNamespace", "testPod-384");
delete_key k8spolicy::Pod ("testNamespace", "testPod-385");
delete_key k8spolicy::Pod ("testNamespace", "testPod-386");
delete_key k8spolicy::Pod ("testNamespace", "testPod-387");
delete_key k8spolicy::Pod ("testNamespace", "testPod-388");
delete_key k8spolicy::Pod ("testNamespace", "testPod-389");
delete_key k8spolicy::Pod ("testNamespace", "testPod-390");
delete_key k8spolicy::Pod ("testNamespace", "testPod-391");
delete_key k8spolicy::Pod ("testNamespace", "testPod-392");
delete_key k8spolicy::Pod ("testNamespace", "testPod-393");
delete_key k8spolicy::Pod ("testNamespace", "testPod-394");
delete_key k8spolicy::Pod ("testNamespace", "testPod-395");
delete_key k8spolicy::Pod ("testNamespace", "testPod-396");
delete_key k8spolicy::Pod ("testNamespace", "testPod-397");
delete_key k8spolicy::Pod ("testNamespace", "testPod-398");
delete_key k8spolicy::Pod ("testNamespace", "testPod-399");
delete_key k8spolicy::Pod ("testNamespace", "testPod-400");
delete_key k8spolicy::Pod ("testNamespace", "testPod-401");
delete_key k8spolicy::Pod ("testNamespace", "testPod-402");
delete_key k8spolicy::Pod ("testNamespace", "testPod-403");
delete_key k8spolicy::Pod ("testNamespace", "testPod-404");
delete_key k8spolicy::Pod ("testNamespace", "testPod-405");
delete_key k8spolicy::Pod ("testNamespace", "testPod-406");
delete_key k8spolicy::Pod ("testNamespace", "testPod-407");
commit dump_changes;
start;
delete_key k8spolicy::Pod ("testNamespace", "testPod-408");
delete_key k8spolicy::Pod ("testNamespace", "testPod-409");
delete_key k8spolicy::Pod ("testNamespace", "testPod-410");
delete_key k8spolicy::Pod ("testNamespace", "testPod-411");
delete_key k8spolicy::Pod ("testNamespace", "testPod-412");
delete_key k8spolicy::Pod ("testNamespace", "testPod-413");
delete_key k8spolicy::Pod ("testNamespace", "testPod-414");
delete_key k8spolicy::Pod ("testNamespace", "testPod-415");
delete_key k8spolicy::Pod ("testNamespace", "testPod-416");
delete_key k8spolicy::Pod ("testNamespace", "testPod-417");
delete_key k8spolicy::Pod ("testNamespace", "testPod-418");
delete_key k8spolicy::Pod ("testNamespace", "testPod-419");
delete_key k8spolicy::Pod ("testNamespace", "testPod-420");
delete_key k8spolicy::Pod ("testNamespace", "testPod-421");
delete_key k8spolicy::Pod ("testNamespace", "testPod-422");
delete_key k8spolicy::Pod ("testNamespace", "testPod-423");
delete_key k8spolicy::Pod ("testNamespace", "testPod-424");
delete_key k8spolicy::Pod ("testNamespace", "testPod-425");
delete_key k8spolicy::Pod ("testNamespace", "testPod-426");
delete_key k8spolicy::Pod ("testNamespace", "testPod-427");
delete_key k8spolicy::Pod ("testNamespace", "testPod-428");
delete_key k8spolicy::Pod ("testNamespace", "testPod-429");
delete_key k8spolicy::Pod ("testNamespace", "testPod-430");
delete_key k8spolicy::Pod ("testNamespace", "testPod-431");
delete_key k8spolicy::Pod ("testNamespace", "testPod-432");
delete_key k8spolicy::Pod ("testNamespace", "testPod-433");
delete_key k8spolicy::Pod ("testNamespace", "testPod-434");
delete_key k8spolicy::Pod ("testNamespace", "testPod-435");
delete_key k8spolicy::Pod ("testNamespace", "testPod-436");
delete_key k8spolicy::Pod ("testNamespace", "testPod-437");
delete_key k8spolicy::Pod ("testNamespace", "testPod-438");
delete_key k8spolicy::Pod ("testNamespace", "testPod-439");
commit dump_changes;
start;
delete_key k8spolicy::Pod ("testNamespace", "testPod-440");
delete_key k8spolicy::Pod ("testNamespace", "testPod-441");
delete_key k8spolicy::Pod ("testNamespace", "testPod-442");
delete_key k8spolicy::Pod ("testNamespace", "testPod-443");
delete_key k8spolicy::Pod ("testNamespace", "testPod-444");
delete_key k8spolicy::Pod ("testNamespace", "testPod-445");
delete_key k8spolicy::Pod ("testNamespace", "testPod-446");
delete_key k8spolicy::Pod ("testNamespace", "testPod-447");
delete_key k8spolicy::Pod ("testNamespace", "testPod-448");
delete_key k8spolicy::Pod ("testNamespace", "testPod-449");
delete_key k8spolicy::Pod ("testNamespace", "testPod-450");
delete_key k8spolicy::Pod ("testNamespace", "testPod-451");
delete_key k8spolicy::Pod ("testNamespace", "testPod-452");
delete_key k8spolicy::Pod ("testNamespace", "testPod-453");
delete_key k8spolicy::Pod ("testNamespace", "testPod-454");
delete_key k8spolicy::Pod ("testNamespace", "testPod-455");
delete_key k8spolicy::Pod ("testNamespace", "testPod-456");
delete_key k8spolicy::Pod ("testNamespace", "testPod-457");
delete_key k8spolicy::Pod ("testNamespace", "testPod-458");
delete_key k8spolicy::Pod ("testNamespace", "testPod-459");
delete_key k8spolicy::Pod ("testNamespace", "testPod-460");
delete_key k8spolicy::Pod ("testNamespace", "testPod-461");
delete_key k8spolicy::Pod ("testNamespace", "testPod-462");
delete_key k8spolicy::Pod ("testNamespace", "testPod-463");
delete_key k8spolicy::Pod ("testNamespace", "testPod-464");
delete_key k8spolicy::Pod ("testNamespace", "testPod-465");
delete_key k8spolicy::Pod ("testNamespace", "testPod-466");
delete_key k8spolicy::Pod ("testNamespace", "testPod-467");
delete_key k8spolicy::Pod ("testNamespace", "testPod-468");
delete_key k8spolicy::Pod ("testNamespace", "testPod-469");
delete_key k8spolicy::Pod ("testNamespace", "testPod-470");
delete_key k8spolicy::Pod ("testNamespace", "testPod-471");
commit dump_changes;
start;
delete_key k8spolicy::Pod ("testNamespace", "testPod-472");
delete_key k8spolicy::Pod ("testNamespace", "testPod-473");
delete_key k8spolicy::Pod ("testNamespace", "testPod-474");
delete_key k8spolicy::Pod ("testNamespace", "testPod-475");
delete_key k8spolicy::Pod ("testNamespace", "testPod-476");
delete_key k8spolicy::Pod ("testNamespace", "testPod-477");
delete_key k8spolicy::Pod ("testNamespace", "testPod-478");
delete_key k8spolicy::Pod ("testNamespace", "testPod-479");
delete_key k8spolicy::Pod ("testNamespace", "testPod-480");
delete_key k8spolicy::Pod ("testNamespace", "testPod-481");
delete_key k8spolicy::Pod ("testNamespace", "testPod-482");
delete_key k8spolicy::Pod ("testNamespace", "testPod-483");
delete_key k8spolicy::Pod ("testNamespace", "testPod-484");
delete_key k8spolicy::Pod ("testNamespace", "testPod-485");
delete_key k8spolicy::Pod ("testNamespace", "testPod-486");
delete_key k8spolicy::Pod ("testNamespace", "testPod-487");
delete_key k8spolicy::Pod ("testNamespace", "testPod-488");
delete_key k8spolicy::Pod ("testNamespace", "testPod-489");
delete_key k8spolicy::Pod ("testNamespace", "testPod-490");
delete_key k8spolicy::Pod ("testNamespace", "testPod-491");
delete_key k8spolicy::Pod ("testNamespace", "testPod-492");
delete_key k8spolicy::Pod ("testNamespace", "testPod-493");
delete_key k8spolicy::Pod ("testNamespace", "testPod-494");
delete_key k8spolicy::Pod ("testNamespace", "testPod-495");
delete_key k8spolicy::Pod ("testNamespace", "testPod-496");
delete_key k8spolicy::Pod ("testNamespace", "testPod-497");
delete_key k8spolicy::Pod ("testNamespace", "testPod-498");
delete_key k8spolicy::Pod ("testNamespace", "testPod-499");
delete_key k8spolicy::Pod ("testNamespace", "testPod-500");
delete_key k8spolicy::Pod ("testNamespace", "testPod-501");
delete_key k8spolicy::Pod ("testNamespace", "testPod-502");
delete_key k8spolicy::Pod ("testNamespace", "testPod-503");
commit dump_changes;
start;
delete_key k8spolicy::Pod ("testNamespace", "testPod-504");
delete_key k8spolicy::Pod ("testNamespace", "testPod-505");
delete_key k8spolicy::Pod ("testNamespace", "testPod-506");
delete_key k8spolicy::Pod ("testNamespace", "testPod-507");
delete_key k8spolicy::Pod ("testNamespace", "testPod-508");
delete_key k8spolicy::Pod ("testNamespace", "testPod-509");
delete_key k8spolicy::Pod ("testNamespace", "testPod-510");
delete_key k8spolicy::Pod ("testNamespace", "testPod-511");
delete_key k8spolicy::Pod ("testNamespace", "testPod-512");
delete_key k8spolicy::Pod ("testNamespace", "testPod-513");
delete_key k8spolicy::Pod ("testNamespace", "testPod-514");
delete_key k8spolicy::Pod ("testNamespace", "testPod-515");
delete_key k8spolicy::Pod ("testNamespace", "testPod-516");
delete_key k8spolicy::Pod ("testNamespace", "testPod-517");
delete_key k8spolicy::Pod ("testNamespace", "testPod-518");
delete_key k8spolicy::Pod ("testNamespace", "testPod-519");
delete_key k8spolicy::Pod ("testNamespace", "testPod-520");
delete_key k8spolicy::Pod ("testNamespace", "testPod-521");
delete_key k8spolicy::Pod ("testNamespace", "testPod-522");
delete_key k8spolicy::Pod ("testNamespace", "testPod-523");
delete_key k8spolicy::Pod ("testNamespace", "testPod-524");
delete_key k8spolicy::Pod ("testNamespace", "testPod-525");
delete_key k8spolicy::Pod ("testNamespace", "testPod-526");
delete_key k8spolicy::Pod ("testNamespace", "testPod-527");
delete_key k8spolicy::Pod ("testNamespace", "testPod-528");
delete_key k8spolicy::Pod ("testNamespace", "testPod-529");
delete_key k8spolicy::Pod ("testNamespace", "testPod-530");
delete_key k8spolicy::Pod ("testNamespace", "testPod-531");
delete_key k8spolicy::Pod ("testNamespace", "testPod-532");
delete_key k8spolicy::Pod ("testNamespace", "testPod-533");
delete_key k8spolicy::Pod ("testNamespace", "testPod-534");
delete_key k8spolicy::Pod ("testNamespace", "testPod-535");
commit dump_changes;
start;
delete_key k8spolicy::Pod ("testNamespace", "testPod-536");
delete_key k8spolicy::Pod ("testNamespace", "testPod-537");
delete_key k8spolicy::Pod ("testNamespace", "testPod-538");
delete_key k8spolicy::Pod ("testNamespace", "testPod-539");
delete_key k8spolicy::Pod ("testNamespace", "testPod-540");
delete_key k8spolicy::Pod ("testNamespace", "testPod-541");
delete_key k8spolicy::Pod ("testNamespace", "testPod-542");
delete_key k8spolicy::Pod ("testNamespace", "testPod-543");
delete_key k8spolicy::Pod ("testNamespace", "testPod-544");
delete_key k8spolicy::Pod ("testNamespace", "testPod-545");
delete_key k8spolicy::Pod ("testNamespace", "testPod-546");
delete_key k8spolicy::Pod ("testNamespace", "testPod-547");
delete_key k8spolicy::Pod ("testNamespace", "testPod-548");
delete_key k8spolicy::Pod ("testNamespace", "testPod-549");
delete_key k8spolicy::Pod ("testNamespace", "testPod-550");
delete_key k8spolicy::Pod ("testNamespace", "testPod-551");
delete_key k8spolicy::Pod ("testNamespace", "testPod-552");
delete_key k8spolicy::Pod ("testNamespace", "testPod-553");
delete_key k8spolicy::Pod ("testNamespace", "testPod-554");
delete_key k8spolicy::Pod ("testNamespace", "testPod-555");
delete_key k8spolicy::Pod ("testNamespace", "testPod-556");
delete_key k8spolicy::Pod ("testNamespace", "testPod-557");
delete_key k8spolicy::Pod ("testNamespace", "testPod-558");
delete_key k8spolicy::Pod ("testNamespace", "testPod-559");
delete_key k8spolicy::Pod ("testNamespace", "testPod-560");
delete_key k8spolicy::Pod ("testNamespace", "testPod-561");
delete_key k8spolicy::Pod ("testNamespace", "testPod-562");
delete_key k8spolicy::Pod ("testNamespace", "testPod-563");
delete_key k8spolicy::Pod ("testNamespace", "testPod-564");
delete_key k8spolicy::Pod ("testNamespace", "testPod-565");
delete_key k8spolicy::Pod ("testNamespace", "testPod-566");
delete_key k8spolicy::Pod ("testNamespace", "testPod-567");
commit dump_changes;
start;
delete_key k8spolicy::Pod ("testNamespace", "testPod-568");
delete_key k8spolicy::Pod ("testNamespace", "testPod-569");
delete_key k8spolicy::Pod ("testNamespace", "testPod-570");
delete_key k8spolicy::Pod ("testNamespace", "testPod-571");
delete_key k8spolicy::Pod ("testNamespace", "testPod-572");
delete_key k8spolicy::Pod ("testNamespace", "testPod-573");
delete_key k8spolicy::Pod ("testNamespace", "testPod-574");
delete_key k8spolicy::Pod ("testNamespace", "testPod-575");
delete_key k8spolicy::Pod ("testNamespace", "testPod-576");
delete_key k8spolicy::Pod ("testNamespace", "testPod-577");
delete_key k8spolicy::Pod ("testNamespace", "testPod-578");
delete_key k8spolicy::Pod ("testNamespace", "testPod-579");
delete_key k8spolicy::Pod ("testNamespace", "testPod-580");
delete_key k8spolicy::Pod ("testNamespace", "testPod-581");
delete_key k8spolicy::Pod ("testNamespace", "testPod-582");
delete_key k8spolicy::Pod ("testNamespace", "testPod-583");
delete_key k8spolicy::Pod ("testNamespace", "testPod-584");
delete_key k8spolicy::Pod ("testNamespace", "testPod-585");
delete_key k8spolicy::Pod ("testNamespace", "testPod-586");
delete_key k8spolicy::Pod ("testNamespace", "testPod-587");
delete_key k8spolicy::Pod ("testNamespace", "testPod-588");
delete_key k8spolicy::Pod ("testNamespace", "testPod-589");
delete_key k8spolicy::Pod ("testNamespace", "testPod-590");
delete_key k8spolicy::Pod ("testNamespace", "testPod-591");
delete_key k8spolicy::Pod ("testNamespace", "testPod-592");
delete_key k8spolicy::Pod ("testNamespace", "testPod-593");
delete_key k8spolicy::Pod ("testNamespace", "testPod-594");
delete_key k8spolicy::Pod ("testNamespace", "testPod-595");
delete_key k8spolicy::Pod ("testNamespace", "testPod-596");
delete_key k8spolicy::Pod ("testNamespace", "testPod-597");
delete_key k8spolicy::Pod ("testNamespace", "testPod-598");
delete_key k8spolicy::Pod ("testNamespace", "testPod-599");
commit dump_changes;
start;
delete_key k8spolicy::Pod ("testNamespace", "testPod-600");
delete_key k8spolicy::Pod ("testNamespace", "testPod-601");
delete_key k8spolicy::Pod ("testNamespace", "testPod-602");
delete_key k8spolicy::Pod ("testNamespace", "testPod-603");
delete_key k8spolicy::Pod ("testNamespace", "testPod-604");
delete_key k8spolicy::Pod ("testNamespace", "testPod-605");
delete_key k8spolicy::Pod ("testNamespace", "testPod-606");
delete_key k8spolicy::Pod ("testNamespace", "testPod-607");
delete_key k8spolicy::Pod ("testNamespace", "testPod-608");
delete_key k8spolicy::Pod ("testNamespace", "testPod-609");
delete_key k8spolicy::Pod ("testNamespace", "testPod-610");
delete_key k8spolicy::Pod ("testNamespace", "testPod-611");
delete_key k8spolicy::Pod ("testNamespace", "testPod-612");
delete_key k8spolicy::Pod ("testNamespace", "testPod-613");
delete_key k8spolicy::Pod ("testNamespace", "testPod-614");
delete_key k8spolicy::Pod ("testNamespace", "testPod-615");
delete_key k8spolicy::Pod ("testNamespace", "testPod-616");
delete_key k8spolicy::Pod ("testNamespace", "testPod-617");
delete_key k8spolicy::Pod ("testNamespace", "testPod-618");
delete_key k8spolicy::Pod ("testNamespace", "testPod-619");
delete_key k8spolicy::Pod ("testNamespace", "testPod-620");
delete_key k8spolicy::Pod ("testNamespace", "testPod-621");
delete_key k8spolicy::Pod ("testNamespace", "testPod-622");
delete_key k8spolicy::Pod ("testNamespace", "testPod-623");
delete_key k8spolicy::Pod ("testNamespace", "testPod-624");
delete_key k8spolicy::Pod ("testNamespace", "testPod-625");
delete_key k8spolicy::Pod ("testNamespace", "testPod-626");
delete_key k8spolicy::Pod ("testNamespace", "testPod-627");
delete_key k8spolicy::Pod ("testNamespace", "testPod-628");
delete_key k8spolicy::Pod ("testNamespace", "testPod-629");
delete_key k8spolicy::Pod ("testNamespace", "testPod-630");
delete_key k8spolicy::Pod ("testNamespace", "testPod-631");
commit dump_changes;
start;
delete_key k8spolicy::Pod ("testNamespace", "testPod-632");
delete_key k8spolicy::Pod ("testNamespace", "testPod-633");
delete_key k8spolicy::Pod ("testNamespace", "testPod-634");
delete_key k8spolicy::Pod ("testNamespace", "testPod-635");
delete_key k8spolicy::Pod ("testNamespace", "testPod-636");
delete_key k8spolicy::Pod ("testNamespace", "testPod-637");
delete_key k8spolicy::Pod ("testNamespace", "testPod-638");
delete_key k8spolicy::Pod ("testNamespace", "testPod-639");
delete_key k8spolicy::Pod ("testNamespace", "testPod-640");
delete_key k8spolicy::Pod ("testNamespace", "testPod-641");
delete_key k8spolicy::Pod ("testNamespace", "testPod-642");
delete_key k8spolicy::Pod ("testNamespace", "testPod-643");
delete_key k8spolicy::Pod ("testNamespace", "testPod-644");
delete_key k8spolicy::Pod ("testNamespace", "testPod-645");
delete_key k8spolicy::Pod ("testNamespace", "testPod-646");
delete_key k8spolicy::Pod ("testNamespace", "testPod-647");
delete_key k8spolicy::Pod ("testNamespace", "testPod-648");
delete_key k8spolicy::Pod ("testNamespace", "testPod-649");
delete_key k8spolicy::Pod ("testNamespace", "testPod-650");
delete_key k8spolicy::Pod ("testNamespace", "testPod-651");
delete_key k8spolicy::Pod ("testNamespace", "testPod-652");
delete_key k8spolicy::Pod ("testNamespace", "testPod-653");
delete_key k8spolicy::Pod ("testNamespace", "testPod-654");
delete_key k8spolicy::Pod ("testNamespace", "testPod-655");
delete_key k8spolicy::Pod ("testNamespace", "testPod-656");
delete_key k8spolicy::Pod ("testNamespace", "testPod-657");
delete_key k8spolicy::Pod ("testNamespace", "testPod-658");
delete_key k8spolicy::Pod ("testNamespace", "testPod-659");
delete_key k8spolicy::Pod ("testNamespace", "testPod-660");
delete_key k8spolicy::Pod ("testNamespace", "testPod-661");
delete_key k8spolicy::Pod ("testNamespace", "testPod-662");
delete_key k8spolicy::Pod ("testNamespace", "testPod-663");
commit dump_changes;
start;
delete_key k8spolicy::Pod ("testNamespace", "testPod-664");
delete_key k8spolicy::Pod ("testNamespace", "testPod-665");
delete_key k8spolicy::Pod ("testNamespace", "testPod-666");
delete_key k8spolicy::Pod ("testNamespace", "testPod-667");
delete_key k8spolicy::Pod ("testNamespace", "testPod-668");
delete_key k8spolicy::Pod ("testNamespace", "testPod-669");
delete_key k8spolicy::Pod ("testNamespace", "testPod-670");
delete_key k8spolicy::Pod ("testNamespace", "testPod-671");
delete_key k8spolicy::Pod ("testNamespace", "testPod-672");
delete_key k8spolicy::Pod ("testNamespace", "testPod-673");
delete_key k8spolicy::Pod ("testNamespace", "testPod-674");
delete_key k8spolicy::Pod ("testNamespace", "testPod-675");
delete_key k8spolicy::Pod ("testNamespace", "testPod-676");
delete_key k8spolicy::Pod ("testNamespace", "testPod-677");
delete_key k8spolicy::Pod ("testNamespace", "testPod-678");
delete_key k8spolicy::Pod ("testNamespace", "testPod-679");
delete_key k8spolicy::Pod ("testNamespace", "testPod-680");
delete_key k8spolicy::Pod ("testNamespace", "testPod-681");
delete_key k8spolicy::Pod ("testNamespace", "testPod-682");
delete_key k8spolicy::Pod ("testNamespace", "testPod-683");
delete_key k8spolicy::Pod ("testNamespace", "testPod-684");
delete_key k8spolicy::Pod ("testNamespace", "testPod-685");
delete_key k8spolicy::Pod ("testNamespace", "testPod-686");
delete_key k8spolicy::Pod ("testNamespace", "testPod-687");
delete_key k8spolicy::Pod ("testNamespace", "testPod-688");
delete_key k8spolicy::Pod ("testNamespace", "testPod-689");
delete_key k8spolicy::Pod ("testNamespace", "testPod-690");
delete_key k8spolicy::Pod ("testNamespace", "testPod-691");
delete_key k8spolicy::Pod ("testNamespace", "testPod-692");
delete_key k8spolicy::Pod ("testNamespace", "testPod-693");
delete_key k8spolicy::Pod ("testNamespace", "testPod-694");
delete_key k8spolicy::Pod ("testNamespace", "testPod-695");
commit dump_changes;
start;
delete_key k8spolicy::Pod ("testNamespace", "testPod-696");
delete_key k8spolicy::Pod ("testNamespace", "testPod-697");
delete_key k8spolicy::Pod ("testNamespace", "testPod-698");
delete_key k8spolicy::Pod ("testNamespace", "testPod-699");
delete_key k8spolicy::Pod ("testNamespace", "testPod-700");
delete_key k8spolicy::Pod ("testNamespace", "testPod-701");
delete_key k8spolicy::Pod ("testNamespace", "testPod-702");
delete_key k8spolicy::Pod ("testNamespace", "testPod-703");
delete_key k8spolicy::Pod ("testNamespace", "testPod-704");
delete_key k8spolicy::Pod ("testNamespace", "testPod-705");
delete_key k8spolicy::Pod ("testNamespace", "testPod-706");
delete_key k8spolicy::Pod ("testNamespace", "testPod-707");
delete_key k8spolicy::Pod ("testNamespace", "testPod-708");
delete_key k8spolicy::Pod ("testNamespace", "testPod-709");
delete_key k8spolicy::Pod ("testNamespace", "testPod-710");
delete_key k8spolicy::Pod ("testNamespace", "testPod-711");
delete_key k8spolicy::Pod ("testNamespace", "testPod-712");
delete_key k8spolicy::Pod ("testNamespace", "testPod-713");
delete_key k8spolicy::Pod ("testNamespace", "testPod-714");
delete_key k8spolicy::Pod ("testNamespace", "testPod-715");
delete_key k8spolicy::Pod ("testNamespace", "testPod-716");
delete_key k8spolicy::Pod ("testNamespace", "testPod-717");
delete_key k8spolicy::Pod ("testNamespace", "testPod-718");
delete_key k8spolicy::Pod ("testNamespace", "testPod-719");
delete_key k8spolicy::Pod ("testNamespace", "testPod-720");
delete_key k8spolicy::Pod ("testNamespace", "testPod-721");
delete_key k8spolicy::Pod ("testNamespace", "testPod-722");
delete_key k8spolicy::Pod ("testNamespace", "testPod-723");
delete_key k8spolicy::Pod ("testNamespace", "testPod-724");
delete_key k8spolicy::Pod ("testNamespace", "testPod-725");
delete_key k8spolicy::Pod ("testNamespace", "testPod-726");
delete_key k8spolicy::Pod ("testNamespace", "testPod-727");
commit dump_changes;
start;
delete_key k8spolicy::Pod ("testNamespace", "testPod-728");
delete_key k8spolicy::Pod ("testNamespace", "testPod-729");
delete_key k8spolicy::Pod ("testNamespace", "testPod-730");
delete_key k8spolicy::Pod ("testNamespace", "testPod-731");
delete_key k8spolicy::Pod ("testNamespace", "testPod-732");
delete_key k8spolicy::Pod ("testNamespace", "testPod-733");
delete_key k8spolicy::Pod ("testNamespace", "testPod-734");
delete_key k8spolicy::Pod ("testNamespace", "testPod-735");
delete_key k8spolicy::Pod ("testNamespace", "testPod-736");
delete_key k8spolicy::Pod ("testNamespace", "testPod-737");
delete_key k8spolicy::Pod ("testNamespace", "testPod-738");
delete_key k8spolicy::Pod ("testNamespace", "testPod-739");
delete_key k8spolicy::Pod ("testNamespace", "testPod-740");
delete_key k8spolicy::Pod ("testNamespace", "testPod-741");
delete_key k8spolicy::Pod ("testNamespace", "testPod-742");
delete_key k8spolicy::Pod ("testNamespace", "testPod-743");
delete_key k8spolicy::Pod ("testNamespace", "testPod-744");
delete_key k8spolicy::Pod ("testNamespace", "testPod-745");
delete_key k8spolicy::Pod ("testNamespace", "testPod-746");
delete_key k8spolicy::Pod ("testNamespace", "testPod-747");
delete_key k8spolicy::Pod ("testNamespace", "testPod-748");
delete_key k8spolicy::Pod ("testNamespace", "testPod-749");
delete_key k8spolicy::Pod ("testNamespace", "testPod-750");
delete_key k8spolicy::Pod ("testNamespace", "testPod-751");
delete_key k8spolicy::Pod ("testNamespace", "testPod-752");
delete_key k8spolicy::Pod ("testNamespace", "testPod-753");
delete_key k8spolicy::Pod ("testNamespace", "testPod-754");
delete_key k8spolicy::Pod ("testNamespace", "testPod-755");
delete_key k8spolicy::Pod ("testNamespace", "testPod-756");
delete_key k8spolicy::Pod ("testNamespace", "testPod-757");
delete_key k8spolicy::Pod ("testNamespace", "testPod-758");
delete_key k8spolicy::Pod ("testNamespace", "testPod-759");
commit dump_changes;
start;
delete_key k8spolicy::Pod ("testNamespace", "testPod-760");
delete_key k8spolicy::Pod ("testNamespace", "testPod-761");
delete_key k8spolicy::Pod ("testNamespace", "testPod-762");
delete_key k8spolicy::Pod ("testNamespace", "testPod-763");
delete_key k8spolicy::Pod ("testNamespace", "testPod-764");
delete_key k8spolicy::Pod ("testNamespace", "testPod-765");
delete_key k8spolicy::Pod ("testNamespace", "testPod-766");
delete_key k8spolicy::Pod ("testNamespace", "testPod-767");
delete_key k8spolicy::Pod ("testNamespace", "testPod-768");
delete_key k8spolicy::Pod ("testNamespace", "testPod-769");
delete_key k8spolicy::Pod ("testNamespace", "testPod-770");
delete_key k8spolicy::Pod ("testNamespace", "testPod-771");
delete_key k8spolicy::Pod ("testNamespace", "testPod-772");
delete_key k8spolicy::Pod ("testNamespace", "testPod-773");
delete_key k8spolicy::Pod ("testNamespace", "testPod-774");
delete_key k8spolicy::Pod ("testNamespace", "testPod-775");
delete_key k8spolicy::Pod ("testNamespace", "testPod-776");
delete_key k8spolicy::Pod ("testNamespace", "testPod-777");
delete_key k8spolicy::Pod ("testNamespace", "testPod-778");
delete_key k8spolicy::Pod ("testNamespace", "testPod-779");
delete_key k8spolicy::Pod ("testNamespace", "testPod-780");
delete_key k8spolicy::Pod ("testNamespace", "testPod-781");
delete_key k8spolicy::Pod ("testNamespace", "testPod-782");
delete_key k8spolicy::Pod ("testNamespace", "testPod-783");
delete_key k8spolicy::Pod ("testNamespace", "testPod-784");
delete_key k8spolicy::Pod ("testNamespace", "testPod-785");
delete_key k8spolicy::Pod ("testNamespace", "testPod-786");
delete_key k8spolicy::Pod ("testNamespace", "testPod-787");
delete_key k8spolicy::Pod ("testNamespace", "testPod-788");
delete_key k8spolicy::Pod ("testNamespace", "testPod-789");
delete_key k8spolicy::Pod ("testNamespace", "testPod-790");
delete_key k8spolicy::Pod ("testNamespace", "testPod-791");
commit dump_changes;
start;
delete_key k8spolicy::Pod ("testNamespace", "testPod-792");
delete_key k8spolicy::Pod ("testNamespace", "testPod-793");
delete_key k8spolicy::Pod ("testNamespace", "testPod-794");
delete_key k8spolicy::Pod ("testNamespace", "testPod-795");
delete_key k8spolicy::Pod ("testNamespace", "testPod-796");
delete_key k8spolicy::Pod ("testNamespace", "testPod-797");
delete_key k8spolicy::Pod ("testNamespace", "testPod-798");
delete_key k8spolicy::Pod ("testNamespace", "testPod-799");
delete_key k8spolicy::Pod ("testNamespace", "testPod-800");
delete_key k8spolicy::Pod ("testNamespace", "testPod-801");
delete_key k8spolicy::Pod ("testNamespace", "testPod-802");
delete_key k8spolicy::Pod ("testNamespace", "testPod-803");
delete_key k8spolicy::Pod ("testNamespace", "testPod-804");
delete_key k8spolicy::Pod ("testNamespace", "testPod-805");
delete_key k8spolicy::Pod ("testNamespace", "testPod-806");
delete_key k8spolicy::Pod ("testNamespace", "testPod-807");
delete_key k8spolicy::Pod ("testNamespace", "testPod-808");
delete_key k8spolicy::Pod ("testNamespace", "testPod-809");
delete_key k8spolicy::Pod ("testNamespace", "testPod-810");
delete_key k8spolicy::Pod ("testNamespace", "testPod-811");
delete_key k8spolicy::Pod ("testNamespace", "testPod-812");
delete_key k8spolicy::Pod ("testNamespace", "testPod-813");
delete_key k8spolicy::Pod ("testNamespace", "testPod-814");
delete_key k8spolicy::Pod ("testNamespace", "testPod-815");
delete_key k8spolicy::Pod ("testNamespace", "testPod-816");
delete_key k8spolicy::Pod ("testNamespace", "testPod-817");
delete_key k8spolicy::Pod ("testNamespace", "testPod-818");
delete_key k8spolicy::Pod ("testNamespace", "testPod-819");
delete_key k8spolicy::Pod ("testNamespace", "testPod-820");
delete_key k8spolicy::Pod ("testNamespace", "testPod-821");
delete_key k8spolicy::Pod ("testNamespace", "testPod-822");
delete_key k8spolicy::Pod ("testNamespace", "testPod-823");
commit dump_changes;
start;
delete_key k8spolicy::Pod ("testNamespace", "testPod-824");
delete_key k8spolicy::Pod ("testNamespace", "testPod-825");
delete_key k8spolicy::Pod ("testNamespace", "testPod-826");
delete_key k8spolicy::Pod ("testNamespace", "testPod-827");
delete_key k8spolicy::Pod ("testNamespace", "testPod-828");
delete_key k8spolicy::Pod ("testNamespace", "testPod-829");
delete_key k8spolicy::Pod ("testNamespace", "testPod-830");
delete_key k8spolicy::Pod ("testNamespace", "testPod-831");
delete_key k8spolicy::Pod ("testNamespace", "testPod-832");
delete_key k8spolicy::Pod ("testNamespace", "testPod-833");
delete_key k8spolicy::Pod ("testNamespace", "testPod-834");
delete_key k8spolicy::Pod ("testNamespace", "testPod-835");
delete_key k8spolicy::Pod ("testNamespace", "testPod-836");
delete_key k8spolicy::Pod ("testNamespace", "testPod-837");
delete_key k8spolicy::Pod ("testNamespace", "testPod-838");
delete_key k8spolicy::Pod ("testNamespace", "testPod-839");
delete_key k8spolicy::Pod ("testNamespace", "testPod-840");
delete_key k8spolicy::Pod ("testNamespace", "testPod-841");
delete_key k8spolicy::Pod ("testNamespace", "testPod-842");
delete_key k8spolicy::Pod ("testNamespace", "testPod-843");
delete_key k8spolicy::Pod ("testNamespace", "testPod-844");
delete_key k8spolicy::Pod ("testNamespace", "testPod-845");
delete_key k8spolicy::Pod ("testNamespace", "testPod-846");
delete_key k8spolicy::Pod ("testNamespace", "testPod-847");
delete_key k8spolicy::Pod ("testNamespace", "testPod-848");
delete_key k8spolicy::Pod ("testNamespace", "testPod-849");
delete_key k8spolicy::Pod ("testNamespace", "testPod-850");
delete_key k8spolicy::Pod ("testNamespace", "testPod-851");
delete_key k8spolicy::Pod ("testNamespace", "testPod-852");
delete_key k8spolicy::Pod ("testNamespace", "testPod-853");
delete_key k8spolicy::Pod ("testNamespace", "testPod-854");
delete_key k8spolicy::Pod ("testNamespace", "testPod-855");
commit dump_changes;
start;
delete_key k8spolicy::Pod ("testNamespace", "testPod-856");
delete_key k8spolicy::Pod ("testNamespace", "testPod-857");
delete_key k8spolicy::Pod ("testNamespace", "testPod-858");
delete_key k8spolicy::Pod ("testNamespace", "testPod-859");
delete_key k8spolicy::Pod ("testNamespace", "testPod-860");
delete_key k8spolicy::Pod ("testNamespace", "testPod-861");
delete_key k8spolicy::Pod ("testNamespace", "testPod-862");
delete_key k8spolicy::Pod ("testNamespace", "testPod-863");
delete_key k8spolicy::Pod ("testNamespace", "testPod-864");
delete_key k8spolicy::Pod ("testNamespace", "testPod-865");
delete_key k8spolicy::Pod ("testNamespace", "testPod-866");
delete_key k8spolicy::Pod ("testNamespace", "testPod-867");
delete_key k8spolicy::Pod ("testNamespace", "testPod-868");
delete_key k8spolicy::Pod ("testNamespace", "testPod-869");
delete_key k8spolicy::Pod ("testNamespace", "testPod-870");
delete_key k8spolicy::Pod ("testNamespace", "testPod-871");
delete_key k8spolicy::Pod ("testNamespace", "testPod-872");
delete_key k8spolicy::Pod ("testNamespace", "testPod-873");
delete_key k8spolicy::Pod ("testNamespace", "testPod-874");
delete_key k8spolicy::Pod ("testNamespace", "testPod-875");
delete_key k8spolicy::Pod ("testNamespace", "testPod-876");
delete_key k8spolicy::Pod ("testNamespace", "testPod-877");
delete_key k8spolicy::Pod ("testNamespace", "testPod-878");
delete_key k8spolicy::Pod ("testNamespace", "testPod-879");
delete_key k8spolicy::Pod ("testNamespace", "testPod-880");
delete_key k8spolicy::Pod ("testNamespace", "testPod-881");
delete_key k8spolicy::Pod ("testNamespace", "testPod-882");
delete_key k8spolicy::Pod ("testNamespace", "testPod-883");
delete_key k8spolicy::Pod ("testNamespace", "testPod-884");
delete_key k8spolicy::Pod ("testNamespace", "testPod-885");
delete_key k8spolicy::Pod ("testNamespace", "testPod-886");
delete_key k8spolicy::Pod ("testNamespace", "testPod-887");
commit dump_changes;
start;
delete_key k8spolicy::Pod ("testNamespace", "testPod-888");
delete_key k8spolicy::Pod ("testNamespace", "testPod-889");
delete_key k8spolicy::Pod ("testNamespace", "testPod-890");
delete_key k8spolicy::Pod ("testNamespace", "testPod-891");
delete_key k8spolicy::Pod ("testNamespace", "testPod-892");
delete_key k8spolicy::Pod ("testNamespace", "testPod-893");
delete_key k8spolicy::Pod ("testNamespace", "testPod-894");
delete_key k8spolicy::Pod ("testNamespace", "testPod-895");
delete_key k8spolicy::Pod ("testNamespace", "testPod-896");
delete_key k8spolicy::Pod ("testNamespace", "testPod-897");
delete_key k8spolicy::Pod ("testNamespace", "testPod-898");
delete_key k8spolicy::Pod ("testNamespace", "testPod-899");
delete_key k8spolicy::Pod ("testNamespace", "testPod-900");
delete_key k8spolicy::Pod ("testNamespace", "testPod-901");
delete_key k8spolicy::Pod ("testNamespace", "testPod-902");
delete_key k8spolicy::Pod ("testNamespace", "testPod-903");
delete_key k8spolicy::Pod ("testNamespace", "testPod-904");
delete_key k8spolicy::Pod ("testNamespace", "testPod-905");
delete_key k8spolicy::Pod ("testNamespace", "testPod-906");
delete_key k8spolicy::Pod ("testNamespace", "testPod-907");
delete_key k8spolicy::Pod ("testNamespace", "testPod-908");
delete_key k8spolicy::Pod ("testNamespace", "testPod-909");
delete_key k8spolicy::Pod ("testNamespace", "testPod-910");
delete_key k8spolicy::Pod ("testNamespace", "testPod-911");
delete_key k8spolicy::Pod ("testNamespace", "testPod-912");
delete_key k8spolicy::Pod ("testNamespace", "testPod-913");
delete_key k8spolicy::Pod ("testNamespace", "testPod-914");
delete_key k8spolicy::Pod ("testNamespace", "testPod-915");
delete_key k8spolicy::Pod ("testNamespace", "testPod-916");
delete_key k8spolicy::Pod ("testNamespace", "testPod-917");
delete_key k8spolicy::Pod ("testNamespace", "testPod-918");
delete_key k8spolicy::Pod ("testNamespace", "testPod-919");
commit dump_changes;
start;
delete_key k8spolicy::Pod ("testNamespace", "testPod-920");
delete_key k8spolicy::Pod ("testNamespace", "testPod-921");
delete_key k8spolicy::Pod ("testNamespace", "testPod-922");
delete_key k8spolicy::Pod ("testNamespace", "testPod-923");
delete_key k8spolicy::Pod ("testNamespace", "testPod-924");
delete_key k8spolicy::Pod ("testNamespace", "testPod-925");
delete_key k8spolicy::Pod ("testNamespace", "testPod-926");
delete_key k8spolicy::Pod ("testNamespace", "testPod-927");
delete_key k8spolicy::Pod ("testNamespace", "testPod-928");
delete_key k8spolicy::Pod ("testNamespace", "testPod-929");
delete_key k8spolicy::Pod ("testNamespace", "testPod-930");
delete_key k8spolicy::Pod ("testNamespace", "testPod-931");
delete_key k8spolicy::Pod ("testNamespace", "testPod-932");
delete_key k8spolicy::Pod ("testNamespace", "testPod-933");
delete_key k8spolicy::Pod ("testNamespace", "testPod-934");
delete_key k8spolicy::Pod ("testNamespace", "testPod-935");
delete_key k8spolicy::Pod ("testNamespace", "testPod-936");
delete_key k8spolicy::Pod ("testNamespace", "testPod-937");
delete_key k8spolicy::Pod ("testNamespace", "testPod-938");
delete_key k8spolicy::Pod ("testNamespace", "testPod-939");
delete_key k8spolicy::Pod ("testNamespace", "testPod-940");
delete_key k8spolicy::Pod ("testNamespace", "testPod-941");
delete_key k8spolicy::Pod ("testNamespace", "testPod-942");
delete_key k8spolicy::Pod ("testNamespace", "testPod-943");
delete_key k8spolicy::Pod ("testNamespace", "testPod-944");
delete_key k8spolicy::Pod ("testNamespace", "testPod-945");
delete_key k8spolicy::Pod ("testNamespace", "testPod-946");
delete_key k8spolicy::Pod ("testNamespace", "testPod-947");
delete_key k8spolicy::Pod ("testNamespace", "testPod-948");
delete_key k8spolicy::Pod ("testNamespace", "testPod-949");
delete_key k8spolicy::Pod ("testNamespace", "testPod-950");
delete_key k8spolicy::Pod ("testNamespace", "testPod-951");
commit dump_changes;
start;
delete_key k8spolicy::Pod ("testNamespace", "testPod-952");
delete_key k8spolicy::Pod ("testNamespace", "testPod-953");
delete_key k8spolicy::Pod ("testNamespace", "testPod-954");
delete_key k8spolicy::Pod ("testNamespace", "testPod-955");
delete_key k8spolicy::Pod ("testNamespace", "testPod-956");
delete_key k8spolicy::Pod ("testNamespace", "testPod-957");
delete_key k8spolicy::Pod ("testNamespace", "testPod-958");
delete_key k8spolicy::Pod ("testNamespace", "testPod-959");
delete_key k8spolicy::Pod ("testNamespace", "testPod-960");
delete_key k8spolicy::Pod ("testNamespace", "testPod-961");
delete_key k8spolicy::Pod ("testNamespace", "testPod-962");
delete_key k8spolicy::Pod ("testNamespace", "testPod-963");
delete_key k8spolicy::Pod ("testNamespace", "testPod-964");
delete_key k8spolicy::Pod ("testNamespace", "testPod-965");
delete_key k8spolicy::Pod ("testNamespace", "testPod-966");
delete_key k8spolicy::Pod ("testNamespace", "testPod-967");
delete_key k8spolicy::Pod ("testNamespace", "testPod-968");
delete_key k8spolicy::Pod ("testNamespace", "testPod-969");
delete_key k8spolicy::Pod ("testNamespace", "testPod-970");
delete_key k8spolicy::Pod ("testNamespace", "testPod-971");
delete_key k8spolicy::Pod ("testNamespace", "testPod-972");
delete_key k8spolicy::Pod ("testNamespace", "testPod-973");
delete_key k8spolicy::Pod ("testNamespace", "testPod-974");
delete_key k8spolicy::Pod ("testNamespace", "testPod-975");
delete_key k8spolicy::Pod ("testNamespace", "testPod-976");
delete_key k8spolicy::Pod ("testNamespace", "testPod-977");
delete_key k8spolicy::Pod ("testNamespace", "testPod-978");
delete_key k8spolicy::Pod ("testNamespace", "testPod-979");
delete_key k8spolicy::Pod ("testNamespace", "testPod-980");
delete_key k8spolicy::Pod ("testNamespace", "testPod-981");
delete_key k8spolicy::Pod ("testNamespace", "testPod-982");
delete_key k8spolicy::Pod ("testNamespace", "testPod-983");
commit dump_changes;
start;
delete_key k8spolicy::Pod ("testNamespace", "testPod-984");
delete_key k8spolicy::Pod ("testNamespace", "testPod-985");
delete_key k8spolicy::Pod ("testNamespace", "testPod-986");
delete_key k8spolicy::Pod ("testNamespace", "testPod-987");
delete_key k8spolicy::Pod ("testNamespace", "testPod-988");
delete_key k8spolicy::Pod ("testNamespace", "testPod-989");
delete_key k8spolicy::Pod ("testNamespace", "testPod-990");
delete_key k8spolicy::Pod ("testNamespace", "testPod-991");
delete_key k8spolicy::Pod ("testNamespace", "testPod-992");
delete_key k8spolicy::Pod ("testNamespace", "testPod-993");
delete_key k8spolicy::Pod ("testNamespace", "testPod-994");
delete_key k8spolicy::Pod ("testNamespace", "testPod-995");
delete_key k8spolicy::Pod ("testNamespace", "testPod-996");
delete_key k8spolicy::Pod ("testNamespace", "testPod-997");
delete_key k8spolicy::Pod ("testNamespace", "testPod-998");
delete_key k8spolicy::Pod ("testNamespace", "testPod-999");
delete_key k8spolicy::Namespace "testNamespace";
commit dump_changes;

profile;
