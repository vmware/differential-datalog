log_level 100000;
echo Adding namespace and pods;
start;

insert k8spolicy.Namespace(
    .name = "ns1",
    .uid = k8spolicy.UID{"e340296d-84e2-48b2-9b7a-91641db60db5"},
    .labels = [("l1", "l1v1")]),

insert k8spolicy.Namespace(
    .name = "ns2",
    .uid = k8spolicy.UID{"37e6f556-02f3-4775-93a7-ec924ee78810"},
    .labels = []),

insert k8spolicy.Pod(
    .name = "ns1.pod1",
    .namespace = "ns1",
    .uid = k8spolicy.UID{"adb006eb-07fd-4a4b-9b09-d899267aeadc"},
    .labels = [],
    .spec = k8spolicy.PodSpec{.nodeName = "node1"},
    .status = k8spolicy.PodStatus{"192.168.1.1"}
),

insert k8spolicy.Pod(
    .name = "ns1.pod2",
    .namespace = "ns1",
    .uid = k8spolicy.UID{"17024561-7949-4f63-a248-bc29075f04b2"},
    .labels = [],
    .spec = k8spolicy.PodSpec{.nodeName = "node2"},
    .status = k8spolicy.PodStatus{"192.168.1.2"}
),

insert k8spolicy.Pod(
    .name = "ns2.pod1",
    .namespace = "ns2",
    .uid = k8spolicy.UID{"2fc100dd-a981-47e2-8a62-e9b2dff3a5d3"},
    .labels = [],
    .spec = k8spolicy.PodSpec{.nodeName = "node1"},
    .status = k8spolicy.PodStatus{"192.168.1.1"}
),

insert k8spolicy.Pod(
    .name = "ns2.pod2",
    .namespace = "ns2",
    .uid = k8spolicy.UID{"ad847460-cb25-43e7-a44c-d2ff7bdb65ac"},
    .labels = [],
    .spec = k8spolicy.PodSpec{.nodeName = "node2"},
    .status = k8spolicy.PodStatus{"192.168.1.2"}
),

insert k8spolicy.Pod(
    .name = "<top>.pod1",
    .namespace = "",
    .uid = k8spolicy.UID{"a5f3a901-040d-407c-a842-918e250f79de"},
    .labels = [],
    .spec = k8spolicy.PodSpec{.nodeName = "node1"},
    .status = k8spolicy.PodStatus{"192.168.1.1"}
),

insert k8spolicy.Pod(
    .name = "<top>.pod2",
    .namespace = "",
    .uid = k8spolicy.UID{"23d84e05-e0b6-446d-a919-440d1b74ebfc"},
    .labels = [],
    .spec = k8spolicy.PodSpec{.nodeName = "node2"},
    .status = k8spolicy.PodStatus{"192.168.1.2"}
),

commit dump_changes;

echo Adding policies;
start;

insert k8spolicy.NetworkPolicy(
    .name = "ns1.policy1",
    .namespace = "ns1",
    .uid = k8spolicy.UID{"156bc79a-ee16-47d9-82b6-8bc48849af74"},
    .spec = k8spolicy.NetworkPolicySpec{
        .podSelector = k8spolicy.LabelSelector{
            .matchLabels = [("l1", "l1v1")],
            .matchExpressions = []
        },
        .ingress = [k8spolicy.NetworkPolicyIngressRule{
                        .ports = [k8spolicy.NetworkPolicyPort{
                                      .protocol = std.Some{"TCP"},
                                      .port = std.None
                                  }],
                        .from = [k8spolicy.NetworkPolicyPeer{
                                    .podSelector = std.Some{
                                        k8spolicy.LabelSelector{
                                            .matchLabels = [("l1", "l1v1")],
                                            .matchExpressions = []
                                        }
                                    },
                                    .namespaceSelector = std.Some{
                                        k8spolicy.LabelSelector{
                                            .matchLabels = [],
                                            .matchExpressions = []
                                        }
                                    },
                                    .ipBlock = std.None
                                 }]
                    }],
        .egress = [],
        .policyType = []
    }
),


commit dump_changes;
