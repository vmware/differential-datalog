Ack:
Ack{.m = 2, .n = 1, .a = 5}: +1
BoolVecVec:
BoolVecVec{.v = [[true, false, true], [true], [false]]}: +1
BoolVectors:
BoolVectors{.v = [true, false, true]}: +1
Fib:
Fib{.x = 0, .f = 0}: +1
Fib{.x = 1, .f = 1}: +1
Fib{.x = 2, .f = 1}: +1
Fib{.x = 3, .f = 2}: +1
Fib{.x = 4, .f = 3}: +1
Fib{.x = 10, .f = 55}: +1
Fib{.x = 20, .f = 6765}: +1
FuncTest:
FuncTest{.x = "foo"}: +1
MapOfMaps:
MapOfMaps{.m = [("bar", [(-10, (10000, true)), (200, (2, false))]), ("foo", [(1, (1, true)), (2, (4, false))]), ("foobar", [])]}: +1
MapOfVecs:
MapOfVecs{.m = [((0, 0), [0.1, -100, 0, 1000000]), ((100, -100), []), ((100, 100), [0.1, -100, 0, 1000000])]}: +1
RFloatToInt:
RFloatToInt{._x = -333}: +1
StringMaps:
StringMaps{.m = [("bar", (2, false)), ("foo", (1, true)), ("foobar", (3, false))]}: +1
Strings:
Strings{.descr = "x={10:bit<12>}, y={10:float}, z={-4:signed<125>}", .str = "x=10, y=10, z=-4"}: +1
Try1:
Try1{.description = "", .result = std::None{}}: +1
Try1{.description = "Albert_Einstein", .result = std::None{}}: +1
Try1{.description = "Isaac Newton", .result = std::Some{.x = ("Isaac", "Newton")}}: +1
Try2:
Try2{.description = "", .result = std::Err{.err = "No last name"}}: +1
Try2{.description = "Albert_Einstein", .result = std::Err{.err = "No last name"}}: +1
Try2{.description = "Isaac Newton", .result = std::Ok{.res = ("Isaac", "Newton")}}: +1
Try3:
Try3{.description = "", .result = std::None{}}: +1
Try3{.description = "Albert_Einstein", .result = std::None{}}: +1
Try3{.description = "Isaac Newton", .result = std::Some{.x = ("Isaac", "Newton")}}: +1
VecOfMaps:
VecOfMaps{.m = [[((100, 100), 0.1)], [((100, 100), 0.1), ((1000, -100), -0.1)], [((100, 100), 0.1), ((1000, -10000000000000000000000000000000000000), 0), ((1000, -100), -0.1)]]}: +1
RFloatToInt{._x = -333}
Arrng1Arrng2:
Arrng1Arrng2{.x = 5}: +1
Arrng1Arrng2_2:
Arrng1Arrng2_2{.x = 5}: +1
TArrng1Arrng2:
TArrng1Arrng2{.x = 5}: +1
FuncTest{.x = "foo"}
SumsOfDoubles:
SumsOfDoubles{.x = 1, .y = 1, .sum = 2}: +1
SumsOfDoubles{.x = 1, .y = 2, .sum = 3}: +1
SumsOfDoubles{.x = 1, .y = 3.5, .sum = 4.5}: +1
SumsOfDoubles{.x = 2, .y = 1, .sum = 3}: +1
SumsOfDoubles{.x = 2, .y = 2, .sum = 4}: +1
SumsOfDoubles{.x = 2, .y = 3.5, .sum = 5.5}: +1
SumsOfDoubles{.x = 3.5, .y = 1, .sum = 4.5}: +1
SumsOfDoubles{.x = 3.5, .y = 2, .sum = 5.5}: +1
SumsOfDoubles{.x = 3.5, .y = 3.5, .sum = 7}: +1
InspectSimpleSum:
InspectSimpleSum{.x = 1, .total = 3}: +1
FilteredRelation:
FilteredRelation{.y = 2}: +1
FilteredRelation{.y = 3}: +1
FilteredRelation{.y = 5}: +1
FilteredRelation:
FilteredRelation{.y = 2}: -1
OutputInspectNot:
OutputInspectNot{.x = 4, .y = 4}: +1
OutputInspectNot:
OutputInspectNot{.x = 2, .y = 2}: +1
ChunkParseError:
ChunkParseError{.err = "missing field `field` at line 1 column 11"}: +1
CompressedChunk:
CompressedChunk{.json = "{\"field\":1}"}: +1
ChunkParseError:
ChunkParseError{.err = "missing field `field` at line 1 column 11"}: +1
CompressedChunk:
CompressedChunk{.json = "{\"field\":1}"}: +2
CompressedChunk{.json = "{\"field\":2}"}: +1
Fib{.x = 0, .f = 0}
Fib{.x = 1, .f = 1}
Fib{.x = 2, .f = 1}
Fib{.x = 3, .f = 2}
Fib{.x = 4, .f = 3}
Fib{.x = 10, .f = 55}
Fib{.x = 20, .f = 6765}
Ack{.m = 2, .n = 1, .a = 5}
Rseq:
Rseq{._s = TSeq1{.x = ("bar", TSeq1{.x = ("buzz", TSeqNone{})})}}: +1
Rseq{._s = TSeq1{.x = ("foo", TSeq1{.x = ("buzz", TSeqNone{})})}}: +1
