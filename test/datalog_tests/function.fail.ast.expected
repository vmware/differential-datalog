error: ./test/datalog_tests/function.fail.dl:3:5-3:10: Variable declaration is not allowed in this context

error: ./test/datalog_tests/function.fail.dl:13:13-14:1: Missing field f2 in constructor C

error: ./test/datalog_tests/function.fail.dl:11:17-11:18: Variable v already defined in this scope

error: ./test/datalog_tests/function.fail.dl:7:5-7:11: Variable v already defined in this scope

error: ./test/datalog_tests/function.fail.dl:6:13-7:1: Access to guarded field "x"

error: ./test/datalog_tests/function.fail.dl:5:1-9:1: Recursive function definition: f1->f2->f1

error: ./test/datalog_tests/function.fail.dl:6:5-6:17: Type constructor in the left-hand side of an assignment is only allowed for types with one constructor,  but "std.Option" has multiple constructors

error: ./test/datalog_tests/function.fail.dl:8:16-8:27: Type constructor in the left-hand side of an assignment is only allowed for types with one constructor,  but "std.Option" has multiple constructors

Failed to parse input file: "./test/datalog_tests/function.fail.dl" (line 5, column 1):
unexpected "f"
expecting "="

error: ./test/datalog_tests/function.fail.dl:4:5-4:6: Expression is not a struct

error: ./test/datalog_tests/function.fail.dl:3:41-5:1: Conversion between signed and unsigned bit vectors only supported across types of the same bit width. Try casting to signed<32> first.

error: ./test/datalog_tests/function.fail.dl:3:41-5:1: Conversion between signed and unsigned bit vectors only supported across types of the same bit width. Try casting to bit<32> first.

error: ./test/datalog_tests/function.fail.dl:3:37-5:1: Cannot type-cast expression of type bigint.  The type-cast operator is only supported for bit<> and signed<> types.

error: ./test/datalog_tests/function.fail.dl:3:35-5:1: Cannot type-cast expression to bool.  Only bit<>, signed<>, and bigint types can be cast to.

error: ./test/datalog_tests/function.fail.dl:3:34-4:1: Cannot type-cast expression of type string.  The type-cast operator is only supported for bit<> and signed<> types.
