internment_test.OInternedString:
internment_test.OInternedString{.x = "bar", .ix = "bar"}: +1
internment_test.OInternedString{.x = "bar bar", .ix = "bar bar"}: +1
internment_test.OInternedString{.x = "bar foo", .ix = "bar foo"}: +1
internment_test.OInternedString{.x = "bar ibar", .ix = "bar ibar"}: +1
internment_test.OInternedString{.x = "bar ibar4", .ix = "bar ibar4"}: +1
internment_test.OInternedString{.x = "bar ifoo", .ix = "bar ifoo"}: +1
internment_test.OInternedString{.x = "bar ifoo25", .ix = "bar ifoo25"}: +1
internment_test.OInternedString{.x = "bar ifoo25!", .ix = "bar ifoo25!"}: +1
internment_test.OInternedString{.x = "bar static foo", .ix = "bar static foo"}: +1
internment_test.OInternedString{.x = "foo", .ix = "foo"}: +1
internment_test.OInternedString{.x = "foo bar", .ix = "foo bar"}: +1
internment_test.OInternedString{.x = "foo foo", .ix = "foo foo"}: +1
internment_test.OInternedString{.x = "foo ibar", .ix = "foo ibar"}: +1
internment_test.OInternedString{.x = "foo ibar4", .ix = "foo ibar4"}: +1
internment_test.OInternedString{.x = "foo ifoo", .ix = "foo ifoo"}: +1
internment_test.OInternedString{.x = "foo ifoo25", .ix = "foo ifoo25"}: +1
internment_test.OInternedString{.x = "foo ifoo25!", .ix = "foo ifoo25!"}: +1
internment_test.OInternedString{.x = "foo static foo", .ix = "foo static foo"}: +1
internment_test.OInternedString{.x = "ibar bar", .ix = "ibar bar"}: +1
internment_test.OInternedString{.x = "ibar foo", .ix = "ibar foo"}: +1
internment_test.OInternedString{.x = "ibar4 bar", .ix = "ibar4 bar"}: +1
internment_test.OInternedString{.x = "ibar4 foo", .ix = "ibar4 foo"}: +1
internment_test.OInternedString{.x = "ifoo bar", .ix = "ifoo bar"}: +1
internment_test.OInternedString{.x = "ifoo foo", .ix = "ifoo foo"}: +1
internment_test.OInternedString{.x = "ifoo25 bar", .ix = "ifoo25 bar"}: +1
internment_test.OInternedString{.x = "ifoo25 foo", .ix = "ifoo25 foo"}: +1
internment_test.OInternedString{.x = "ifoo25! bar", .ix = "ifoo25! bar"}: +1
internment_test.OInternedString{.x = "ifoo25! foo", .ix = "ifoo25! foo"}: +1
internment_test.OInternedString{.x = "static foo bar", .ix = "static foo bar"}: +1
internment_test.OInternedString{.x = "static foo foo", .ix = "static foo foo"}: +1
internment_test.Projections:
internment_test.Projections{.inp = internment_test.IStruct{.u = internment_test.Tag2{.f2 = 10, .f3 = "foo"}, .t = (5000, -1.2345), .x = -10000000000000000000000000}, .p = "f2=10"}: +1
internment_test.Projections{.inp = internment_test.IStruct{.u = internment_test.Tag2{.f2 = 10, .f3 = "foo"}, .t = (5000, -1.2345), .x = -10000000000000000000000000}, .p = "f3=foo"}: +1
internment_test.Projections{.inp = internment_test.IStruct{.u = internment_test.Tag2{.f2 = 10, .f3 = "foo"}, .t = (5000, -1.2345), .x = -10000000000000000000000000}, .p = "t.0=5000"}: +1
internment_test.Projections{.inp = internment_test.IStruct{.u = internment_test.Tag2{.f2 = 10, .f3 = "foo"}, .t = (5000, -1.2345), .x = -10000000000000000000000000}, .p = "t.1=-1.2345"}: +1
internment_test.Projections{.inp = internment_test.IStruct{.u = internment_test.Tag2{.f2 = 10, .f3 = "foo"}, .t = (5000, -1.2345), .x = -10000000000000000000000000}, .p = "x=-10000000000000000000000000"}: +1
internment_test.Projections{.inp = internment_test.IStruct{.u = internment_test.Tag1{.f1 = true}, .t = (-5, 5.5), .x = 10000000000000000000000000}, .p = "f1=true"}: +1
internment_test.Projections{.inp = internment_test.IStruct{.u = internment_test.Tag1{.f1 = true}, .t = (-5, 5.5), .x = 10000000000000000000000000}, .p = "t.0=-5"}: +1
internment_test.Projections{.inp = internment_test.IStruct{.u = internment_test.Tag1{.f1 = true}, .t = (-5, 5.5), .x = 10000000000000000000000000}, .p = "t.1=5.5"}: +1
internment_test.Projections{.inp = internment_test.IStruct{.u = internment_test.Tag1{.f1 = true}, .t = (-5, 5.5), .x = 10000000000000000000000000}, .p = "x=10000000000000000000000000"}: +1
