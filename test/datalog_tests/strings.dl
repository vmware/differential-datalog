ground relation Strings(s: string)

Strings("").
Strings("foo").
Strings("bar\n").
Strings("\t\tbar").
Strings("\"buzz").
Strings("\r\abuzz").
Strings("\\buzz").
Strings("\\buzz").

/* unicode */
Strings("barΔ").

/* raw strings */
Strings([||]).
Strings([|foo|]).
Strings([|foo
buzz
bar|]).

Strings([|
    foo
    buzz
    bar|]).

Strings([|barΔ
Π|]).

Strings([|barΔ
Π|] " quoted string").

// backslash does not work as an escape character in raw strings
Strings([|
    foo\r
    buzz
    bar|]).

/* string literal concatenation */
Strings("foo" "-" "bar").

Strings("foo\n" "bar").
Strings("foo\\""bar").

Strings("foo\\" [|bar|]).

function dummy(x: string): string = x ++ " dummy"

function strings(): () = {
    var str1 = "foo" ++ "bar";
    var str2 = "foo" "bar" ++ "buzz" ++ [|
raw string |]"quoted string";
    var str3 = $"str1: ${ str1 }";
    var str4 = $"str1: ${str1}, str2: ${str2}, str3: ${str3}.";
    var str5 = $[|str1: ${str1},
str2: ${str2},
str3: ${str3}.|];
    var str6 = $"${str1 ++ str2}";
    var str7 = $"${{var x = str1 ++ str2; x}}";
    var str8 = $"${{var x = str1 ++ str2; dummy(x)}}";
    ()
}

Strings("word1\
        \ word2").

Strings("line1\n\
        \line2").

function tostring1(): () = {
    var a: int     = 5;
    var b: bit<32> = 5;
    var c: bool    = true;
    var d: string  = "foo";
    var err = $"a=${a}, b=${b}, c=${c}, d=${d}"; 
    ()
}

typedef serializable_t = ConsInt {x: int}
                       | ConsBit {y: bit<32>}
                       | ConsBool{z: bool}
                       | Cons0{}

function serializable_t2string(x: serializable_t): string = {
    match (x) {
        ConsInt{v}      -> "ConsInt(" ++ v ++ ")",
        ConsBit{v}      -> $"ConsBool(${v})",
        ConsBool{true}  -> $"ConsBool(true)",
        ConsBool{false} -> $"ConsBool(false)",
        Cons0{}         -> $"Cons0"
    }
}

function tostring2(): () = {
    var a: int     = 5;
    var b: bit<32> = 5;
    var c: bool    = true;
    var d: string  = "foo";
    var e: serializable_t = ConsInt{0};
    var err = $"a=${a}, b=${b}, c=${c}, d=${d}, e:${e}"; 
    ()
}
