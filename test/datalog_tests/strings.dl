ground relation Strings(s: string)

Strings("").
Strings("foo").
Strings("bar\n").
Strings("\t\tbar").
Strings("\"buzz").
Strings("\r\abuzz").
Strings("\\buzz").
Strings("\\buzz").

/* unicode */
Strings("barΔ").

/* raw strings */
Strings([||]).
Strings([|foo|]).
Strings([|foo
buzz
bar|]).

Strings([|
    foo
    buzz
    bar|]).

Strings([|barΔ
Π|]).

Strings([|barΔ
Π|] " quoted string").

// backslash does not work as an escape character in raw strings
Strings([|
    foo\r
    buzz
    bar|]).

/* string literal concatenation */
Strings("foo" "-" "bar").

Strings("foo\n" "bar").
Strings("foo\\""bar").

Strings("foo\\" [|bar|]).

function dummy(x: string): string = x ++ " dummy"

function strings(): () = {
    var str1 = "foo" ++ "bar";
    var str2 = "foo" "bar" ++ "buzz" ++ [|
raw string |]"quoted string";
    var str3 = $"str1: { str1 }";
    var str4 = $"str1: {str1}, str2: {str2}, str3: {str3}.";
    var str5 = $[|str1: {str1},
str2: {str2},
str3: {str3}.|];
    var str6 = $"{str1 ++ str2}";
    var str7 = $"{{var x = str1 ++ str2; x}}";
    var str8 = $"{{var x = str1 ++ str2; dummy(x)}}";
    ()
}

Strings("word1\
        \ word2").

Strings("line1\n\
        \line2").
