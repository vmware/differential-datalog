// variable declaration cannot be the last statement in a block
function vars(): () = {
    var x: bigint
}

//---

typedef C = C{f1: string, f2: string}

// missing arguments to a type constructor
function vars(): () = {
    var y: C = C{"foo", "bar"};

    // missing arguments allowed in the LHS of an assignment 
    C{.f1 = var a} = y;

    // error: missing argument in the RHS
    var z = C{.f1 = "foo"}
}

//---

typedef Alt = C0{x: bit<32>}
            | C1{x: bit<32>}

// shadow argument name
function shadow(v: string): () = {
    var a: Alt = C0{1};

    var i: bit<32> = match (a) {
        C0{.x = v} -> v,
        C1{v} -> v
    }
}

//---

// shadow local variable
function shadow(): () = {
    var v: string = "bar";

    var v = "foo"
}

//---

// access guarded struct field
function shadow(): () = {
    var a = Some{"foo"};
    var b = a.x
}

//---

// recursive functions

function f1(arg: bigint): bigint = {
    f2(arg)
}

function f2(arg: bigint): bigint = {
    f1(arg)
}


//---

// non-unique constructor in the LHS of assignment

function f(x: Option<'A>): () = {
    Some{var s} = x
}

//---

typedef t<'A> = T{field: Option<'A>}

// non-unique constructor in the LHS of assignment

function f(x: t<'A>): () = {
    T{.field = Some{var s}} = x
}

//---

function parameterized(x: 'A, y: 'A): 'A

function use_parameterized(x: string, y: bigint): string = 
    parameterized(x,y) // error: x and y must have the same type

//---

function foo(x: bigint): string = 
    x.bar // x is not a struct
