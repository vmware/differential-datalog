typedef Human = Human{h: person}
typedef Parent = Parent{child: person, parent: person}
typedef Sib = Sib{s1: person, s2: person}
typedef person = string
extern type std.Set<'A>
extern type std.Vec<'A>
extern function std.__builtin_2string (x: 'X): string
extern function std.hash128 (x: 'X): bit<128>
extern function std.hash64 (x: 'X): bit<64>
extern function std.hex (x: 'X): string
input relation Human [Human]
input relation Parent [Parent]
relation Sib [Sib]
Sib(.s1=x, .s2=y) :- Parent(.child=x, .parent=z), Parent(.child=y, .parent=z), (x != y).
Parent(.child="Alice", .parent="Bob").
Parent(.child="Ben", .parent="Bob").
Parent(.child="Bob", .parent="Bob").
