typedef Answer = Answer{x: station}
typedef Links = Links{l: line, s1: station, s2: station}
typedef Reach = Reach{s1: station, s2: station}
extern type Set<'A>
extern type Vec<'A>
typedef line = bigint
typedef station = string
extern function __builtin_2string (x: 'X): string
extern function hash128 (x: 'X): bit<128>
extern function hash64 (x: 'X): bit<64>
extern function hex (x: 'X): string
relation Answer [Answer]
input relation Links [Links]
relation Reach [Reach]
Reach(.s1=x, .s2=y) :- Links(.l=l, .s1=x, .s2=y).
Reach(.s1=x, .s2=y) :- Links(.l=l, .s1=y, .s2=x).
Reach(.s1=x, .s2=y) :- Links(.l=l, .s1=x, .s2=z), Reach(.s1=z, .s2=y).
Answer(.x=x) :- Reach(.s1="Odeon", .s2=x).
