url_test::URLTest{.description = "\"data:text/plain,Stuff\".cannot_be_a_base()", .val = "true"}
url_test::URLTest{.description = "\"data:text/plain,Stuff\".domain()", .val = "<none>"}
url_test::URLTest{.description = "\"data:text/plain,Stuff\".has_authority()", .val = "false"}
url_test::URLTest{.description = "\"data:text/plain,Stuff\".has_host()", .val = "false"}
url_test::URLTest{.description = "\"data:text/plain,Stuff\".host_str()", .val = "<none>"}
url_test::URLTest{.description = "\"file:///tmp/foo\".scheme()", .val = "file"}
url_test::URLTest{.description = "\"ftp://:secret123@example.com\".password()", .val = "secret123"}
url_test::URLTest{.description = "\"ftp://:secret123@example.com\".username()", .val = ""}
url_test::URLTest{.description = "\"ftp://rms:secret123@example.com\".password()", .val = "secret123"}
url_test::URLTest{.description = "\"ftp://rms@example.com\".cannot_be_a_base()", .val = "false"}
url_test::URLTest{.description = "\"ftp://rms@example.com\".domain()", .val = "example.com"}
url_test::URLTest{.description = "\"ftp://rms@example.com\".has_authority()", .val = "true"}
url_test::URLTest{.description = "\"ftp://rms@example.com\".has_host()", .val = "true"}
url_test::URLTest{.description = "\"ftp://rms@example.com\".host_str()", .val = "example.com"}
url_test::URLTest{.description = "\"ftp://rms@example.com\".password()", .val = ""}
url_test::URLTest{.description = "\"ftp://rms@example.com\".username()", .val = "rms"}
url_test::URLTest{.description = "\"https://127.0.0.1/index.html\".domain()", .val = "<none>"}
url_test::URLTest{.description = "\"https://127.0.0.1/index.html\".host_str()", .val = "127.0.0.1"}
url_test::URLTest{.description = "\"https://example.com\".password()", .val = ""}
url_test::URLTest{.description = "\"https://example.com\".path()", .val = "/"}
url_test::URLTest{.description = "\"https://example.com\".port()", .val = "0"}
url_test::URLTest{.description = "\"https://example.com\".port_or_known_default()", .val = "443"}
url_test::URLTest{.description = "\"https://example.com\".username()", .val = ""}
url_test::URLTest{.description = "\"https://example.com/?country=español\".query()", .val = "country=espa%C3%B1ol"}
url_test::URLTest{.description = "\"https://example.com/api/versions?page=2\".path()", .val = "/api/versions"}
url_test::URLTest{.description = "\"https://example.com/countries/việt nam\".path()", .val = "/countries/vi%E1%BB%87t%20nam"}
url_test::URLTest{.description = "\"https://example.com/data.csv#cell=4,1-6,2\".fragment()", .val = "cell=4,1-6,2"}
url_test::URLTest{.description = "\"https://example.com/data.csv#row=4\".fragment()", .val = "row=4"}
url_test::URLTest{.description = "\"https://example.com/products\".query()", .val = "<none>"}
url_test::URLTest{.description = "\"https://example.com/products?page=2\".query()", .val = "page=2"}
url_test::URLTest{.description = "\"https://example.com:443/\".port()", .val = "0"}
url_test::URLTest{.description = "\"https://example.com:443/\".port_or_known_default()", .val = "443"}
url_test::URLTest{.description = "\"https://example.net/a/b.html\".join(\"c.png\")", .val = "https://example.net/a/c.png"}
url_test::URLTest{.description = "\"ssh://example.com:22\".port()", .val = "22"}
url_test::URLTest{.description = "\"ssh://example.com:22\".port_or_known_default()", .val = "22"}
url_test::URLTest{.description = "\"unix:/run/foo.socket\".cannot_be_a_base()", .val = "false"}
url_test::URLTest{.description = "\"unix:/run/foo.socket\".domain()", .val = "<none>"}
url_test::URLTest{.description = "\"unix:/run/foo.socket\".has_authority()", .val = "false"}
url_test::URLTest{.description = "\"unix:/run/foo.socket\".has_host()", .val = "false"}
url_test::URLTest{.description = "\"unix:/run/foo.socket\".host_str()", .val = "<none>"}
url_test::URLTest{.description = "https://example.net", .val = "https://example.net/"}
