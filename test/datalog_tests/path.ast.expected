typedef Edge = Edge{s: node, t: node}
typedef Path = Path{s1: node, s2: node}
extern type Set<'A>
extern type Vec<'A>
typedef node = string
extern function __builtin_2string (x: 'X): string
extern function hash128 (x: 'X): bit<128>
extern function hash64 (x: 'X): bit<64>
extern function hex (x: 'X): string
input relation Edge [Edge]
relation Path [Path]
Path(.s1=x, .s2=y) :- Edge(.s=x, .t=y).
Path(.s1=x, .s2=z) :- Path(.s1=x, .s2=w), Edge(.s=w, .t=z).
